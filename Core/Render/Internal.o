{-# LINE 1 "/var/folders/vf/3ps995857210wmpgxv8lrnbh0000gn/T/ghc4970_0/ghc_38.s" #-}
.data
	.align 2
.align 0
.globl ___stginit_CoreziRenderziInternal
___stginit_CoreziRenderziInternal:
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfAffineRender2_closure
_CoreziRenderziInternal_zdfAffineRender2_closure:
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_static_info
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_ReturnS_closure+1
	.long	1
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_applyTransform2_closure
_CoreziRenderziInternal_applyTransform2_closure:
	.long	_ghczmprim_GHCziTypes_Dzh_static_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_applyTransform1_closure
_CoreziRenderziInternal_applyTransform1_closure:
	.long	_ghczmprim_GHCziTypes_Dzh_static_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_withValue2_closure
_CoreziRenderziInternal_withValue2_closure:
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_ReturnS_static_info
	.long	_base_GHCziBase_Nothing_closure+1
	.long	1
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_drawClipped1_closure
_CoreziRenderziInternal_drawClipped1_closure:
	.long	_CoreziRenderziInternal_drawClipped1_info
.text
	.align 2
_s1oIX_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1oIX_info:
Lc1pwI:
	call 1f
1:	popl	%eax
	leal -24(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pwJ
Lc1pwK:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1pwF_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 20(%esi),%esi
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1pwF_info
Lc1pwG:
	jmp *(%esi)
Lc1pwJ:
	jmp *-16(%ebx)
	.long  _s1oIX_info - _s1oIX_info_dsp
.text
	.align 2
_c1pwF_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1pwF_info:
Lc1pwF:
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	movl 11(%esi),%esi
	addl $12,%ebp
	jmp _stg_ap_pp_fast
	.long  _c1pwF_info - _c1pwF_info_dsp
.text
	.align 2
_CoreziRenderziInternal_drawClipped1_info_dsp:
.text
	.align 2
	.long	262168
	.long	0
	.long	15
.globl _CoreziRenderziInternal_drawClipped1_info
_CoreziRenderziInternal_drawClipped1_info:
Lc1pwP:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1pwT
Lc1pwS:
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_s1oIX_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 88(%esp),%eax
	movl %eax,-8(%edi)
	movl 76(%esp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -20(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	jmp _stg_ap_p_fast
Lc1pwT:
	movl $24,904(%ebx)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_drawClipped1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_drawClipped1_info - _CoreziRenderziInternal_drawClipped1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdswhen1_closure
_CoreziRenderziInternal_zdswhen1_closure:
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_ReturnS_static_info
	.long	_ghczmprim_GHCziTuple_Z0T_closure+1
	.long	1
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_getImage2_closure
_CoreziRenderziInternal_getImage2_closure:
	.long	_CoreziRenderziInternal_getImage2_info
.text
	.align 2
_s1oJl_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oJl_info:
Lc1pyi:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pyj
Lc1pyk:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1pyj:
	jmp *-16(%ebx)
	.long  _s1oJl_info - _s1oJl_info_dsp
.text
	.align 2
_s1oJm_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1oJm_info:
Lc1pyl:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1pym
Lc1pyn:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pyp
Lc1pyo:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	addl $_s1oJl_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1pyp:
	movl $16,904(%ebx)
Lc1pym:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1oJm_info - _s1oJm_info_dsp
.text
	.align 2
_CoreziRenderziInternal_getImage2_info_dsp:
.text
	.align 2
	.long	196623
	.long	0
	.long	15
.globl _CoreziRenderziInternal_getImage2_info
_CoreziRenderziInternal_getImage2_info:
Lc1pyF:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1pyG
Lc1pyH:
	movl 64(%esp),%eax
	addl $_c1pxO_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1pxO_info
Lc1pxP:
	jmp *(%esi)
Lc1pyG:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_getImage2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_getImage2_info - _CoreziRenderziInternal_getImage2_info_dsp
.text
	.align 2
_c1pxO_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1pxO_info:
Lc1pxO:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1pyD
Lc1pyE:
	cmpl $2,%ecx
	jae Lc1pyx
Lc1pyy:
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $8,%ebp
	jmp _stg_ap_pv_fast
Lc1pyD:
	cmpl $4,%ecx
	jae Lc1pyA
Lc1pyB:
	addl $_c1pxV_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1pxV_info
Lc1pxW:
	jmp *(%esi)
Lc1pyx:
	addl $_c1pyL_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
Lc1pyA:
	addl $_c1pz7_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1pz7_info
Lc1pz8:
	jmp *(%esi)
	.long  _c1pxO_info - _c1pxO_info_dsp
.text
	.align 2
_c1pz7_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1pz7_info:
Lc1pz7:
	call 1f
1:	popl	%eax
	addl $_c1pzc_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1pzc_info
Lc1pzf:
	jmp *(%esi)
	.long  _c1pz7_info - _c1pz7_info_dsp
.text
	.align 2
_c1pzc_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1pzc_info:
Lc1pzc:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1pzj_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1pzj_info
Lc1pzl:
	jmp *(%esi)
	.long  _c1pzc_info - _c1pzc_info_dsp
.text
	.align 2
_c1pzj_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1pzj_info:
Lc1pzj:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1pzH
Lc1pzI:
	addl $_c1pzp_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1pzp_info
Lc1pzq:
	jmp *(%esi)
Lc1pzH:
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $12,%ebp
	jmp *(%ebp)
	.long  _c1pzj_info - _c1pzj_info_dsp
.text
	.align 2
_c1pzp_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1pzp_info:
Lc1pzp:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1pzu_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1pzp_info - _c1pzp_info_dsp
.text
	.align 2
_c1pzu_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1pzu_info:
Lc1pzu:
	movl %esi,8(%ebx)
	movl 4(%ebp),%esi
	addl $8,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1pzu_info - _c1pzu_info_dsp
.text
	.align 2
_c1pxV_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1pxV_info:
Lc1pxV:
	call 1f
1:	popl	%eax
	addl $_c1py0_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1py0_info
Lc1py1:
	jmp *(%esi)
	.long  _c1pxV_info - _c1pxV_info_dsp
.text
	.align 2
_c1py0_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1py0_info:
Lc1py0:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1py5_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1py5_info
Lc1py6:
	jmp *(%esi)
	.long  _c1py0_info - _c1py0_info_dsp
.text
	.align 2
_c1py5_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1py5_info:
Lc1py5:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1pz3
Lc1pz4:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pyW
Lc1pyV:
	movl 3(%esi),%ecx
	addl $_s1oJm_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -16(%edi),%eax
	movl %eax,8(%ebx)
	movl 8(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_pv_fast
Lc1pyW:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1pz3:
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $12,%ebp
	jmp *(%ebp)
	.long  _c1py5_info - _c1py5_info_dsp
.text
	.align 2
_c1pyL_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1pyL_info:
Lc1pyL:
	movl %esi,8(%ebx)
	movl 4(%ebp),%esi
	addl $8,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1pyL_info - _c1pyL_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_embedTransformation1_closure
_CoreziRenderziInternal_embedTransformation1_closure:
	.long	_CoreziRenderziInternal_embedTransformation1_info
.text
	.align 2
_CoreziRenderziInternal_embedTransformation1_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziRenderziInternal_embedTransformation1_info
_CoreziRenderziInternal_embedTransformation1_info:
Lc1pBi:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1pBm
Lc1pBl:
	movl L_CoreziRenderziInternal_EmbedWorld_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-20(%edi)
	movl %ecx,-16(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	leal -19(%edi),%ecx
	movl %ecx,-4(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	jmp *(%ebp)
Lc1pBm:
	movl $24,904(%ebx)
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_embedTransformation1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_embedTransformation1_info - _CoreziRenderziInternal_embedTransformation1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfAffineRender7_closure
_CoreziRenderziInternal_zdfAffineRender7_closure:
	.long	_CoreziRenderziInternal_zdfAffineRender7_info
.text
	.align 2
.globl _CoreziRenderziInternal_zdfAffineRender7_slow
_CoreziRenderziInternal_zdfAffineRender7_slow:
Lc1pBA:
	movl 16(%ebp),%eax
	movl %eax,40(%ebx)
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl (%ebp),%eax
	movl %eax,8(%ebx)
	addl $20,%ebp
	jmp _CoreziRenderziInternal_zdfAffineRender7_info
.text
	.align 2
_CoreziRenderziInternal_zdfAffineRender7_info_dsp:
.text
	.align 2
	.long	_CoreziRenderziInternal_zdfAffineRender7_slow-(_CoreziRenderziInternal_zdfAffineRender7_info)+0
	.long	7
	.long	0
	.long	458752
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfAffineRender7_info
_CoreziRenderziInternal_zdfAffineRender7_info:
Lc1pBG:
	call 1f
1:	popl	%eax
	addl $48,%edi
	movl 40(%ebx),%ecx
	movl 32(%ebx),%edx
	movl %eax,64(%esp)
	movl 24(%ebx),%eax
	movl %eax,76(%esp)
	movl 16(%ebx),%eax
	movl %eax,88(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1pBK
Lc1pBJ:
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_Affined_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-44(%edi)
	movl 100(%esp),%eax
	movl %eax,-40(%edi)
	movl 88(%esp),%eax
	movl %eax,-36(%edi)
	movl 76(%esp),%eax
	movl %eax,-32(%edi)
	movl %edx,-28(%edi)
	movl %ecx,-24(%edi)
	movl (%ebp),%eax
	movl %eax,-20(%edi)
	movl 4(%ebp),%eax
	movl %eax,-16(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	leal -43(%edi),%ecx
	movl %ecx,-4(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1pBK:
	movl $48,904(%ebx)
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_zdfAffineRender7_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl 100(%esp),%eax
	movl %eax,-20(%ebp)
	movl 88(%esp),%eax
	movl %eax,-16(%ebp)
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-20,%ebp
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdfAffineRender7_info - _CoreziRenderziInternal_zdfAffineRender7_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfAffineRender6_closure
_CoreziRenderziInternal_zdfAffineRender6_closure:
	.long	_CoreziRenderziInternal_zdfAffineRender6_info
.text
	.align 2
_CoreziRenderziInternal_zdfAffineRender6_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfAffineRender6_info
_CoreziRenderziInternal_zdfAffineRender6_info:
Lc1pCc:
	call 1f
1:	popl	%eax
	addl $28,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1pCg
Lc1pCf:
	movl %eax,64(%esp)
	movl L_CoreziRenderziInternal_Translated_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-24(%edi)
	movl %edx,-20(%edi)
	movl %ecx,-16(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	leal -23(%edi),%ecx
	movl %ecx,-4(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	jmp *(%ebp)
Lc1pCg:
	movl $28,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziRenderziInternal_zdfAffineRender6_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdfAffineRender6_info - _CoreziRenderziInternal_zdfAffineRender6_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfAffineRender5_closure
_CoreziRenderziInternal_zdfAffineRender5_closure:
	.long	_CoreziRenderziInternal_zdfAffineRender5_info
.text
	.align 2
_CoreziRenderziInternal_zdfAffineRender5_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfAffineRender5_info
_CoreziRenderziInternal_zdfAffineRender5_info:
Lc1pCz:
	call 1f
1:	popl	%eax
	addl $28,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1pCD
Lc1pCC:
	movl %eax,64(%esp)
	movl L_CoreziRenderziInternal_Rotated_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-24(%edi)
	movl %edx,-20(%edi)
	movl %ecx,-16(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	leal -23(%edi),%ecx
	movl %ecx,-4(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	jmp *(%ebp)
Lc1pCD:
	movl $28,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziRenderziInternal_zdfAffineRender5_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdfAffineRender5_info - _CoreziRenderziInternal_zdfAffineRender5_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfAffineRender4_closure
_CoreziRenderziInternal_zdfAffineRender4_closure:
	.long	_CoreziRenderziInternal_zdfAffineRender4_info
.text
	.align 2
_CoreziRenderziInternal_zdfAffineRender4_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfAffineRender4_info
_CoreziRenderziInternal_zdfAffineRender4_info:
Lc1pCW:
	call 1f
1:	popl	%eax
	addl $28,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1pD0
Lc1pCZ:
	movl %eax,64(%esp)
	movl L_CoreziRenderziInternal_Scaled_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-24(%edi)
	movl %edx,-20(%edi)
	movl %ecx,-16(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	leal -23(%edi),%ecx
	movl %ecx,-4(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	jmp *(%ebp)
Lc1pD0:
	movl $28,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziRenderziInternal_zdfAffineRender4_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdfAffineRender4_info - _CoreziRenderziInternal_zdfAffineRender4_info_dsp
.data
	.align 2
.align 0
_r1mSl_closure:
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_static_info
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_ReturnS_closure+1
	.long	1
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfMonadIORender1_closure
_CoreziRenderziInternal_zdfMonadIORender1_closure:
	.long	_CoreziRenderziInternal_zdfMonadIORender1_info
.text
	.align 2
_CoreziRenderziInternal_zdfMonadIORender1_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfMonadIORender1_info
_CoreziRenderziInternal_zdfMonadIORender1_info:
Lc1pDl:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1pDp
Lc1pDo:
	movl L_CoreziRenderziInternal_EmbedIO_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-16(%edi)
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	leal -15(%edi),%ecx
	movl %ecx,-4(%edi)
	addl $_r1mSl_closure-(1b)+1,%eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	jmp *(%ebp)
Lc1pDp:
	movl $20,904(%ebx)
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_zdfMonadIORender1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdfMonadIORender1_info - _CoreziRenderziInternal_zdfMonadIORender1_info_dsp
.data
	.align 2
.align 0
_r1mSm_closure:
	.long	_r1mSm_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1pDM_str:
	.byte	115
	.byte	104
	.byte	97
	.byte	100
	.byte	111
	.byte	119
	.byte	66
	.byte	108
	.byte	117
	.byte	114
	.byte	0
.text
	.align 2
_r1mSm_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r1mSm_info:
Lc1pDP:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pDX
Lc1pDY:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1pDL
Lc1pDK:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1pDN_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1pDM_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1pDL:
	jmp *(%esi)
Lc1pDX:
	jmp *-16(%ebx)
	.long  _r1mSm_info - _r1mSm_info_dsp
.text
	.align 2
_c1pDN_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1pDN_info:
Lc1pDN:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1pDS_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pDN_info - _c1pDN_info_dsp
.text
	.align 2
_c1pDS_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1pDS_info:
Lc1pDS:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pE2
Lc1pE1:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1pE2:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pDS_info - _c1pDS_info_dsp
.data
	.align 2
.align 0
_r1mSn_closure:
	.long	_r1mSn_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1pEA_str:
	.byte	115
	.byte	104
	.byte	97
	.byte	100
	.byte	111
	.byte	119
	.byte	79
	.byte	102
	.byte	102
	.byte	115
	.byte	101
	.byte	116
	.byte	89
	.byte	0
.text
	.align 2
_r1mSn_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r1mSn_info:
Lc1pED:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pEL
Lc1pEM:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1pEz
Lc1pEy:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1pEB_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1pEA_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1pEz:
	jmp *(%esi)
Lc1pEL:
	jmp *-16(%ebx)
	.long  _r1mSn_info - _r1mSn_info_dsp
.text
	.align 2
_c1pEB_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1pEB_info:
Lc1pEB:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1pEG_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pEB_info - _c1pEB_info_dsp
.text
	.align 2
_c1pEG_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1pEG_info:
Lc1pEG:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pEQ
Lc1pEP:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1pEQ:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pEG_info - _c1pEG_info_dsp
.data
	.align 2
.align 0
_r1mSo_closure:
	.long	_r1mSo_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1pFo_str:
	.byte	115
	.byte	104
	.byte	97
	.byte	100
	.byte	111
	.byte	119
	.byte	79
	.byte	102
	.byte	102
	.byte	115
	.byte	101
	.byte	116
	.byte	88
	.byte	0
.text
	.align 2
_r1mSo_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r1mSo_info:
Lc1pFr:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pFz
Lc1pFA:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1pFn
Lc1pFm:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1pFp_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1pFo_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1pFn:
	jmp *(%esi)
Lc1pFz:
	jmp *-16(%ebx)
	.long  _r1mSo_info - _r1mSo_info_dsp
.text
	.align 2
_c1pFp_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1pFp_info:
Lc1pFp:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1pFu_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pFp_info - _c1pFp_info_dsp
.text
	.align 2
_c1pFu_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1pFu_info:
Lc1pFu:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pFE
Lc1pFD:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1pFE:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pFu_info - _c1pFu_info_dsp
.data
	.align 2
.align 0
_r1mSp_closure:
	.long	_r1mSp_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1pGc_str:
	.byte	115
	.byte	104
	.byte	97
	.byte	100
	.byte	111
	.byte	119
	.byte	67
	.byte	111
	.byte	108
	.byte	111
	.byte	114
	.byte	0
.text
	.align 2
_r1mSp_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r1mSp_info:
Lc1pGf:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pGn
Lc1pGo:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1pGb
Lc1pGa:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1pGd_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1pGc_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1pGb:
	jmp *(%esi)
Lc1pGn:
	jmp *-16(%ebx)
	.long  _r1mSp_info - _r1mSp_info_dsp
.text
	.align 2
_c1pGd_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1pGd_info:
Lc1pGd:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1pGi_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pGd_info - _c1pGd_info_dsp
.text
	.align 2
_c1pGi_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1pGi_info:
Lc1pGi:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pGs
Lc1pGr:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1pGs:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pGi_info - _c1pGi_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_stroke2_closure
_CoreziRenderziInternal_stroke2_closure:
	.long	_CoreziRenderziInternal_stroke2_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1pH0_str:
	.byte	108
	.byte	105
	.byte	110
	.byte	101
	.byte	87
	.byte	105
	.byte	100
	.byte	116
	.byte	104
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_stroke2_info_dsp:
.text
	.align 2
	.long	0
	.long	22
.globl _CoreziRenderziInternal_stroke2_info
_CoreziRenderziInternal_stroke2_info:
Lc1pH3:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pHb
Lc1pHc:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1pGZ
Lc1pGY:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1pH1_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1pH0_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1pGZ:
	jmp *(%esi)
Lc1pHb:
	jmp *-16(%ebx)
	.long  _CoreziRenderziInternal_stroke2_info - _CoreziRenderziInternal_stroke2_info_dsp
.text
	.align 2
_c1pH1_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1pH1_info:
Lc1pH1:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1pH6_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pH1_info - _c1pH1_info_dsp
.text
	.align 2
_c1pH6_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1pH6_info:
Lc1pH6:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pHg
Lc1pHf:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1pHg:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pH6_info - _c1pH6_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_stroke3_closure
_CoreziRenderziInternal_stroke3_closure:
	.long	_CoreziRenderziInternal_stroke3_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1pHO_str:
	.byte	115
	.byte	116
	.byte	114
	.byte	111
	.byte	107
	.byte	101
	.byte	83
	.byte	116
	.byte	121
	.byte	108
	.byte	101
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_stroke3_info_dsp:
.text
	.align 2
	.long	0
	.long	22
.globl _CoreziRenderziInternal_stroke3_info
_CoreziRenderziInternal_stroke3_info:
Lc1pHR:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pHZ
Lc1pI0:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1pHN
Lc1pHM:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1pHP_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1pHO_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1pHN:
	jmp *(%esi)
Lc1pHZ:
	jmp *-16(%ebx)
	.long  _CoreziRenderziInternal_stroke3_info - _CoreziRenderziInternal_stroke3_info_dsp
.text
	.align 2
_c1pHP_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1pHP_info:
Lc1pHP:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1pHU_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pHP_info - _c1pHP_info_dsp
.text
	.align 2
_c1pHU_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1pHU_info:
Lc1pHU:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pI4
Lc1pI3:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1pI4:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pHU_info - _c1pHU_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_fill2_closure
_CoreziRenderziInternal_fill2_closure:
	.long	_CoreziRenderziInternal_fill2_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1pIC_str:
	.byte	102
	.byte	105
	.byte	108
	.byte	108
	.byte	83
	.byte	116
	.byte	121
	.byte	108
	.byte	101
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_fill2_info_dsp:
.text
	.align 2
	.long	0
	.long	22
.globl _CoreziRenderziInternal_fill2_info
_CoreziRenderziInternal_fill2_info:
Lc1pIF:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pIN
Lc1pIO:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1pIB
Lc1pIA:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1pID_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1pIC_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1pIB:
	jmp *(%esi)
Lc1pIN:
	jmp *-16(%ebx)
	.long  _CoreziRenderziInternal_fill2_info - _CoreziRenderziInternal_fill2_info_dsp
.text
	.align 2
_c1pID_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1pID_info:
Lc1pID:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1pII_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pID_info - _c1pID_info_dsp
.text
	.align 2
_c1pII_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1pII_info:
Lc1pII:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pIS
Lc1pIR:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1pIS:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pII_info - _c1pII_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_applyTransformzuworld_closure
_CoreziRenderziInternal_applyTransformzuworld_closure:
	.long	_CoreziRenderziInternal_applyTransformzuworld_info
.text
	.align 2
.globl _CoreziRenderziInternal_applyTransformzuworld_slow
_CoreziRenderziInternal_applyTransformzuworld_slow:
Lc1pLI:
	movl 16(%ebp),%eax
	movl %eax,40(%ebx)
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl (%ebp),%eax
	movl %eax,8(%ebx)
	addl $20,%ebp
	jmp _CoreziRenderziInternal_applyTransformzuworld_info
.text
	.align 2
_s1oKw_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1oKw_info:
Lc1pLT:
	call 1f
1:	popl	%eax
	leal -40(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pMj
Lc1pMk:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1pLQ_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 12(%esi),%esi
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1pLQ_info
Lc1pLR:
	jmp *(%esi)
Lc1pMj:
	jmp *-16(%ebx)
	.long  _s1oKw_info - _s1oKw_info_dsp
.text
	.align 2
_c1pLQ_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1pLQ_info:
Lc1pLQ:
	call 1f
1:	popl	%eax
	addl $_c1pLW_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1pMq
Lc1pLX:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pMq:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pLW_info
	.long  _c1pLQ_info - _c1pLQ_info_dsp
.text
	.align 2
_c1pLW_info_dsp:
.text
	.align 2
	.long	195
	.long	32
_c1pLW_info:
Lc1pLW:
	call 1f
1:	popl	%eax
	addl $_c1pM1_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 12(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1pMs
Lc1pM2:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pMs:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pM1_info
	.long  _c1pLW_info - _c1pLW_info_dsp
.text
	.align 2
_c1pM1_info_dsp:
.text
	.align 2
	.long	4038
	.long	32
_c1pM1_info:
Lc1pM1:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pMp
Lc1pMo:
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gldzsd %fake2
	fldz ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $28,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1pMp:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pM1_info - _c1pM1_info_dsp
.text
	.align 2
_s1oKH_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1oKH_info:
Lc1pMA:
	call 1f
1:	popl	%eax
	leal -40(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pN0
Lc1pN1:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1pMx_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 12(%esi),%esi
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1pMx_info
Lc1pMy:
	jmp *(%esi)
Lc1pN0:
	jmp *-16(%ebx)
	.long  _s1oKH_info - _s1oKH_info_dsp
.text
	.align 2
_c1pMx_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1pMx_info:
Lc1pMx:
	call 1f
1:	popl	%eax
	addl $_c1pMD_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1pN7
Lc1pME:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pN7:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pMD_info
	.long  _c1pMx_info - _c1pMx_info_dsp
.text
	.align 2
_c1pMD_info_dsp:
.text
	.align 2
	.long	195
	.long	32
_c1pMD_info:
Lc1pMD:
	call 1f
1:	popl	%eax
	addl $_c1pMI_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 12(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1pN9
Lc1pMJ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pN9:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pMI_info
	.long  _c1pMD_info - _c1pMD_info_dsp
.text
	.align 2
_c1pMI_info_dsp:
.text
	.align 2
	.long	4038
	.long	32
_c1pMI_info:
Lc1pMI:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pN6
Lc1pN5:
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gldzsd %fake2
	fldz ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $28,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1pN6:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pMI_info - _c1pMI_info_dsp
.text
	.align 2
_s1oL8_info_dsp:
.text
	.align 2
	.long	10
	.long	16
_s1oL8_info:
Lc1pNL:
	call 1f
1:	popl	%eax
	leal -48(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pNM
Lc1pNN:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1pNJ_info-(1b)+0,%eax
	movl %eax,-48(%ebp)
	movl 48(%esi),%eax
	movl %eax,16(%ebx)
	movl 36(%esi),%eax
	movl %eax,8(%ebx)
	movl 12(%esi),%eax
	movl %eax,-44(%ebp)
	movl 16(%esi),%eax
	movl %eax,-40(%ebp)
	movl 20(%esi),%eax
	movl %eax,-36(%ebp)
	movl 24(%esi),%eax
	movl %eax,-32(%ebp)
	movl 28(%esi),%eax
	movl %eax,-28(%ebp)
	movl 32(%esi),%eax
	movl %eax,-24(%ebp)
	movl 40(%esi),%eax
	movl %eax,-20(%ebp)
	movl 44(%esi),%eax
	movl %eax,-16(%ebp)
	addl $-48,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
Lc1pNM:
	jmp *-16(%ebx)
	.long  _s1oL8_info - _s1oL8_info_dsp
.text
	.align 2
_c1pNJ_info_dsp:
.text
	.align 2
	.long	8
	.long	32
_c1pNJ_info:
Lc1pNJ:
	call 1f
1:	popl	%eax
	movl 16(%ebp),%ecx
	movl %ecx,40(%ebx)
	movl 12(%ebp),%ecx
	movl %ecx,32(%ebx)
	movl 8(%ebp),%ecx
	movl %ecx,24(%ebx)
	movl 4(%ebp),%ecx
	movl %ecx,16(%ebx)
	movl %esi,8(%ebx)
	movl 20(%ebp),%ecx
	movl %ecx,16(%ebp)
	movl 24(%ebp),%ecx
	movl %ecx,20(%ebp)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,24(%ebp)
	addl $16,%ebp
	jmp _CoreziRenderziInternal_applyTransformzuworld_info
	.long  _c1pNJ_info - _c1pNJ_info_dsp
.text
	.align 2
_s1oL9_info_dsp:
.text
	.align 2
	.long	65539
	.long	10
	.long	9
_s1oL9_info:
Lc1pNR:
	call 1f
1:	popl	%eax
	leal -40(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pNS
Lc1pNT:
	addl $_c1pND_info-(1b)+0,%eax
	movl %eax,-40(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl 11(%esi),%edx
	movl %eax,64(%esp)
	movl 15(%esi),%eax
	movl %ecx,76(%esp)
	movl 19(%esi),%ecx
	movl %edx,88(%esp)
	movl 23(%esi),%edx
	movl %eax,100(%esp)
	movl 27(%esi),%eax
	movl %ecx,112(%esp)
	movl 35(%esi),%ecx
	movl %edx,124(%esp)
	movl 39(%esi),%edx
	movl 31(%esi),%esi
	movl %eax,136(%esp)
	movl 64(%esp),%eax
	movl %eax,-36(%ebp)
	movl 76(%esp),%eax
	movl %eax,-32(%ebp)
	movl 88(%esp),%eax
	movl %eax,-28(%ebp)
	movl 100(%esp),%eax
	movl %eax,-24(%ebp)
	movl 112(%esp),%eax
	movl %eax,-20(%ebp)
	movl 124(%esp),%eax
	movl %eax,-16(%ebp)
	movl 136(%esp),%eax
	movl %eax,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-40,%ebp
	jmp _stg_ap_v_fast
Lc1pNS:
	jmp *-8(%ebx)
	.long  _s1oL9_info - _s1oL9_info_dsp
.text
	.align 2
_c1pND_info_dsp:
.text
	.align 2
	.long	9
	.long	32
_c1pND_info:
Lc1pND:
	call 1f
1:	popl	%eax
	addl $52,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pNW
Lc1pNV:
	addl $_s1oL8_info-(1b)+0,%eax
	movl %eax,-48(%edi)
	movl 4(%ebp),%eax
	movl %eax,-36(%edi)
	movl 8(%ebp),%eax
	movl %eax,-32(%edi)
	movl 12(%ebp),%eax
	movl %eax,-28(%edi)
	movl 16(%ebp),%eax
	movl %eax,-24(%edi)
	movl 20(%ebp),%eax
	movl %eax,-20(%edi)
	movl 24(%ebp),%eax
	movl %eax,-16(%edi)
	movl 28(%ebp),%eax
	movl %eax,-12(%edi)
	movl 32(%ebp),%eax
	movl %eax,-8(%edi)
	movl 36(%ebp),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -48(%edi),%esi
	addl $40,%ebp
	jmp *(%ebp)
Lc1pNW:
	movl $52,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pND_info - _c1pND_info_dsp
.text
	.align 2
_s1oLa_info_dsp:
.text
	.align 2
	.long	131087
	.long	8
	.long	9
_s1oLa_info:
Lc1pNY:
	call 1f
1:	popl	%eax
	addl $52,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1pO2
Lc1pO1:
	movl %eax,64(%esp)
	movl 2(%esi),%eax
	movl %eax,76(%esp)
	movl 6(%esi),%eax
	movl %eax,88(%esp)
	movl 10(%esi),%eax
	movl %eax,100(%esp)
	movl 14(%esi),%eax
	movl %eax,112(%esp)
	movl 18(%esi),%eax
	movl %eax,124(%esp)
	movl 22(%esi),%eax
	movl %eax,136(%esp)
	movl 26(%esi),%eax
	movl %eax,148(%esp)
	movl 30(%esi),%eax
	movl %eax,160(%esp)
	movl 64(%esp),%eax
	addl $_s1oL9_info-(1b)+0,%eax
	movl %eax,-48(%edi)
	movl 76(%esp),%eax
	movl %eax,-44(%edi)
	movl 88(%esp),%eax
	movl %eax,-40(%edi)
	movl 100(%esp),%eax
	movl %eax,-36(%edi)
	movl 112(%esp),%eax
	movl %eax,-32(%edi)
	movl 124(%esp),%eax
	movl %eax,-28(%edi)
	movl 136(%esp),%eax
	movl %eax,-24(%edi)
	movl 148(%esp),%eax
	movl %eax,-20(%edi)
	movl 160(%esp),%eax
	movl %eax,-16(%edi)
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl 64(%esp),%eax
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -47(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	jmp *(%ebp)
Lc1pO2:
	movl $52,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oLa_info - _s1oLa_info_dsp
.text
	.align 2
_s1oLe_info_dsp:
.text
	.align 2
	.long	8
	.long	16
_s1oLe_info:
Lc1pOc:
	call 1f
1:	popl	%eax
	leal -40(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pOd
Lc1pOe:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1pOa_info-(1b)+0,%eax
	movl %eax,-40(%ebp)
	movl 40(%esi),%eax
	movl %eax,16(%ebx)
	movl 36(%esi),%eax
	movl %eax,8(%ebx)
	movl 12(%esi),%eax
	movl %eax,-36(%ebp)
	movl 16(%esi),%eax
	movl %eax,-32(%ebp)
	movl 20(%esi),%eax
	movl %eax,-28(%ebp)
	movl 24(%esi),%eax
	movl %eax,-24(%ebp)
	movl 28(%esi),%eax
	movl %eax,-20(%ebp)
	movl 32(%esi),%eax
	movl %eax,-16(%ebp)
	addl $-40,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
Lc1pOd:
	jmp *-16(%ebx)
	.long  _s1oLe_info - _s1oLe_info_dsp
.text
	.align 2
_c1pOa_info_dsp:
.text
	.align 2
	.long	6
	.long	32
_c1pOa_info:
Lc1pOa:
	movl 16(%ebp),%eax
	movl %eax,40(%ebx)
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $20,%ebp
	jmp _CoreziRenderziInternal_applyTransformzuworld_info
	.long  _c1pOa_info - _c1pOa_info_dsp
.text
	.align 2
_s1oLn_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_s1oLn_info:
Lc1pOI:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1pOJ
Lc1pOK:
	addl $_c1pOF_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1pOF_info
Lc1pOG:
	jmp *(%esi)
Lc1pOJ:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oLn_info - _s1oLn_info_dsp
.text
	.align 2
_c1pOF_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1pOF_info:
Lc1pOF:
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 7(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_pp_fast
	.long  _c1pOF_info - _c1pOF_info_dsp
.text
	.align 2
_s1oLo_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_s1oLo_info:
Lc1pOP:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1pOT
Lc1pOS:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_s1oLn_info-(1b)+0,%edx
	movl %edx,-8(%edi)
	movl 76(%esp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
Lc1pOT:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oLo_info - _s1oLo_info_dsp
.text
	.align 2
_s1oLp_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_s1oLp_info:
Lc1pOU:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1pOY
Lc1pOX:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-28(%edi)
	movl 76(%esp),%edx
	movl %edx,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%ecx
	addl $_s1oLo_info-(1b)+0,%ecx
	movl %ecx,-8(%edi)
	movl %eax,-4(%edi)
	leal -28(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
Lc1pOY:
	movl $32,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oLp_info - _s1oLp_info_dsp
.text
	.align 2
_s1oLt_info_dsp:
.text
	.align 2
	.long	7
	.long	16
_s1oLt_info:
Lc1pP5:
	call 1f
1:	popl	%eax
	leal -20(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pP6
Lc1pP7:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 24(%esi),%eax
	movl %eax,40(%ebx)
	movl 20(%esi),%eax
	movl %eax,32(%ebx)
	movl 16(%esi),%eax
	movl %eax,24(%ebx)
	movl 12(%esi),%eax
	movl %eax,16(%ebx)
	movl 36(%esi),%eax
	movl %eax,8(%ebx)
	movl 28(%esi),%eax
	movl %eax,-20(%ebp)
	movl 32(%esi),%eax
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	jmp _CoreziRenderziInternal_applyTransformzuworld_info
Lc1pP6:
	jmp *-16(%ebx)
	.long  _s1oLt_info - _s1oLt_info_dsp
.text
	.align 2
_s1oLu_info_dsp:
.text
	.align 2
	.long	8
	.long	16
_s1oLu_info:
Lc1pPe:
	call 1f
1:	popl	%eax
	leal -40(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pPf
Lc1pPg:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1pPc_info-(1b)+0,%eax
	movl %eax,-40(%ebp)
	movl 40(%esi),%eax
	movl %eax,16(%ebx)
	movl 36(%esi),%eax
	movl %eax,8(%ebx)
	movl 12(%esi),%eax
	movl %eax,-36(%ebp)
	movl 16(%esi),%eax
	movl %eax,-32(%ebp)
	movl 20(%esi),%eax
	movl %eax,-28(%ebp)
	movl 24(%esi),%eax
	movl %eax,-24(%ebp)
	movl 28(%esi),%eax
	movl %eax,-20(%ebp)
	movl 32(%esi),%eax
	movl %eax,-16(%ebp)
	addl $-40,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
Lc1pPf:
	jmp *-16(%ebx)
	.long  _s1oLu_info - _s1oLu_info_dsp
.text
	.align 2
_c1pPc_info_dsp:
.text
	.align 2
	.long	6
	.long	32
_c1pPc_info:
Lc1pPc:
	movl 16(%ebp),%eax
	movl %eax,40(%ebx)
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $20,%ebp
	jmp _CoreziRenderziInternal_applyTransformzuworld_info
	.long  _c1pPc_info - _c1pPc_info_dsp
.text
	.align 2
_s1oLD_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_s1oLD_info:
Lc1pPK:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1pPL
Lc1pPM:
	addl $_c1pPH_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1pPH_info
Lc1pPI:
	jmp *(%esi)
Lc1pPL:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oLD_info - _s1oLD_info_dsp
.text
	.align 2
_c1pPH_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1pPH_info:
Lc1pPH:
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 7(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_pp_fast
	.long  _c1pPH_info - _c1pPH_info_dsp
.text
	.align 2
_s1oLE_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_s1oLE_info:
Lc1pPR:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1pPV
Lc1pPU:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_s1oLD_info-(1b)+0,%edx
	movl %edx,-8(%edi)
	movl 76(%esp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
Lc1pPV:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oLE_info - _s1oLE_info_dsp
.text
	.align 2
_s1oLF_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_s1oLF_info:
Lc1pPW:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1pQ0
Lc1pPZ:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-28(%edi)
	movl 76(%esp),%edx
	movl %edx,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%ecx
	addl $_s1oLE_info-(1b)+0,%ecx
	movl %ecx,-8(%edi)
	movl %eax,-4(%edi)
	leal -28(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
Lc1pQ0:
	movl $32,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oLF_info - _s1oLF_info_dsp
.text
	.align 2
_s1oLO_info_dsp:
.text
	.align 2
	.long	8
	.long	16
_s1oLO_info:
Lc1pQ9:
	call 1f
1:	popl	%eax
	leal -40(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pQa
Lc1pQb:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1pQ7_info-(1b)+0,%eax
	movl %eax,-40(%ebp)
	movl 40(%esi),%eax
	movl %eax,16(%ebx)
	movl 36(%esi),%eax
	movl %eax,8(%ebx)
	movl 12(%esi),%eax
	movl %eax,-36(%ebp)
	movl 16(%esi),%eax
	movl %eax,-32(%ebp)
	movl 20(%esi),%eax
	movl %eax,-28(%ebp)
	movl 24(%esi),%eax
	movl %eax,-24(%ebp)
	movl 28(%esi),%eax
	movl %eax,-20(%ebp)
	movl 32(%esi),%eax
	movl %eax,-16(%ebp)
	addl $-40,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
Lc1pQa:
	jmp *-16(%ebx)
	.long  _s1oLO_info - _s1oLO_info_dsp
.text
	.align 2
_c1pQ7_info_dsp:
.text
	.align 2
	.long	6
	.long	32
_c1pQ7_info:
Lc1pQ7:
	movl 16(%ebp),%eax
	movl %eax,40(%ebx)
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $20,%ebp
	jmp _CoreziRenderziInternal_applyTransformzuworld_info
	.long  _c1pQ7_info - _c1pQ7_info_dsp
.text
	.align 2
_s1oLS_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_s1oLS_info:
Lc1pQB:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1pQC
Lc1pQD:
	addl $_c1pQy_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1pQy_info
Lc1pQz:
	jmp *(%esi)
Lc1pQC:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oLS_info - _s1oLS_info_dsp
.text
	.align 2
_c1pQy_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1pQy_info:
Lc1pQy:
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 7(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_pp_fast
	.long  _c1pQy_info - _c1pQy_info_dsp
.text
	.align 2
_s1oMd_info_dsp:
.text
	.align 2
	.long	4
	.long	16
_s1oMd_info:
Lc1pSr:
	call 1f
1:	popl	%eax
	leal -44(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pST
Lc1pSU:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1pSo_info-(1b)+0,%eax
	movl %eax,-28(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 24(%esi),%edx
	movl 20(%esi),%esi
	movl %eax,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl %edx,-16(%ebp)
	addl $-28,%ebp
	testw $7,%si
	jne _c1pSo_info
Lc1pSp:
	jmp *(%esi)
Lc1pST:
	jmp *-16(%ebx)
	.long  _s1oMd_info - _s1oMd_info_dsp
.text
	.align 2
_c1pSo_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1pSo_info:
Lc1pSo:
	call 1f
1:	popl	%eax
	addl $_c1pSu_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1pT1
Lc1pSv:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pT1:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pSu_info
	.long  _c1pSo_info - _c1pSo_info_dsp
.text
	.align 2
_c1pSu_info_dsp:
.text
	.align 2
	.long	196
	.long	32
_c1pSu_info:
Lc1pSu:
	call 1f
1:	popl	%eax
	addl $_c1pSz_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 16(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1pT3
Lc1pSA:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pT3:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pSz_info
	.long  _c1pSu_info - _c1pSu_info_dsp
.text
	.align 2
_c1pSz_info_dsp:
.text
	.align 2
	.long	6087
	.long	32
_c1pSz_info:
Lc1pSz:
	call 1f
1:	popl	%eax
	addl $_c1pSE_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 24(%ebp),%esi
#	gstsd %fake0,24(%ebp)
	fstl 24(%ebp)
	testw $7,%si
	jne Lu1pT4
Lc1pSF:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pT4:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pSE_info
	.long  _c1pSz_info - _c1pSz_info_dsp
.text
	.align 2
_c1pSE_info_dsp:
.text
	.align 2
	.long	8135
	.long	32
_c1pSE_info:
Lc1pSE:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pT0
Lc1pSZ:
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 24(%ebp),%fake1
	fldl 24(%ebp) ; fstp %st(2)
#	gldsd 3(%esi),%fake2
	fldl 3(%esi) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $32,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1pT0:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pSE_info - _c1pSE_info_dsp
.text
	.align 2
_s1oMp_info_dsp:
.text
	.align 2
	.long	4
	.long	16
_s1oMp_info:
Lc1pTc:
	call 1f
1:	popl	%eax
	leal -44(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pTE
Lc1pTF:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1pT9_info-(1b)+0,%eax
	movl %eax,-28(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 24(%esi),%edx
	movl 20(%esi),%esi
	movl %eax,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl %edx,-16(%ebp)
	addl $-28,%ebp
	testw $7,%si
	jne _c1pT9_info
Lc1pTa:
	jmp *(%esi)
Lc1pTE:
	jmp *-16(%ebx)
	.long  _s1oMp_info - _s1oMp_info_dsp
.text
	.align 2
_c1pT9_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1pT9_info:
Lc1pT9:
	call 1f
1:	popl	%eax
	addl $_c1pTf_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1pTM
Lc1pTg:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pTM:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pTf_info
	.long  _c1pT9_info - _c1pT9_info_dsp
.text
	.align 2
_c1pTf_info_dsp:
.text
	.align 2
	.long	196
	.long	32
_c1pTf_info:
Lc1pTf:
	call 1f
1:	popl	%eax
	addl $_c1pTk_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 16(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1pTO
Lc1pTl:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pTO:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pTk_info
	.long  _c1pTf_info - _c1pTf_info_dsp
.text
	.align 2
_c1pTk_info_dsp:
.text
	.align 2
	.long	6087
	.long	32
_c1pTk_info:
Lc1pTk:
	call 1f
1:	popl	%eax
	addl $_c1pTp_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 24(%ebp),%esi
#	gstsd %fake0,24(%ebp)
	fstl 24(%ebp)
	testw $7,%si
	jne Lu1pTP
Lc1pTq:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pTP:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pTp_info
	.long  _c1pTk_info - _c1pTk_info_dsp
.text
	.align 2
_c1pTp_info_dsp:
.text
	.align 2
	.long	8135
	.long	32
_c1pTp_info:
Lc1pTp:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pTL
Lc1pTK:
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 24(%ebp),%fake1
	fldl 24(%ebp) ; fstp %st(2)
#	gldsd 3(%esi),%fake2
	fldl 3(%esi) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $32,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1pTL:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pTp_info - _c1pTp_info_dsp
.text
	.align 2
_s1oMF_info_dsp:
.text
	.align 2
	.long	4
	.long	16
_s1oMF_info:
Lc1pUT:
	call 1f
1:	popl	%eax
	leal -44(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pVl
Lc1pVm:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1pUQ_info-(1b)+0,%eax
	movl %eax,-28(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 24(%esi),%edx
	movl 20(%esi),%esi
	movl %eax,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl %edx,-16(%ebp)
	addl $-28,%ebp
	testw $7,%si
	jne _c1pUQ_info
Lc1pUR:
	jmp *(%esi)
Lc1pVl:
	jmp *-16(%ebx)
	.long  _s1oMF_info - _s1oMF_info_dsp
.text
	.align 2
_c1pUQ_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1pUQ_info:
Lc1pUQ:
	call 1f
1:	popl	%eax
	addl $_c1pUW_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1pVt
Lc1pUX:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pVt:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pUW_info
	.long  _c1pUQ_info - _c1pUQ_info_dsp
.text
	.align 2
_c1pUW_info_dsp:
.text
	.align 2
	.long	196
	.long	32
_c1pUW_info:
Lc1pUW:
	call 1f
1:	popl	%eax
	addl $_c1pV1_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 16(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1pVv
Lc1pV2:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pVv:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pV1_info
	.long  _c1pUW_info - _c1pUW_info_dsp
.text
	.align 2
_c1pV1_info_dsp:
.text
	.align 2
	.long	6087
	.long	32
_c1pV1_info:
Lc1pV1:
	call 1f
1:	popl	%eax
	addl $_c1pV6_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 24(%ebp),%esi
#	gstsd %fake0,24(%ebp)
	fstl 24(%ebp)
	testw $7,%si
	jne Lu1pVw
Lc1pV7:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pVw:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pV6_info
	.long  _c1pV1_info - _c1pV1_info_dsp
.text
	.align 2
_c1pV6_info_dsp:
.text
	.align 2
	.long	8135
	.long	32
_c1pV6_info:
Lc1pV6:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pVs
Lc1pVr:
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 24(%ebp),%fake1
	fldl 24(%ebp) ; fstp %st(2)
#	gldsd 3(%esi),%fake2
	fldl 3(%esi) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $32,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1pVs:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pV6_info - _c1pV6_info_dsp
.text
	.align 2
_s1oMR_info_dsp:
.text
	.align 2
	.long	4
	.long	16
_s1oMR_info:
Lc1pVE:
	call 1f
1:	popl	%eax
	leal -44(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pW6
Lc1pW7:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1pVB_info-(1b)+0,%eax
	movl %eax,-28(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 24(%esi),%edx
	movl 20(%esi),%esi
	movl %eax,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl %edx,-16(%ebp)
	addl $-28,%ebp
	testw $7,%si
	jne _c1pVB_info
Lc1pVC:
	jmp *(%esi)
Lc1pW6:
	jmp *-16(%ebx)
	.long  _s1oMR_info - _s1oMR_info_dsp
.text
	.align 2
_c1pVB_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1pVB_info:
Lc1pVB:
	call 1f
1:	popl	%eax
	addl $_c1pVH_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1pWe
Lc1pVI:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pWe:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pVH_info
	.long  _c1pVB_info - _c1pVB_info_dsp
.text
	.align 2
_c1pVH_info_dsp:
.text
	.align 2
	.long	196
	.long	32
_c1pVH_info:
Lc1pVH:
	call 1f
1:	popl	%eax
	addl $_c1pVM_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 16(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1pWg
Lc1pVN:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pWg:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pVM_info
	.long  _c1pVH_info - _c1pVH_info_dsp
.text
	.align 2
_c1pVM_info_dsp:
.text
	.align 2
	.long	6087
	.long	32
_c1pVM_info:
Lc1pVM:
	call 1f
1:	popl	%eax
	addl $_c1pVR_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 24(%ebp),%esi
#	gstsd %fake0,24(%ebp)
	fstl 24(%ebp)
	testw $7,%si
	jne Lu1pWh
Lc1pVS:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pWh:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pVR_info
	.long  _c1pVM_info - _c1pVM_info_dsp
.text
	.align 2
_c1pVR_info_dsp:
.text
	.align 2
	.long	8135
	.long	32
_c1pVR_info:
Lc1pVR:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pWd
Lc1pWc:
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 24(%ebp),%fake1
	fldl 24(%ebp) ; fstp %st(2)
#	gldsd 3(%esi),%fake2
	fldl 3(%esi) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $32,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1pWd:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pVR_info - _c1pVR_info_dsp
.text
	.align 2
_s1oNA_info_dsp:
.text
	.align 2
	.long	5
	.long	16
_s1oNA_info:
Lc1pXt:
	call 1f
1:	popl	%eax
	leal -60(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pY3
Lc1pY4:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1pXq_info-(1b)+0,%eax
	movl %eax,-32(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 20(%esi),%edx
	movl %eax,64(%esp)
	movl 28(%esi),%eax
	movl 24(%esi),%esi
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl %edx,-20(%ebp)
	movl %eax,-16(%ebp)
	addl $-32,%ebp
	testw $7,%si
	jne _c1pXq_info
Lc1pXr:
	jmp *(%esi)
Lc1pY3:
	jmp *-16(%ebx)
	.long  _s1oNA_info - _s1oNA_info_dsp
.text
	.align 2
_c1pXq_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1pXq_info:
Lc1pXq:
	call 1f
1:	popl	%eax
	addl $_c1pXw_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1pYc
Lc1pXx:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pYc:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pXw_info
	.long  _c1pXq_info - _c1pXq_info_dsp
.text
	.align 2
_c1pXw_info_dsp:
.text
	.align 2
	.long	197
	.long	32
_c1pXw_info:
Lc1pXw:
	call 1f
1:	popl	%eax
	addl $_c1pXB_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 20(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1pYe
Lc1pXC:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pYe:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pXB_info
	.long  _c1pXw_info - _c1pXw_info_dsp
.text
	.align 2
_c1pXB_info_dsp:
.text
	.align 2
	.long	10184
	.long	32
_c1pXB_info:
Lc1pXB:
	call 1f
1:	popl	%eax
	addl $_c1pXG_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 24(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1pYf
Lc1pXH:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pYf:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pXG_info
	.long  _c1pXB_info - _c1pXB_info_dsp
.text
	.align 2
_c1pXG_info_dsp:
.text
	.align 2
	.long	98251
	.long	32
_c1pXG_info:
Lc1pXG:
	call 1f
1:	popl	%eax
	addl $_c1pXL_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 40(%ebp),%esi
#	gstsd %fake0,40(%ebp)
	fstl 40(%ebp)
	testw $7,%si
	jne Lu1pYg
Lc1pXM:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pYg:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pXL_info
	.long  _c1pXG_info - _c1pXG_info_dsp
.text
	.align 2
_c1pXL_info_dsp:
.text
	.align 2
	.long	131019
	.long	32
_c1pXL_info:
Lc1pXL:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pYb
Lc1pYa:
#	gldsd 28(%ebp),%fake0
	fldl 28(%ebp) ; fstp %st(1)
#	gldsd 16(%ebp),%fake1
	fldl 16(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gldsd 40(%ebp),%fake2
	fldl 40(%ebp) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $48,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1pYb:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pXL_info - _c1pXL_info_dsp
.text
	.align 2
_s1oNl_info_dsp:
.text
	.align 2
	.long	5
	.long	16
_s1oNl_info:
Lc1pYo:
	call 1f
1:	popl	%eax
	leal -60(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1pYY
Lc1pYZ:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1pYl_info-(1b)+0,%eax
	movl %eax,-32(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 20(%esi),%edx
	movl %eax,64(%esp)
	movl 28(%esi),%eax
	movl 24(%esi),%esi
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl %edx,-20(%ebp)
	movl %eax,-16(%ebp)
	addl $-32,%ebp
	testw $7,%si
	jne _c1pYl_info
Lc1pYm:
	jmp *(%esi)
Lc1pYY:
	jmp *-16(%ebx)
	.long  _s1oNl_info - _s1oNl_info_dsp
.text
	.align 2
_c1pYl_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1pYl_info:
Lc1pYl:
	call 1f
1:	popl	%eax
	addl $_c1pYr_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1pZ7
Lc1pYs:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pZ7:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pYr_info
	.long  _c1pYl_info - _c1pYl_info_dsp
.text
	.align 2
_c1pYr_info_dsp:
.text
	.align 2
	.long	197
	.long	32
_c1pYr_info:
Lc1pYr:
	call 1f
1:	popl	%eax
	addl $_c1pYw_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 20(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1pZ9
Lc1pYx:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pZ9:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pYw_info
	.long  _c1pYr_info - _c1pYr_info_dsp
.text
	.align 2
_c1pYw_info_dsp:
.text
	.align 2
	.long	10184
	.long	32
_c1pYw_info:
Lc1pYw:
	call 1f
1:	popl	%eax
	addl $_c1pYB_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 24(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1pZa
Lc1pYC:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pZa:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pYB_info
	.long  _c1pYw_info - _c1pYw_info_dsp
.text
	.align 2
_c1pYB_info_dsp:
.text
	.align 2
	.long	98251
	.long	32
_c1pYB_info:
Lc1pYB:
	call 1f
1:	popl	%eax
	addl $_c1pYG_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 40(%ebp),%esi
#	gstsd %fake0,40(%ebp)
	fstl 40(%ebp)
	testw $7,%si
	jne Lu1pZb
Lc1pYH:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1pZb:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1pYG_info
	.long  _c1pYB_info - _c1pYB_info_dsp
.text
	.align 2
_c1pYG_info_dsp:
.text
	.align 2
	.long	131019
	.long	32
_c1pYG_info:
Lc1pYG:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pZ6
Lc1pZ5:
#	gldsd 28(%ebp),%fake0
	fldl 28(%ebp) ; fstp %st(1)
#	gldsd 16(%ebp),%fake1
	fldl 16(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gldsd 40(%ebp),%fake2
	fldl 40(%ebp) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $48,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1pZ6:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pYG_info - _c1pYG_info_dsp
.text
	.align 2
_s1oNB_info_dsp:
.text
	.align 2
	.long	65541
	.long	13
	.long	9
_s1oNB_info:
Lc1pZc:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -56(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1pZd
Lc1pZe:
	addl $_c1pXh_info-(1b)+0,%eax
	movl %eax,-56(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %eax,88(%esp)
	movl 19(%esi),%eax
	movl %edx,100(%esp)
	movl 23(%esi),%edx
	movl %eax,112(%esp)
	movl 27(%esi),%eax
	movl %edx,124(%esp)
	movl 31(%esi),%edx
	movl %eax,136(%esp)
	movl 35(%esi),%eax
	movl %edx,148(%esp)
	movl 39(%esi),%edx
	movl %eax,160(%esp)
	movl 43(%esi),%eax
	movl %edx,172(%esp)
	movl 47(%esi),%edx
	movl %eax,184(%esp)
	movl 51(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-52(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-48(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-44(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-40(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-36(%ebp)
	movl 124(%esp),%ecx
	movl %ecx,-32(%ebp)
	movl 136(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 148(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 160(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 172(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 184(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-56,%ebp
	testw $7,%si
	jne _c1pXh_info
Lc1pXi:
	jmp *(%esi)
Lc1pZd:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oNB_info - _s1oNB_info_dsp
.text
	.align 2
_c1pXh_info_dsp:
.text
	.align 2
	.long	13
	.long	32
_c1pXh_info:
Lc1pXh:
	call 1f
1:	popl	%eax
	addl $64,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pZh
Lc1pZg:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_s1oNA_info-(1b)+0,%eax
	movl %eax,-60(%edi)
	movl 16(%ebp),%eax
	movl %eax,-48(%edi)
	movl 20(%ebp),%eax
	movl %eax,-44(%edi)
	movl 24(%ebp),%eax
	movl %eax,-40(%edi)
	movl 36(%ebp),%eax
	movl %eax,-36(%edi)
	movl %ecx,-32(%edi)
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_s1oNl_info-(1b)+0,%eax
	movl %eax,-28(%edi)
	movl 4(%ebp),%eax
	movl %eax,-16(%edi)
	movl 8(%ebp),%eax
	movl %eax,-12(%edi)
	movl 12(%ebp),%eax
	movl %eax,-8(%edi)
	movl 76(%esp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	movl 40(%ebp),%eax
	movl %eax,40(%ebx)
	leal -28(%edi),%eax
	movl %eax,32(%ebx)
	movl 52(%ebp),%eax
	movl %eax,24(%ebx)
	movl 44(%ebp),%eax
	movl %eax,16(%ebx)
	movl 28(%ebp),%eax
	movl %eax,8(%ebx)
	movl 48(%ebp),%eax
	movl %eax,36(%ebp)
	leal -60(%edi),%eax
	movl %eax,40(%ebp)
	movl 64(%esp),%eax
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,44(%ebp)
	movl %edx,48(%ebp)
	movl 32(%ebp),%eax
	movl %eax,52(%ebp)
	addl $36,%ebp
	jmp _CoreziRenderziInternal_applyTransformzuworld_info
Lc1pZh:
	movl $64,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pXh_info - _c1pXh_info_dsp
.text
	.align 2
_s1oNC_info_dsp:
.text
	.align 2
	.long	65541
	.long	13
	.long	9
_s1oNC_info:
Lc1pZj:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -56(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1pZk
Lc1pZl:
	addl $_c1pUH_info-(1b)+0,%eax
	movl %eax,-56(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %eax,88(%esp)
	movl 19(%esi),%eax
	movl %edx,100(%esp)
	movl 23(%esi),%edx
	movl %eax,112(%esp)
	movl 27(%esi),%eax
	movl %edx,124(%esp)
	movl 31(%esi),%edx
	movl %eax,136(%esp)
	movl 35(%esi),%eax
	movl %edx,148(%esp)
	movl 39(%esi),%edx
	movl %eax,160(%esp)
	movl 43(%esi),%eax
	movl %edx,172(%esp)
	movl 47(%esi),%edx
	movl %eax,184(%esp)
	movl 51(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-52(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-48(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-44(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-40(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-36(%ebp)
	movl 124(%esp),%ecx
	movl %ecx,-32(%ebp)
	movl 136(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 148(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 160(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 172(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 184(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-56,%ebp
	testw $7,%si
	jne _c1pUH_info
Lc1pUI:
	jmp *(%esi)
Lc1pZk:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oNC_info - _s1oNC_info_dsp
.text
	.align 2
_c1pUH_info_dsp:
.text
	.align 2
	.long	13
	.long	32
_c1pUH_info:
Lc1pUH:
	call 1f
1:	popl	%eax
	addl $112,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pZo
Lc1pZn:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_s1oMF_info-(1b)+0,%eax
	movl %eax,-108(%edi)
	movl 16(%ebp),%eax
	movl %eax,-96(%edi)
	movl %eax,76(%esp)
	movl 20(%ebp),%eax
	movl %eax,-92(%edi)
	movl %eax,88(%esp)
	movl 40(%ebp),%eax
	movl %eax,-88(%edi)
	movl %ecx,-84(%edi)
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	addl $_s1oMR_info-(1b)+0,%eax
	movl %eax,-80(%edi)
	movl 4(%ebp),%eax
	movl %eax,-68(%edi)
	movl %eax,112(%esp)
	movl 8(%ebp),%eax
	movl %eax,-64(%edi)
	movl %eax,124(%esp)
	movl 100(%esp),%eax
	movl %eax,-60(%edi)
	movl %ecx,-56(%edi)
	movl 64(%esp),%eax
	addl $_s1oNB_info-(1b)+0,%eax
	movl %eax,-52(%edi)
	movl 112(%esp),%eax
	movl %eax,-48(%edi)
	movl 124(%esp),%eax
	movl %eax,-44(%edi)
	movl 12(%ebp),%eax
	movl %eax,-40(%edi)
	movl 76(%esp),%eax
	movl %eax,-36(%edi)
	movl 88(%esp),%eax
	movl %eax,-32(%edi)
	movl 24(%ebp),%eax
	movl %eax,-28(%edi)
	movl 32(%ebp),%eax
	movl %eax,-24(%edi)
	movl 36(%ebp),%eax
	movl %eax,-20(%edi)
	movl 44(%ebp),%eax
	movl %eax,-16(%edi)
	movl 48(%ebp),%eax
	movl %eax,-12(%edi)
	movl 52(%ebp),%eax
	movl %eax,-8(%edi)
	leal -108(%edi),%eax
	movl %eax,-4(%edi)
	leal -80(%edi),%eax
	movl %eax,(%edi)
	leal -51(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 28(%ebp),%eax
	movl %eax,8(%ebx)
	addl $56,%ebp
	jmp _CoreziEase_valueOf1_info
Lc1pZo:
	movl $112,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pUH_info - _c1pUH_info_dsp
.text
	.align 2
_s1oND_info_dsp:
.text
	.align 2
	.long	65541
	.long	13
	.long	9
_s1oND_info:
Lc1pZq:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -56(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1pZr
Lc1pZs:
	addl $_c1pSf_info-(1b)+0,%eax
	movl %eax,-56(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %eax,88(%esp)
	movl 19(%esi),%eax
	movl %edx,100(%esp)
	movl 23(%esi),%edx
	movl %eax,112(%esp)
	movl 27(%esi),%eax
	movl %edx,124(%esp)
	movl 31(%esi),%edx
	movl %eax,136(%esp)
	movl 35(%esi),%eax
	movl %edx,148(%esp)
	movl 39(%esi),%edx
	movl %eax,160(%esp)
	movl 43(%esi),%eax
	movl %edx,172(%esp)
	movl 47(%esi),%edx
	movl %eax,184(%esp)
	movl 51(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-52(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-48(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-44(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-40(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-36(%ebp)
	movl 124(%esp),%ecx
	movl %ecx,-32(%ebp)
	movl 136(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 148(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 160(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 172(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 184(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-56,%ebp
	testw $7,%si
	jne _c1pSf_info
Lc1pSg:
	jmp *(%esi)
Lc1pZr:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oND_info - _s1oND_info_dsp
.text
	.align 2
_c1pSf_info_dsp:
.text
	.align 2
	.long	13
	.long	32
_c1pSf_info:
Lc1pSf:
	call 1f
1:	popl	%eax
	addl $112,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pZv
Lc1pZu:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_s1oMd_info-(1b)+0,%eax
	movl %eax,-108(%edi)
	movl 16(%ebp),%eax
	movl %eax,-96(%edi)
	movl %eax,76(%esp)
	movl 20(%ebp),%eax
	movl %eax,-92(%edi)
	movl %eax,88(%esp)
	movl 44(%ebp),%eax
	movl %eax,-88(%edi)
	movl %ecx,-84(%edi)
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	addl $_s1oMp_info-(1b)+0,%eax
	movl %eax,-80(%edi)
	movl 4(%ebp),%eax
	movl %eax,-68(%edi)
	movl %eax,112(%esp)
	movl 8(%ebp),%eax
	movl %eax,-64(%edi)
	movl %eax,124(%esp)
	movl 100(%esp),%eax
	movl %eax,-60(%edi)
	movl %ecx,-56(%edi)
	movl 64(%esp),%eax
	addl $_s1oNC_info-(1b)+0,%eax
	movl %eax,-52(%edi)
	movl 112(%esp),%eax
	movl %eax,-48(%edi)
	movl 124(%esp),%eax
	movl %eax,-44(%edi)
	movl 12(%ebp),%eax
	movl %eax,-40(%edi)
	movl 76(%esp),%eax
	movl %eax,-36(%edi)
	movl 88(%esp),%eax
	movl %eax,-32(%edi)
	movl 24(%ebp),%eax
	movl %eax,-28(%edi)
	movl 32(%ebp),%eax
	movl %eax,-24(%edi)
	movl 36(%ebp),%eax
	movl %eax,-20(%edi)
	movl 40(%ebp),%eax
	movl %eax,-16(%edi)
	movl 48(%ebp),%eax
	movl %eax,-12(%edi)
	movl 52(%ebp),%eax
	movl %eax,-8(%edi)
	leal -108(%edi),%eax
	movl %eax,-4(%edi)
	leal -80(%edi),%eax
	movl %eax,(%edi)
	leal -51(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 28(%ebp),%eax
	movl %eax,8(%ebx)
	addl $56,%ebp
	jmp _CoreziEase_valueOf1_info
Lc1pZv:
	movl $112,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pSf_info - _c1pSf_info_dsp
.text
	.align 2
_s1oNE_info_dsp:
.text
	.align 2
	.long	65541
	.long	13
	.long	9
_s1oNE_info:
Lc1pZx:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -56(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1pZy
Lc1pZz:
	addl $_c1pS5_info-(1b)+0,%eax
	movl %eax,-56(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %eax,88(%esp)
	movl 19(%esi),%eax
	movl %edx,100(%esp)
	movl 23(%esi),%edx
	movl %eax,112(%esp)
	movl 27(%esi),%eax
	movl %edx,124(%esp)
	movl 31(%esi),%edx
	movl %eax,136(%esp)
	movl 35(%esi),%eax
	movl %edx,148(%esp)
	movl 39(%esi),%edx
	movl %eax,160(%esp)
	movl 43(%esi),%eax
	movl %edx,172(%esp)
	movl 47(%esi),%edx
	movl %eax,184(%esp)
	movl 51(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-52(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-48(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-44(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-40(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-36(%ebp)
	movl 124(%esp),%ecx
	movl %ecx,-32(%ebp)
	movl 136(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 148(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 160(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 172(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 184(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-56,%ebp
	testw $7,%si
	jne _c1pS5_info
Lc1pS6:
	jmp *(%esi)
Lc1pZy:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oNE_info - _s1oNE_info_dsp
.text
	.align 2
_c1pS5_info_dsp:
.text
	.align 2
	.long	13
	.long	32
_c1pS5_info:
Lc1pS5:
	call 1f
1:	popl	%eax
	addl $56,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pZC
Lc1pZB:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_s1oND_info-(1b)+0,%eax
	movl %eax,-52(%edi)
	movl 4(%ebp),%eax
	movl %eax,-48(%edi)
	movl 8(%ebp),%eax
	movl %eax,-44(%edi)
	movl 12(%ebp),%eax
	movl %eax,-40(%edi)
	movl 16(%ebp),%eax
	movl %eax,-36(%edi)
	movl 20(%ebp),%eax
	movl %eax,-32(%edi)
	movl 24(%ebp),%eax
	movl %eax,-28(%edi)
	movl 32(%ebp),%eax
	movl %eax,-24(%edi)
	movl 36(%ebp),%eax
	movl %eax,-20(%edi)
	movl 40(%ebp),%eax
	movl %eax,-16(%edi)
	movl 44(%ebp),%eax
	movl %eax,-12(%edi)
	movl 48(%ebp),%eax
	movl %eax,-8(%edi)
	movl 52(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -51(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 28(%ebp),%eax
	movl %eax,8(%ebx)
	addl $56,%ebp
	jmp _CoreziEase_valueOf1_info
Lc1pZC:
	movl $56,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pS5_info - _c1pS5_info_dsp
.text
	.align 2
_s1oNF_info_dsp:
.text
	.align 2
	.long	65541
	.long	13
	.long	9
_s1oNF_info:
Lc1pZE:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -56(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1pZF
Lc1pZG:
	addl $_c1pRV_info-(1b)+0,%eax
	movl %eax,-56(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %eax,88(%esp)
	movl 19(%esi),%eax
	movl %edx,100(%esp)
	movl 23(%esi),%edx
	movl %eax,112(%esp)
	movl 27(%esi),%eax
	movl %edx,124(%esp)
	movl 31(%esi),%edx
	movl %eax,136(%esp)
	movl 35(%esi),%eax
	movl %edx,148(%esp)
	movl 39(%esi),%edx
	movl %eax,160(%esp)
	movl 43(%esi),%eax
	movl %edx,172(%esp)
	movl 47(%esi),%edx
	movl %eax,184(%esp)
	movl 51(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-52(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-48(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-44(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-40(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-36(%ebp)
	movl 124(%esp),%ecx
	movl %ecx,-32(%ebp)
	movl 136(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 148(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 160(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 172(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 184(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-56,%ebp
	testw $7,%si
	jne _c1pRV_info
Lc1pRW:
	jmp *(%esi)
Lc1pZF:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oNF_info - _s1oNF_info_dsp
.text
	.align 2
_c1pRV_info_dsp:
.text
	.align 2
	.long	13
	.long	32
_c1pRV_info:
Lc1pRV:
	call 1f
1:	popl	%eax
	addl $56,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pZJ
Lc1pZI:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_s1oNE_info-(1b)+0,%eax
	movl %eax,-52(%edi)
	movl 4(%ebp),%eax
	movl %eax,-48(%edi)
	movl 8(%ebp),%eax
	movl %eax,-44(%edi)
	movl 12(%ebp),%eax
	movl %eax,-40(%edi)
	movl 16(%ebp),%eax
	movl %eax,-36(%edi)
	movl 20(%ebp),%eax
	movl %eax,-32(%edi)
	movl 24(%ebp),%eax
	movl %eax,-28(%edi)
	movl 32(%ebp),%eax
	movl %eax,-24(%edi)
	movl 36(%ebp),%eax
	movl %eax,-20(%edi)
	movl 40(%ebp),%eax
	movl %eax,-16(%edi)
	movl 44(%ebp),%eax
	movl %eax,-12(%edi)
	movl 48(%ebp),%eax
	movl %eax,-8(%edi)
	movl 52(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -51(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 28(%ebp),%eax
	movl %eax,8(%ebx)
	addl $56,%ebp
	jmp _CoreziEase_valueOf1_info
Lc1pZJ:
	movl $56,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pRV_info - _c1pRV_info_dsp
.text
	.align 2
_s1oNG_info_dsp:
.text
	.align 2
	.long	65541
	.long	13
	.long	9
_s1oNG_info:
Lc1pZL:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -56(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1pZM
Lc1pZN:
	addl $_c1pRL_info-(1b)+0,%eax
	movl %eax,-56(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %eax,88(%esp)
	movl 19(%esi),%eax
	movl %edx,100(%esp)
	movl 23(%esi),%edx
	movl %eax,112(%esp)
	movl 27(%esi),%eax
	movl %edx,124(%esp)
	movl 31(%esi),%edx
	movl %eax,136(%esp)
	movl 35(%esi),%eax
	movl %edx,148(%esp)
	movl 39(%esi),%edx
	movl %eax,160(%esp)
	movl 43(%esi),%eax
	movl %edx,172(%esp)
	movl 47(%esi),%edx
	movl %eax,184(%esp)
	movl 51(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-52(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-48(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-44(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-40(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-36(%ebp)
	movl 124(%esp),%ecx
	movl %ecx,-32(%ebp)
	movl 136(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 148(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 160(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 172(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 184(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-56,%ebp
	testw $7,%si
	jne _c1pRL_info
Lc1pRM:
	jmp *(%esi)
Lc1pZM:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oNG_info - _s1oNG_info_dsp
.text
	.align 2
_c1pRL_info_dsp:
.text
	.align 2
	.long	13
	.long	32
_c1pRL_info:
Lc1pRL:
	call 1f
1:	popl	%eax
	addl $56,%edi
	cmpl 856(%ebx),%edi
	ja Lc1pZQ
Lc1pZP:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_s1oNF_info-(1b)+0,%eax
	movl %eax,-52(%edi)
	movl 4(%ebp),%eax
	movl %eax,-48(%edi)
	movl 8(%ebp),%eax
	movl %eax,-44(%edi)
	movl 12(%ebp),%eax
	movl %eax,-40(%edi)
	movl 16(%ebp),%eax
	movl %eax,-36(%edi)
	movl 20(%ebp),%eax
	movl %eax,-32(%edi)
	movl 24(%ebp),%eax
	movl %eax,-28(%edi)
	movl 32(%ebp),%eax
	movl %eax,-24(%edi)
	movl 36(%ebp),%eax
	movl %eax,-20(%edi)
	movl 40(%ebp),%eax
	movl %eax,-16(%edi)
	movl 44(%ebp),%eax
	movl %eax,-12(%edi)
	movl 48(%ebp),%eax
	movl %eax,-8(%edi)
	movl 52(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -51(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 28(%ebp),%eax
	movl %eax,8(%ebx)
	addl $56,%ebp
	jmp _CoreziEase_valueOf1_info
Lc1pZQ:
	movl $56,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pRL_info - _c1pRL_info_dsp
.text
	.align 2
_s1oNH_info_dsp:
.text
	.align 2
	.long	131087
	.long	14
	.long	9
_s1oNH_info:
Lc1pZS:
	call 1f
1:	popl	%eax
	addl $68,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1pZW
Lc1pZV:
	movl %eax,64(%esp)
	movl 2(%esi),%eax
	movl %eax,76(%esp)
	movl 6(%esi),%eax
	movl %eax,88(%esp)
	movl 10(%esi),%eax
	movl %eax,100(%esp)
	movl 14(%esi),%eax
	movl %eax,112(%esp)
	movl 18(%esi),%eax
	movl %eax,124(%esp)
	movl 22(%esi),%eax
	movl %eax,136(%esp)
	movl 26(%esi),%eax
	movl %eax,148(%esp)
	movl 30(%esi),%eax
	movl %eax,160(%esp)
	movl 34(%esi),%eax
	movl %eax,172(%esp)
	movl 38(%esi),%eax
	movl %eax,184(%esp)
	movl 42(%esi),%eax
	movl %eax,196(%esp)
	movl 46(%esi),%eax
	movl %eax,208(%esp)
	movl 50(%esi),%eax
	movl %eax,220(%esp)
	movl 54(%esi),%eax
	movl %eax,232(%esp)
	movl 64(%esp),%eax
	addl $_s1oLS_info-(1b)+0,%eax
	movl %eax,-64(%edi)
	movl 232(%esp),%eax
	movl %eax,-60(%edi)
	movl %ecx,-56(%edi)
	movl 64(%esp),%eax
	addl $_s1oNG_info-(1b)+0,%eax
	movl %eax,-52(%edi)
	movl 76(%esp),%eax
	movl %eax,-48(%edi)
	movl 88(%esp),%eax
	movl %eax,-44(%edi)
	movl 100(%esp),%eax
	movl %eax,-40(%edi)
	movl 112(%esp),%eax
	movl %eax,-36(%edi)
	movl 124(%esp),%eax
	movl %eax,-32(%edi)
	movl 136(%esp),%eax
	movl %eax,-28(%edi)
	movl 160(%esp),%eax
	movl %eax,-24(%edi)
	movl 172(%esp),%eax
	movl %eax,-20(%edi)
	movl 184(%esp),%eax
	movl %eax,-16(%edi)
	movl 196(%esp),%eax
	movl %eax,-12(%edi)
	movl 208(%esp),%eax
	movl %eax,-8(%edi)
	movl 220(%esp),%eax
	movl %eax,-4(%edi)
	leal -63(%edi),%eax
	movl %eax,(%edi)
	leal -51(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 148(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziEase_valueOf1_info
Lc1pZW:
	movl $68,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oNH_info - _s1oNH_info_dsp
.text
	.align 2
_s1oNO_info_dsp:
.text
	.align 2
	.long	8
	.long	16
_s1oNO_info:
Lc1q0a:
	call 1f
1:	popl	%eax
	leal -40(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1q0b
Lc1q0c:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1q08_info-(1b)+0,%eax
	movl %eax,-40(%ebp)
	movl 40(%esi),%eax
	movl %eax,16(%ebx)
	movl 36(%esi),%eax
	movl %eax,8(%ebx)
	movl 12(%esi),%eax
	movl %eax,-36(%ebp)
	movl 16(%esi),%eax
	movl %eax,-32(%ebp)
	movl 20(%esi),%eax
	movl %eax,-28(%ebp)
	movl 24(%esi),%eax
	movl %eax,-24(%ebp)
	movl 28(%esi),%eax
	movl %eax,-20(%ebp)
	movl 32(%esi),%eax
	movl %eax,-16(%ebp)
	addl $-40,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
Lc1q0b:
	jmp *-16(%ebx)
	.long  _s1oNO_info - _s1oNO_info_dsp
.text
	.align 2
_c1q08_info_dsp:
.text
	.align 2
	.long	6
	.long	32
_c1q08_info:
Lc1q08:
	movl 16(%ebp),%eax
	movl %eax,40(%ebx)
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $20,%ebp
	jmp _CoreziRenderziInternal_applyTransformzuworld_info
	.long  _c1q08_info - _c1q08_info_dsp
.text
	.align 2
_s1oNQ_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1oNQ_info:
Lc1q0n:
	call 1f
1:	popl	%eax
	leal -24(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1q0C
Lc1q0D:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1q0k_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 16(%esi),%eax
	movl 12(%esi),%esi
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _c1q0k_info
Lc1q0l:
	jmp *(%esi)
Lc1q0C:
	jmp *-16(%ebx)
	.long  _s1oNQ_info - _s1oNQ_info_dsp
.text
	.align 2
_c1q0k_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1q0k_info:
Lc1q0k:
	call 1f
1:	popl	%eax
	addl $_c1q0q_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1q0I
Lc1q0r:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1q0I:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1q0q_info
	.long  _c1q0k_info - _c1q0k_info_dsp
.text
	.align 2
_c1q0q_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1q0q_info:
Lc1q0q:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1q0H
Lc1q0G:
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1q0H:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1q0q_info - _c1q0q_info_dsp
.text
	.align 2
_s1oNX_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1oNX_info:
Lc1q0R:
	call 1f
1:	popl	%eax
	leal -24(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1q16
Lc1q17:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1q0O_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 16(%esi),%eax
	movl 12(%esi),%esi
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _c1q0O_info
Lc1q0P:
	jmp *(%esi)
Lc1q16:
	jmp *-16(%ebx)
	.long  _s1oNX_info - _s1oNX_info_dsp
.text
	.align 2
_c1q0O_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1q0O_info:
Lc1q0O:
	call 1f
1:	popl	%eax
	addl $_c1q0U_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1q1c
Lc1q0V:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1q1c:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1q0U_info
	.long  _c1q0O_info - _c1q0O_info_dsp
.text
	.align 2
_c1q0U_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1q0U_info:
Lc1q0U:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1q1b
Lc1q1a:
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gldzsd %fake2
	fldz ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1q1b:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1q0U_info - _c1q0U_info_dsp
.text
	.align 2
_s1oO4_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1oO4_info:
Lc1q1l:
	call 1f
1:	popl	%eax
	leal -24(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1q1A
Lc1q1B:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1q1i_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 16(%esi),%eax
	movl 12(%esi),%esi
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _c1q1i_info
Lc1q1j:
	jmp *(%esi)
Lc1q1A:
	jmp *-16(%ebx)
	.long  _s1oO4_info - _s1oO4_info_dsp
.text
	.align 2
_c1q1i_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1q1i_info:
Lc1q1i:
	call 1f
1:	popl	%eax
	addl $_c1q1o_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1q1G
Lc1q1p:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1q1G:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1q1o_info
	.long  _c1q1i_info - _c1q1i_info_dsp
.text
	.align 2
_c1q1o_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1q1o_info:
Lc1q1o:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1q1F
Lc1q1E:
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1q1F:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1q1o_info - _c1q1o_info_dsp
.text
	.align 2
_s1oOb_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1oOb_info:
Lc1q1P:
	call 1f
1:	popl	%eax
	leal -24(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1q24
Lc1q25:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1q1M_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 16(%esi),%eax
	movl 12(%esi),%esi
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _c1q1M_info
Lc1q1N:
	jmp *(%esi)
Lc1q24:
	jmp *-16(%ebx)
	.long  _s1oOb_info - _s1oOb_info_dsp
.text
	.align 2
_c1q1M_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1q1M_info:
Lc1q1M:
	call 1f
1:	popl	%eax
	addl $_c1q1S_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1q2a
Lc1q1T:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1q2a:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1q1S_info
	.long  _c1q1M_info - _c1q1M_info_dsp
.text
	.align 2
_c1q1S_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1q1S_info:
Lc1q1S:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1q29
Lc1q28:
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gldzsd %fake2
	fldz ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1q29:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1q1S_info - _c1q1S_info_dsp
.text
	.align 2
_s1oOk_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_s1oOk_info:
Lc1q2y:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1q2z
Lc1q2A:
	addl $_c1q2v_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1q2v_info
Lc1q2w:
	jmp *(%esi)
Lc1q2z:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oOk_info - _s1oOk_info_dsp
.text
	.align 2
_c1q2v_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1q2v_info:
Lc1q2v:
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 7(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_pp_fast
	.long  _c1q2v_info - _c1q2v_info_dsp
.text
	.align 2
_s1oP0_info_dsp:
.text
	.align 2
	.long	5
	.long	16
_s1oP0_info:
Lc1q44:
	call 1f
1:	popl	%eax
	leal -60(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1q4E
Lc1q4F:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1q41_info-(1b)+0,%eax
	movl %eax,-32(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 20(%esi),%edx
	movl %eax,64(%esp)
	movl 28(%esi),%eax
	movl 24(%esi),%esi
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl %edx,-20(%ebp)
	movl %eax,-16(%ebp)
	addl $-32,%ebp
	testw $7,%si
	jne _c1q41_info
Lc1q42:
	jmp *(%esi)
Lc1q4E:
	jmp *-16(%ebx)
	.long  _s1oP0_info - _s1oP0_info_dsp
.text
	.align 2
_c1q41_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1q41_info:
Lc1q41:
	call 1f
1:	popl	%eax
	addl $_c1q47_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1q4N
Lc1q48:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1q4N:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1q47_info
	.long  _c1q41_info - _c1q41_info_dsp
.text
	.align 2
_c1q47_info_dsp:
.text
	.align 2
	.long	197
	.long	32
_c1q47_info:
Lc1q47:
	call 1f
1:	popl	%eax
	addl $_c1q4c_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 20(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1q4P
Lc1q4d:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1q4P:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1q4c_info
	.long  _c1q47_info - _c1q47_info_dsp
.text
	.align 2
_c1q4c_info_dsp:
.text
	.align 2
	.long	10184
	.long	32
_c1q4c_info:
Lc1q4c:
	call 1f
1:	popl	%eax
	addl $_c1q4h_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 24(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1q4Q
Lc1q4i:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1q4Q:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1q4h_info
	.long  _c1q4c_info - _c1q4c_info_dsp
.text
	.align 2
_c1q4h_info_dsp:
.text
	.align 2
	.long	98251
	.long	32
_c1q4h_info:
Lc1q4h:
	call 1f
1:	popl	%eax
	addl $_c1q4m_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 40(%ebp),%esi
#	gstsd %fake0,40(%ebp)
	fstl 40(%ebp)
	testw $7,%si
	jne Lu1q4R
Lc1q4n:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1q4R:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1q4m_info
	.long  _c1q4h_info - _c1q4h_info_dsp
.text
	.align 2
_c1q4m_info_dsp:
.text
	.align 2
	.long	131019
	.long	32
_c1q4m_info:
Lc1q4m:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1q4M
Lc1q4L:
#	gldsd 28(%ebp),%fake0
	fldl 28(%ebp) ; fstp %st(1)
#	gldsd 16(%ebp),%fake1
	fldl 16(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gldsd 40(%ebp),%fake2
	fldl 40(%ebp) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $48,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1q4M:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1q4m_info - _c1q4m_info_dsp
.text
	.align 2
_s1oOL_info_dsp:
.text
	.align 2
	.long	5
	.long	16
_s1oOL_info:
Lc1q4Z:
	call 1f
1:	popl	%eax
	leal -60(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1q5z
Lc1q5A:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1q4W_info-(1b)+0,%eax
	movl %eax,-32(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 20(%esi),%edx
	movl %eax,64(%esp)
	movl 28(%esi),%eax
	movl 24(%esi),%esi
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl %edx,-20(%ebp)
	movl %eax,-16(%ebp)
	addl $-32,%ebp
	testw $7,%si
	jne _c1q4W_info
Lc1q4X:
	jmp *(%esi)
Lc1q5z:
	jmp *-16(%ebx)
	.long  _s1oOL_info - _s1oOL_info_dsp
.text
	.align 2
_c1q4W_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1q4W_info:
Lc1q4W:
	call 1f
1:	popl	%eax
	addl $_c1q52_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1q5I
Lc1q53:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1q5I:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1q52_info
	.long  _c1q4W_info - _c1q4W_info_dsp
.text
	.align 2
_c1q52_info_dsp:
.text
	.align 2
	.long	197
	.long	32
_c1q52_info:
Lc1q52:
	call 1f
1:	popl	%eax
	addl $_c1q57_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 20(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1q5K
Lc1q58:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1q5K:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1q57_info
	.long  _c1q52_info - _c1q52_info_dsp
.text
	.align 2
_c1q57_info_dsp:
.text
	.align 2
	.long	10184
	.long	32
_c1q57_info:
Lc1q57:
	call 1f
1:	popl	%eax
	addl $_c1q5c_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 24(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1q5L
Lc1q5d:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1q5L:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1q5c_info
	.long  _c1q57_info - _c1q57_info_dsp
.text
	.align 2
_c1q5c_info_dsp:
.text
	.align 2
	.long	98251
	.long	32
_c1q5c_info:
Lc1q5c:
	call 1f
1:	popl	%eax
	addl $_c1q5h_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 40(%ebp),%esi
#	gstsd %fake0,40(%ebp)
	fstl 40(%ebp)
	testw $7,%si
	jne Lu1q5M
Lc1q5i:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1q5M:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1q5h_info
	.long  _c1q5c_info - _c1q5c_info_dsp
.text
	.align 2
_c1q5h_info_dsp:
.text
	.align 2
	.long	131019
	.long	32
_c1q5h_info:
Lc1q5h:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1q5H
Lc1q5G:
#	gldsd 28(%ebp),%fake0
	fldl 28(%ebp) ; fstp %st(1)
#	gldsd 16(%ebp),%fake1
	fldl 16(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gldsd 40(%ebp),%fake2
	fldl 40(%ebp) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $48,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1q5H:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1q5h_info - _c1q5h_info_dsp
.text
	.align 2
_s1oP1_info_dsp:
.text
	.align 2
	.long	65541
	.long	13
	.long	9
_s1oP1_info:
Lc1q5N:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -56(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1q5O
Lc1q5P:
	addl $_c1q3S_info-(1b)+0,%eax
	movl %eax,-56(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %eax,88(%esp)
	movl 19(%esi),%eax
	movl %edx,100(%esp)
	movl 23(%esi),%edx
	movl %eax,112(%esp)
	movl 27(%esi),%eax
	movl %edx,124(%esp)
	movl 31(%esi),%edx
	movl %eax,136(%esp)
	movl 35(%esi),%eax
	movl %edx,148(%esp)
	movl 39(%esi),%edx
	movl %eax,160(%esp)
	movl 43(%esi),%eax
	movl %edx,172(%esp)
	movl 47(%esi),%edx
	movl %eax,184(%esp)
	movl 51(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-52(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-48(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-44(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-40(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-36(%ebp)
	movl 124(%esp),%ecx
	movl %ecx,-32(%ebp)
	movl 136(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 148(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 160(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 172(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 184(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-56,%ebp
	testw $7,%si
	jne _c1q3S_info
Lc1q3T:
	jmp *(%esi)
Lc1q5O:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oP1_info - _s1oP1_info_dsp
.text
	.align 2
_c1q3S_info_dsp:
.text
	.align 2
	.long	13
	.long	32
_c1q3S_info:
Lc1q3S:
	call 1f
1:	popl	%eax
	addl $64,%edi
	cmpl 856(%ebx),%edi
	ja Lc1q5S
Lc1q5R:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_s1oP0_info-(1b)+0,%eax
	movl %eax,-60(%edi)
	movl 16(%ebp),%eax
	movl %eax,-48(%edi)
	movl 20(%ebp),%eax
	movl %eax,-44(%edi)
	movl 24(%ebp),%eax
	movl %eax,-40(%edi)
	movl 52(%ebp),%eax
	movl %eax,-36(%edi)
	movl %ecx,-32(%edi)
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_s1oOL_info-(1b)+0,%eax
	movl %eax,-28(%edi)
	movl 4(%ebp),%eax
	movl %eax,-16(%edi)
	movl 8(%ebp),%eax
	movl %eax,-12(%edi)
	movl 12(%ebp),%eax
	movl %eax,-8(%edi)
	movl 76(%esp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	movl 36(%ebp),%eax
	movl %eax,40(%ebx)
	leal -28(%edi),%eax
	movl %eax,32(%ebx)
	movl 40(%ebp),%eax
	movl %eax,24(%ebx)
	movl 44(%ebp),%eax
	movl %eax,16(%ebx)
	movl 28(%ebp),%eax
	movl %eax,8(%ebx)
	movl 32(%ebp),%eax
	movl %eax,36(%ebp)
	leal -60(%edi),%eax
	movl %eax,40(%ebp)
	movl 64(%esp),%eax
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,44(%ebp)
	movl 48(%ebp),%eax
	movl %edx,48(%ebp)
	movl %eax,52(%ebp)
	addl $36,%ebp
	jmp _CoreziRenderziInternal_applyTransformzuworld_info
Lc1q5S:
	movl $64,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1q3S_info - _c1q3S_info_dsp
.text
	.align 2
_s1oP2_info_dsp:
.text
	.align 2
	.long	65541
	.long	13
	.long	9
_s1oP2_info:
Lc1q5U:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -56(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1q5V
Lc1q5W:
	addl $_c1q3I_info-(1b)+0,%eax
	movl %eax,-56(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %eax,88(%esp)
	movl 19(%esi),%eax
	movl %edx,100(%esp)
	movl 23(%esi),%edx
	movl %eax,112(%esp)
	movl 27(%esi),%eax
	movl %edx,124(%esp)
	movl 31(%esi),%edx
	movl %eax,136(%esp)
	movl 35(%esi),%eax
	movl %edx,148(%esp)
	movl 39(%esi),%edx
	movl %eax,160(%esp)
	movl 43(%esi),%eax
	movl %edx,172(%esp)
	movl 47(%esi),%edx
	movl %eax,184(%esp)
	movl 51(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-52(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-48(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-44(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-40(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-36(%ebp)
	movl 124(%esp),%ecx
	movl %ecx,-32(%ebp)
	movl 136(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 148(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 160(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 172(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 184(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-56,%ebp
	testw $7,%si
	jne _c1q3I_info
Lc1q3J:
	jmp *(%esi)
Lc1q5V:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oP2_info - _s1oP2_info_dsp
.text
	.align 2
_c1q3I_info_dsp:
.text
	.align 2
	.long	13
	.long	32
_c1q3I_info:
Lc1q3I:
	call 1f
1:	popl	%eax
	addl $56,%edi
	cmpl 856(%ebx),%edi
	ja Lc1q5Z
Lc1q5Y:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_s1oP1_info-(1b)+0,%eax
	movl %eax,-52(%edi)
	movl 4(%ebp),%eax
	movl %eax,-48(%edi)
	movl 8(%ebp),%eax
	movl %eax,-44(%edi)
	movl 12(%ebp),%eax
	movl %eax,-40(%edi)
	movl 16(%ebp),%eax
	movl %eax,-36(%edi)
	movl 20(%ebp),%eax
	movl %eax,-32(%edi)
	movl 24(%ebp),%eax
	movl %eax,-28(%edi)
	movl 28(%ebp),%eax
	movl %eax,-24(%edi)
	movl 36(%ebp),%eax
	movl %eax,-20(%edi)
	movl 40(%ebp),%eax
	movl %eax,-16(%edi)
	movl 44(%ebp),%eax
	movl %eax,-12(%edi)
	movl 48(%ebp),%eax
	movl %eax,-8(%edi)
	movl 52(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -51(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 32(%ebp),%eax
	movl %eax,8(%ebx)
	addl $56,%ebp
	jmp _CoreziEase_valueOf1_info
Lc1q5Z:
	movl $56,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1q3I_info - _c1q3I_info_dsp
.text
	.align 2
_s1oP3_info_dsp:
.text
	.align 2
	.long	131087
	.long	14
	.long	9
_s1oP3_info:
Lc1q61:
	call 1f
1:	popl	%eax
	addl $68,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1q65
Lc1q64:
	movl %eax,64(%esp)
	movl 2(%esi),%eax
	movl %eax,76(%esp)
	movl 6(%esi),%eax
	movl %eax,88(%esp)
	movl 10(%esi),%eax
	movl %eax,100(%esp)
	movl 14(%esi),%eax
	movl %eax,112(%esp)
	movl 18(%esi),%eax
	movl %eax,124(%esp)
	movl 22(%esi),%eax
	movl %eax,136(%esp)
	movl 26(%esi),%eax
	movl %eax,148(%esp)
	movl 30(%esi),%eax
	movl %eax,160(%esp)
	movl 34(%esi),%eax
	movl %eax,172(%esp)
	movl 38(%esi),%eax
	movl %eax,184(%esp)
	movl 42(%esi),%eax
	movl %eax,196(%esp)
	movl 46(%esi),%eax
	movl %eax,208(%esp)
	movl 50(%esi),%eax
	movl %eax,220(%esp)
	movl 54(%esi),%eax
	movl %eax,232(%esp)
	movl 64(%esp),%eax
	addl $_s1oOk_info-(1b)+0,%eax
	movl %eax,-64(%edi)
	movl 184(%esp),%eax
	movl %eax,-60(%edi)
	movl %ecx,-56(%edi)
	movl 64(%esp),%eax
	addl $_s1oP2_info-(1b)+0,%eax
	movl %eax,-52(%edi)
	movl 76(%esp),%eax
	movl %eax,-48(%edi)
	movl 88(%esp),%eax
	movl %eax,-44(%edi)
	movl 100(%esp),%eax
	movl %eax,-40(%edi)
	movl 112(%esp),%eax
	movl %eax,-36(%edi)
	movl 124(%esp),%eax
	movl %eax,-32(%edi)
	movl 136(%esp),%eax
	movl %eax,-28(%edi)
	movl 148(%esp),%eax
	movl %eax,-24(%edi)
	movl 172(%esp),%eax
	movl %eax,-20(%edi)
	movl 196(%esp),%eax
	movl %eax,-16(%edi)
	movl 208(%esp),%eax
	movl %eax,-12(%edi)
	movl 220(%esp),%eax
	movl %eax,-8(%edi)
	movl 232(%esp),%eax
	movl %eax,-4(%edi)
	leal -63(%edi),%eax
	movl %eax,(%edi)
	leal -51(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 160(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziEase_valueOf1_info
Lc1q65:
	movl $68,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oP3_info - _s1oP3_info_dsp
.text
	.align 2
_s1oP7_info_dsp:
.text
	.align 2
	.long	8
	.long	16
_s1oP7_info:
Lc1q6e:
	call 1f
1:	popl	%eax
	leal -40(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1q6f
Lc1q6g:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1q6c_info-(1b)+0,%eax
	movl %eax,-40(%ebp)
	movl 40(%esi),%eax
	movl %eax,16(%ebx)
	movl 36(%esi),%eax
	movl %eax,8(%ebx)
	movl 12(%esi),%eax
	movl %eax,-36(%ebp)
	movl 16(%esi),%eax
	movl %eax,-32(%ebp)
	movl 20(%esi),%eax
	movl %eax,-28(%ebp)
	movl 24(%esi),%eax
	movl %eax,-24(%ebp)
	movl 28(%esi),%eax
	movl %eax,-20(%ebp)
	movl 32(%esi),%eax
	movl %eax,-16(%ebp)
	addl $-40,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
Lc1q6f:
	jmp *-16(%ebx)
	.long  _s1oP7_info - _s1oP7_info_dsp
.text
	.align 2
_c1q6c_info_dsp:
.text
	.align 2
	.long	6
	.long	32
_c1q6c_info:
Lc1q6c:
	movl 16(%ebp),%eax
	movl %eax,40(%ebx)
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $20,%ebp
	jmp _CoreziRenderziInternal_applyTransformzuworld_info
	.long  _c1q6c_info - _c1q6c_info_dsp
.text
	.align 2
_s1oPb_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_s1oPb_info:
Lc1q6S:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1q6T
Lc1q6U:
	addl $_c1q6P_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1q6P_info
Lc1q6Q:
	jmp *(%esi)
Lc1q6T:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oPb_info - _s1oPb_info_dsp
.text
	.align 2
_c1q6P_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1q6P_info:
Lc1q6P:
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 7(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_pp_fast
	.long  _c1q6P_info - _c1q6P_info_dsp
.text
	.align 2
_s1oPk_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oPk_info:
Lc1q8P:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1q8X
Lc1q8Y:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1q8M_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1q8M_info
Lc1q8N:
	jmp *(%esi)
Lc1q8X:
	jmp *-16(%ebx)
	.long  _s1oPk_info - _s1oPk_info_dsp
.text
	.align 2
_c1q8M_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1q8M_info:
Lc1q8M:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1q91
Lc1q90:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gcossd %fake0,%fake0
	pushl %eax;
fld %st(0); fcos
	fnstsw %ax
	test   $0x400,%eax
	je     Ln1qz3
	ffree %st(7); fldpi
	fadd   %st(0),%st
	fxch   %st(1)
Ln1qz4:
	fprem1
	fnstsw %ax
	test   $0x400,%eax
	jne    Ln1qz4
	fstp   %st(1)
	fcos
Ln1qz3:
	popl %eax;
	fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1q91:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1q8M_info - _c1q8M_info_dsp
.text
	.align 2
_s1oPo_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oPo_info:
Lc1q9a:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1q9i
Lc1q9j:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1q97_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1q97_info
Lc1q98:
	jmp *(%esi)
Lc1q9i:
	jmp *-16(%ebx)
	.long  _s1oPo_info - _s1oPo_info_dsp
.text
	.align 2
_c1q97_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1q97_info:
Lc1q97:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1q9m
Lc1q9l:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gsinsd %fake0,%fake0
	pushl %eax;
fld %st(0); fsin
	fnstsw %ax
	test   $0x400,%eax
	je     Ln1qzh
	ffree %st(7); fldpi
	fadd   %st(0),%st
	fxch   %st(1)
Ln1qzi:
	fprem1
	fnstsw %ax
	test   $0x400,%eax
	jne    Ln1qzi
	fstp   %st(1)
	fsin
Ln1qzh:
	popl %eax;
	fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1q9m:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1q97_info - _c1q97_info_dsp
.text
	.align 2
_s1oPs_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oPs_info:
Lc1q9v:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1q9C
Lc1q9D:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1q9s_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1q9s_info
Lc1q9t:
	jmp *(%esi)
Lc1q9C:
	jmp *-16(%ebx)
	.long  _s1oPs_info - _s1oPs_info_dsp
.text
	.align 2
_c1q9s_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1q9s_info:
Lc1q9s:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1q9G
Lc1q9F:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1q9G:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1q9s_info - _c1q9s_info_dsp
.text
	.align 2
_s1oQh_info_dsp:
.text
	.align 2
	.long	4
	.long	16
_s1oQh_info:
Lc1q9P:
	call 1f
1:	popl	%eax
	leal -44(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qah
Lc1qai:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1q9M_info-(1b)+0,%eax
	movl %eax,-28(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 20(%esi),%edx
	movl 24(%esi),%esi
	movl %eax,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl %edx,-16(%ebp)
	addl $-28,%ebp
	testw $7,%si
	jne _c1q9M_info
Lc1q9N:
	jmp *(%esi)
Lc1qah:
	jmp *-16(%ebx)
	.long  _s1oQh_info - _s1oQh_info_dsp
.text
	.align 2
_c1q9M_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1q9M_info:
Lc1q9M:
	call 1f
1:	popl	%eax
	addl $_c1q9S_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1qap
Lc1q9T:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qap:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1q9S_info
	.long  _c1q9M_info - _c1q9M_info_dsp
.text
	.align 2
_c1q9S_info_dsp:
.text
	.align 2
	.long	196
	.long	32
_c1q9S_info:
Lc1q9S:
	call 1f
1:	popl	%eax
	addl $_c1q9X_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 16(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1qar
Lc1q9Y:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qar:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1q9X_info
	.long  _c1q9S_info - _c1q9S_info_dsp
.text
	.align 2
_c1q9X_info_dsp:
.text
	.align 2
	.long	6087
	.long	32
_c1q9X_info:
Lc1q9X:
	call 1f
1:	popl	%eax
	addl $_c1qa2_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 24(%ebp),%esi
#	gstsd %fake0,24(%ebp)
	fstl 24(%ebp)
	testw $7,%si
	jne Lu1qas
Lc1qa3:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qas:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qa2_info
	.long  _c1q9X_info - _c1q9X_info_dsp
.text
	.align 2
_c1qa2_info_dsp:
.text
	.align 2
	.long	8135
	.long	32
_c1qa2_info:
Lc1qa2:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qao
Lc1qan:
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 24(%ebp),%fake1
	fldl 24(%ebp) ; fstp %st(2)
#	gldsd 3(%esi),%fake2
	fldl 3(%esi) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $32,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1qao:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qa2_info - _c1qa2_info_dsp
.text
	.align 2
_s1oQ5_info_dsp:
.text
	.align 2
	.long	4
	.long	16
_s1oQ5_info:
Lc1qaA:
	call 1f
1:	popl	%eax
	leal -44(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qb2
Lc1qb3:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1qax_info-(1b)+0,%eax
	movl %eax,-28(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 24(%esi),%edx
	movl 20(%esi),%esi
	movl %eax,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl %edx,-16(%ebp)
	addl $-28,%ebp
	testw $7,%si
	jne _c1qax_info
Lc1qay:
	jmp *(%esi)
Lc1qb2:
	jmp *-16(%ebx)
	.long  _s1oQ5_info - _s1oQ5_info_dsp
.text
	.align 2
_c1qax_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1qax_info:
Lc1qax:
	call 1f
1:	popl	%eax
	addl $_c1qaD_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1qba
Lc1qaE:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qba:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qaD_info
	.long  _c1qax_info - _c1qax_info_dsp
.text
	.align 2
_c1qaD_info_dsp:
.text
	.align 2
	.long	196
	.long	32
_c1qaD_info:
Lc1qaD:
	call 1f
1:	popl	%eax
	addl $_c1qaI_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 16(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1qbc
Lc1qaJ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qbc:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qaI_info
	.long  _c1qaD_info - _c1qaD_info_dsp
.text
	.align 2
_c1qaI_info_dsp:
.text
	.align 2
	.long	6087
	.long	32
_c1qaI_info:
Lc1qaI:
	call 1f
1:	popl	%eax
	addl $_c1qaN_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 24(%ebp),%esi
#	gstsd %fake0,24(%ebp)
	fstl 24(%ebp)
	testw $7,%si
	jne Lu1qbd
Lc1qaO:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qbd:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qaN_info
	.long  _c1qaI_info - _c1qaI_info_dsp
.text
	.align 2
_c1qaN_info_dsp:
.text
	.align 2
	.long	8135
	.long	32
_c1qaN_info:
Lc1qaN:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qb9
Lc1qb8:
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 24(%ebp),%fake1
	fldl 24(%ebp) ; fstp %st(2)
#	gldsd 3(%esi),%fake2
	fldl 3(%esi) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $32,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1qb9:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qaN_info - _c1qaN_info_dsp
.text
	.align 2
_s1oPT_info_dsp:
.text
	.align 2
	.long	4
	.long	16
_s1oPT_info:
Lc1qbl:
	call 1f
1:	popl	%eax
	leal -44(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qbN
Lc1qbO:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1qbi_info-(1b)+0,%eax
	movl %eax,-28(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 20(%esi),%edx
	movl 24(%esi),%esi
	movl %eax,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl %edx,-16(%ebp)
	addl $-28,%ebp
	testw $7,%si
	jne _c1qbi_info
Lc1qbj:
	jmp *(%esi)
Lc1qbN:
	jmp *-16(%ebx)
	.long  _s1oPT_info - _s1oPT_info_dsp
.text
	.align 2
_c1qbi_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1qbi_info:
Lc1qbi:
	call 1f
1:	popl	%eax
	addl $_c1qbo_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1qbV
Lc1qbp:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qbV:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qbo_info
	.long  _c1qbi_info - _c1qbi_info_dsp
.text
	.align 2
_c1qbo_info_dsp:
.text
	.align 2
	.long	196
	.long	32
_c1qbo_info:
Lc1qbo:
	call 1f
1:	popl	%eax
	addl $_c1qbt_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 16(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1qbX
Lc1qbu:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qbX:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qbt_info
	.long  _c1qbo_info - _c1qbo_info_dsp
.text
	.align 2
_c1qbt_info_dsp:
.text
	.align 2
	.long	6087
	.long	32
_c1qbt_info:
Lc1qbt:
	call 1f
1:	popl	%eax
	addl $_c1qby_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 24(%ebp),%esi
#	gstsd %fake0,24(%ebp)
	fstl 24(%ebp)
	testw $7,%si
	jne Lu1qbY
Lc1qbz:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qbY:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qby_info
	.long  _c1qbt_info - _c1qbt_info_dsp
.text
	.align 2
_c1qby_info_dsp:
.text
	.align 2
	.long	8135
	.long	32
_c1qby_info:
Lc1qby:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qbU
Lc1qbT:
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 24(%ebp),%fake1
	fldl 24(%ebp) ; fstp %st(2)
#	gldsd 3(%esi),%fake2
	fldl 3(%esi) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $32,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1qbU:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qby_info - _c1qby_info_dsp
.text
	.align 2
_s1oPH_info_dsp:
.text
	.align 2
	.long	4
	.long	16
_s1oPH_info:
Lc1qc6:
	call 1f
1:	popl	%eax
	leal -44(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qcy
Lc1qcz:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1qc3_info-(1b)+0,%eax
	movl %eax,-28(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 24(%esi),%edx
	movl 20(%esi),%esi
	movl %eax,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl %edx,-16(%ebp)
	addl $-28,%ebp
	testw $7,%si
	jne _c1qc3_info
Lc1qc4:
	jmp *(%esi)
Lc1qcy:
	jmp *-16(%ebx)
	.long  _s1oPH_info - _s1oPH_info_dsp
.text
	.align 2
_c1qc3_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1qc3_info:
Lc1qc3:
	call 1f
1:	popl	%eax
	addl $_c1qc9_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1qcG
Lc1qca:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qcG:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qc9_info
	.long  _c1qc3_info - _c1qc3_info_dsp
.text
	.align 2
_c1qc9_info_dsp:
.text
	.align 2
	.long	196
	.long	32
_c1qc9_info:
Lc1qc9:
	call 1f
1:	popl	%eax
	addl $_c1qce_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 16(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1qcI
Lc1qcf:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qcI:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qce_info
	.long  _c1qc9_info - _c1qc9_info_dsp
.text
	.align 2
_c1qce_info_dsp:
.text
	.align 2
	.long	6087
	.long	32
_c1qce_info:
Lc1qce:
	call 1f
1:	popl	%eax
	addl $_c1qcj_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 24(%ebp),%esi
#	gstsd %fake0,24(%ebp)
	fstl 24(%ebp)
	testw $7,%si
	jne Lu1qcJ
Lc1qck:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qcJ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qcj_info
	.long  _c1qce_info - _c1qce_info_dsp
.text
	.align 2
_c1qcj_info_dsp:
.text
	.align 2
	.long	8135
	.long	32
_c1qcj_info:
Lc1qcj:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qcF
Lc1qcE:
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 24(%ebp),%fake1
	fldl 24(%ebp) ; fstp %st(2)
#	gldsd 3(%esi),%fake2
	fldl 3(%esi) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $32,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1qcF:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qcj_info - _c1qcj_info_dsp
.text
	.align 2
_s1oQi_info_dsp:
.text
	.align 2
	.long	65541
	.long	8
	.long	9
_s1oQi_info:
Lc1qcK:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -36(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1qcL
Lc1qcM:
	addl $_c1q8D_info-(1b)+0,%eax
	movl %eax,-36(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %eax,88(%esp)
	movl 19(%esi),%eax
	movl %edx,100(%esp)
	movl 23(%esi),%edx
	movl %eax,112(%esp)
	movl 27(%esi),%eax
	movl %edx,124(%esp)
	movl 31(%esi),%edx
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-32(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 124(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-36,%ebp
	testw $7,%si
	jne _c1q8D_info
Lc1q8E:
	jmp *(%esi)
Lc1qcL:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oQi_info - _s1oQi_info_dsp
.text
	.align 2
_c1q8D_info_dsp:
.text
	.align 2
	.long	8
	.long	32
_c1q8D_info:
Lc1q8D:
	call 1f
1:	popl	%eax
	addl $160,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qcP
Lc1qcO:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_s1oPk_info-(1b)+0,%eax
	movl %eax,-156(%edi)
	movl %ecx,-144(%edi)
	movl 64(%esp),%eax
	addl $_s1oPo_info-(1b)+0,%eax
	movl %eax,-140(%edi)
	movl %ecx,-128(%edi)
	movl 64(%esp),%eax
	movl %eax,%ecx
	addl $_s1oPs_info-(1b)+0,%ecx
	movl %ecx,-124(%edi)
	leal -140(%edi),%ecx
	movl %ecx,-112(%edi)
	addl $_s1oQh_info-(1b)+0,%eax
	movl %eax,-108(%edi)
	movl 12(%ebp),%eax
	movl %eax,-96(%edi)
	movl %ecx,76(%esp)
	movl 16(%ebp),%ecx
	movl %ecx,-92(%edi)
	movl %eax,88(%esp)
	leal -156(%edi),%eax
	movl %eax,-88(%edi)
	movl %eax,100(%esp)
	leal -124(%edi),%eax
	movl %eax,-84(%edi)
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1oQ5_info-(1b)+0,%eax
	movl %eax,-80(%edi)
	movl 88(%esp),%eax
	movl %eax,-68(%edi)
	movl %ecx,-64(%edi)
	movl 100(%esp),%eax
	movl %eax,-60(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-56(%edi)
	movl 64(%esp),%eax
	movl %eax,%ecx
	addl $_s1oPT_info-(1b)+0,%ecx
	movl %ecx,-52(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-40(%edi)
	movl 8(%ebp),%eax
	movl %eax,-36(%edi)
	movl %ecx,124(%esp)
	movl 100(%esp),%ecx
	movl %ecx,-32(%edi)
	movl 112(%esp),%ecx
	movl %ecx,-28(%edi)
	movl 64(%esp),%ecx
	addl $_s1oPH_info-(1b)+0,%ecx
	movl %ecx,-24(%edi)
	movl 124(%esp),%ecx
	movl %ecx,-12(%edi)
	movl %eax,-8(%edi)
	movl 100(%esp),%eax
	movl %eax,-4(%edi)
	movl 76(%esp),%eax
	movl %eax,(%edi)
	leal -80(%edi),%eax
	movl %eax,40(%ebx)
	movl 20(%ebp),%eax
	movl %eax,32(%ebx)
	leal -52(%edi),%eax
	movl %eax,24(%ebx)
	leal -24(%edi),%eax
	movl %eax,16(%ebx)
	movl 28(%ebp),%eax
	movl %eax,8(%ebx)
	leal -108(%edi),%eax
	movl %eax,16(%ebp)
	movl 24(%ebp),%eax
	movl %eax,20(%ebp)
	movl 64(%esp),%eax
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,24(%ebp)
	movl %edx,28(%ebp)
	addl $16,%ebp
	jmp _CoreziRenderziInternal_applyTransformzuworld_info
Lc1qcP:
	movl $160,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1q8D_info - _c1q8D_info_dsp
.text
	.align 2
_s1oQj_info_dsp:
.text
	.align 2
	.long	131087
	.long	9
	.long	9
_s1oQj_info:
Lc1qcR:
	call 1f
1:	popl	%eax
	addl $48,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1qcV
Lc1qcU:
	movl %eax,64(%esp)
	movl 2(%esi),%eax
	movl %eax,76(%esp)
	movl 6(%esi),%eax
	movl %eax,88(%esp)
	movl 10(%esi),%eax
	movl %eax,100(%esp)
	movl 14(%esi),%eax
	movl %eax,112(%esp)
	movl 18(%esi),%eax
	movl %eax,124(%esp)
	movl 22(%esi),%eax
	movl %eax,136(%esp)
	movl 26(%esi),%eax
	movl %eax,148(%esp)
	movl 30(%esi),%eax
	movl %eax,160(%esp)
	movl 34(%esi),%eax
	movl %eax,172(%esp)
	movl 64(%esp),%eax
	addl $_s1oPb_info-(1b)+0,%eax
	movl %eax,-44(%edi)
	movl 172(%esp),%eax
	movl %eax,-40(%edi)
	movl %ecx,-36(%edi)
	movl 64(%esp),%eax
	addl $_s1oQi_info-(1b)+0,%eax
	movl %eax,-32(%edi)
	movl 76(%esp),%eax
	movl %eax,-28(%edi)
	movl 88(%esp),%eax
	movl %eax,-24(%edi)
	movl 100(%esp),%eax
	movl %eax,-20(%edi)
	movl 112(%esp),%eax
	movl %eax,-16(%edi)
	movl 124(%esp),%eax
	movl %eax,-12(%edi)
	movl 136(%esp),%eax
	movl %eax,-8(%edi)
	movl 160(%esp),%eax
	movl %eax,-4(%edi)
	leal -43(%edi),%eax
	movl %eax,(%edi)
	leal -31(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 148(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziEase_valueOf1_info
Lc1qcV:
	movl $48,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oQj_info - _s1oQj_info_dsp
.text
	.align 2
_s1oQq_info_dsp:
.text
	.align 2
	.long	8
	.long	16
_s1oQq_info:
Lc1qd9:
	call 1f
1:	popl	%eax
	leal -40(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qda
Lc1qdb:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1qd7_info-(1b)+0,%eax
	movl %eax,-40(%ebp)
	movl 40(%esi),%eax
	movl %eax,16(%ebx)
	movl 36(%esi),%eax
	movl %eax,8(%ebx)
	movl 12(%esi),%eax
	movl %eax,-36(%ebp)
	movl 16(%esi),%eax
	movl %eax,-32(%ebp)
	movl 20(%esi),%eax
	movl %eax,-28(%ebp)
	movl 24(%esi),%eax
	movl %eax,-24(%ebp)
	movl 28(%esi),%eax
	movl %eax,-20(%ebp)
	movl 32(%esi),%eax
	movl %eax,-16(%ebp)
	addl $-40,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
Lc1qda:
	jmp *-16(%ebx)
	.long  _s1oQq_info - _s1oQq_info_dsp
.text
	.align 2
_c1qd7_info_dsp:
.text
	.align 2
	.long	6
	.long	32
_c1qd7_info:
Lc1qd7:
	movl 16(%ebp),%eax
	movl %eax,40(%ebx)
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $20,%ebp
	jmp _CoreziRenderziInternal_applyTransformzuworld_info
	.long  _c1qd7_info - _c1qd7_info_dsp
.text
	.align 2
_s1oQu_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_s1oQu_info:
Lc1qdB:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1qdC
Lc1qdD:
	addl $_c1qdy_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1qdy_info
Lc1qdz:
	jmp *(%esi)
Lc1qdC:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oQu_info - _s1oQu_info_dsp
.text
	.align 2
_c1qdy_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1qdy_info:
Lc1qdy:
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 7(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_pp_fast
	.long  _c1qdy_info - _c1qdy_info_dsp
.text
	.align 2
_s1oQD_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1oQD_info:
Lc1qeF:
	call 1f
1:	popl	%eax
	leal -40(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qf2
Lc1qf3:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1qeC_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 20(%esi),%esi
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1qeC_info
Lc1qeD:
	jmp *(%esi)
Lc1qf2:
	jmp *-16(%ebx)
	.long  _s1oQD_info - _s1oQD_info_dsp
.text
	.align 2
_c1qeC_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1qeC_info:
Lc1qeC:
	call 1f
1:	popl	%eax
	addl $_c1qeI_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1qf9
Lc1qeJ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qf9:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qeI_info
	.long  _c1qeC_info - _c1qeC_info_dsp
.text
	.align 2
_c1qeI_info_dsp:
.text
	.align 2
	.long	195
	.long	32
_c1qeI_info:
Lc1qeI:
	call 1f
1:	popl	%eax
	addl $_c1qeN_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 12(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1qfb
Lc1qeO:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qfb:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qeN_info
	.long  _c1qeI_info - _c1qeI_info_dsp
.text
	.align 2
_c1qeN_info_dsp:
.text
	.align 2
	.long	4038
	.long	32
_c1qeN_info:
Lc1qeN:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qf8
Lc1qf7:
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gldzsd %fake2
	fldz ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $28,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1qf8:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qeN_info - _c1qeN_info_dsp
.text
	.align 2
_s1oQN_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1oQN_info:
Lc1qfj:
	call 1f
1:	popl	%eax
	leal -40(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qfG
Lc1qfH:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1qfg_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 20(%esi),%esi
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1qfg_info
Lc1qfh:
	jmp *(%esi)
Lc1qfG:
	jmp *-16(%ebx)
	.long  _s1oQN_info - _s1oQN_info_dsp
.text
	.align 2
_c1qfg_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1qfg_info:
Lc1qfg:
	call 1f
1:	popl	%eax
	addl $_c1qfm_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1qfN
Lc1qfn:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qfN:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qfm_info
	.long  _c1qfg_info - _c1qfg_info_dsp
.text
	.align 2
_c1qfm_info_dsp:
.text
	.align 2
	.long	195
	.long	32
_c1qfm_info:
Lc1qfm:
	call 1f
1:	popl	%eax
	addl $_c1qfr_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 12(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1qfP
Lc1qfs:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qfP:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qfr_info
	.long  _c1qfm_info - _c1qfm_info_dsp
.text
	.align 2
_c1qfr_info_dsp:
.text
	.align 2
	.long	4038
	.long	32
_c1qfr_info:
Lc1qfr:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qfM
Lc1qfL:
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gldzsd %fake2
	fldz ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $28,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1qfM:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qfr_info - _c1qfr_info_dsp
.text
	.align 2
_s1oRk_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1oRk_info:
Lc1qgJ:
	call 1f
1:	popl	%eax
	leal -36(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qh6
Lc1qh7:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1qgG_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 12(%esi),%esi
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1qgG_info
Lc1qgH:
	jmp *(%esi)
Lc1qh6:
	jmp *-16(%ebx)
	.long  _s1oRk_info - _s1oRk_info_dsp
.text
	.align 2
_c1qgG_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1qgG_info:
Lc1qgG:
	call 1f
1:	popl	%eax
	addl $_c1qgM_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 8(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1qhd
Lc1qgN:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qhd:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qgM_info
	.long  _c1qgG_info - _c1qgG_info_dsp
.text
	.align 2
_c1qgM_info_dsp:
.text
	.align 2
	.long	1477
	.long	32
_c1qgM_info:
Lc1qgM:
	call 1f
1:	popl	%eax
	addl $_c1qgR_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 16(%ebp),%esi
#	gstsd %fake0,16(%ebp)
	fstl 16(%ebp)
	testw $7,%si
	jne Lu1qhf
Lc1qgS:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qhf:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qgR_info
	.long  _c1qgM_info - _c1qgM_info_dsp
.text
	.align 2
_c1qgR_info_dsp:
.text
	.align 2
	.long	1989
	.long	32
_c1qgR_info:
Lc1qgR:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qhc
Lc1qhb:
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 16(%ebp),%fake1
	fldl 16(%ebp) ; fstp %st(2)
#	gldsd 3(%esi),%fake2
	fldl 3(%esi) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $24,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1qhc:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qgR_info - _c1qgR_info_dsp
.text
	.align 2
_s1oRa_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1oRa_info:
Lc1qhn:
	call 1f
1:	popl	%eax
	leal -36(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qhK
Lc1qhL:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1qhk_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 12(%esi),%esi
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1qhk_info
Lc1qhl:
	jmp *(%esi)
Lc1qhK:
	jmp *-16(%ebx)
	.long  _s1oRa_info - _s1oRa_info_dsp
.text
	.align 2
_c1qhk_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1qhk_info:
Lc1qhk:
	call 1f
1:	popl	%eax
	addl $_c1qhq_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 8(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1qhR
Lc1qhr:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qhR:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qhq_info
	.long  _c1qhk_info - _c1qhk_info_dsp
.text
	.align 2
_c1qhq_info_dsp:
.text
	.align 2
	.long	1477
	.long	32
_c1qhq_info:
Lc1qhq:
	call 1f
1:	popl	%eax
	addl $_c1qhv_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 16(%ebp),%esi
#	gstsd %fake0,16(%ebp)
	fstl 16(%ebp)
	testw $7,%si
	jne Lu1qhT
Lc1qhw:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1qhT:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qhv_info
	.long  _c1qhq_info - _c1qhq_info_dsp
.text
	.align 2
_c1qhv_info_dsp:
.text
	.align 2
	.long	1989
	.long	32
_c1qhv_info:
Lc1qhv:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qhQ
Lc1qhP:
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 16(%ebp),%fake1
	fldl 16(%ebp) ; fstp %st(2)
#	gldsd 3(%esi),%fake2
	fldl 3(%esi) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $24,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1qhQ:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qhv_info - _c1qhv_info_dsp
.text
	.align 2
_s1oRl_info_dsp:
.text
	.align 2
	.long	65541
	.long	10
	.long	9
_s1oRl_info:
Lc1qhU:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -44(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1qhV
Lc1qhW:
	addl $_c1qgx_info-(1b)+0,%eax
	movl %eax,-44(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %eax,88(%esp)
	movl 19(%esi),%eax
	movl %edx,100(%esp)
	movl 23(%esi),%edx
	movl %eax,112(%esp)
	movl 27(%esi),%eax
	movl %edx,124(%esp)
	movl 31(%esi),%edx
	movl %eax,136(%esp)
	movl 35(%esi),%eax
	movl %edx,148(%esp)
	movl 39(%esi),%edx
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-40(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-36(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-32(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 124(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 136(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 148(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-44,%ebp
	testw $7,%si
	jne _c1qgx_info
Lc1qgy:
	jmp *(%esi)
Lc1qhV:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oRl_info - _s1oRl_info_dsp
.text
	.align 2
_c1qgx_info_dsp:
.text
	.align 2
	.long	10
	.long	32
_c1qgx_info:
Lc1qgx:
	call 1f
1:	popl	%eax
	addl $48,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qhZ
Lc1qhY:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_s1oRk_info-(1b)+0,%eax
	movl %eax,-44(%edi)
	movl 12(%ebp),%eax
	movl %eax,-32(%edi)
	movl 16(%ebp),%eax
	movl %eax,-28(%edi)
	movl %ecx,-24(%edi)
	movl 64(%esp),%eax
	addl $_s1oRa_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 4(%ebp),%eax
	movl %eax,-8(%edi)
	movl 8(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	movl 36(%ebp),%eax
	movl %eax,40(%ebx)
	movl 20(%ebp),%eax
	movl %eax,32(%ebx)
	leal -20(%edi),%eax
	movl %eax,24(%ebx)
	movl 40(%ebp),%eax
	movl %eax,16(%ebx)
	movl 28(%ebp),%eax
	movl %eax,8(%ebx)
	movl 24(%ebp),%eax
	leal -44(%edi),%ecx
	movl %ecx,24(%ebp)
	movl %eax,28(%ebp)
	movl 32(%ebp),%eax
	movl 64(%esp),%ecx
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,32(%ebp)
	movl %edx,36(%ebp)
	movl %eax,40(%ebp)
	addl $24,%ebp
	jmp _CoreziRenderziInternal_applyTransformzuworld_info
Lc1qhZ:
	movl $48,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qgx_info - _c1qgx_info_dsp
.text
	.align 2
_s1oRm_info_dsp:
.text
	.align 2
	.long	65541
	.long	9
	.long	9
_s1oRm_info:
Lc1qi1:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -40(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1qi2
Lc1qi3:
	addl $_c1qet_info-(1b)+0,%eax
	movl %eax,-40(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %eax,88(%esp)
	movl 19(%esi),%eax
	movl %edx,100(%esp)
	movl 23(%esi),%edx
	movl %eax,112(%esp)
	movl 27(%esi),%eax
	movl %edx,124(%esp)
	movl 31(%esi),%edx
	movl %eax,136(%esp)
	movl 35(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-36(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-32(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 124(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 136(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-40,%ebp
	testw $7,%si
	jne _c1qet_info
Lc1qeu:
	jmp *(%esi)
Lc1qi2:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oRm_info - _s1oRm_info_dsp
.text
	.align 2
_c1qet_info_dsp:
.text
	.align 2
	.long	9
	.long	32
_c1qet_info:
Lc1qet:
	call 1f
1:	popl	%eax
	addl $92,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qi6
Lc1qi5:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_s1oQD_info-(1b)+0,%eax
	movl %eax,-88(%edi)
	movl 12(%ebp),%eax
	movl %eax,-76(%edi)
	movl %eax,76(%esp)
	movl 16(%ebp),%eax
	movl %eax,-72(%edi)
	movl %ecx,-68(%edi)
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_s1oQN_info-(1b)+0,%eax
	movl %eax,-64(%edi)
	movl 4(%ebp),%eax
	movl %eax,-52(%edi)
	movl %eax,100(%esp)
	movl 8(%ebp),%eax
	movl %eax,-48(%edi)
	movl %ecx,-44(%edi)
	movl 64(%esp),%ecx
	addl $_s1oRl_info-(1b)+0,%ecx
	movl %ecx,-40(%edi)
	movl 100(%esp),%ecx
	movl %ecx,-36(%edi)
	movl %eax,-32(%edi)
	movl 76(%esp),%eax
	movl %eax,-28(%edi)
	movl 88(%esp),%eax
	movl %eax,-24(%edi)
	movl 20(%ebp),%eax
	movl %eax,-20(%edi)
	movl 24(%ebp),%eax
	movl %eax,-16(%edi)
	movl 28(%ebp),%eax
	movl %eax,-12(%edi)
	movl 36(%ebp),%eax
	movl %eax,-8(%edi)
	leal -88(%edi),%eax
	movl %eax,-4(%edi)
	leal -64(%edi),%eax
	movl %eax,(%edi)
	leal -39(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 32(%ebp),%eax
	movl %eax,8(%ebx)
	addl $40,%ebp
	jmp _CoreziEase_valueOf1_info
Lc1qi6:
	movl $92,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qet_info - _c1qet_info_dsp
.text
	.align 2
_s1oRn_info_dsp:
.text
	.align 2
	.long	131087
	.long	10
	.long	9
_s1oRn_info:
Lc1qi8:
	call 1f
1:	popl	%eax
	addl $52,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1qic
Lc1qib:
	movl %eax,64(%esp)
	movl 2(%esi),%eax
	movl %eax,76(%esp)
	movl 6(%esi),%eax
	movl %eax,88(%esp)
	movl 10(%esi),%eax
	movl %eax,100(%esp)
	movl 14(%esi),%eax
	movl %eax,112(%esp)
	movl 18(%esi),%eax
	movl %eax,124(%esp)
	movl 22(%esi),%eax
	movl %eax,136(%esp)
	movl 26(%esi),%eax
	movl %eax,148(%esp)
	movl 30(%esi),%eax
	movl %eax,160(%esp)
	movl 34(%esi),%eax
	movl %eax,172(%esp)
	movl 38(%esi),%eax
	movl %eax,184(%esp)
	movl 64(%esp),%eax
	addl $_s1oQu_info-(1b)+0,%eax
	movl %eax,-48(%edi)
	movl 184(%esp),%eax
	movl %eax,-44(%edi)
	movl %ecx,-40(%edi)
	movl 64(%esp),%eax
	addl $_s1oRm_info-(1b)+0,%eax
	movl %eax,-36(%edi)
	movl 76(%esp),%eax
	movl %eax,-32(%edi)
	movl 88(%esp),%eax
	movl %eax,-28(%edi)
	movl 100(%esp),%eax
	movl %eax,-24(%edi)
	movl 112(%esp),%eax
	movl %eax,-20(%edi)
	movl 124(%esp),%eax
	movl %eax,-16(%edi)
	movl 136(%esp),%eax
	movl %eax,-12(%edi)
	movl 148(%esp),%eax
	movl %eax,-8(%edi)
	movl 172(%esp),%eax
	movl %eax,-4(%edi)
	leal -47(%edi),%eax
	movl %eax,(%edi)
	leal -35(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 160(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziEase_valueOf1_info
Lc1qic:
	movl $52,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oRn_info - _s1oRn_info_dsp
.text
	.align 2
_s1oRr_info_dsp:
.text
	.align 2
	.long	7
	.long	16
_s1oRr_info:
Lc1qij:
	call 1f
1:	popl	%eax
	leal -20(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qik
Lc1qil:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 24(%esi),%eax
	movl %eax,40(%ebx)
	movl 20(%esi),%eax
	movl %eax,32(%ebx)
	movl 16(%esi),%eax
	movl %eax,24(%ebx)
	movl 12(%esi),%eax
	movl %eax,16(%ebx)
	movl 36(%esi),%eax
	movl %eax,8(%ebx)
	movl 28(%esi),%eax
	movl %eax,-20(%ebp)
	movl 32(%esi),%eax
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	jmp _CoreziRenderziInternal_applyTransformzuworld_info
Lc1qik:
	jmp *-16(%ebx)
	.long  _s1oRr_info - _s1oRr_info_dsp
.text
	.align 2
_s1oRs_info_dsp:
.text
	.align 2
	.long	8
	.long	16
_s1oRs_info:
Lc1qis:
	call 1f
1:	popl	%eax
	leal -40(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qit
Lc1qiu:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1qiq_info-(1b)+0,%eax
	movl %eax,-40(%ebp)
	movl 40(%esi),%eax
	movl %eax,16(%ebx)
	movl 36(%esi),%eax
	movl %eax,8(%ebx)
	movl 12(%esi),%eax
	movl %eax,-36(%ebp)
	movl 16(%esi),%eax
	movl %eax,-32(%ebp)
	movl 20(%esi),%eax
	movl %eax,-28(%ebp)
	movl 24(%esi),%eax
	movl %eax,-24(%ebp)
	movl 28(%esi),%eax
	movl %eax,-20(%ebp)
	movl 32(%esi),%eax
	movl %eax,-16(%ebp)
	addl $-40,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
Lc1qit:
	jmp *-16(%ebx)
	.long  _s1oRs_info - _s1oRs_info_dsp
.text
	.align 2
_c1qiq_info_dsp:
.text
	.align 2
	.long	6
	.long	32
_c1qiq_info:
Lc1qiq:
	movl 16(%ebp),%eax
	movl %eax,40(%ebx)
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $20,%ebp
	jmp _CoreziRenderziInternal_applyTransformzuworld_info
	.long  _c1qiq_info - _c1qiq_info_dsp
.text
	.align 2
_s1oRB_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_s1oRB_info:
Lc1qiY:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1qiZ
Lc1qj0:
	addl $_c1qiV_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1qiV_info
Lc1qiW:
	jmp *(%esi)
Lc1qiZ:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oRB_info - _s1oRB_info_dsp
.text
	.align 2
_c1qiV_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1qiV_info:
Lc1qiV:
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 7(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_pp_fast
	.long  _c1qiV_info - _c1qiV_info_dsp
.text
	.align 2
_s1oRC_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_s1oRC_info:
Lc1qj5:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1qj9
Lc1qj8:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_s1oRB_info-(1b)+0,%edx
	movl %edx,-8(%edi)
	movl 76(%esp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
Lc1qj9:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oRC_info - _s1oRC_info_dsp
.text
	.align 2
_s1oRD_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_s1oRD_info:
Lc1qja:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1qje
Lc1qjd:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-28(%edi)
	movl 76(%esp),%edx
	movl %edx,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%ecx
	addl $_s1oRC_info-(1b)+0,%ecx
	movl %ecx,-8(%edi)
	movl %eax,-4(%edi)
	leal -28(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
Lc1qje:
	movl $32,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oRD_info - _s1oRD_info_dsp
.text
	.align 2
_CoreziRenderziInternal_applyTransformzuworld_info_dsp:
.text
	.align 2
	.long	_CoreziRenderziInternal_applyTransformzuworld_slow-(_CoreziRenderziInternal_applyTransformzuworld_info)+0
	.long	7
	.long	0
	.long	458752
	.long	0
	.long	15
.globl _CoreziRenderziInternal_applyTransformzuworld_info
_CoreziRenderziInternal_applyTransformzuworld_info:
Lc1qjm:
	movl 40(%ebx),%eax
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %edx,64(%esp)
	movl 16(%ebx),%edx
	movl %edx,76(%esp)
	movl 8(%ebx),%edx
	movl %edx,88(%esp)
	leal -40(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lu1qkd
Lu1qkc:
	movl 88(%esp),%edx
	movl %edx,-20(%ebp)
	movl 76(%esp),%edx
	movl %edx,-16(%ebp)
	movl 64(%esp),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-20,%ebp
	jmp _c1pLJ_entry
Lu1qkd:
	movl 88(%esp),%edx
	movl %edx,-20(%ebp)
	movl 76(%esp),%edx
	movl %edx,-16(%ebp)
	movl 64(%esp),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-20,%ebp
	jmp _c1qjn_entry
	.long  _CoreziRenderziInternal_applyTransformzuworld_info - _CoreziRenderziInternal_applyTransformzuworld_info_dsp
.text
	.align 2
_c1pLJ_entry:
Lc1pLJ:
	call 1f
1:	popl	%eax
	addl $48,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qjq
Lc1qjp:
	movl %eax,%ecx
	addl $_s1oKw_info-(1b)+0,%ecx
	movl %ecx,-44(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-32(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-28(%edi)
	movl 12(%ebp),%ecx
	movl %ecx,-24(%edi)
	movl %eax,%ecx
	addl $_s1oKH_info-(1b)+0,%ecx
	movl %ecx,-20(%edi)
	movl 16(%ebp),%ecx
	movl %ecx,-8(%edi)
	movl 20(%ebp),%ecx
	movl %ecx,-4(%edi)
	movl 24(%ebp),%ecx
	movl %ecx,(%edi)
	addl $_c1pNh_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl (%ebp),%esi
	leal -20(%edi),%eax
	movl %eax,-4(%ebp)
	leal -44(%edi),%eax
	movl %eax,(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1pNh_info
Lc1pNi:
	jmp *(%esi)
Lc1qjq:
	movl $48,904(%ebx)
	jmp _c1qjn_entry
.text
	.align 2
_c1qjn_entry:
Lc1qjn:
	call 1f
1:	popl	%eax
	movl L_CoreziRenderziInternal_applyTransformzuworld_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
.text
	.align 2
_c1pNh_info_dsp:
.text
	.align 2
	.long	8
	.long	32
_c1pNh_info:
Lc1pNh:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1qjk
Lc1qjl:
	movl 3(%esi),%ecx
	movl %ecx,8(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadWorldzuzdszdfApplicativeStateTzuzdcpure_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 3(%eax),%esi
	addl $36,%ebp
	jmp _stg_ap_p_fast
Lc1qjk:
	addl $_c1pNn_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 6(%esi),%eax
	movl 2(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1pNn_info
Lc1pNo:
	jmp *(%esi)
	.long  _c1pNh_info - _c1pNh_info_dsp
.text
	.align 2
_c1pNn_info_dsp:
.text
	.align 2
	.long	9
	.long	32
_c1pNn_info:
Lc1pNn:
	call 1f
1:	popl	%eax
	movl 16(%ebp),%ecx
	movl 20(%ebp),%edx
	movl %eax,64(%esp)
	movl 24(%ebp),%eax
	movl %ecx,76(%esp)
	movl 28(%ebp),%ecx
	movl %edx,88(%esp)
	movl 32(%ebp),%edx
	movl %eax,100(%esp)
	movl 36(%ebp),%eax
	movl %ecx,112(%esp)
	movl 4(%ebp),%ecx
	movl %edx,124(%esp)
	movl -1(%esi),%edx
	movzwl -2(%edx),%edx
	movl %edx,136(%esp)
	movl 64(%esp),%edx
	addl $Ln1qGT-(1b)+0,%edx
	movl %eax,148(%esp)
	movl 136(%esp),%eax
	addl (%edx,%eax,4),%edx
	jmp *%edx
Lc1qjU:
	movl 64(%esp),%eax
	addl $_c1pZZ_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 7(%esi),%eax
	movl 11(%esi),%ecx
	movl 3(%esi),%esi
	movl %ecx,8(%ebp)
	movl %eax,12(%ebp)
	testw $7,%si
	jne _c1pZZ_info
Lc1q00:
	jmp *(%esi)
Lc1qk3:
	movl 64(%esp),%eax
	addl $_c1qcY_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 7(%esi),%eax
	movl 11(%esi),%ecx
	movl 3(%esi),%esi
	movl %ecx,-4(%ebp)
	movl %eax,(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1qcY_info
Lc1qcZ:
	jmp *(%esi)
Lc1qjy:
	movl 64(%esp),%eax
	addl $_c1qjv_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 7(%esi),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
Lc1qjD:
	addl $36,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qjG
Lc1qjF:
	movl 3(%esi),%eax
	movl 64(%esp),%edx
	addl $_s1oLa_info-(1b)+0,%edx
	movl %edx,-32(%edi)
	movl 76(%esp),%edx
	movl %edx,-28(%edi)
	movl 88(%esp),%edx
	movl %edx,-24(%edi)
	movl 100(%esp),%edx
	movl %edx,-20(%edi)
	movl 112(%esp),%edx
	movl %edx,-16(%edi)
	movl 124(%esp),%edx
	movl %edx,-12(%edi)
	movl 148(%esp),%edx
	movl %edx,-8(%edi)
	movl %ecx,-4(%edi)
	movl %eax,(%edi)
	leal -30(%edi),%esi
	addl $40,%ebp
	jmp *(%ebp)
Lc1qjG:
	movl $36,904(%ebx)
	movl 64(%esp),%eax
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1qjH:
	addl $96,%edi
	movl %esi,%eax
	cmpl 856(%ebx),%edi
	ja Lc1qka
Lc1qjJ:
	movl 3(%eax),%edx
	movl 7(%eax),%eax
	movl %ecx,160(%esp)
	movl 64(%esp),%ecx
	movl L_stg_ap_7_upd_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-92(%edi)
	movl %edx,-80(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-76(%edi)
	movl 88(%esp),%edx
	movl %edx,-72(%edi)
	movl 100(%esp),%ecx
	movl %ecx,-68(%edi)
	movl 112(%esp),%edx
	movl %edx,-64(%edi)
	movl 124(%esp),%ecx
	movl %ecx,-60(%edi)
	movl 148(%esp),%edx
	movl %edx,-56(%edi)
	movl 64(%esp),%ecx
	addl $_s1oLe_info-(1b)+0,%ecx
	movl %ecx,-52(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-40(%edi)
	movl 88(%esp),%ecx
	movl %ecx,-36(%edi)
	movl 100(%esp),%ecx
	movl %ecx,-32(%edi)
	movl 112(%esp),%ecx
	movl %ecx,-28(%edi)
	movl 124(%esp),%ecx
	movl %ecx,-24(%edi)
	movl %edx,-20(%edi)
	movl 160(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %eax,-12(%edi)
	movl 64(%esp),%eax
	addl $_s1oLp_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	leal -92(%edi),%eax
	movl %eax,-4(%edi)
	leal -52(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	addl $40,%ebp
	jmp *(%ebp)
Lc1qjL:
	addl $96,%edi
	movl %esi,%eax
	cmpl 856(%ebx),%edi
	ja Lc1qka
Lc1qjN:
	movl 7(%eax),%edx
	movl 11(%eax),%eax
	movl %ecx,160(%esp)
	movl 64(%esp),%ecx
	addl $_s1oLt_info-(1b)+0,%ecx
	movl %ecx,-92(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-80(%edi)
	movl 88(%esp),%ecx
	movl %ecx,-76(%edi)
	movl 100(%esp),%ecx
	movl %ecx,-72(%edi)
	movl 112(%esp),%ecx
	movl %ecx,-68(%edi)
	movl 124(%esp),%ecx
	movl %ecx,-64(%edi)
	movl 148(%esp),%ecx
	movl %ecx,-60(%edi)
	movl %edx,-56(%edi)
	movl 64(%esp),%edx
	addl $_s1oLu_info-(1b)+0,%edx
	movl %edx,-52(%edi)
	movl 76(%esp),%edx
	movl %edx,-40(%edi)
	movl 88(%esp),%edx
	movl %edx,-36(%edi)
	movl 100(%esp),%edx
	movl %edx,-32(%edi)
	movl 112(%esp),%edx
	movl %edx,-28(%edi)
	movl 124(%esp),%edx
	movl %edx,-24(%edi)
	movl %ecx,-20(%edi)
	movl 160(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %eax,-12(%edi)
	movl 64(%esp),%eax
	addl $_s1oLF_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	leal -92(%edi),%eax
	movl %eax,-4(%edi)
	leal -52(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	addl $40,%ebp
	jmp *(%ebp)
Lc1qjP:
	addl $104,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qjS
Lc1qjR:
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,160(%esp)
	movl 11(%esi),%ecx
	movl %eax,172(%esp)
	movl 15(%esi),%eax
	movl %edx,184(%esp)
	movl 19(%esi),%edx
	movl %ecx,196(%esp)
	movl 23(%esi),%ecx
	movl %eax,208(%esp)
	movl 27(%esi),%eax
	movl %edx,220(%esp)
	movl 31(%esi),%edx
	movl %ecx,232(%esp)
	movl 64(%esp),%ecx
	addl $_s1oLO_info-(1b)+0,%ecx
	movl %ecx,-100(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-88(%edi)
	movl 88(%esp),%ecx
	movl %ecx,-84(%edi)
	movl 100(%esp),%ecx
	movl %ecx,-80(%edi)
	movl 112(%esp),%ecx
	movl %ecx,-76(%edi)
	movl 124(%esp),%ecx
	movl %ecx,-72(%edi)
	movl 148(%esp),%ecx
	movl %ecx,-68(%edi)
	movl 160(%esp),%ecx
	movl %ecx,-64(%edi)
	movl %edx,-60(%edi)
	movl 64(%esp),%ecx
	addl $_s1oNH_info-(1b)+0,%ecx
	movl %ecx,-56(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-52(%edi)
	movl 88(%esp),%ecx
	movl %ecx,-48(%edi)
	movl 100(%esp),%ecx
	movl %ecx,-44(%edi)
	movl 112(%esp),%ecx
	movl %ecx,-40(%edi)
	movl 124(%esp),%ecx
	movl %ecx,-36(%edi)
	movl 148(%esp),%ecx
	movl %ecx,-32(%edi)
	movl 172(%esp),%ecx
	movl %ecx,-28(%edi)
	movl 184(%esp),%ecx
	movl %ecx,-24(%edi)
	movl 196(%esp),%ecx
	movl %ecx,-20(%edi)
	movl 208(%esp),%ecx
	movl %ecx,-16(%edi)
	movl 220(%esp),%ecx
	movl %ecx,-12(%edi)
	movl 232(%esp),%ecx
	movl %ecx,-8(%edi)
	movl %eax,-4(%edi)
	leal -100(%edi),%eax
	movl %eax,(%edi)
	leal -54(%edi),%esi
	addl $40,%ebp
	jmp *(%ebp)
Lc1qjS:
	movl $104,904(%ebx)
	movl 64(%esp),%eax
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1qjY:
	addl $84,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qk1
Lc1qk0:
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,160(%esp)
	movl 11(%esi),%ecx
	movl %eax,244(%esp)
	movl 64(%esp),%eax
	addl $_s1oP7_info-(1b)+0,%eax
	movl %eax,-80(%edi)
	movl 76(%esp),%eax
	movl %eax,-68(%edi)
	movl 88(%esp),%eax
	movl %eax,-64(%edi)
	movl 100(%esp),%eax
	movl %eax,-60(%edi)
	movl 112(%esp),%eax
	movl %eax,-56(%edi)
	movl 124(%esp),%eax
	movl %eax,-52(%edi)
	movl 148(%esp),%eax
	movl %eax,-48(%edi)
	movl 160(%esp),%eax
	movl %eax,-44(%edi)
	movl %ecx,-40(%edi)
	movl 64(%esp),%eax
	addl $_s1oQj_info-(1b)+0,%eax
	movl %eax,-36(%edi)
	movl 76(%esp),%eax
	movl %eax,-32(%edi)
	movl 88(%esp),%eax
	movl %eax,-28(%edi)
	movl 112(%esp),%eax
	movl %eax,-24(%edi)
	movl 124(%esp),%eax
	movl %eax,-20(%edi)
	movl 12(%ebp),%eax
	movl %eax,-16(%edi)
	movl 8(%ebp),%eax
	movl %eax,-12(%edi)
	movl 244(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -80(%edi),%eax
	movl %eax,(%edi)
	leal -34(%edi),%esi
	addl $40,%ebp
	jmp *(%ebp)
Lc1qk1:
	movl $84,904(%ebx)
	movl 64(%esp),%eax
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1qk7:
	addl $96,%edi
	movl %esi,%eax
	cmpl 856(%ebx),%edi
	ja Lc1qka
Lc1qk9:
	movl 7(%eax),%edx
	movl 11(%eax),%eax
	movl %ecx,160(%esp)
	movl 64(%esp),%ecx
	addl $_s1oRr_info-(1b)+0,%ecx
	movl %ecx,-92(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-80(%edi)
	movl 88(%esp),%ecx
	movl %ecx,-76(%edi)
	movl 100(%esp),%ecx
	movl %ecx,-72(%edi)
	movl 112(%esp),%ecx
	movl %ecx,-68(%edi)
	movl 124(%esp),%ecx
	movl %ecx,-64(%edi)
	movl 148(%esp),%ecx
	movl %ecx,-60(%edi)
	movl %edx,-56(%edi)
	movl 64(%esp),%edx
	addl $_s1oRs_info-(1b)+0,%edx
	movl %edx,-52(%edi)
	movl 76(%esp),%edx
	movl %edx,-40(%edi)
	movl 88(%esp),%edx
	movl %edx,-36(%edi)
	movl 100(%esp),%edx
	movl %edx,-32(%edi)
	movl 112(%esp),%edx
	movl %edx,-28(%edi)
	movl 124(%esp),%edx
	movl %edx,-24(%edi)
	movl %ecx,-20(%edi)
	movl 160(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %eax,-12(%edi)
	movl 64(%esp),%eax
	addl $_s1oRD_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	leal -92(%edi),%eax
	movl %eax,-4(%edi)
	leal -52(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	addl $40,%ebp
	jmp *(%ebp)
Lc1qka:
	movl $96,904(%ebx)
	movl %eax,%esi
	movl 64(%esp),%eax
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pNn_info - _c1pNn_info_dsp
.const
	.align 2
.align 0
Ln1qGT:
	.long	Lc1qjy-(Ln1qGT)+0
	.long	Lc1qjD-(Ln1qGT)+0
	.long	Lc1qjH-(Ln1qGT)+0
	.long	Lc1qjL-(Ln1qGT)+0
	.long	Lc1qjP-(Ln1qGT)+0
	.long	Lc1qjU-(Ln1qGT)+0
	.long	Lc1qjY-(Ln1qGT)+0
	.long	Lc1qk3-(Ln1qGT)+0
	.long	Lc1qk7-(Ln1qGT)+0
.text
	.align 2
_c1qcY_info_dsp:
.text
	.align 2
	.long	11
	.long	32
_c1qcY_info:
Lc1qcY:
	call 1f
1:	popl	%eax
	addl $88,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qk6
Lc1qk5:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_s1oQq_info-(1b)+0,%eax
	movl %eax,-84(%edi)
	movl 24(%ebp),%eax
	movl %eax,-72(%edi)
	movl %eax,76(%esp)
	movl 28(%ebp),%eax
	movl %eax,-68(%edi)
	movl %eax,88(%esp)
	movl 32(%ebp),%eax
	movl %eax,-64(%edi)
	movl 36(%ebp),%eax
	movl %eax,-60(%edi)
	movl %eax,100(%esp)
	movl 40(%ebp),%eax
	movl %eax,-56(%edi)
	movl %eax,112(%esp)
	movl 44(%ebp),%eax
	movl %eax,-52(%edi)
	movl 12(%ebp),%eax
	movl %eax,-48(%edi)
	movl 4(%ebp),%eax
	movl %eax,-44(%edi)
	movl 64(%esp),%eax
	addl $_s1oRn_info-(1b)+0,%eax
	movl %eax,-40(%edi)
	movl 76(%esp),%eax
	movl %eax,-36(%edi)
	movl 88(%esp),%eax
	movl %eax,-32(%edi)
	movl 100(%esp),%eax
	movl %eax,-28(%edi)
	movl 112(%esp),%eax
	movl %eax,-24(%edi)
	movl 20(%ebp),%eax
	movl %eax,-20(%edi)
	movl 16(%ebp),%eax
	movl %eax,-16(%edi)
	movl 8(%ebp),%eax
	movl %eax,-12(%edi)
	movl %ecx,-8(%edi)
	movl %edx,-4(%edi)
	leal -84(%edi),%eax
	movl %eax,(%edi)
	leal -38(%edi),%esi
	addl $48,%ebp
	jmp *(%ebp)
Lc1qk6:
	movl $88,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qcY_info - _c1qcY_info_dsp
.text
	.align 2
_c1pZZ_info_dsp:
.text
	.align 2
	.long	9
	.long	32
_c1pZZ_info:
Lc1pZZ:
	call 1f
1:	popl	%eax
	addl $184,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qjX
Lc1qjW:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_s1oNO_info-(1b)+0,%eax
	movl %eax,-180(%edi)
	movl 16(%ebp),%eax
	movl %eax,-168(%edi)
	movl %eax,76(%esp)
	movl 20(%ebp),%eax
	movl %eax,-164(%edi)
	movl %eax,88(%esp)
	movl 24(%ebp),%eax
	movl %eax,-160(%edi)
	movl %eax,100(%esp)
	movl 28(%ebp),%eax
	movl %eax,-156(%edi)
	movl %eax,112(%esp)
	movl 32(%ebp),%eax
	movl %eax,-152(%edi)
	movl %eax,124(%esp)
	movl 36(%ebp),%eax
	movl %eax,-148(%edi)
	movl %eax,136(%esp)
	movl 4(%ebp),%eax
	movl %eax,-144(%edi)
	movl 8(%ebp),%eax
	movl %eax,-140(%edi)
	movl 64(%esp),%eax
	addl $_s1oNQ_info-(1b)+0,%eax
	movl %eax,-136(%edi)
	movl 112(%esp),%eax
	movl %eax,-124(%edi)
	movl 124(%esp),%eax
	movl %eax,-120(%edi)
	movl 64(%esp),%eax
	addl $_s1oNX_info-(1b)+0,%eax
	movl %eax,-116(%edi)
	movl 112(%esp),%eax
	movl %eax,-104(%edi)
	movl 124(%esp),%eax
	movl %eax,-100(%edi)
	movl 64(%esp),%eax
	addl $_s1oO4_info-(1b)+0,%eax
	movl %eax,-96(%edi)
	movl 76(%esp),%eax
	movl %eax,-84(%edi)
	movl 88(%esp),%eax
	movl %eax,-80(%edi)
	movl 64(%esp),%eax
	addl $_s1oOb_info-(1b)+0,%eax
	movl %eax,-76(%edi)
	movl 76(%esp),%eax
	movl %eax,-64(%edi)
	movl 88(%esp),%eax
	movl %eax,-60(%edi)
	movl 64(%esp),%eax
	addl $_s1oP3_info-(1b)+0,%eax
	movl %eax,-56(%edi)
	movl 76(%esp),%eax
	movl %eax,-52(%edi)
	movl 88(%esp),%eax
	movl %eax,-48(%edi)
	movl 100(%esp),%eax
	movl %eax,-44(%edi)
	movl 112(%esp),%eax
	movl %eax,-40(%edi)
	movl 124(%esp),%eax
	movl %eax,-36(%edi)
	movl 136(%esp),%eax
	movl %eax,-32(%edi)
	movl 12(%ebp),%eax
	movl %eax,-28(%edi)
	movl %ecx,-24(%edi)
	movl %edx,-20(%edi)
	leal -180(%edi),%eax
	movl %eax,-16(%edi)
	leal -136(%edi),%eax
	movl %eax,-12(%edi)
	leal -116(%edi),%eax
	movl %eax,-8(%edi)
	leal -96(%edi),%eax
	movl %eax,-4(%edi)
	leal -76(%edi),%eax
	movl %eax,(%edi)
	leal -54(%edi),%esi
	addl $40,%ebp
	jmp *(%ebp)
Lc1qjX:
	movl $184,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1pZZ_info - _c1pZZ_info_dsp
.text
	.align 2
_c1qjv_info_dsp:
.text
	.align 2
	.long	6
	.long	32
_c1qjv_info:
Lc1qjv:
	movl %esi,(%ebp)
	movl 4(%ebp),%eax
	movl %eax,4(%ebp)
	movl 8(%ebp),%eax
	movl %eax,8(%ebp)
	movl 12(%ebp),%eax
	movl %eax,12(%ebp)
	movl 16(%ebp),%eax
	movl %eax,16(%ebp)
	movl 20(%ebp),%eax
	movl %eax,20(%ebp)
	movl 24(%ebp),%eax
	movl %eax,24(%ebp)
	jmp _c1pLJ_entry
	.long  _c1qjv_info - _c1qjv_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_sizzeOf1_closure
_CoreziRenderziInternal_sizzeOf1_closure:
	.long	_CoreziRenderziInternal_sizzeOf1_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1qID_str:
	.byte	104
	.byte	101
	.byte	105
	.byte	103
	.byte	104
	.byte	116
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_sizzeOf1_info_dsp:
.text
	.align 2
	.long	0
	.long	22
.globl _CoreziRenderziInternal_sizzeOf1_info
_CoreziRenderziInternal_sizzeOf1_info:
Lc1qIG:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qIO
Lc1qIP:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1qIC
Lc1qIB:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1qIE_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1qID_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1qIC:
	jmp *(%esi)
Lc1qIO:
	jmp *-16(%ebx)
	.long  _CoreziRenderziInternal_sizzeOf1_info - _CoreziRenderziInternal_sizzeOf1_info_dsp
.text
	.align 2
_c1qIE_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1qIE_info:
Lc1qIE:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1qIJ_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qIE_info - _c1qIE_info_dsp
.text
	.align 2
_c1qIJ_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1qIJ_info:
Lc1qIJ:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qIT
Lc1qIS:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1qIT:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qIJ_info - _c1qIJ_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_sizzeOf5_closure
_CoreziRenderziInternal_sizzeOf5_closure:
	.long	_CoreziRenderziInternal_sizzeOf5_info
	.long	0
	.long	0
	.long	0
.text
	.align 2
_CoreziRenderziInternal_sizzeOf5_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_sizzeOf5_info)+0
	.long	0
	.long	196630
.globl _CoreziRenderziInternal_sizzeOf5_info
_CoreziRenderziInternal_sizzeOf5_info:
Lc1qJl:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qJm
Lc1qJn:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1qJk
Lc1qJj:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl L_base_TextziRead_readEither4_closure$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziErr_error_info
Lc1qJk:
	jmp *(%esi)
Lc1qJm:
	jmp *-16(%ebx)
	.long  _CoreziRenderziInternal_sizzeOf5_info - _CoreziRenderziInternal_sizzeOf5_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_sizzeOf4_closure
_CoreziRenderziInternal_sizzeOf4_closure:
	.long	_CoreziRenderziInternal_sizzeOf4_info
	.long	0
	.long	0
	.long	0
.text
	.align 2
_CoreziRenderziInternal_sizzeOf4_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_sizzeOf4_info)+0
	.long	0
	.long	327702
.globl _CoreziRenderziInternal_sizzeOf4_info
_CoreziRenderziInternal_sizzeOf4_info:
Lc1qJD:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qJE
Lc1qJF:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1qJC
Lc1qJB:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl L_base_TextziRead_readEither2_closure$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziErr_error_info
Lc1qJC:
	jmp *(%esi)
Lc1qJE:
	jmp *-16(%ebx)
	.long  _CoreziRenderziInternal_sizzeOf4_info - _CoreziRenderziInternal_sizzeOf4_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_sizzeOf6_closure
_CoreziRenderziInternal_sizzeOf6_closure:
	.long	_CoreziRenderziInternal_sizzeOf6_info
	.long	0
	.long	0
	.long	0
.text
	.align 2
_CoreziRenderziInternal_sizzeOf6_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_sizzeOf6_info)+12
	.long	0
	.long	196630
.globl _CoreziRenderziInternal_sizzeOf6_info
_CoreziRenderziInternal_sizzeOf6_info:
Lc1qJU:
	call 1f
1:	popl	%eax
	leal -20(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qJV
Lc1qJW:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1qJT
Lc1qJS:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl L_base_TextziParserCombinatorsziReadPrec_minPrec_closure$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,16(%ebx)
	movl L_base_GHCziRead_zdfReadDoublezuzdsconvertFrac_closure$non_lazy_ptr-(1b)+0(%ecx),%eax
	incl %eax
	movl %eax,8(%ebx)
	movl L_stg_ap_p_info$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,-20(%ebp)
	movl L_base_TextziRead_readEither5_closure$non_lazy_ptr-(1b)+0(%ecx),%eax
	incl %eax
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	jmp _base_GHCziRead_zdfReadDouble9_info
Lc1qJT:
	jmp *(%esi)
Lc1qJV:
	jmp *-16(%ebx)
	.long  _CoreziRenderziInternal_sizzeOf6_info - _CoreziRenderziInternal_sizzeOf6_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_sizzeOf3_closure
_CoreziRenderziInternal_sizzeOf3_closure:
	.long	_CoreziRenderziInternal_sizzeOf3_info
	.long	0
.text
	.align 2
_s1oRI_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oRI_info:
Lc1qKu:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qKv
Lc1qKw:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziHastePrim_fromJSStr_info
Lc1qKv:
	jmp *-16(%ebx)
	.long  _s1oRI_info - _s1oRI_info_dsp
.text
	.align 2
_CoreziRenderziInternal_sizzeOf3_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_sizzeOf3_info)+20
	.long	65541
	.long	0
	.long	983055
.globl _CoreziRenderziInternal_sizzeOf3_info
_CoreziRenderziInternal_sizzeOf3_info:
Lc1qKz:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -8(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1qKA
Lc1qKB:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qKD
Lc1qKC:
	movl %eax,%edx
	addl $_s1oRI_info-(1b)+0,%edx
	movl %edx,-12(%edi)
	movl %ecx,(%edi)
	movl %eax,%ecx
	addl $_c1qKx_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	leal -12(%edi),%ecx
	movl %ecx,16(%ebx)
	movl L_CoreziRenderziInternal_sizzeOf6_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,8(%ebx)
	addl $-4,%ebp
	jmp _base_TextziParserCombinatorsziReadP_run_info
Lc1qKD:
	movl $16,904(%ebx)
Lc1qKA:
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_sizzeOf3_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_sizzeOf3_info - _CoreziRenderziInternal_sizzeOf3_info_dsp
.text
	.align 2
_c1qKx_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1qKx_info)+24
	.long	0
	.long	196640
_c1qKx_info:
Lc1qKx:
	call 1f
1:	popl	%eax
	addl $_c1qKG_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,8(%ebx)
	jmp _base_TextziRead_readEither6_info
	.long  _c1qKx_info - _c1qKx_info_dsp
.text
	.align 2
_c1qKG_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1qKG_info)+24
	.long	0
	.long	196640
_c1qKG_info:
Lc1qKG:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1qLa
Lc1qLb:
	movl L_CoreziRenderziInternal_sizzeOf5_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	addl $4,%ebp
	jmp *(%esi)
Lc1qLa:
	addl $_c1qKQ_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 2(%esi),%eax
	movl 6(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1qKQ_info
Lc1qKT:
	jmp *(%esi)
	.long  _c1qKG_info - _c1qKG_info_dsp
.text
	.align 2
_c1qKQ_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1qKQ_info)+24
	.long	1
	.long	65568
_c1qKQ_info:
Lc1qKQ:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1qL6
Lc1qL7:
	movl 4(%ebp),%esi
	andl $-8,%esi
	addl $8,%ebp
	jmp *(%esi)
Lc1qL6:
	movl L_CoreziRenderziInternal_sizzeOf4_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	addl $8,%ebp
	jmp *(%esi)
	.long  _c1qKQ_info - _c1qKQ_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_sizzeOf2_closure
_CoreziRenderziInternal_sizzeOf2_closure:
	.long	_CoreziRenderziInternal_sizzeOf2_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1qLZ_str:
	.byte	119
	.byte	105
	.byte	100
	.byte	116
	.byte	104
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_sizzeOf2_info_dsp:
.text
	.align 2
	.long	0
	.long	22
.globl _CoreziRenderziInternal_sizzeOf2_info
_CoreziRenderziInternal_sizzeOf2_info:
Lc1qM2:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qMa
Lc1qMb:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1qLY
Lc1qLX:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1qM0_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1qLZ_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1qLY:
	jmp *(%esi)
Lc1qMa:
	jmp *-16(%ebx)
	.long  _CoreziRenderziInternal_sizzeOf2_info - _CoreziRenderziInternal_sizzeOf2_info_dsp
.text
	.align 2
_c1qM0_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1qM0_info:
Lc1qM0:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1qM5_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qM0_info - _c1qM0_info_dsp
.text
	.align 2
_c1qM5_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1qM5_info:
Lc1qM5:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qMf
Lc1qMe:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1qMf:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qM5_info - _c1qM5_info_dsp
.data
	.align 2
.align 0
_r1mSq_closure:
	.long	_r1mSq_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1qMN_str:
	.byte	41
	.byte	0
.text
	.align 2
_r1mSq_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r1mSq_info:
Lc1qMQ:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qMY
Lc1qMZ:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1qMM
Lc1qML:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1qMO_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1qMN_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1qMM:
	jmp *(%esi)
Lc1qMY:
	jmp *-16(%ebx)
	.long  _r1mSq_info - _r1mSq_info_dsp
.text
	.align 2
_c1qMO_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1qMO_info:
Lc1qMO:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1qMT_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qMO_info - _c1qMO_info_dsp
.text
	.align 2
_c1qMT_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1qMT_info:
Lc1qMT:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qN3
Lc1qN2:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1qN3:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qMT_info - _c1qMT_info_dsp
.data
	.align 2
.align 0
_r1mSr_closure:
	.long	_r1mSr_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1qNB_str:
	.byte	44
	.byte	0
.text
	.align 2
_r1mSr_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r1mSr_info:
Lc1qNE:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qNM
Lc1qNN:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1qNA
Lc1qNz:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1qNC_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1qNB_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1qNA:
	jmp *(%esi)
Lc1qNM:
	jmp *-16(%ebx)
	.long  _r1mSr_info - _r1mSr_info_dsp
.text
	.align 2
_c1qNC_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1qNC_info:
Lc1qNC:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1qNH_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qNC_info - _c1qNC_info_dsp
.text
	.align 2
_c1qNH_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1qNH_info:
Lc1qNH:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qNR
Lc1qNQ:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1qNR:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qNH_info - _c1qNH_info_dsp
.data
	.align 2
.align 0
_r1mSs_closure:
	.long	_r1mSs_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1qOp_str:
	.byte	114
	.byte	103
	.byte	98
	.byte	97
	.byte	40
	.byte	0
.text
	.align 2
_r1mSs_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r1mSs_info:
Lc1qOs:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qOA
Lc1qOB:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1qOo
Lc1qOn:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1qOq_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1qOp_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1qOo:
	jmp *(%esi)
Lc1qOA:
	jmp *-16(%ebx)
	.long  _r1mSs_info - _r1mSs_info_dsp
.text
	.align 2
_c1qOq_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1qOq_info:
Lc1qOq:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1qOv_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qOq_info - _c1qOq_info_dsp
.text
	.align 2
_c1qOv_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1qOv_info:
Lc1qOv:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qOF
Lc1qOE:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1qOF:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qOv_info - _c1qOv_info_dsp
.data
	.align 2
.align 0
_r1mSt_closure:
	.long	_r1mSt_info
	.long	0
	.long	0
	.long	0
.text
	.align 2
_r1mSt_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r1mSt_info:
Lc1qPc:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qPg
Lc1qPh:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1qP9
Lc1qP8:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1qPa_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%ecx),%eax
	leal 1(%eax),%esi
	addl $-16,%ebp
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%ecx)
Lc1qP9:
	jmp *(%esi)
Lc1qPg:
	jmp *-16(%ebx)
	.long  _r1mSt_info - _r1mSt_info_dsp
.text
	.align 2
_c1qPa_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1qPa_info:
Lc1qPa:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qPk
Lc1qPj:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1qPk:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qPa_info - _c1qPa_info_dsp
.data
	.align 2
.align 0
_r1mSu_closure:
	.long	_r1mSu_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1qPL_str:
	.byte	114
	.byte	103
	.byte	98
	.byte	40
	.byte	0
.text
	.align 2
_r1mSu_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r1mSu_info:
Lc1qPO:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qPW
Lc1qPX:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1qPK
Lc1qPJ:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1qPM_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1qPL_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1qPK:
	jmp *(%esi)
Lc1qPW:
	jmp *-16(%ebx)
	.long  _r1mSu_info - _r1mSu_info_dsp
.text
	.align 2
_c1qPM_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1qPM_info:
Lc1qPM:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1qPR_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qPM_info - _c1qPM_info_dsp
.text
	.align 2
_c1qPR_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1qPR_info:
Lc1qPR:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qQ1
Lc1qQ0:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1qQ1:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qPR_info - _c1qPR_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzgze_closure
_CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzgze_closure:
	.long	_CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzgze_info
.text
	.align 2
_s1oSd_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1oSd_info:
Lc1qQF:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1qQG
Lc1qQH:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,16(%ebx)
	movl 16(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_zbzg_info
Lc1qQG:
	jmp *-16(%ebx)
	.long  _s1oSd_info - _s1oSd_info_dsp
.text
	.align 2
_CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzgze_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzgze_info
_CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzgze_info:
Lc1qQP:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1qQQ
Lc1qQR:
	movl 64(%esp),%eax
	addl $_c1qQv_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1qQv_info
Lc1qQw:
	jmp *(%esi)
Lc1qQQ:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzgze_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzgze_info - _CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzgze_info_dsp
.text
	.align 2
_c1qQv_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1qQv_info:
Lc1qQv:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	movl %esi,%edx
	andl $7,%edx
	cmpl $2,%edx
	jae Lc1qQN
Lc1qQO:
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $8,%ebp
	jmp _stg_ap_p_fast
Lc1qQN:
	addl $32,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qQX
Lc1qQW:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	addl $_s1oSd_info-(1b)+0,%ecx
	movl %ecx,-28(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %eax,-12(%edi)
	movl 64(%esp),%eax
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -28(%edi),%eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1qQX:
	movl $32,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qQv_info - _c1qQv_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzg_closure
_CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzg_closure:
	.long	_CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzg_info
.text
	.align 2
_s1oSl_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1oSl_info:
Lc1qRH:
	movl 3(%esi),%esi
	andl $-8,%esi
	jmp *(%esi)
	.long  _s1oSl_info - _s1oSl_info_dsp
.text
	.align 2
_CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzg_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzg_info
_CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzg_info:
Lc1qRR:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1qRS
Lc1qRT:
	movl 64(%esp),%eax
	addl $_c1qRw_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1qRw_info
Lc1qRx:
	jmp *(%esi)
Lc1qRS:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzg_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzg_info - _CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzg_info_dsp
.text
	.align 2
_c1qRw_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1qRw_info:
Lc1qRw:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	movl %esi,%edx
	andl $7,%edx
	cmpl $2,%edx
	jae Lc1qRP
Lc1qRQ:
	movl %ecx,%esi
	andl $-8,%esi
	addl $8,%ebp
	jmp *(%esi)
Lc1qRP:
	addl $40,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qS1
Lc1qS0:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	addl $_s1oSl_info-(1b)+0,%ecx
	movl %ecx,-36(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-32(%edi)
	movl 64(%esp),%ecx
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-28(%edi)
	leal -35(%edi),%ecx
	movl %ecx,-24(%edi)
	movl 64(%esp),%ecx
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-20(%edi)
	movl %eax,-16(%edi)
	leal -27(%edi),%eax
	movl %eax,-12(%edi)
	movl 64(%esp),%eax
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1qS1:
	movl $40,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qRw_info - _c1qRw_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfApplicativeRenderzuzdszdfApplicativeSkeletonzuzdcztzg_closure
_CoreziRenderziInternal_zdfApplicativeRenderzuzdszdfApplicativeSkeletonzuzdcztzg_closure:
	.long	_CoreziRenderziInternal_zdfApplicativeRenderzuzdszdfApplicativeSkeletonzuzdcztzg_info
.text
	.align 2
_CoreziRenderziInternal_zdfApplicativeRenderzuzdszdfApplicativeSkeletonzuzdcztzg_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfApplicativeRenderzuzdszdfApplicativeSkeletonzuzdcztzg_info
_CoreziRenderziInternal_zdfApplicativeRenderzuzdszdfApplicativeSkeletonzuzdcztzg_info:
Lc1qSw:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzg_info
	.long  _CoreziRenderziInternal_zdfApplicativeRenderzuzdszdfApplicativeSkeletonzuzdcztzg_info - _CoreziRenderziInternal_zdfApplicativeRenderzuzdszdfApplicativeSkeletonzuzdcztzg_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_black1_closure
_CoreziRenderziInternal_black1_closure:
	.long	_CoreziEase_Exact_static_info
	.long	_CoreziRenderziInternal_applyTransform2_closure+1
	.long	1
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_black2_closure
_CoreziRenderziInternal_black2_closure:
	.long	_CoreziEase_Exact_static_info
	.long	_CoreziRenderziInternal_applyTransform1_closure+1
	.long	1
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_applyTransform_closure
_CoreziRenderziInternal_applyTransform_closure:
	.long	_CoreziRenderziInternal_applyTransform_info
.text
	.align 2
_CoreziRenderziInternal_applyTransform_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziRenderziInternal_applyTransform_info
_CoreziRenderziInternal_applyTransform_info:
Lc1qSN:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -8(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1qSO
Lc1qSP:
	movl L_CoreziRenderziInternal_applyTransform1_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,40(%ebx)
	movl L_CoreziRenderziInternal_applyTransform1_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,32(%ebx)
	movl L_CoreziRenderziInternal_applyTransform1_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,24(%ebx)
	movl L_CoreziRenderziInternal_applyTransform2_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,16(%ebx)
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_applyTransform2_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-8(%ebp)
	movl L_CoreziRenderziInternal_applyTransform1_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%ebp)
	addl $-8,%ebp
	jmp _CoreziRenderziInternal_applyTransformzuworld_info
Lc1qSO:
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_applyTransform_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_applyTransform_info - _CoreziRenderziInternal_applyTransform_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_embedTransformation_closure
_CoreziRenderziInternal_embedTransformation_closure:
	.long	_CoreziRenderziInternal_embedTransformation_info
.text
	.align 2
_CoreziRenderziInternal_embedTransformation_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziRenderziInternal_embedTransformation_info
_CoreziRenderziInternal_embedTransformation_info:
Lc1qTc:
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_embedTransformation1_info
	.long  _CoreziRenderziInternal_embedTransformation_info - _CoreziRenderziInternal_embedTransformation_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_drawClipped_closure
_CoreziRenderziInternal_drawClipped_closure:
	.long	_CoreziRenderziInternal_drawClipped_info
.text
	.align 2
_CoreziRenderziInternal_drawClipped_info_dsp:
.text
	.align 2
	.long	262168
	.long	0
	.long	15
.globl _CoreziRenderziInternal_drawClipped_info
_CoreziRenderziInternal_drawClipped_info:
Lc1qTo:
	movl 32(%ebx),%eax
	movl %eax,32(%ebx)
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_drawClipped1_info
	.long  _CoreziRenderziInternal_drawClipped_info - _CoreziRenderziInternal_drawClipped_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_sizzeOf_closure
_CoreziRenderziInternal_sizzeOf_closure:
	.long	_CoreziRenderziInternal_sizzeOf_info
	.long	0
.text
	.align 2
_s1oSJ_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1oSJ_info)+36
	.long	2
	.long	196627
_s1oSJ_info:
Lc1qUe:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1qUf
Lc1qUg:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qUi
Lc1qUh:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	movl %eax,64(%esp)
	movl L_stg_sel_0_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_sizzeOf1_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,32(%ebx)
	leal -12(%edi),%ecx
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_zdfIsElemElem_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziJSString_getProp_info
Lc1qUi:
	movl $16,904(%ebx)
Lc1qUf:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1oSJ_info - _s1oSJ_info_dsp
.text
	.align 2
_s1oSK_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1oSK_info)+20
	.long	3
	.long	3211280
_s1oSK_info:
Lc1qUl:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -24(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1qUm
Lc1qUn:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qUp
Lc1qUo:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl %eax,64(%esp)
	movl 16(%ecx),%eax
	movl 20(%ecx),%ecx
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_s1oSJ_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	movl 76(%esp),%edx
	movl %edx,-4(%edi)
	movl %eax,(%edi)
	movl 64(%esp),%eax
	addl $_c1qUj_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl %ecx,8(%ebx)
	leal -16(%edi),%eax
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	jmp _base_GHCziBase_zdp1Applicative_info
Lc1qUp:
	movl $20,904(%ebx)
Lc1qUm:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1oSK_info - _s1oSK_info_dsp
.text
	.align 2
_c1qUj_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1qUj_info)+20
	.long	1
	.long	65568
_c1qUj_info:
Lc1qUj:
	call 1f
1:	popl	%eax
	movl %esi,8(%ebx)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%ebp)
	movl L_CoreziRenderziInternal_sizzeOf3_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp _base_GHCziBase_fmap_info
	.long  _c1qUj_info - _c1qUj_info_dsp
.text
	.align 2
_s1oSA_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1oSA_info)+36
	.long	2
	.long	327699
_s1oSA_info:
Lc1qUO:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1qUP
Lc1qUQ:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qUS
Lc1qUR:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	movl %eax,64(%esp)
	movl L_stg_sel_0_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_sizzeOf2_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,32(%ebx)
	leal -12(%edi),%ecx
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_zdfIsElemElem_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziJSString_getProp_info
Lc1qUS:
	movl $16,904(%ebx)
Lc1qUP:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1oSA_info - _s1oSA_info_dsp
.text
	.align 2
_s1oSB_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1oSB_info)+20
	.long	3
	.long	5308432
_s1oSB_info:
Lc1qUV:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -24(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1qUW
Lc1qUX:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qUZ
Lc1qUY:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl %eax,64(%esp)
	movl 16(%ecx),%eax
	movl 20(%ecx),%ecx
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_s1oSA_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	movl 76(%esp),%edx
	movl %edx,-4(%edi)
	movl %eax,(%edi)
	movl 64(%esp),%eax
	addl $_c1qUT_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl %ecx,8(%ebx)
	leal -16(%edi),%eax
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	jmp _base_GHCziBase_zdp1Applicative_info
Lc1qUZ:
	movl $20,904(%ebx)
Lc1qUW:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1oSB_info - _s1oSB_info_dsp
.text
	.align 2
_c1qUT_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1qUT_info)+20
	.long	1
	.long	65568
_c1qUT_info:
Lc1qUT:
	call 1f
1:	popl	%eax
	movl %esi,8(%ebx)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%ebp)
	movl L_CoreziRenderziInternal_sizzeOf3_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp _base_GHCziBase_fmap_info
	.long  _c1qUT_info - _c1qUT_info_dsp
.text
	.align 2
_s1oSC_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1oSC_info)+20
	.long	3
	.long	5308432
_s1oSC_info:
Lc1qV5:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -24(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1qV6
Lc1qV7:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qV9
Lc1qV8:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl %eax,64(%esp)
	movl 16(%ecx),%eax
	movl 20(%ecx),%ecx
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_s1oSB_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl 76(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	addl $_c1qV3_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl %ecx,8(%ebx)
	leal -20(%edi),%eax
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	jmp _base_GHCziBase_zdp1Applicative_info
Lc1qV9:
	movl $24,904(%ebx)
Lc1qV6:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1oSC_info - _s1oSC_info_dsp
.text
	.align 2
_c1qV3_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1qV3_info:
Lc1qV3:
	call 1f
1:	popl	%eax
	movl %esi,8(%ebx)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%ebp)
	movl L_ghczmprim_GHCziTuple_Z2T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	addl $2,%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp _base_GHCziBase_fmap_info
	.long  _c1qV3_info - _c1qV3_info_dsp
.text
	.align 2
_CoreziRenderziInternal_sizzeOf_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_sizzeOf_info)+20
	.long	131087
	.long	0
	.long	15794191
.globl _CoreziRenderziInternal_sizzeOf_info
_CoreziRenderziInternal_sizzeOf_info:
Lc1qVd:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1qVe
Lc1qVf:
	movl 64(%esp),%eax
	addl $_c1qTX_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl %edx,8(%ebx)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	jmp _z30UqEPBHMdsbP05EH96SVtGd_ControlziMonadziIOziClass_zdp1MonadIO_info
Lc1qVe:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_sizzeOf_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_sizzeOf_info - _CoreziRenderziInternal_sizzeOf_info_dsp
.text
	.align 2
_c1qTX_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1qTX_info)+20
	.long	2
	.long	7405600
_c1qTX_info:
Lc1qTX:
	call 1f
1:	popl	%eax
	addl $_c1qU1_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,8(%ebx)
	jmp _base_GHCziBase_zdp1Monad_info
	.long  _c1qTX_info - _c1qTX_info_dsp
.text
	.align 2
_c1qU1_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1qU1_info)+20
	.long	2
	.long	7405600
_c1qU1_info:
Lc1qU1:
	call 1f
1:	popl	%eax
	addl $48,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qVj
Lc1qVi:
	movl %eax,%ecx
	addl $_s1oSK_info-(1b)+0,%ecx
	movl %ecx,-44(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-32(%edi)
	movl 8(%ebp),%edx
	movl %edx,-28(%edi)
	movl %esi,-24(%edi)
	movl %eax,64(%esp)
	addl $_s1oSC_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl %ecx,-8(%edi)
	movl %edx,-4(%edi)
	movl %esi,(%edi)
	movl %esi,8(%ebx)
	movl 64(%esp),%eax
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,(%ebp)
	leal -20(%edi),%eax
	movl %eax,4(%ebp)
	leal -44(%edi),%eax
	movl %eax,8(%ebp)
	jmp _base_GHCziBase_zlztzg_info
Lc1qVj:
	movl $48,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qU1_info - _c1qU1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_withValue3_closure
_CoreziRenderziInternal_withValue3_closure:
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_static_info
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_ReturnS_closure+1
	.long	1
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_withValue1_closure
_CoreziRenderziInternal_withValue1_closure:
	.long	_CoreziRenderziInternal_withValue1_info
	.long	0
.text
	.align 2
_s1oST_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1oST_info)+52
	.long	65541
	.long	1
	.long	65546
_s1oST_info:
Lc1qXb:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -8(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1qXc
Lc1qXd:
	addl $_c1qX1_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 3(%esi),%eax
	movl %ecx,%esi
	movl %eax,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1qX1_info
Lc1qX2:
	jmp *(%esi)
Lc1qXc:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oST_info - _s1oST_info_dsp
.text
	.align 2
_c1qX1_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1qX1_info)+52
	.long	1
	.long	65568
_c1qX1_info:
Lc1qX1:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1qX9
Lc1qXa:
	movl L_CoreziRenderziInternal_withValue2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1qX9:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1qXm
Lc1qXl:
	movl 2(%esi),%ecx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-16(%edi)
	movl 4(%ebp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -16(%edi),%ecx
	movl %ecx,16(%ebx)
	movl L_base_GHCziBase_Just_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	addl $8,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_zdfFunctorSkeletonzuzdcfmap_info
Lc1qXm:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qX1_info - _c1qX1_info_dsp
.text
	.align 2
_s1oSN_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1oSN_info:
Lc1qXv:
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziEase_valueIO1_info
	.long  _s1oSN_info - _s1oSN_info_dsp
.text
	.align 2
_CoreziRenderziInternal_withValue1_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_withValue1_info)+52
	.long	131087
	.long	0
	.long	196623
.globl _CoreziRenderziInternal_withValue1_info
_CoreziRenderziInternal_withValue1_info:
Lc1qXA:
	call 1f
1:	popl	%eax
	addl $56,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1qXE
Lc1qXD:
	movl %eax,64(%esp)
	addl $_s1oST_info-(1b)+0,%eax
	movl %eax,-52(%edi)
	movl %ecx,-48(%edi)
	movl 64(%esp),%eax
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-44(%edi)
	leal -51(%edi),%ecx
	movl %ecx,-40(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-36(%edi)
	movl L_CoreziRenderziInternal_withValue3_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-32(%edi)
	leal -43(%edi),%ecx
	movl %ecx,-28(%edi)
	movl %eax,%ecx
	addl $_s1oSN_info-(1b)+0,%ecx
	movl %ecx,-24(%edi)
	movl %edx,-20(%edi)
	movl L_CoreziRenderziInternal_EmbedIO_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -23(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -15(%edi),%eax
	movl %eax,-4(%edi)
	leal -34(%edi),%eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	jmp *(%ebp)
Lc1qXE:
	movl $56,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziRenderziInternal_withValue1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_withValue1_info - _CoreziRenderziInternal_withValue1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_withValue_closure
_CoreziRenderziInternal_withValue_closure:
	.long	_CoreziRenderziInternal_withValue_info
	.long	0
.text
	.align 2
_CoreziRenderziInternal_withValue_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_withValue_info)+56
	.long	131087
	.long	0
	.long	65551
.globl _CoreziRenderziInternal_withValue_info
_CoreziRenderziInternal_withValue_info:
Lc1qYn:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_withValue1_info
	.long  _CoreziRenderziInternal_withValue_info - _CoreziRenderziInternal_withValue_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_white_closure
_CoreziRenderziInternal_white_closure:
	.long	_ghczmprim_GHCziTuple_Z4T_static_info
	.long	_CoreziRenderziInternal_black1_closure+1
	.long	_CoreziRenderziInternal_black1_closure+1
	.long	_CoreziRenderziInternal_black1_closure+1
	.long	_CoreziRenderziInternal_black1_closure+1
	.long	1
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_black_closure
_CoreziRenderziInternal_black_closure:
	.long	_ghczmprim_GHCziTuple_Z4T_static_info
	.long	_CoreziRenderziInternal_black2_closure+1
	.long	_CoreziRenderziInternal_black2_closure+1
	.long	_CoreziRenderziInternal_black2_closure+1
	.long	_CoreziRenderziInternal_black1_closure+1
	.long	1
.data
	.align 2
.align 0
_r1mSv_closure:
	.long	_ghczmprim_GHCziTypes_ZC_static_info
	.long	_r1mSq_closure
	.long	_ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdwcolor2JSString_closure
_CoreziRenderziInternal_zdwcolor2JSString_closure:
	.long	_CoreziRenderziInternal_zdwcolor2JSString_info
	.long	0
.text
	.align 2
_s1oTl_info_dsp:
.text
	.align 2
	.long	131072
	.long	21
_s1oTl_info:
Lc1r03:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1r04
Lc1r05:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1r00_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	addl $-16,%ebp
#	gldsd 12(%esi),%fake0
	fldl 12(%esi) ; fstp %st(1)
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,64(%esp)
	movl 104(%eax),%edx
	movl %edx,76(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,88(%esp)
	movl 64(%esp),%ecx
	subl %edx,%ecx
	movl 76(%esp),%edx
	movl %ecx,100(%esp)
	movl 88(%esp),%ecx
	sbbl %ecx,%edx
	movl 100(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
#	gstt %fake0,124(%esp)
	fld %st(0) ; fstpt 124(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	subl $8,%esp
#	gldt 124(%esp),%fake0
	fldt 124(%esp) ; fstp %st(1)
#	gstsd %fake0,(%esp)
	fstl (%esp)
	movl %eax,136(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_String$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1r04:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
	.long  _s1oTl_info - _s1oTl_info_dsp
.text
	.align 2
_c1r00_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1r00_info:
Lc1r00:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1r08
Lc1r07:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1r08:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1r00_info - _c1r00_info_dsp
.text
	.align 2
_s1oTg_info_dsp:
.text
	.align 2
	.long	131072
	.long	21
_s1oTg_info:
Lc1r0s:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1r0t
Lc1r0u:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1r0p_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	addl $-16,%ebp
#	gldsd 12(%esi),%fake0
	fldl 12(%esi) ; fstp %st(1)
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,64(%esp)
	movl 104(%eax),%edx
	movl %edx,76(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,88(%esp)
	movl 64(%esp),%ecx
	subl %edx,%ecx
	movl 76(%esp),%edx
	movl %ecx,100(%esp)
	movl 88(%esp),%ecx
	sbbl %ecx,%edx
	movl 100(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
#	gstt %fake0,124(%esp)
	fld %st(0) ; fstpt 124(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	subl $8,%esp
#	gldt 124(%esp),%fake0
	fldt 124(%esp) ; fstp %st(1)
#	gstsd %fake0,(%esp)
	fstl (%esp)
	movl %eax,136(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_String$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1r0t:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
	.long  _s1oTg_info - _s1oTg_info_dsp
.text
	.align 2
_c1r0p_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1r0p_info:
Lc1r0p:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1r0x
Lc1r0w:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1r0x:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1r0p_info - _c1r0p_info_dsp
.text
	.align 2
_s1oTb_info_dsp:
.text
	.align 2
	.long	131072
	.long	21
_s1oTb_info:
Lc1r0R:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1r0S
Lc1r0T:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1r0O_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	addl $-16,%ebp
#	gldsd 12(%esi),%fake0
	fldl 12(%esi) ; fstp %st(1)
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,64(%esp)
	movl 104(%eax),%edx
	movl %edx,76(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,88(%esp)
	movl 64(%esp),%ecx
	subl %edx,%ecx
	movl 76(%esp),%edx
	movl %ecx,100(%esp)
	movl 88(%esp),%ecx
	sbbl %ecx,%edx
	movl 100(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
#	gstt %fake0,124(%esp)
	fld %st(0) ; fstpt 124(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	subl $8,%esp
#	gldt 124(%esp),%fake0
	fldt 124(%esp) ; fstp %st(1)
#	gstsd %fake0,(%esp)
	fstl (%esp)
	movl %eax,136(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_String$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1r0S:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
	.long  _s1oTb_info - _s1oTb_info_dsp
.text
	.align 2
_c1r0O_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1r0O_info:
Lc1r0O:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1r0W
Lc1r0V:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1r0W:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1r0O_info - _c1r0O_info_dsp
.text
	.align 2
_s1oU2_info_dsp:
.text
	.align 2
	.long	131072
	.long	21
_s1oU2_info:
Lc1r1y:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1r1z
Lc1r1A:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1r1v_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	addl $-16,%ebp
#	gldsd 12(%esi),%fake0
	fldl 12(%esi) ; fstp %st(1)
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,64(%esp)
	movl 104(%eax),%edx
	movl %edx,76(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,88(%esp)
	movl 64(%esp),%ecx
	subl %edx,%ecx
	movl 76(%esp),%edx
	movl %ecx,100(%esp)
	movl 88(%esp),%ecx
	sbbl %ecx,%edx
	movl 100(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
#	gstt %fake0,124(%esp)
	fld %st(0) ; fstpt 124(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	subl $8,%esp
#	gldt 124(%esp),%fake0
	fldt 124(%esp) ; fstp %st(1)
#	gstsd %fake0,(%esp)
	fstl (%esp)
	movl %eax,136(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_String$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1r1z:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
	.long  _s1oU2_info - _s1oU2_info_dsp
.text
	.align 2
_c1r1v_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1r1v_info:
Lc1r1v:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1r1D
Lc1r1C:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1r1D:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1r1v_info - _c1r1v_info_dsp
.text
	.align 2
_s1oTX_info_dsp:
.text
	.align 2
	.long	131072
	.long	21
_s1oTX_info:
Lc1r1X:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1r1Y
Lc1r1Z:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1r1U_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	addl $-16,%ebp
#	gldsd 12(%esi),%fake0
	fldl 12(%esi) ; fstp %st(1)
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,64(%esp)
	movl 104(%eax),%edx
	movl %edx,76(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,88(%esp)
	movl 64(%esp),%ecx
	subl %edx,%ecx
	movl 76(%esp),%edx
	movl %ecx,100(%esp)
	movl 88(%esp),%ecx
	sbbl %ecx,%edx
	movl 100(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
#	gstt %fake0,124(%esp)
	fld %st(0) ; fstpt 124(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	subl $8,%esp
#	gldt 124(%esp),%fake0
	fldt 124(%esp) ; fstp %st(1)
#	gstsd %fake0,(%esp)
	fstl (%esp)
	movl %eax,136(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_String$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1r1Y:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
	.long  _s1oTX_info - _s1oTX_info_dsp
.text
	.align 2
_c1r1U_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1r1U_info:
Lc1r1U:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1r22
Lc1r21:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1r22:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1r1U_info - _c1r1U_info_dsp
.text
	.align 2
_s1oTS_info_dsp:
.text
	.align 2
	.long	131072
	.long	21
_s1oTS_info:
Lc1r2m:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1r2n
Lc1r2o:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1r2j_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	addl $-16,%ebp
#	gldsd 12(%esi),%fake0
	fldl 12(%esi) ; fstp %st(1)
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,64(%esp)
	movl 104(%eax),%edx
	movl %edx,76(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,88(%esp)
	movl 64(%esp),%ecx
	subl %edx,%ecx
	movl 76(%esp),%edx
	movl %ecx,100(%esp)
	movl 88(%esp),%ecx
	sbbl %ecx,%edx
	movl 100(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
#	gstt %fake0,124(%esp)
	fld %st(0) ; fstpt 124(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	subl $8,%esp
#	gldt 124(%esp),%fake0
	fldt 124(%esp) ; fstp %st(1)
#	gstsd %fake0,(%esp)
	fstl (%esp)
	movl %eax,136(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_String$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1r2n:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
	.long  _s1oTS_info - _s1oTS_info_dsp
.text
	.align 2
_c1r2j_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1r2j_info:
Lc1r2j:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1r2r
Lc1r2q:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1r2r:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1r2j_info - _c1r2j_info_dsp
.text
	.align 2
_s1oTN_info_dsp:
.text
	.align 2
	.long	131072
	.long	21
_s1oTN_info:
Lc1r2L:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1r2M
Lc1r2N:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1r2I_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	addl $-16,%ebp
#	gldsd 12(%esi),%fake0
	fldl 12(%esi) ; fstp %st(1)
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,64(%esp)
	movl 104(%eax),%edx
	movl %edx,76(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,88(%esp)
	movl 64(%esp),%ecx
	subl %edx,%ecx
	movl 76(%esp),%edx
	movl %ecx,100(%esp)
	movl 88(%esp),%ecx
	sbbl %ecx,%edx
	movl 100(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
#	gstt %fake0,124(%esp)
	fld %st(0) ; fstpt 124(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	subl $8,%esp
#	gldt 124(%esp),%fake0
	fldt 124(%esp) ; fstp %st(1)
#	gstsd %fake0,(%esp)
	fstl (%esp)
	movl %eax,136(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_String$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1r2M:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
	.long  _s1oTN_info - _s1oTN_info_dsp
.text
	.align 2
_c1r2I_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1r2I_info:
Lc1r2I:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1r2Q
Lc1r2P:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1r2Q:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1r2I_info - _c1r2I_info_dsp
.text
	.align 2
_CoreziRenderziInternal_zdwcolor2JSString_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_zdwcolor2JSString_info)+60
	.long	65541
	.long	0
	.long	4128783
.globl _CoreziRenderziInternal_zdwcolor2JSString_info
_CoreziRenderziInternal_zdwcolor2JSString_info:
Lc1r36:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -40(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1r37
Lc1r38:
	addl $_c1qZx_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1qZx_info
Lc1qZy:
	jmp *(%esi)
Lc1r37:
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_zdwcolor2JSString_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdwcolor2JSString_info - _CoreziRenderziInternal_zdwcolor2JSString_info_dsp
.text
	.align 2
_c1qZx_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1qZx_info)+64
	.long	0
	.long	2031648
_c1qZx_info:
Lc1qZx:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1r34
Lc1r35:
	addl $8,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1r3P
Lc1r3i:
	movl 3(%ecx),%edx
	movl %eax,64(%esp)
	movl 7(%ecx),%eax
	movl 11(%ecx),%ecx
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-4(%edi)
	movl 76(%esp),%edx
	movl %edx,(%edi)
	movl %ecx,-8(%ebp)
	leal -3(%edi),%ecx
	movl %ecx,-4(%ebp)
	movl %eax,(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qZG_entry
Lc1r34:
	addl $8,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1r3P
Lc1r3O:
	movl 2(%ecx),%edx
	movl %eax,64(%esp)
	movl 6(%ecx),%eax
	movl %ecx,88(%esp)
	movl 10(%ecx),%ecx
	movl %edx,100(%esp)
	movl 88(%esp),%edx
#	gldsd 14(%edx),%fake0
	fldl 14(%edx) ; fstp %st(1)
	movl 64(%esp),%edx
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-4(%edi)
	movl 100(%esp),%edx
	movl %edx,(%edi)
	movl %ecx,-16(%ebp)
#	gstsd %fake0,-12(%ebp)
	fstl -12(%ebp)
	leal -3(%edi),%ecx
	movl %ecx,-4(%ebp)
	movl %eax,(%ebp)
	addl $-16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1r1b_entry
Lc1r3P:
	movl $8,904(%ebx)
	movl %ecx,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1qZx_info - _c1qZx_info_dsp
.text
	.align 2
_c1r1b_entry:
Lc1r1b:
	call 1f
1:	popl	%eax
	addl $8,%edi
	movl 12(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1r3S
Lc1r3R:
#	gldsd 3(%ecx),%fake0
	fldl 3(%ecx) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl 16(%ebp),%eax
	movl %eax,(%edi)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	leal -3(%edi),%eax
	movl %eax,16(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1r1h_entry
Lc1r3S:
	movl $8,904(%ebx)
	movl %eax,%edx
	addl $_c1r1a_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
.text
	.align 2
_c1r1a_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1r1a_info)+64
	.long	1989
	.long	1507360
_c1r1a_info:
Lc1r1a:
	movl %esi,16(%ebp)
	addl $4,%ebp
	jmp _c1r1b_entry
	.long  _c1r1a_info - _c1r1a_info_dsp
.text
	.align 2
_c1r1h_entry:
Lc1r1h:
	call 1f
1:	popl	%eax
	addl $8,%edi
	movl 24(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1r3V
Lc1r3U:
#	gldsd 3(%ecx),%fake0
	fldl 3(%ecx) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl 8(%ebp),%eax
	movl %eax,(%edi)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	leal -3(%edi),%eax
	movl %eax,24(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1r1n_entry
Lc1r3V:
	movl $8,904(%ebx)
	movl %eax,%edx
	addl $_c1r1g_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
.text
	.align 2
_c1r1g_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1r1g_info)+64
	.long	8135
	.long	1507360
_c1r1g_info:
Lc1r1g:
	movl %esi,28(%ebp)
	addl $4,%ebp
	jmp _c1r1h_entry
	.long  _c1r1g_info - _c1r1g_info_dsp
.text
	.align 2
_c1r1n_entry:
Lc1r1n:
	call 1f
1:	popl	%eax
	addl $176,%edi
	movl 32(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1r3Y
Lc1r3X:
#	gldsd 3(%ecx),%fake0
	fldl 3(%ecx) ; fstp %st(1)
	movl %eax,%ecx
	addl $_s1oU2_info-(1b)+0,%ecx
	movl %ecx,-172(%edi)
#	gldsd 20(%ebp),%fake1
	fldl 20(%ebp) ; fstp %st(2)
#	gstsd %fake1,-160(%edi)
	fld %st(1) ; fstpl -160(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-152(%edi)
	leal -172(%edi),%ecx
	movl %ecx,-148(%edi)
	movl %eax,%ecx
	addl $_r1mSv_closure-(1b)+2,%ecx
	movl %ecx,-144(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-140(%edi)
	movl %eax,%ecx
	addl $_r1mSr_closure-(1b)+0,%ecx
	movl %ecx,-136(%edi)
	leal -150(%edi),%ecx
	movl %ecx,-132(%edi)
	movl %eax,%ecx
	addl $_s1oTX_info-(1b)+0,%ecx
	movl %ecx,-128(%edi)
#	gstsd %fake0,-116(%edi)
	fstl -116(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-108(%edi)
	leal -128(%edi),%ecx
	movl %ecx,-104(%edi)
	leal -138(%edi),%ecx
	movl %ecx,-100(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-96(%edi)
	movl %eax,%ecx
	addl $_r1mSr_closure-(1b)+0,%ecx
	movl %ecx,-92(%edi)
	leal -106(%edi),%ecx
	movl %ecx,-88(%edi)
	movl %eax,%ecx
	addl $_s1oTS_info-(1b)+0,%ecx
	movl %ecx,-84(%edi)
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gstsd %fake0,-72(%edi)
	fstl -72(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-64(%edi)
	leal -84(%edi),%ecx
	movl %ecx,-60(%edi)
	leal -94(%edi),%ecx
	movl %ecx,-56(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-52(%edi)
	movl %eax,%ecx
	addl $_r1mSr_closure-(1b)+0,%ecx
	movl %ecx,-48(%edi)
	leal -62(%edi),%ecx
	movl %ecx,-44(%edi)
	movl %eax,%ecx
	addl $_s1oTN_info-(1b)+0,%ecx
	movl %ecx,-40(%edi)
#	gldsd 8(%ebp),%fake0
	fldl 8(%ebp) ; fstp %st(1)
#	gstsd %fake0,-28(%edi)
	fstl -28(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-20(%edi)
	leal -40(%edi),%ecx
	movl %ecx,-16(%edi)
	leal -50(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl %eax,%ecx
	addl $_r1mSs_closure-(1b)+0,%ecx
	movl %ecx,-4(%edi)
	leal -18(%edi),%ecx
	movl %ecx,(%edi)
	movl %eax,%ecx
	addl $_c1r3M_info-(1b)+0,%ecx
	movl %ecx,28(%ebp)
	movl %eax,%esi
	addl $_r1mSt_closure-(1b)+0,%esi
	movl -3(%edi),%eax
	movl %eax,32(%ebp)
	addl $28,%ebp
	testw $7,%si
	jne Lu1r4Q
Lc1r40:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1r3Y:
	movl $176,904(%ebx)
	movl %eax,%edx
	addl $_c1r1m_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1r4Q:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1r3M_info
.text
	.align 2
_c1r1m_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1r1m_info)+64
	.long	32713
	.long	1507360
_c1r1m_info:
Lc1r1m:
	movl %esi,36(%ebp)
	addl $4,%ebp
	jmp _c1r1n_entry
	.long  _c1r1m_info - _c1r1m_info_dsp
.text
	.align 2
_c1r3M_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_c1r3M_info:
Lc1r3M:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1r48_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	addl $4,%ebp
	movl 3(%esi),%eax
	movl 872(%ebx),%edx
	movl %ecx,64(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,76(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,88(%esp)
	movl 104(%edx),%eax
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,112(%esp)
	movl 88(%esp),%ecx
	subl %eax,%ecx
	movl 100(%esp),%eax
	movl %ecx,124(%esp)
	movl 112(%esp),%ecx
	sbbl %ecx,%eax
	movl 124(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_jsCat$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1r3M_info - _c1r3M_info_dsp
.text
	.align 2
_c1r48_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1r48_info:
Lc1r48:
	addl $4,%ebp
	jmp *(%ebp)
	.long  _c1r48_info - _c1r48_info_dsp
.text
	.align 2
_c1qZG_entry:
Lc1qZG:
	call 1f
1:	popl	%eax
	addl $8,%edi
	movl 4(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1r3m
Lc1r3l:
#	gldsd 3(%ecx),%fake0
	fldl 3(%ecx) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl 8(%ebp),%eax
	movl %eax,(%edi)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	leal -3(%edi),%eax
	movl %eax,8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qZM_entry
Lc1r3m:
	movl $8,904(%ebx)
	movl %eax,%edx
	addl $_c1qZF_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
.text
	.align 2
_c1qZF_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1qZF_info)+64
	.long	451
	.long	1900576
_c1qZF_info:
Lc1qZF:
	movl %esi,8(%ebp)
	addl $4,%ebp
	jmp _c1qZG_entry
	.long  _c1qZF_info - _c1qZF_info_dsp
.text
	.align 2
_c1qZM_entry:
Lc1qZM:
	call 1f
1:	popl	%eax
	addl $8,%edi
	movl 16(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1r3p
Lc1r3o:
#	gldsd 3(%ecx),%fake0
	fldl 3(%ecx) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl 8(%ebp),%eax
	movl %eax,(%edi)
#	gstsd %fake0,8(%ebp)
	fstl 8(%ebp)
	leal -3(%edi),%eax
	movl %eax,16(%ebp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1qZS_entry
Lc1r3p:
	movl $8,904(%ebx)
	movl %eax,%edx
	addl $_c1qZL_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
.text
	.align 2
_c1qZL_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1qZL_info)+64
	.long	1989
	.long	1900576
_c1qZL_info:
Lc1qZL:
	movl %esi,20(%ebp)
	addl $4,%ebp
	jmp _c1qZM_entry
	.long  _c1qZL_info - _c1qZL_info_dsp
.text
	.align 2
_c1qZS_entry:
Lc1qZS:
	call 1f
1:	popl	%eax
	addl $132,%edi
	movl 16(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1r3s
Lc1r3r:
#	gldsd 3(%ecx),%fake0
	fldl 3(%ecx) ; fstp %st(1)
	movl %eax,%ecx
	addl $_s1oTl_info-(1b)+0,%ecx
	movl %ecx,-128(%edi)
#	gstsd %fake0,-116(%edi)
	fstl -116(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-108(%edi)
	leal -128(%edi),%ecx
	movl %ecx,-104(%edi)
	movl %eax,%ecx
	addl $_r1mSv_closure-(1b)+2,%ecx
	movl %ecx,-100(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-96(%edi)
	movl %eax,%ecx
	addl $_r1mSr_closure-(1b)+0,%ecx
	movl %ecx,-92(%edi)
	leal -106(%edi),%ecx
	movl %ecx,-88(%edi)
	movl %eax,%ecx
	addl $_s1oTg_info-(1b)+0,%ecx
	movl %ecx,-84(%edi)
#	gldsd 8(%ebp),%fake0
	fldl 8(%ebp) ; fstp %st(1)
#	gstsd %fake0,-72(%edi)
	fstl -72(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-64(%edi)
	leal -84(%edi),%ecx
	movl %ecx,-60(%edi)
	leal -94(%edi),%ecx
	movl %ecx,-56(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-52(%edi)
	movl %eax,%ecx
	addl $_r1mSr_closure-(1b)+0,%ecx
	movl %ecx,-48(%edi)
	leal -62(%edi),%ecx
	movl %ecx,-44(%edi)
	movl %eax,%ecx
	addl $_s1oTb_info-(1b)+0,%ecx
	movl %ecx,-40(%edi)
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gstsd %fake0,-28(%edi)
	fstl -28(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-20(%edi)
	leal -40(%edi),%ecx
	movl %ecx,-16(%edi)
	leal -50(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl %eax,%ecx
	addl $_r1mSu_closure-(1b)+0,%ecx
	movl %ecx,-4(%edi)
	leal -18(%edi),%ecx
	movl %ecx,(%edi)
	movl %eax,%ecx
	addl $_c1r3g_info-(1b)+0,%ecx
	movl %ecx,12(%ebp)
	movl %eax,%esi
	addl $_r1mSt_closure-(1b)+0,%esi
	movl -3(%edi),%eax
	movl %eax,16(%ebp)
	addl $12,%ebp
	testw $7,%si
	jne Lu1r4K
Lc1r3u:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1r3s:
	movl $132,904(%ebx)
	movl %eax,%edx
	addl $_c1qZR_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1r4K:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1r3g_info
.text
	.align 2
_c1qZR_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1qZR_info)+64
	.long	1989
	.long	1900576
_c1qZR_info:
Lc1qZR:
	movl %esi,20(%ebp)
	addl $4,%ebp
	jmp _c1qZS_entry
	.long  _c1qZR_info - _c1qZR_info_dsp
.text
	.align 2
_c1r3g_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_c1r3g_info:
Lc1r3g:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1r3C_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	addl $4,%ebp
	movl 3(%esi),%eax
	movl 872(%ebx),%edx
	movl %ecx,64(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,76(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,88(%esp)
	movl 104(%edx),%eax
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,112(%esp)
	movl 88(%esp),%ecx
	subl %eax,%ecx
	movl 100(%esp),%eax
	movl %ecx,124(%esp)
	movl 112(%esp),%ecx
	sbbl %ecx,%eax
	movl 124(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_jsCat$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1r3g_info - _c1r3g_info_dsp
.text
	.align 2
_c1r3C_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1r3C_info:
Lc1r3C:
	addl $4,%ebp
	jmp *(%ebp)
	.long  _c1r3C_info - _c1r3C_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zuimageDrawClipped_closure
_CoreziRenderziInternal_zuimageDrawClipped_closure:
	.long	_CoreziRenderziInternal_zuimageDrawClipped_info
.text
	.align 2
_CoreziRenderziInternal_zuimageDrawClipped_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zuimageDrawClipped_info
_CoreziRenderziInternal_zuimageDrawClipped_info:
Lc1rb5:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1rb6
Lc1rb7:
	addl $_c1rb2_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1rb2_info
Lc1rb3:
	jmp *(%esi)
Lc1rb6:
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_zuimageDrawClipped_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zuimageDrawClipped_info - _CoreziRenderziInternal_zuimageDrawClipped_info_dsp
.text
	.align 2
_c1rb2_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rb2_info:
Lc1rb2:
	movl 11(%esi),%esi
	addl $4,%ebp
	jmp _stg_ap_0_fast
	.long  _c1rb2_info - _c1rb2_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zuimageDraw_closure
_CoreziRenderziInternal_zuimageDraw_closure:
	.long	_CoreziRenderziInternal_zuimageDraw_info
.text
	.align 2
_CoreziRenderziInternal_zuimageDraw_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zuimageDraw_info
_CoreziRenderziInternal_zuimageDraw_info:
Lc1rbw:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1rbx
Lc1rby:
	addl $_c1rbt_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1rbt_info
Lc1rbu:
	jmp *(%esi)
Lc1rbx:
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_zuimageDraw_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zuimageDraw_info - _CoreziRenderziInternal_zuimageDraw_info_dsp
.text
	.align 2
_c1rbt_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rbt_info:
Lc1rbt:
	movl 7(%esi),%esi
	andl $-8,%esi
	addl $4,%ebp
	jmp *(%esi)
	.long  _c1rbt_info - _c1rbt_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_draw_closure
_CoreziRenderziInternal_draw_closure:
	.long	_CoreziRenderziInternal_draw_info
.text
	.align 2
_CoreziRenderziInternal_draw_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziRenderziInternal_draw_info
_CoreziRenderziInternal_draw_info:
Lc1rbS:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl %ecx,24(%ebx)
	movl 8(%ebx),%ecx
	movl %ecx,16(%ebx)
	movl L_CoreziRenderziInternal_zuimageDraw_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	jmp _LmwZZI9Gbhq95WUBQ6XjyOp_LensziMicro_to_info
	.long  _CoreziRenderziInternal_draw_info - _CoreziRenderziInternal_draw_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zuimageElem_closure
_CoreziRenderziInternal_zuimageElem_closure:
	.long	_CoreziRenderziInternal_zuimageElem_info
.text
	.align 2
_CoreziRenderziInternal_zuimageElem_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zuimageElem_info
_CoreziRenderziInternal_zuimageElem_info:
Lc1rce:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1rcf
Lc1rcg:
	addl $_c1rcb_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1rcb_info
Lc1rcc:
	jmp *(%esi)
Lc1rcf:
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_zuimageElem_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zuimageElem_info - _CoreziRenderziInternal_zuimageElem_info_dsp
.text
	.align 2
_c1rcb_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rcb_info:
Lc1rcb:
	movl 3(%esi),%esi
	andl $-8,%esi
	addl $4,%ebp
	jmp *(%esi)
	.long  _c1rcb_info - _c1rcb_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfFunctorRenderFzuzdcfmap_closure
_CoreziRenderziInternal_zdfFunctorRenderFzuzdcfmap_closure:
	.long	_CoreziRenderziInternal_zdfFunctorRenderFzuzdcfmap_info
.text
	.align 2
_s1oUE_info_dsp:
.text
	.align 2
	.long	65539
	.long	2
	.long	12
_s1oUE_info:
Lc1rcW:
	movl 7(%esi),%eax
	movl %eax,16(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	jmp _base_GHCziBase_zdfFunctorIO2_info
	.long  _s1oUE_info - _s1oUE_info_dsp
.text
	.align 2
_CoreziRenderziInternal_zdfFunctorRenderFzuzdcfmap_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfFunctorRenderFzuzdcfmap_info
_CoreziRenderziInternal_zdfFunctorRenderFzuzdcfmap_info:
Lc1rda:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1rdb
Lc1rdc:
	movl 64(%esp),%eax
	addl $_c1rcL_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %ecx,%esi
	movl %edx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1rcL_info
Lc1rcM:
	jmp *(%esi)
Lc1rdb:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_zdfFunctorRenderFzuzdcfmap_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdfFunctorRenderFzuzdcfmap_info - _CoreziRenderziInternal_zdfFunctorRenderFzuzdcfmap_info_dsp
.text
	.align 2
_c1rcL_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1rcL_info:
Lc1rcL:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	movl -1(%esi),%edx
	movzwl -2(%edx),%edx
	movl %edx,64(%esp)
	movl %eax,%edx
	addl $Ln1rep-(1b)+0,%edx
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl (%edx,%eax,4),%edx
	jmp *%edx
Lc1rd0:
	addl $32,%edi
	movl %esi,%eax
	cmpl 856(%ebx),%edi
	ja Lc1rdt
Lc1rdh:
	movl 3(%eax),%edx
	movl 7(%eax),%eax
	movl %ecx,88(%esp)
	movl 76(%esp),%ecx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-28(%edi)
	movl 88(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl L_CoreziRenderziInternal_EmbedDraw_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -28(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1rd1:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rdm
Lc1rdl:
	movl 3(%esi),%eax
	movl 76(%esp),%edx
	addl $_s1oUE_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	movl %ecx,-12(%edi)
	movl %eax,-8(%edi)
	movl 76(%esp),%eax
	movl L_CoreziRenderziInternal_EmbedIO_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1rd2:
	addl $32,%edi
	movl %esi,%eax
	cmpl 856(%ebx),%edi
	ja Lc1rdt
Lc1rds:
	movl 3(%eax),%edx
	movl 7(%eax),%eax
	movl %ecx,88(%esp)
	movl 76(%esp),%ecx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-28(%edi)
	movl 88(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl L_CoreziRenderziInternal_EmbedWorld_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -28(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1rd3:
	addl $36,%edi
	movl %esi,%eax
	cmpl 856(%ebx),%edi
	ja Lc1re9
Lc1rdz:
	movl 3(%eax),%edx
	movl %ecx,88(%esp)
	movl 7(%eax),%ecx
	movl 11(%eax),%eax
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-32(%edi)
	movl 88(%esp),%edx
	movl %edx,-20(%edi)
	movl %eax,-16(%edi)
	movl 76(%esp),%eax
	movl L_CoreziRenderziInternal_WithCtx_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl 100(%esp),%eax
	movl %eax,-8(%edi)
	movl %ecx,-4(%edi)
	leal -32(%edi),%eax
	movl %eax,(%edi)
	leal -11(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1rd4:
	addl $56,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rdH
Lc1rdG:
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,88(%esp)
	movl 11(%esi),%ecx
	movl %eax,112(%esp)
	movl 15(%esi),%eax
	movl %edx,124(%esp)
	movl 19(%esi),%edx
	movl %ecx,136(%esp)
	movl 23(%esi),%ecx
	movl %eax,148(%esp)
	movl 27(%esi),%eax
	movl %edx,160(%esp)
	movl 31(%esi),%edx
	movl %ecx,172(%esp)
	movl 76(%esp),%ecx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-52(%edi)
	movl 88(%esp),%ecx
	movl %ecx,-40(%edi)
	movl %edx,-36(%edi)
	movl 76(%esp),%ecx
	movl L_CoreziRenderziInternal_Affined_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-32(%edi)
	movl 112(%esp),%ecx
	movl %ecx,-28(%edi)
	movl 124(%esp),%ecx
	movl %ecx,-24(%edi)
	movl 136(%esp),%ecx
	movl %ecx,-20(%edi)
	movl 148(%esp),%ecx
	movl %ecx,-16(%edi)
	movl 160(%esp),%ecx
	movl %ecx,-12(%edi)
	movl 172(%esp),%ecx
	movl %ecx,-8(%edi)
	movl %eax,-4(%edi)
	leal -52(%edi),%eax
	movl %eax,(%edi)
	leal -31(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1rd5:
	addl $36,%edi
	movl %esi,%eax
	cmpl 856(%ebx),%edi
	ja Lc1re9
Lc1rdN:
	movl 3(%eax),%edx
	movl %ecx,88(%esp)
	movl 7(%eax),%ecx
	movl 11(%eax),%eax
	movl %edx,184(%esp)
	movl 76(%esp),%edx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-32(%edi)
	movl 88(%esp),%edx
	movl %edx,-20(%edi)
	movl %eax,-16(%edi)
	movl 76(%esp),%eax
	movl L_CoreziRenderziInternal_Translated_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl 184(%esp),%eax
	movl %eax,-8(%edi)
	movl %ecx,-4(%edi)
	leal -32(%edi),%eax
	movl %eax,(%edi)
	leal -11(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1rd6:
	addl $36,%edi
	movl %esi,%eax
	cmpl 856(%ebx),%edi
	ja Lc1re9
Lc1rdU:
	movl 3(%eax),%edx
	movl %ecx,88(%esp)
	movl 7(%eax),%ecx
	movl 11(%eax),%eax
	movl %edx,196(%esp)
	movl 76(%esp),%edx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-32(%edi)
	movl 88(%esp),%edx
	movl %edx,-20(%edi)
	movl %eax,-16(%edi)
	movl 76(%esp),%eax
	movl L_CoreziRenderziInternal_Rotated_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl 196(%esp),%eax
	movl %eax,-8(%edi)
	movl %ecx,-4(%edi)
	leal -32(%edi),%eax
	movl %eax,(%edi)
	leal -11(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1rd7:
	addl $36,%edi
	movl %esi,%eax
	cmpl 856(%ebx),%edi
	ja Lc1re9
Lc1re1:
	movl 3(%eax),%edx
	movl %ecx,88(%esp)
	movl 7(%eax),%ecx
	movl 11(%eax),%eax
	movl %edx,208(%esp)
	movl 76(%esp),%edx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-32(%edi)
	movl 88(%esp),%edx
	movl %edx,-20(%edi)
	movl %eax,-16(%edi)
	movl 76(%esp),%eax
	movl L_CoreziRenderziInternal_Scaled_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl 208(%esp),%eax
	movl %eax,-8(%edi)
	movl %ecx,-4(%edi)
	leal -32(%edi),%eax
	movl %eax,(%edi)
	leal -11(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1rd8:
	addl $36,%edi
	movl %esi,%eax
	cmpl 856(%ebx),%edi
	ja Lc1re9
Lc1re8:
	movl 3(%eax),%edx
	movl %ecx,88(%esp)
	movl 7(%eax),%ecx
	movl 11(%eax),%eax
	movl %edx,220(%esp)
	movl 76(%esp),%edx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-32(%edi)
	movl 88(%esp),%edx
	movl %edx,-20(%edi)
	movl %eax,-16(%edi)
	movl 76(%esp),%eax
	movl L_CoreziRenderziInternal_Switch_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl 220(%esp),%eax
	movl %eax,-8(%edi)
	movl %ecx,-4(%edi)
	leal -32(%edi),%eax
	movl %eax,(%edi)
	leal -11(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1rdm:
	movl $20,904(%ebx)
	movl 76(%esp),%eax
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1rdt:
	movl $32,904(%ebx)
	movl %eax,%esi
	movl 76(%esp),%eax
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1rdH:
	movl $56,904(%ebx)
	movl 76(%esp),%eax
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1re9:
	movl $36,904(%ebx)
	movl %eax,%esi
	movl 76(%esp),%eax
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rcL_info - _c1rcL_info_dsp
.const
	.align 2
.align 0
Ln1rep:
	.long	Lc1rd0-(Ln1rep)+0
	.long	Lc1rd1-(Ln1rep)+0
	.long	Lc1rd2-(Ln1rep)+0
	.long	Lc1rd3-(Ln1rep)+0
	.long	Lc1rd4-(Ln1rep)+0
	.long	Lc1rd5-(Ln1rep)+0
	.long	Lc1rd6-(Ln1rep)+0
	.long	Lc1rd7-(Ln1rep)+0
	.long	Lc1rd8-(Ln1rep)+0
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfFunctorRenderFzuzdczlzd_closure
_CoreziRenderziInternal_zdfFunctorRenderFzuzdczlzd_closure:
	.long	_CoreziRenderziInternal_zdfFunctorRenderFzuzdczlzd_info
.text
	.align 2
_s1oVe_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1oVe_info:
Lc1rf6:
	movl 3(%esi),%esi
	jmp _stg_ap_0_fast
	.long  _s1oVe_info - _s1oVe_info_dsp
.text
	.align 2
_CoreziRenderziInternal_zdfFunctorRenderFzuzdczlzd_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfFunctorRenderFzuzdczlzd_info
_CoreziRenderziInternal_zdfFunctorRenderFzuzdczlzd_info:
Lc1rf9:
	call 1f
1:	popl	%eax
	addl $8,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1rfd
Lc1rfc:
	addl $_s1oVe_info-(1b)+0,%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	movl %ecx,16(%ebx)
	leal -3(%edi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_zdfFunctorRenderFzuzdcfmap_info
Lc1rfd:
	movl $8,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziRenderziInternal_zdfFunctorRenderFzuzdczlzd_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdfFunctorRenderFzuzdczlzd_info - _CoreziRenderziInternal_zdfFunctorRenderFzuzdczlzd_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfFunctorRenderF_closure
_CoreziRenderziInternal_zdfFunctorRenderF_closure:
	.long	_base_GHCziBase_DZCFunctor_static_info
	.long	_CoreziRenderziInternal_zdfFunctorRenderFzuzdcfmap_closure+2
	.long	_CoreziRenderziInternal_zdfFunctorRenderFzuzdczlzd_closure+2
	.long	1
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfMonadIORenderzuzdcliftIO_closure
_CoreziRenderziInternal_zdfMonadIORenderzuzdcliftIO_closure:
	.long	_CoreziRenderziInternal_zdfMonadIORenderzuzdcliftIO_info
.text
	.align 2
_CoreziRenderziInternal_zdfMonadIORenderzuzdcliftIO_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfMonadIORenderzuzdcliftIO_info
_CoreziRenderziInternal_zdfMonadIORenderzuzdcliftIO_info:
Lc1rfu:
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_zdfMonadIORender1_info
	.long  _CoreziRenderziInternal_zdfMonadIORenderzuzdcliftIO_info - _CoreziRenderziInternal_zdfMonadIORenderzuzdcliftIO_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfAffineRender1_closure
_CoreziRenderziInternal_zdfAffineRender1_closure:
	.long	_CoreziRenderziInternal_zdfAffineRender1_info
.text
	.align 2
_s1oVT_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oVT_info:
Lc1rgs:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rgz
Lc1rgA:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1rgp_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1rgp_info
Lc1rgq:
	jmp *(%esi)
Lc1rgz:
	jmp *-16(%ebx)
	.long  _s1oVT_info - _s1oVT_info_dsp
.text
	.align 2
_c1rgp_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rgp_info:
Lc1rgp:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rgD
Lc1rgC:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1rgD:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rgp_info - _c1rgp_info_dsp
.text
	.align 2
_s1oVZ_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oVZ_info:
Lc1rgS:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rgT
Lc1rgU:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1rgT:
	jmp *-16(%ebx)
	.long  _s1oVZ_info - _s1oVZ_info_dsp
.text
	.align 2
_s1oW0_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1oW0_info:
Lc1rgV:
	call 1f
1:	popl	%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rgW
Lc1rgX:
	addl $_c1rgM_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_v_fast
Lc1rgW:
	jmp *-8(%ebx)
	.long  _s1oW0_info - _s1oW0_info_dsp
.text
	.align 2
_c1rgM_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rgM_info:
Lc1rgM:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rh0
Lc1rgZ:
	addl $_s1oVZ_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rh0:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rgM_info - _c1rgM_info_dsp
.text
	.align 2
_s1oW7_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1oW7_info:
Lc1rha:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1rhh
Lc1rhi:
	addl $_c1rh8_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_p_fast
Lc1rhh:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oW7_info - _s1oW7_info_dsp
.text
	.align 2
_c1rh8_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rh8_info:
Lc1rh8:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rhl
Lc1rhk:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1rhl:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rh8_info - _c1rh8_info_dsp
.text
	.align 2
_s1oWf_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oWf_info:
Lc1rhz:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rhA
Lc1rhB:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1rhA:
	jmp *-16(%ebx)
	.long  _s1oWf_info - _s1oWf_info_dsp
.text
	.align 2
_s1oWg_info_dsp:
.text
	.align 2
	.long	131077
	.long	1
	.long	10
_s1oWg_info:
Lc1rhC:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1rhD
Lc1rhE:
	addl $_c1rht_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 2(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_pv_fast
Lc1rhD:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oWg_info - _s1oWg_info_dsp
.text
	.align 2
_c1rht_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rht_info:
Lc1rht:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rhH
Lc1rhG:
	addl $_s1oWf_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rhH:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rht_info - _c1rht_info_dsp
.text
	.align 2
_s1oWh_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oWh_info:
Lc1rhX:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rhY
Lc1rhZ:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1rgg_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1rgg_info
Lc1rgh:
	jmp *(%esi)
Lc1rhY:
	jmp *-16(%ebx)
	.long  _s1oWh_info - _s1oWh_info_dsp
.text
	.align 2
_c1rgg_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rgg_info:
Lc1rgg:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1rhV
Lc1rhW:
	cmpl $2,%ecx
	jae Lc1rhP
Lc1rhQ:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1ri3
Lc1ri2:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1oVT_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rhP:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1ri7
Lc1ri6:
	movl 2(%esi),%ecx
	movl %eax,%edx
	addl $_s1oW0_info-(1b)+0,%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Action_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -11(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rhS:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1rif
Lc1rie:
	movl (%ecx),%edx
	movl 4(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1oWg_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_MorphAct_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -4(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rhV:
	cmpl $4,%ecx
	jae Lc1rhS
Lc1rhT:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1rif
Lc1ria:
	movl 1(%ecx),%edx
	movl 5(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1oW7_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_Morph_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -5(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1ri3:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1ri7:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1rif:
	movl $20,904(%ebx)
	movl %ecx,%esi
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rgg_info - _c1rgg_info_dsp
.text
	.align 2
_s1oVp_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oVp_info:
Lc1riH:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1riO
Lc1riP:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1riE_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1riE_info
Lc1riF:
	jmp *(%esi)
Lc1riO:
	jmp *-16(%ebx)
	.long  _s1oVp_info - _s1oVp_info_dsp
.text
	.align 2
_c1riE_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1riE_info:
Lc1riE:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1riS
Lc1riR:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1riS:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1riE_info - _c1riE_info_dsp
.text
	.align 2
_s1oVv_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oVv_info:
Lc1rj7:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rj8
Lc1rj9:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1rj8:
	jmp *-16(%ebx)
	.long  _s1oVv_info - _s1oVv_info_dsp
.text
	.align 2
_s1oVw_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1oVw_info:
Lc1rja:
	call 1f
1:	popl	%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rjb
Lc1rjc:
	addl $_c1rj1_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_v_fast
Lc1rjb:
	jmp *-8(%ebx)
	.long  _s1oVw_info - _s1oVw_info_dsp
.text
	.align 2
_c1rj1_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rj1_info:
Lc1rj1:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rjf
Lc1rje:
	addl $_s1oVv_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rjf:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rj1_info - _c1rj1_info_dsp
.text
	.align 2
_s1oVD_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1oVD_info:
Lc1rjp:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1rjw
Lc1rjx:
	addl $_c1rjn_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_p_fast
Lc1rjw:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oVD_info - _s1oVD_info_dsp
.text
	.align 2
_c1rjn_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rjn_info:
Lc1rjn:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rjA
Lc1rjz:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1rjA:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rjn_info - _c1rjn_info_dsp
.text
	.align 2
_s1oVL_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oVL_info:
Lc1rjO:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rjP
Lc1rjQ:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1rjP:
	jmp *-16(%ebx)
	.long  _s1oVL_info - _s1oVL_info_dsp
.text
	.align 2
_s1oVM_info_dsp:
.text
	.align 2
	.long	131077
	.long	1
	.long	10
_s1oVM_info:
Lc1rjR:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1rjS
Lc1rjT:
	addl $_c1rjI_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 2(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_pv_fast
Lc1rjS:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oVM_info - _s1oVM_info_dsp
.text
	.align 2
_c1rjI_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rjI_info:
Lc1rjI:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rjW
Lc1rjV:
	addl $_s1oVL_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rjW:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rjI_info - _c1rjI_info_dsp
.text
	.align 2
_s1oVN_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oVN_info:
Lc1rkc:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rkd
Lc1rke:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1riv_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1riv_info
Lc1riw:
	jmp *(%esi)
Lc1rkd:
	jmp *-16(%ebx)
	.long  _s1oVN_info - _s1oVN_info_dsp
.text
	.align 2
_c1riv_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1riv_info:
Lc1riv:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1rka
Lc1rkb:
	cmpl $2,%ecx
	jae Lc1rk4
Lc1rk5:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rki
Lc1rkh:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1oVp_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rk4:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rkm
Lc1rkl:
	movl 2(%esi),%ecx
	movl %eax,%edx
	addl $_s1oVw_info-(1b)+0,%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Action_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -11(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rk7:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1rku
Lc1rkt:
	movl (%ecx),%edx
	movl 4(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1oVM_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_MorphAct_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -4(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rka:
	cmpl $4,%ecx
	jae Lc1rk7
Lc1rk8:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1rku
Lc1rkp:
	movl 1(%ecx),%edx
	movl 5(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1oVD_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_Morph_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -5(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rki:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1rkm:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1rku:
	movl $20,904(%ebx)
	movl %ecx,%esi
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1riv_info - _c1riv_info_dsp
.text
	.align 2
_CoreziRenderziInternal_zdfAffineRender1_info_dsp:
.text
	.align 2
	.long	262168
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfAffineRender1_info
_CoreziRenderziInternal_zdfAffineRender1_info:
Lc1rkE:
	call 1f
1:	popl	%eax
	addl $140,%edi
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1rkI
Lc1rkH:
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_s1oWh_info-(1b)+0,%eax
	movl %eax,-136(%edi)
	movl %edx,-124(%edi)
	movl 64(%esp),%eax
	addl $_s1oVN_info-(1b)+0,%eax
	movl %eax,-120(%edi)
	movl 76(%esp),%eax
	movl %eax,-108(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-104(%edi)
	leal -120(%edi),%eax
	movl %eax,-100(%edi)
	leal -136(%edi),%eax
	movl %eax,-96(%edi)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_Translated_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-92(%edi)
	leal -103(%edi),%eax
	movl %eax,-88(%edi)
	movl %ecx,-84(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-80(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-76(%edi)
	leal -91(%edi),%ecx
	movl %ecx,-72(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-68(%edi)
	movl L_CoreziRenderziInternal_Scaled_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-64(%edi)
	movl 88(%esp),%ecx
	movl %ecx,-60(%edi)
	leal -74(%edi),%ecx
	movl %ecx,-56(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-52(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-48(%edi)
	leal -63(%edi),%ecx
	movl %ecx,-44(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-40(%edi)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-36(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-32(%edi)
	movl %edx,-28(%edi)
	movl L_CoreziRenderziInternal_Translated_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-24(%edi)
	leal -35(%edi),%ecx
	movl %ecx,-20(%edi)
	leal -46(%edi),%ecx
	movl %ecx,-16(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	leal -23(%edi),%ecx
	movl %ecx,-4(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	jmp *(%ebp)
Lc1rkI:
	movl $140,904(%ebx)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_zdfAffineRender1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdfAffineRender1_info - _CoreziRenderziInternal_zdfAffineRender1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfAffineRenderzuzdcscaleAt_closure
_CoreziRenderziInternal_zdfAffineRenderzuzdcscaleAt_closure:
	.long	_CoreziRenderziInternal_zdfAffineRenderzuzdcscaleAt_info
.text
	.align 2
_CoreziRenderziInternal_zdfAffineRenderzuzdcscaleAt_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfAffineRenderzuzdcscaleAt_info
_CoreziRenderziInternal_zdfAffineRenderzuzdcscaleAt_info:
Lc1rod:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1roe
Lc1rof:
	movl 64(%esp),%eax
	addl $_c1roa_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl %edx,%esi
	movl 76(%esp),%eax
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1roa_info
Lc1rob:
	jmp *(%esi)
Lc1roe:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_zdfAffineRenderzuzdcscaleAt_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdfAffineRenderzuzdcscaleAt_info - _CoreziRenderziInternal_zdfAffineRenderzuzdcscaleAt_info_dsp
.text
	.align 2
_c1roa_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1roa_info:
Lc1roa:
	movl 8(%ebp),%eax
	movl %eax,32(%ebx)
	movl 7(%esi),%eax
	movl %eax,24(%ebx)
	movl 3(%esi),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $12,%ebp
	jmp _CoreziRenderziInternal_zdfAffineRender1_info
	.long  _c1roa_info - _c1roa_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfAffineRender3_closure
_CoreziRenderziInternal_zdfAffineRender3_closure:
	.long	_CoreziRenderziInternal_zdfAffineRender3_info
.text
	.align 2
_s1oX8_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oX8_info:
Lc1rpo:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rpv
Lc1rpw:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1rpl_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1rpl_info
Lc1rpm:
	jmp *(%esi)
Lc1rpv:
	jmp *-16(%ebx)
	.long  _s1oX8_info - _s1oX8_info_dsp
.text
	.align 2
_c1rpl_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rpl_info:
Lc1rpl:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rpz
Lc1rpy:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1rpz:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rpl_info - _c1rpl_info_dsp
.text
	.align 2
_s1oXe_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oXe_info:
Lc1rpO:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rpP
Lc1rpQ:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1rpP:
	jmp *-16(%ebx)
	.long  _s1oXe_info - _s1oXe_info_dsp
.text
	.align 2
_s1oXf_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1oXf_info:
Lc1rpR:
	call 1f
1:	popl	%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rpS
Lc1rpT:
	addl $_c1rpI_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_v_fast
Lc1rpS:
	jmp *-8(%ebx)
	.long  _s1oXf_info - _s1oXf_info_dsp
.text
	.align 2
_c1rpI_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rpI_info:
Lc1rpI:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rpW
Lc1rpV:
	addl $_s1oXe_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rpW:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rpI_info - _c1rpI_info_dsp
.text
	.align 2
_s1oXm_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1oXm_info:
Lc1rq6:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1rqd
Lc1rqe:
	addl $_c1rq4_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_p_fast
Lc1rqd:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oXm_info - _s1oXm_info_dsp
.text
	.align 2
_c1rq4_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rq4_info:
Lc1rq4:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rqh
Lc1rqg:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1rqh:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rq4_info - _c1rq4_info_dsp
.text
	.align 2
_s1oXu_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oXu_info:
Lc1rqv:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rqw
Lc1rqx:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1rqw:
	jmp *-16(%ebx)
	.long  _s1oXu_info - _s1oXu_info_dsp
.text
	.align 2
_s1oXv_info_dsp:
.text
	.align 2
	.long	131077
	.long	1
	.long	10
_s1oXv_info:
Lc1rqy:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1rqz
Lc1rqA:
	addl $_c1rqp_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 2(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_pv_fast
Lc1rqz:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oXv_info - _s1oXv_info_dsp
.text
	.align 2
_c1rqp_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rqp_info:
Lc1rqp:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rqD
Lc1rqC:
	addl $_s1oXu_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rqD:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rqp_info - _c1rqp_info_dsp
.text
	.align 2
_s1oXw_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oXw_info:
Lc1rqT:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rqU
Lc1rqV:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1rpc_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1rpc_info
Lc1rpd:
	jmp *(%esi)
Lc1rqU:
	jmp *-16(%ebx)
	.long  _s1oXw_info - _s1oXw_info_dsp
.text
	.align 2
_c1rpc_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rpc_info:
Lc1rpc:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1rqR
Lc1rqS:
	cmpl $2,%ecx
	jae Lc1rqL
Lc1rqM:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rqZ
Lc1rqY:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1oX8_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rqL:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rr3
Lc1rr2:
	movl 2(%esi),%ecx
	movl %eax,%edx
	addl $_s1oXf_info-(1b)+0,%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Action_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -11(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rqO:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1rrb
Lc1rra:
	movl (%ecx),%edx
	movl 4(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1oXv_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_MorphAct_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -4(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rqR:
	cmpl $4,%ecx
	jae Lc1rqO
Lc1rqP:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1rrb
Lc1rr6:
	movl 1(%ecx),%edx
	movl 5(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1oXm_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_Morph_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -5(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rqZ:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1rr3:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1rrb:
	movl $20,904(%ebx)
	movl %ecx,%esi
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rpc_info - _c1rpc_info_dsp
.text
	.align 2
_s1oWE_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oWE_info:
Lc1rrD:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rrK
Lc1rrL:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1rrA_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1rrA_info
Lc1rrB:
	jmp *(%esi)
Lc1rrK:
	jmp *-16(%ebx)
	.long  _s1oWE_info - _s1oWE_info_dsp
.text
	.align 2
_c1rrA_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rrA_info:
Lc1rrA:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rrO
Lc1rrN:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1rrO:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rrA_info - _c1rrA_info_dsp
.text
	.align 2
_s1oWK_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oWK_info:
Lc1rs3:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rs4
Lc1rs5:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1rs4:
	jmp *-16(%ebx)
	.long  _s1oWK_info - _s1oWK_info_dsp
.text
	.align 2
_s1oWL_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1oWL_info:
Lc1rs6:
	call 1f
1:	popl	%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rs7
Lc1rs8:
	addl $_c1rrX_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_v_fast
Lc1rs7:
	jmp *-8(%ebx)
	.long  _s1oWL_info - _s1oWL_info_dsp
.text
	.align 2
_c1rrX_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rrX_info:
Lc1rrX:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rsb
Lc1rsa:
	addl $_s1oWK_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rsb:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rrX_info - _c1rrX_info_dsp
.text
	.align 2
_s1oWS_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1oWS_info:
Lc1rsl:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1rss
Lc1rst:
	addl $_c1rsj_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_p_fast
Lc1rss:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oWS_info - _s1oWS_info_dsp
.text
	.align 2
_c1rsj_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rsj_info:
Lc1rsj:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rsw
Lc1rsv:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1rsw:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rsj_info - _c1rsj_info_dsp
.text
	.align 2
_s1oX0_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oX0_info:
Lc1rsK:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rsL
Lc1rsM:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1rsL:
	jmp *-16(%ebx)
	.long  _s1oX0_info - _s1oX0_info_dsp
.text
	.align 2
_s1oX1_info_dsp:
.text
	.align 2
	.long	131077
	.long	1
	.long	10
_s1oX1_info:
Lc1rsN:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1rsO
Lc1rsP:
	addl $_c1rsE_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 2(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_pv_fast
Lc1rsO:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1oX1_info - _s1oX1_info_dsp
.text
	.align 2
_c1rsE_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rsE_info:
Lc1rsE:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rsS
Lc1rsR:
	addl $_s1oX0_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rsS:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rsE_info - _c1rsE_info_dsp
.text
	.align 2
_s1oX2_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1oX2_info:
Lc1rt8:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rt9
Lc1rta:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1rrr_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1rrr_info
Lc1rrs:
	jmp *(%esi)
Lc1rt9:
	jmp *-16(%ebx)
	.long  _s1oX2_info - _s1oX2_info_dsp
.text
	.align 2
_c1rrr_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rrr_info:
Lc1rrr:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1rt6
Lc1rt7:
	cmpl $2,%ecx
	jae Lc1rt0
Lc1rt1:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rte
Lc1rtd:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1oWE_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rt0:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rti
Lc1rth:
	movl 2(%esi),%ecx
	movl %eax,%edx
	addl $_s1oWL_info-(1b)+0,%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Action_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -11(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rt3:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1rtq
Lc1rtp:
	movl (%ecx),%edx
	movl 4(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1oX1_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_MorphAct_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -4(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rt6:
	cmpl $4,%ecx
	jae Lc1rt3
Lc1rt4:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1rtq
Lc1rtl:
	movl 1(%ecx),%edx
	movl 5(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1oWS_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_Morph_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -5(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rte:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1rti:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1rtq:
	movl $20,904(%ebx)
	movl %ecx,%esi
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rrr_info - _c1rrr_info_dsp
.text
	.align 2
_CoreziRenderziInternal_zdfAffineRender3_info_dsp:
.text
	.align 2
	.long	262168
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfAffineRender3_info
_CoreziRenderziInternal_zdfAffineRender3_info:
Lc1rtA:
	call 1f
1:	popl	%eax
	addl $140,%edi
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1rtE
Lc1rtD:
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_s1oXw_info-(1b)+0,%eax
	movl %eax,-136(%edi)
	movl %edx,-124(%edi)
	movl 64(%esp),%eax
	addl $_s1oX2_info-(1b)+0,%eax
	movl %eax,-120(%edi)
	movl 76(%esp),%eax
	movl %eax,-108(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-104(%edi)
	leal -120(%edi),%eax
	movl %eax,-100(%edi)
	leal -136(%edi),%eax
	movl %eax,-96(%edi)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_Translated_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-92(%edi)
	leal -103(%edi),%eax
	movl %eax,-88(%edi)
	movl %ecx,-84(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-80(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-76(%edi)
	leal -91(%edi),%ecx
	movl %ecx,-72(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-68(%edi)
	movl L_CoreziRenderziInternal_Rotated_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-64(%edi)
	movl 88(%esp),%ecx
	movl %ecx,-60(%edi)
	leal -74(%edi),%ecx
	movl %ecx,-56(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-52(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-48(%edi)
	leal -63(%edi),%ecx
	movl %ecx,-44(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-40(%edi)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-36(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-32(%edi)
	movl %edx,-28(%edi)
	movl L_CoreziRenderziInternal_Translated_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-24(%edi)
	leal -35(%edi),%ecx
	movl %ecx,-20(%edi)
	leal -46(%edi),%ecx
	movl %ecx,-16(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	leal -23(%edi),%ecx
	movl %ecx,-4(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	jmp *(%ebp)
Lc1rtE:
	movl $140,904(%ebx)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_zdfAffineRender3_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdfAffineRender3_info - _CoreziRenderziInternal_zdfAffineRender3_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfAffineRenderzuzdcrotateAt_closure
_CoreziRenderziInternal_zdfAffineRenderzuzdcrotateAt_closure:
	.long	_CoreziRenderziInternal_zdfAffineRenderzuzdcrotateAt_info
.text
	.align 2
_CoreziRenderziInternal_zdfAffineRenderzuzdcrotateAt_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfAffineRenderzuzdcrotateAt_info
_CoreziRenderziInternal_zdfAffineRenderzuzdcrotateAt_info:
Lc1rx9:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1rxa
Lc1rxb:
	movl 64(%esp),%eax
	addl $_c1rx6_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl %edx,%esi
	movl 76(%esp),%eax
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1rx6_info
Lc1rx7:
	jmp *(%esi)
Lc1rxa:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_zdfAffineRenderzuzdcrotateAt_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdfAffineRenderzuzdcrotateAt_info - _CoreziRenderziInternal_zdfAffineRenderzuzdcrotateAt_info_dsp
.text
	.align 2
_c1rx6_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1rx6_info:
Lc1rx6:
	movl 8(%ebp),%eax
	movl %eax,32(%ebx)
	movl 7(%esi),%eax
	movl %eax,24(%ebx)
	movl 3(%esi),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $12,%ebp
	jmp _CoreziRenderziInternal_zdfAffineRender3_info
	.long  _c1rx6_info - _c1rx6_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfAffineRenderzuzdcscale_closure
_CoreziRenderziInternal_zdfAffineRenderzuzdcscale_closure:
	.long	_CoreziRenderziInternal_zdfAffineRenderzuzdcscale_info
.text
	.align 2
_CoreziRenderziInternal_zdfAffineRenderzuzdcscale_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfAffineRenderzuzdcscale_info
_CoreziRenderziInternal_zdfAffineRenderzuzdcscale_info:
Lc1rxy:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_zdfAffineRender4_info
	.long  _CoreziRenderziInternal_zdfAffineRenderzuzdcscale_info - _CoreziRenderziInternal_zdfAffineRenderzuzdcscale_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfAffineRenderzuzdcrotate_closure
_CoreziRenderziInternal_zdfAffineRenderzuzdcrotate_closure:
	.long	_CoreziRenderziInternal_zdfAffineRenderzuzdcrotate_info
.text
	.align 2
_CoreziRenderziInternal_zdfAffineRenderzuzdcrotate_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfAffineRenderzuzdcrotate_info
_CoreziRenderziInternal_zdfAffineRenderzuzdcrotate_info:
Lc1rxL:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_zdfAffineRender5_info
	.long  _CoreziRenderziInternal_zdfAffineRenderzuzdcrotate_info - _CoreziRenderziInternal_zdfAffineRenderzuzdcrotate_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfAffineRenderzuzdctranslate_closure
_CoreziRenderziInternal_zdfAffineRenderzuzdctranslate_closure:
	.long	_CoreziRenderziInternal_zdfAffineRenderzuzdctranslate_info
.text
	.align 2
_CoreziRenderziInternal_zdfAffineRenderzuzdctranslate_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfAffineRenderzuzdctranslate_info
_CoreziRenderziInternal_zdfAffineRenderzuzdctranslate_info:
Lc1rxY:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_zdfAffineRender6_info
	.long  _CoreziRenderziInternal_zdfAffineRenderzuzdctranslate_info - _CoreziRenderziInternal_zdfAffineRenderzuzdctranslate_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfAffineRenderzuzdcaffine_closure
_CoreziRenderziInternal_zdfAffineRenderzuzdcaffine_closure:
	.long	_CoreziRenderziInternal_zdfAffineRenderzuzdcaffine_info
.text
	.align 2
.globl _CoreziRenderziInternal_zdfAffineRenderzuzdcaffine_slow
_CoreziRenderziInternal_zdfAffineRenderzuzdcaffine_slow:
Lc1ry8:
	movl 16(%ebp),%eax
	movl %eax,40(%ebx)
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl (%ebp),%eax
	movl %eax,8(%ebx)
	addl $20,%ebp
	jmp _CoreziRenderziInternal_zdfAffineRenderzuzdcaffine_info
.text
	.align 2
_CoreziRenderziInternal_zdfAffineRenderzuzdcaffine_info_dsp:
.text
	.align 2
	.long	_CoreziRenderziInternal_zdfAffineRenderzuzdcaffine_slow-(_CoreziRenderziInternal_zdfAffineRenderzuzdcaffine_info)+0
	.long	7
	.long	0
	.long	458752
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfAffineRenderzuzdcaffine_info
_CoreziRenderziInternal_zdfAffineRenderzuzdcaffine_info:
Lc1ryc:
	movl 40(%ebx),%eax
	movl %eax,40(%ebx)
	movl 32(%ebx),%eax
	movl %eax,32(%ebx)
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_zdfAffineRender7_info
	.long  _CoreziRenderziInternal_zdfAffineRenderzuzdcaffine_info - _CoreziRenderziInternal_zdfAffineRenderzuzdcaffine_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfAffineRender_closure
_CoreziRenderziInternal_zdfAffineRender_closure:
	.long	_CoreziShapeziInternal_DZCAffine_static_info
	.long	_CoreziRenderziInternal_zdfAffineRender7_closure+7
	.long	_CoreziRenderziInternal_zdfAffineRender6_closure+2
	.long	_CoreziRenderziInternal_zdfAffineRender5_closure+2
	.long	_CoreziRenderziInternal_zdfAffineRender4_closure+2
	.long	_CoreziRenderziInternal_zdfAffineRenderzuzdcrotateAt_closure+3
	.long	_CoreziRenderziInternal_zdfAffineRenderzuzdcscaleAt_closure+3
	.long	1
.data
	.align 2
.align 0
_r1mSw_closure:
	.long	_r1mSw_info
	.long	0
.text
	.align 2
_r1mSw_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_r1mSw_info)+84
	.long	65541
	.long	0
	.long	65551
_r1mSw_info:
Lc1ryB:
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _base_GHCziErr_error_info
	.long  _r1mSw_info - _r1mSw_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfMonadRenderzuzdcfail_closure
_CoreziRenderziInternal_zdfMonadRenderzuzdcfail_closure:
	.long	_CoreziRenderziInternal_zdfMonadRenderzuzdcfail_info
	.long	0
.text
	.align 2
_CoreziRenderziInternal_zdfMonadRenderzuzdcfail_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_zdfMonadRenderzuzdcfail_info)+88
	.long	65541
	.long	0
	.long	65551
.globl _CoreziRenderziInternal_zdfMonadRenderzuzdcfail_info
_CoreziRenderziInternal_zdfMonadRenderzuzdcfail_info:
Lc1ryN:
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _r1mSw_info
	.long  _CoreziRenderziInternal_zdfMonadRenderzuzdcfail_info - _CoreziRenderziInternal_zdfMonadRenderzuzdcfail_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfApplicativeRenderzuzdcreturn_closure
_CoreziRenderziInternal_zdfApplicativeRenderzuzdcreturn_closure:
	.long	_CoreziRenderziInternal_zdfApplicativeRenderzuzdcreturn_info
.text
	.align 2
_CoreziRenderziInternal_zdfApplicativeRenderzuzdcreturn_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfApplicativeRenderzuzdcreturn_info
_CoreziRenderziInternal_zdfApplicativeRenderzuzdcreturn_info:
Lc1rz0:
	call 1f
1:	popl	%eax
	addl $8,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1rz4
Lc1rz3:
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_ReturnS_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -3(%edi),%esi
	jmp *(%ebp)
Lc1rz4:
	movl $8,904(%ebx)
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_zdfApplicativeRenderzuzdcreturn_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdfApplicativeRenderzuzdcreturn_info - _CoreziRenderziInternal_zdfApplicativeRenderzuzdcreturn_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfMonadRenderzuzdczgzg_closure
_CoreziRenderziInternal_zdfMonadRenderzuzdczgzg_closure:
	.long	_CoreziRenderziInternal_zdfMonadRenderzuzdczgzg_info
.text
	.align 2
_CoreziRenderziInternal_zdfMonadRenderzuzdczgzg_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfMonadRenderzuzdczgzg_info
_CoreziRenderziInternal_zdfMonadRenderzuzdczgzg_info:
Lc1rzf:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzg_info
	.long  _CoreziRenderziInternal_zdfMonadRenderzuzdczgzg_info - _CoreziRenderziInternal_zdfMonadRenderzuzdczgzg_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfMonadRenderzuzdczgzgze_closure
_CoreziRenderziInternal_zdfMonadRenderzuzdczgzgze_closure:
	.long	_CoreziRenderziInternal_zdfMonadRenderzuzdczgzgze_info
.text
	.align 2
_CoreziRenderziInternal_zdfMonadRenderzuzdczgzgze_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfMonadRenderzuzdczgzgze_info
_CoreziRenderziInternal_zdfMonadRenderzuzdczgzgze_info:
Lc1rzs:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzgze_info
	.long  _CoreziRenderziInternal_zdfMonadRenderzuzdczgzgze_info - _CoreziRenderziInternal_zdfMonadRenderzuzdczgzgze_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfApplicativeRenderzuzdczlzt_closure
_CoreziRenderziInternal_zdfApplicativeRenderzuzdczlzt_closure:
	.long	_CoreziRenderziInternal_zdfApplicativeRenderzuzdczlzt_info
.text
	.align 2
_CoreziRenderziInternal_zdfApplicativeRenderzuzdczlzt_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfApplicativeRenderzuzdczlzt_info
_CoreziRenderziInternal_zdfApplicativeRenderzuzdczlzt_info:
Lc1rzF:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_zdwzdczlzt_info
	.long  _CoreziRenderziInternal_zdfApplicativeRenderzuzdczlzt_info - _CoreziRenderziInternal_zdfApplicativeRenderzuzdczlzt_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfApplicativeRenderzuzdcztzg_closure
_CoreziRenderziInternal_zdfApplicativeRenderzuzdcztzg_closure:
	.long	_CoreziRenderziInternal_zdfApplicativeRenderzuzdcztzg_info
.text
	.align 2
_CoreziRenderziInternal_zdfApplicativeRenderzuzdcztzg_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfApplicativeRenderzuzdcztzg_info
_CoreziRenderziInternal_zdfApplicativeRenderzuzdcztzg_info:
Lc1rzS:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_zdfApplicativeRenderzuzdszdfApplicativeSkeletonzuzdcztzg_info
	.long  _CoreziRenderziInternal_zdfApplicativeRenderzuzdcztzg_info - _CoreziRenderziInternal_zdfApplicativeRenderzuzdcztzg_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfApplicativeRenderzuzdczlztzg_closure
_CoreziRenderziInternal_zdfApplicativeRenderzuzdczlztzg_closure:
	.long	_CoreziRenderziInternal_zdfApplicativeRenderzuzdczlztzg_info
.text
	.align 2
_CoreziRenderziInternal_zdfApplicativeRenderzuzdczlztzg_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdfApplicativeRenderzuzdczlztzg_info
_CoreziRenderziInternal_zdfApplicativeRenderzuzdczlztzg_info:
Lc1rA5:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_zdwzdczlztzg_info
	.long  _CoreziRenderziInternal_zdfApplicativeRenderzuzdczlztzg_info - _CoreziRenderziInternal_zdfApplicativeRenderzuzdczlztzg_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfFunctorRenderzuzdczlzd_closure
_CoreziRenderziInternal_zdfFunctorRenderzuzdczlzd_closure:
	.long	_CoreziRenderziInternal_zdfFunctorRenderzuzdczlzd_info
	.long	0
.text
	.align 2
_CoreziRenderziInternal_zdfFunctorRenderzuzdczlzd_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_zdfFunctorRenderzuzdczlzd_info)+92
	.long	131087
	.long	0
	.long	65551
.globl _CoreziRenderziInternal_zdfFunctorRenderzuzdczlzd_info
_CoreziRenderziInternal_zdfFunctorRenderzuzdczlzd_info:
Lc1rAi:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_zdfFunctorSkeletonzuzdczlzd_info
	.long  _CoreziRenderziInternal_zdfFunctorRenderzuzdczlzd_info - _CoreziRenderziInternal_zdfFunctorRenderzuzdczlzd_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfFunctorRenderzuzdcfmap_closure
_CoreziRenderziInternal_zdfFunctorRenderzuzdcfmap_closure:
	.long	_CoreziRenderziInternal_zdfFunctorRenderzuzdcfmap_info
	.long	0
.text
	.align 2
_CoreziRenderziInternal_zdfFunctorRenderzuzdcfmap_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_zdfFunctorRenderzuzdcfmap_info)+52
	.long	131087
	.long	0
	.long	65551
.globl _CoreziRenderziInternal_zdfFunctorRenderzuzdcfmap_info
_CoreziRenderziInternal_zdfFunctorRenderzuzdcfmap_info:
Lc1rAv:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_zdfFunctorSkeletonzuzdcfmap_info
	.long  _CoreziRenderziInternal_zdfFunctorRenderzuzdcfmap_info - _CoreziRenderziInternal_zdfFunctorRenderzuzdcfmap_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfFunctorRender_closure
_CoreziRenderziInternal_zdfFunctorRender_closure:
	.long	_base_GHCziBase_DZCFunctor_static_info
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_zdfFunctorSkeletonzuzdcfmap_closure+2
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_zdfFunctorSkeletonzuzdczlzd_closure+2
	.long	0
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfApplicativeRender_closure
_CoreziRenderziInternal_zdfApplicativeRender_closure:
	.long	_base_GHCziBase_DZCApplicative_static_info
	.long	_CoreziRenderziInternal_zdfFunctorRender_closure+1
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_ReturnS_closure+1
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_zdwzdczlztzg_closure+2
	.long	_CoreziRenderziInternal_zdfApplicativeRenderzuzdszdfApplicativeSkeletonzuzdcztzg_closure+2
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_zdwzdczlzt_closure+2
	.long	0
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfMonadRender_closure
_CoreziRenderziInternal_zdfMonadRender_closure:
	.long	_base_GHCziBase_DZCMonad_static_info
	.long	_CoreziRenderziInternal_zdfApplicativeRender_closure+1
	.long	_CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzgze_closure+2
	.long	_CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzg_closure+2
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_ReturnS_closure+1
	.long	_base_GHCziErr_error_closure+1
	.long	0
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdfMonadIORender_closure
_CoreziRenderziInternal_zdfMonadIORender_closure:
	.long	_z30UqEPBHMdsbP05EH96SVtGd_ControlziMonadziIOziClass_DZCMonadIO_static_info
	.long	_CoreziRenderziInternal_zdfMonadRender_closure+1
	.long	_CoreziRenderziInternal_zdfMonadIORender1_closure+1
	.long	0
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_clipzuf2_closure
_CoreziRenderziInternal_clipzuf2_closure:
	.long	_CoreziRenderziInternal_clipzuf2_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1rB1_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	99
	.byte	116
	.byte	120
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	99
	.byte	108
	.byte	105
	.byte	112
	.byte	40
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_clipzuf2_info_dsp:
.text
	.align 2
	.long	0
	.long	22
.globl _CoreziRenderziInternal_clipzuf2_info
_CoreziRenderziInternal_clipzuf2_info:
Lc1rB4:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rBm
Lc1rBn:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1rB0
Lc1rAZ:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1rB2_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1rB1_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1rB0:
	jmp *(%esi)
Lc1rBm:
	jmp *-16(%ebx)
	.long  _CoreziRenderziInternal_clipzuf2_info - _CoreziRenderziInternal_clipzuf2_info_dsp
.text
	.align 2
_c1rB2_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rB2_info:
Lc1rB2:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1rB7_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rB2_info - _c1rB2_info_dsp
.text
	.align 2
_c1rB7_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rB7_info:
Lc1rB7:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rBr
Lc1rBq:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1rBj_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1rBr:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rB7_info - _c1rB7_info_dsp
.text
	.align 2
_c1rBj_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1rBj_info:
Lc1rBj:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rBv
Lc1rBu:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1rBv:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rBj_info - _c1rBj_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdwa_closure
_CoreziRenderziInternal_zdwa_closure:
	.long	_CoreziRenderziInternal_zdwa_info
.text
	.align 2
_s1oZf_info_dsp:
.text
	.align 2
	.long	4
	.long	16
_s1oZf_info:
Lc1rKI:
	call 1f
1:	popl	%eax
	leal -36(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rKJ
Lc1rPp:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1rKy_info-(1b)+0,%eax
	movl %eax,-28(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 24(%esi),%edx
	movl 12(%esi),%esi
	movl %eax,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl %edx,-16(%ebp)
	addl $-28,%ebp
	testw $7,%si
	jne _c1rKy_info
Lc1rKz:
	jmp *(%esi)
Lc1rKJ:
	jmp *-16(%ebx)
	.long  _s1oZf_info - _s1oZf_info_dsp
.text
	.align 2
_c1rKy_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1rKy_info:
Lc1rKy:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1rKG
Lc1rKH:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1oY9_entry
Lc1rKG:
	addl $_c1rPv_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1rPG
Lc1rPx:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1rPG:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1rPv_info
	.long  _c1rKy_info - _c1rKy_info_dsp
.text
	.align 2
_c1rPv_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1rPv_info:
Lc1rPv:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1oY9_entry
	.long  _c1rPv_info - _c1rPv_info_dsp
.text
	.align 2
_s1oY9_entry:
Ls1oY9:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1tgi-(1b)+0(%eax),%fake1
	fldl Ln1tgi-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1rPn
Lc1rPo:
	cmpl $255,%edx
	jge Lc1rPk
Lc1rOV:
	cmpl $0,%edx
	jl Lc1rPg
Ls1oYd:
	addl $_c1rKZ_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	movl %edx,12(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1rPO
Lc1rL1:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1rPn:
	decl %edx
	cmpl $255,%edx
	jge Lc1rPk
Lc1rPl:
	cmpl $0,%edx
	jl Lc1rPg
	jmp Ls1oYd
Lc1rPk:
	movl $255,%edx
	jmp Ls1oYd
Lc1rPg:
	xorl %edx,%edx
	jmp Ls1oYd
Lu1rPO:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1rKZ_info
.const
	.align 2
.align 3
Ln1tgi:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1rKZ_info_dsp:
.text
	.align 2
	.long	67
	.long	32
_c1rKZ_info:
Lc1rKZ:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd Ln1tgr-(1b)+0(%eax),%fake1
	fldl Ln1tgr-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1rOp
Lc1rOq:
	cmpl $255,%edx
	jge Lc1rOm
Lc1rNX:
	cmpl $0,%edx
	jl Lc1rOi
Ls1oYj:
	addl $_c1rLj_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	movl %edx,8(%ebp)
	testw $7,%si
	jne Lu1rPJ
Lc1rN8:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1rOp:
	decl %edx
	cmpl $255,%edx
	jge Lc1rOm
Lc1rOn:
	cmpl $0,%edx
	jl Lc1rOi
	jmp Ls1oYj
Lc1rOm:
	movl $255,%edx
	jmp Ls1oYj
Lc1rOi:
	xorl %edx,%edx
	jmp Ls1oYj
Lu1rPJ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1rLj_info
	.long  _c1rKZ_info - _c1rKZ_info_dsp
.const
	.align 2
.align 3
Ln1tgr:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1rLj_info_dsp:
.text
	.align 2
	.long	195
	.long	32
_c1rLj_info:
Lc1rLj:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1rNr
Lc1rNs:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1oYl_entry
Lc1rNr:
	addl $_c1rNh_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1rPK
Lc1rNk:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1rPK:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1rNh_info
	.long  _c1rLj_info - _c1rLj_info_dsp
.text
	.align 2
_c1rNh_info_dsp:
.text
	.align 2
	.long	195
	.long	32
_c1rNh_info:
Lc1rNh:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1oYl_entry
	.long  _c1rNh_info - _c1rNh_info_dsp
.text
	.align 2
_s1oYl_entry:
Ls1oYl:
	call 1f
1:	popl	%eax
	movl 20(%ebp),%ecx
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1tgL-(1b)+0(%eax),%fake1
	fldl Ln1tgL-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1rN6
Lc1rN7:
	cmpl $255,%edx
	jge Lc1rN3
Lc1rME:
	cmpl $0,%edx
	jl Lc1rMZ
Ls1oYp:
	addl $_c1rLA_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	movl %edx,20(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1rPP
Lc1rLC:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1rN6:
	decl %edx
	cmpl $255,%edx
	jge Lc1rN3
Lc1rN4:
	cmpl $0,%edx
	jl Lc1rMZ
	jmp Ls1oYp
Lc1rN3:
	movl $255,%edx
	jmp Ls1oYp
Lc1rMZ:
	xorl %edx,%edx
	jmp Ls1oYp
Lu1rPP:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1rLA_info
.const
	.align 2
.align 3
Ln1tgL:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1rLA_info_dsp:
.text
	.align 2
	.long	451
	.long	32
_c1rLA_info:
Lc1rLA:
	call 1f
1:	popl	%eax
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rLI
Lc1rLH:
	movl 4(%ebp),%ecx
	movl 8(%ebp),%edx
	movl %eax,64(%esp)
	movl 12(%ebp),%eax
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gld1sd %fake1
	fld1 ; fstp %st(2)
#	gcmp_le %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1rM8
Lc1rM9:
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gcmp_le %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1rM2
Lc1rM3:
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-20(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl %eax,-8(%edi)
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1rLI:
	movl $24,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1rM2:
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-20(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1rM8:
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-20(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl %eax,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1rLA_info - _c1rLA_info_dsp
.text
	.align 2
_s1p0q_info_dsp:
.text
	.align 2
	.long	4
	.long	16
_s1p0q_info:
Lc1rSW:
	call 1f
1:	popl	%eax
	leal -36(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1rSX
Lc1rXD:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1rSM_info-(1b)+0,%eax
	movl %eax,-28(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 24(%esi),%edx
	movl 12(%esi),%esi
	movl %eax,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl %edx,-16(%ebp)
	addl $-28,%ebp
	testw $7,%si
	jne _c1rSM_info
Lc1rSN:
	jmp *(%esi)
Lc1rSX:
	jmp *-16(%ebx)
	.long  _s1p0q_info - _s1p0q_info_dsp
.text
	.align 2
_c1rSM_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1rSM_info:
Lc1rSM:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1rSU
Lc1rSV:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1oZk_entry
Lc1rSU:
	addl $_c1rXJ_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1rXU
Lc1rXL:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1rXU:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1rXJ_info
	.long  _c1rSM_info - _c1rSM_info_dsp
.text
	.align 2
_c1rXJ_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1rXJ_info:
Lc1rXJ:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1oZk_entry
	.long  _c1rXJ_info - _c1rXJ_info_dsp
.text
	.align 2
_s1oZk_entry:
Ls1oZk:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1thm-(1b)+0(%eax),%fake1
	fldl Ln1thm-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1rXB
Lc1rXC:
	cmpl $255,%edx
	jge Lc1rXy
Lc1rX9:
	cmpl $0,%edx
	jl Lc1rXu
Ls1oZo:
	addl $_c1rTd_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	movl %edx,12(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1rY2
Lc1rTf:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1rXB:
	decl %edx
	cmpl $255,%edx
	jge Lc1rXy
Lc1rXz:
	cmpl $0,%edx
	jl Lc1rXu
	jmp Ls1oZo
Lc1rXy:
	movl $255,%edx
	jmp Ls1oZo
Lc1rXu:
	xorl %edx,%edx
	jmp Ls1oZo
Lu1rY2:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1rTd_info
.const
	.align 2
.align 3
Ln1thm:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1rTd_info_dsp:
.text
	.align 2
	.long	67
	.long	32
_c1rTd_info:
Lc1rTd:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd Ln1thv-(1b)+0(%eax),%fake1
	fldl Ln1thv-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1rWD
Lc1rWE:
	cmpl $255,%edx
	jge Lc1rWA
Lc1rWb:
	cmpl $0,%edx
	jl Lc1rWw
Ls1oZu:
	addl $_c1rTx_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	movl %edx,8(%ebp)
	testw $7,%si
	jne Lu1rXX
Lc1rVm:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1rWD:
	decl %edx
	cmpl $255,%edx
	jge Lc1rWA
Lc1rWB:
	cmpl $0,%edx
	jl Lc1rWw
	jmp Ls1oZu
Lc1rWA:
	movl $255,%edx
	jmp Ls1oZu
Lc1rWw:
	xorl %edx,%edx
	jmp Ls1oZu
Lu1rXX:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1rTx_info
	.long  _c1rTd_info - _c1rTd_info_dsp
.const
	.align 2
.align 3
Ln1thv:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1rTx_info_dsp:
.text
	.align 2
	.long	195
	.long	32
_c1rTx_info:
Lc1rTx:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1rVF
Lc1rVG:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1oZw_entry
Lc1rVF:
	addl $_c1rVv_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1rXY
Lc1rVy:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1rXY:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1rVv_info
	.long  _c1rTx_info - _c1rTx_info_dsp
.text
	.align 2
_c1rVv_info_dsp:
.text
	.align 2
	.long	195
	.long	32
_c1rVv_info:
Lc1rVv:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1oZw_entry
	.long  _c1rVv_info - _c1rVv_info_dsp
.text
	.align 2
_s1oZw_entry:
Ls1oZw:
	call 1f
1:	popl	%eax
	movl 20(%ebp),%ecx
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1thP-(1b)+0(%eax),%fake1
	fldl Ln1thP-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1rVk
Lc1rVl:
	cmpl $255,%edx
	jge Lc1rVh
Lc1rUS:
	cmpl $0,%edx
	jl Lc1rVd
Ls1oZA:
	addl $_c1rTO_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	movl %edx,20(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1rY3
Lc1rTQ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1rVk:
	decl %edx
	cmpl $255,%edx
	jge Lc1rVh
Lc1rVi:
	cmpl $0,%edx
	jl Lc1rVd
	jmp Ls1oZA
Lc1rVh:
	movl $255,%edx
	jmp Ls1oZA
Lc1rVd:
	xorl %edx,%edx
	jmp Ls1oZA
Lu1rY3:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1rTO_info
.const
	.align 2
.align 3
Ln1thP:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1rTO_info_dsp:
.text
	.align 2
	.long	451
	.long	32
_c1rTO_info:
Lc1rTO:
	call 1f
1:	popl	%eax
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1rTW
Lc1rTV:
	movl 4(%ebp),%ecx
	movl 8(%ebp),%edx
	movl %eax,64(%esp)
	movl 12(%ebp),%eax
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gld1sd %fake1
	fld1 ; fstp %st(2)
#	gcmp_le %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1rUm
Lc1rUn:
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gcmp_le %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1rUg
Lc1rUh:
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-20(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl %eax,-8(%edi)
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1rTW:
	movl $24,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1rUg:
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-20(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1rUm:
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-20(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl %eax,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1rTO_info - _c1rTO_info_dsp
.text
	.align 2
_s1p0X_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1p0X_info:
Lc1s22:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1s23
Lc1s24:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1s23:
	jmp *-16(%ebx)
	.long  _s1p0X_info - _s1p0X_info_dsp
.text
	.align 2
_s1p1M_info_dsp:
.text
	.align 2
	.long	5
	.long	16
_s1p1M_info:
Lc1s2f:
	call 1f
1:	popl	%eax
	leal -40(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1s2g
Lc1s6d:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1s25_info-(1b)+0,%eax
	movl %eax,-32(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 24(%esi),%edx
	movl %eax,64(%esp)
	movl 28(%esi),%eax
	movl 12(%esi),%esi
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl %edx,-20(%ebp)
	movl %eax,-16(%ebp)
	addl $-32,%ebp
	testw $7,%si
	jne _c1s25_info
Lc1s26:
	jmp *(%esi)
Lc1s2g:
	jmp *-16(%ebx)
	.long  _s1p1M_info - _s1p1M_info_dsp
.text
	.align 2
_c1s25_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1s25_info:
Lc1s25:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1s2d
Lc1s2e:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p0F_entry
Lc1s2d:
	addl $_c1s6j_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1s6B
Lc1s6l:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1s6B:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1s6j_info
	.long  _c1s25_info - _c1s25_info_dsp
.text
	.align 2
_c1s6j_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1s6j_info:
Lc1s6j:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p0F_entry
	.long  _c1s6j_info - _c1s6j_info_dsp
.text
	.align 2
_s1p0F_entry:
Ls1p0F:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1tiw-(1b)+0(%eax),%fake1
	fldl Ln1tiw-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1s6b
Lc1s6c:
	cmpl $255,%edx
	jge Lc1s68
Lc1s5J:
	cmpl $0,%edx
	jl Lc1s64
Ls1p0J:
	addl $_c1s1s_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	movl %edx,12(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1s6I
Lc1s1t:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1s6b:
	decl %edx
	cmpl $255,%edx
	jge Lc1s68
Lc1s69:
	cmpl $0,%edx
	jl Lc1s64
	jmp Ls1p0J
Lc1s68:
	movl $255,%edx
	jmp Ls1p0J
Lc1s64:
	xorl %edx,%edx
	jmp Ls1p0J
Lu1s6I:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1s1s_info
.const
	.align 2
.align 3
Ln1tiw:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1s1s_info_dsp:
.text
	.align 2
	.long	68
	.long	32
_c1s1s_info:
Lc1s1s:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd Ln1tiF-(1b)+0(%eax),%fake1
	fldl Ln1tiF-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1s5d
Lc1s5e:
	cmpl $255,%edx
	jge Lc1s5a
Lc1s4L:
	cmpl $0,%edx
	jl Lc1s56
Ls1p0P:
	addl $_c1s2k_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	movl %edx,8(%ebp)
	testw $7,%si
	jne Lu1s6z
Lc1s3W:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1s5d:
	decl %edx
	cmpl $255,%edx
	jge Lc1s5a
Lc1s5b:
	cmpl $0,%edx
	jl Lc1s56
	jmp Ls1p0P
Lc1s5a:
	movl $255,%edx
	jmp Ls1p0P
Lc1s56:
	xorl %edx,%edx
	jmp Ls1p0P
Lu1s6z:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1s2k_info
	.long  _c1s1s_info - _c1s1s_info_dsp
.const
	.align 2
.align 3
Ln1tiF:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1s2k_info_dsp:
.text
	.align 2
	.long	196
	.long	32
_c1s2k_info:
Lc1s2k:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1s4f
Lc1s4g:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p0R_entry
Lc1s4f:
	addl $_c1s45_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1s6E
Lc1s48:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1s6E:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1s45_info
	.long  _c1s2k_info - _c1s2k_info_dsp
.text
	.align 2
_c1s45_info_dsp:
.text
	.align 2
	.long	196
	.long	32
_c1s45_info:
Lc1s45:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p0R_entry
	.long  _c1s45_info - _c1s45_info_dsp
.text
	.align 2
_s1p0R_entry:
Ls1p0R:
	call 1f
1:	popl	%eax
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1tiZ-(1b)+0(%eax),%fake1
	fldl Ln1tiZ-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%eax
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %eax ; orl $0xC00, %eax
	movl %eax, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %eax
	addl $8, %esp
#	gitodlsd %eax,%fake1
	pushl %eax ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1s3U
Lc1s3V:
	cmpl $255,%eax
	jge Lc1s3R
Lc1s3s:
	cmpl $0,%eax
	jl Lc1s3N
Lc1s3l:
	movl %eax,8(%ebp)
	addl $8,%ebp
Lu1s6M:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1s1W_entry
Lc1s3U:
	decl %eax
	cmpl $255,%eax
	jge Lc1s3R
Lc1s3S:
	cmpl $0,%eax
	jl Lc1s3N
Lc1s3M:
	movl %eax,8(%ebp)
	addl $8,%ebp
	jmp Lu1s6M
Lc1s3N:
	movl $0,8(%ebp)
	addl $8,%ebp
	jmp Lu1s6M
Lc1s3R:
	movl $255,8(%ebp)
	addl $8,%ebp
	jmp Lu1s6M
.const
	.align 2
.align 3
Ln1tiZ:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1s1W_entry:
Lc1s1W:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1s2q
Lc1s2p:
	movl %eax,%ecx
	addl $_s1p0X_info-(1b)+0,%ecx
	movl %ecx,-12(%edi)
	movl 16(%ebp),%ecx
	movl %ecx,(%edi)
	addl $_c1s2n_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl 12(%ebp),%esi
	addl $-4,%ebp
	jmp _stg_ap_p_fast
Lc1s2q:
	movl $16,904(%ebx)
	movl (%ebp),%ecx
	movl %eax,%edx
	addl $_c1s1V_info-(1b)+0,%edx
	movl %edx,(%ebp)
	movl %ecx,%esi
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
.text
	.align 2
_c1s1V_info_dsp:
.text
	.align 2
	.long	196
	.long	32
_c1s1V_info:
Lc1s1V:
	movl %esi,(%ebp)
	jmp _c1s1W_entry
	.long  _c1s1V_info - _c1s1V_info_dsp
.text
	.align 2
_c1s2n_info_dsp:
.text
	.align 2
	.long	1989
	.long	32
_c1s2n_info:
Lc1s2n:
	call 1f
1:	popl	%eax
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1s2w
Lc1s2v:
	movl 8(%ebp),%ecx
	movl 12(%ebp),%edx
	movl %eax,64(%esp)
	movl 4(%ebp),%eax
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gld1sd %fake1
	fld1 ; fstp %st(2)
#	gcmp_le %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1s2W
Lc1s2X:
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gcmp_le %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1s2Q
Lc1s2R:
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-20(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl %eax,-8(%edi)
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $24,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1s2w:
	movl $24,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1s2Q:
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-20(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $24,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1s2W:
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-20(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl %eax,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $24,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1s2n_info - _c1s2n_info_dsp
.text
	.align 2
_s1p2M_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1p2M_info:
Lc1s9z:
	call 1f
1:	popl	%eax
	leal -32(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1s9A
Lc1sdP:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1s9p_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 12(%esi),%esi
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1s9p_info
Lc1s9q:
	jmp *(%esi)
Lc1s9A:
	jmp *-16(%ebx)
	.long  _s1p2M_info - _s1p2M_info_dsp
.text
	.align 2
_c1s9p_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1s9p_info:
Lc1s9p:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1s9x
Lc1s9y:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p1O_entry
Lc1s9x:
	addl $_c1sdV_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1se7
Lc1sdX:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1se7:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sdV_info
	.long  _c1s9p_info - _c1s9p_info_dsp
.text
	.align 2
_c1sdV_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1sdV_info:
Lc1sdV:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p1O_entry
	.long  _c1sdV_info - _c1sdV_info_dsp
.text
	.align 2
_s1p1O_entry:
Ls1p1O:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1tjL-(1b)+0(%eax),%fake1
	fldl Ln1tjL-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sdN
Lc1sdO:
	cmpl $255,%edx
	jge Lc1sdK
Lc1sdl:
	cmpl $0,%edx
	jl Lc1sdG
Ls1p1S:
	addl $_c1s9Q_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	movl %edx,12(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1seg
Lc1s9S:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1sdN:
	decl %edx
	cmpl $255,%edx
	jge Lc1sdK
Lc1sdL:
	cmpl $0,%edx
	jl Lc1sdG
	jmp Ls1p1S
Lc1sdK:
	movl $255,%edx
	jmp Ls1p1S
Lc1sdG:
	xorl %edx,%edx
	jmp Ls1p1S
Lu1seg:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1s9Q_info
.const
	.align 2
.align 3
Ln1tjL:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1s9Q_info_dsp:
.text
	.align 2
	.long	66
	.long	32
_c1s9Q_info:
Lc1s9Q:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd Ln1tjU-(1b)+0(%eax),%fake1
	fldl Ln1tjU-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1scP
Lc1scQ:
	cmpl $255,%edx
	jge Lc1scM
Lc1scn:
	cmpl $0,%edx
	jl Lc1scI
Ls1p1Y:
	addl $_c1saa_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	movl %edx,8(%ebp)
	testw $7,%si
	jne Lu1sea
Lc1sby:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1scP:
	decl %edx
	cmpl $255,%edx
	jge Lc1scM
Lc1scN:
	cmpl $0,%edx
	jl Lc1scI
	jmp Ls1p1Y
Lc1scM:
	movl $255,%edx
	jmp Ls1p1Y
Lc1scI:
	xorl %edx,%edx
	jmp Ls1p1Y
Lu1sea:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1saa_info
	.long  _c1s9Q_info - _c1s9Q_info_dsp
.const
	.align 2
.align 3
Ln1tjU:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1saa_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1saa_info:
Lc1saa:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1sbR
Lc1sbS:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sad_entry
Lc1sbR:
	addl $_c1sbH_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1seb
Lc1sbK:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1seb:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sbH_info
	.long  _c1saa_info - _c1saa_info_dsp
.text
	.align 2
_c1sbH_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1sbH_info:
Lc1sbH:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sad_entry
	.long  _c1sbH_info - _c1sbH_info_dsp
.text
	.align 2
_c1sad_entry:
Lc1sad:
	call 1f
1:	popl	%eax
	addl $24,%edi
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
	cmpl 856(%ebx),%edi
	ja Lc1sah
Lc1sag:
	movl 12(%ebp),%ecx
	movl 16(%ebp),%edx
#	gldsd Ln1tkd-(1b)+0(%eax),%fake1
	fldl Ln1tkd-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
	movl %eax,64(%esp)
#	gdtoisdl %fake0,%eax
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %eax ; orl $0xC00, %eax
	movl %eax, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %eax
	addl $8, %esp
#	gitodlsd %eax,%fake1
	pushl %eax ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sbw
Lc1sbx:
	cmpl $255,%eax
	jge Lc1saX
Lc1saY:
	cmpl $0,%eax
	jge Lc1saP
Lc1saQ:
	movl 64(%esp),%eax
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl $0,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $20,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sah:
	movl $24,904(%ebx)
	movl %eax,%ecx
	addl $_c1sac_info-(1b)+0,%ecx
	movl %ecx,8(%ebp)
#	gstsd %fake0,104(%ebx)
	fstl 104(%ebx)
	addl $8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_d1$non_lazy_ptr-(1b)+0(%eax)
Lc1saP:
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-20(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl %eax,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $20,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1saX:
	movl 64(%esp),%eax
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl $255,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $20,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sbm:
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-20(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl %eax,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $20,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sbw:
	decl %eax
	cmpl $255,%eax
	jge Lc1sbt
Lc1sbu:
	cmpl $0,%eax
	jge Lc1sbm
Lc1sbn:
	movl 64(%esp),%eax
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl $0,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $20,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sbt:
	movl 64(%esp),%eax
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl $255,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $20,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.const
	.align 2
.align 3
Ln1tkd:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1sac_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1sac_info:
Lc1sac:
#	gldsd 104(%ebx),%fake0
	fldl 104(%ebx) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sad_entry
	.long  _c1sac_info - _c1sac_info_dsp
.text
	.align 2
_s1p4d_info_dsp:
.text
	.align 2
	.long	4
	.long	16
_s1p4d_info:
Lc1shH:
	call 1f
1:	popl	%eax
	leal -36(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1shI
Lc1smo:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1shx_info-(1b)+0,%eax
	movl %eax,-28(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 24(%esi),%edx
	movl 12(%esi),%esi
	movl %eax,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl %edx,-16(%ebp)
	addl $-28,%ebp
	testw $7,%si
	jne _c1shx_info
Lc1shy:
	jmp *(%esi)
Lc1shI:
	jmp *-16(%ebx)
	.long  _s1p4d_info - _s1p4d_info_dsp
.text
	.align 2
_c1shx_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1shx_info:
Lc1shx:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1shF
Lc1shG:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p37_entry
Lc1shF:
	addl $_c1smu_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1smF
Lc1smw:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1smF:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1smu_info
	.long  _c1shx_info - _c1shx_info_dsp
.text
	.align 2
_c1smu_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1smu_info:
Lc1smu:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p37_entry
	.long  _c1smu_info - _c1smu_info_dsp
.text
	.align 2
_s1p37_entry:
Ls1p37:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1tkT-(1b)+0(%eax),%fake1
	fldl Ln1tkT-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1smm
Lc1smn:
	cmpl $255,%edx
	jge Lc1smj
Lc1slU:
	cmpl $0,%edx
	jl Lc1smf
Ls1p3b:
	addl $_c1shY_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	movl %edx,12(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1smN
Lc1si0:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1smm:
	decl %edx
	cmpl $255,%edx
	jge Lc1smj
Lc1smk:
	cmpl $0,%edx
	jl Lc1smf
	jmp Ls1p3b
Lc1smj:
	movl $255,%edx
	jmp Ls1p3b
Lc1smf:
	xorl %edx,%edx
	jmp Ls1p3b
Lu1smN:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1shY_info
.const
	.align 2
.align 3
Ln1tkT:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1shY_info_dsp:
.text
	.align 2
	.long	67
	.long	32
_c1shY_info:
Lc1shY:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd Ln1tl2-(1b)+0(%eax),%fake1
	fldl Ln1tl2-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1slo
Lc1slp:
	cmpl $255,%edx
	jge Lc1sll
Lc1skW:
	cmpl $0,%edx
	jl Lc1slh
Ls1p3h:
	addl $_c1sii_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	movl %edx,8(%ebp)
	testw $7,%si
	jne Lu1smI
Lc1sk7:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1slo:
	decl %edx
	cmpl $255,%edx
	jge Lc1sll
Lc1slm:
	cmpl $0,%edx
	jl Lc1slh
	jmp Ls1p3h
Lc1sll:
	movl $255,%edx
	jmp Ls1p3h
Lc1slh:
	xorl %edx,%edx
	jmp Ls1p3h
Lu1smI:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sii_info
	.long  _c1shY_info - _c1shY_info_dsp
.const
	.align 2
.align 3
Ln1tl2:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1sii_info_dsp:
.text
	.align 2
	.long	195
	.long	32
_c1sii_info:
Lc1sii:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1skq
Lc1skr:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p3j_entry
Lc1skq:
	addl $_c1skg_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1smJ
Lc1skj:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1smJ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1skg_info
	.long  _c1sii_info - _c1sii_info_dsp
.text
	.align 2
_c1skg_info_dsp:
.text
	.align 2
	.long	195
	.long	32
_c1skg_info:
Lc1skg:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p3j_entry
	.long  _c1skg_info - _c1skg_info_dsp
.text
	.align 2
_s1p3j_entry:
Ls1p3j:
	call 1f
1:	popl	%eax
	movl 20(%ebp),%ecx
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1tlm-(1b)+0(%eax),%fake1
	fldl Ln1tlm-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sk5
Lc1sk6:
	cmpl $255,%edx
	jge Lc1sk2
Lc1sjD:
	cmpl $0,%edx
	jl Lc1sjY
Ls1p3n:
	addl $_c1siz_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	movl %edx,20(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1smO
Lc1siB:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1sk5:
	decl %edx
	cmpl $255,%edx
	jge Lc1sk2
Lc1sk3:
	cmpl $0,%edx
	jl Lc1sjY
	jmp Ls1p3n
Lc1sk2:
	movl $255,%edx
	jmp Ls1p3n
Lc1sjY:
	xorl %edx,%edx
	jmp Ls1p3n
Lu1smO:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1siz_info
.const
	.align 2
.align 3
Ln1tlm:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1siz_info_dsp:
.text
	.align 2
	.long	451
	.long	32
_c1siz_info:
Lc1siz:
	call 1f
1:	popl	%eax
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1siH
Lc1siG:
	movl 4(%ebp),%ecx
	movl 8(%ebp),%edx
	movl %eax,64(%esp)
	movl 12(%ebp),%eax
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gld1sd %fake1
	fld1 ; fstp %st(2)
#	gcmp_le %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sj7
Lc1sj8:
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gcmp_le %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sj1
Lc1sj2:
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-20(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl %eax,-8(%edi)
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1siH:
	movl $24,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1sj1:
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-20(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sj7:
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-20(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl %eax,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1siz_info - _c1siz_info_dsp
.text
	.align 2
_s1p5d_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1p5d_info:
Lc1spB:
	call 1f
1:	popl	%eax
	leal -32(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1spC
Lc1stR:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1spr_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 12(%esi),%esi
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1spr_info
Lc1sps:
	jmp *(%esi)
Lc1spC:
	jmp *-16(%ebx)
	.long  _s1p5d_info - _s1p5d_info_dsp
.text
	.align 2
_c1spr_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1spr_info:
Lc1spr:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1spz
Lc1spA:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p4f_entry
Lc1spz:
	addl $_c1stX_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1su9
Lc1stZ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1su9:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1stX_info
	.long  _c1spr_info - _c1spr_info_dsp
.text
	.align 2
_c1stX_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1stX_info:
Lc1stX:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p4f_entry
	.long  _c1stX_info - _c1stX_info_dsp
.text
	.align 2
_s1p4f_entry:
Ls1p4f:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1tlX-(1b)+0(%eax),%fake1
	fldl Ln1tlX-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1stP
Lc1stQ:
	cmpl $255,%edx
	jge Lc1stM
Lc1stn:
	cmpl $0,%edx
	jl Lc1stI
Ls1p4j:
	addl $_c1spS_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	movl %edx,12(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1sui
Lc1spU:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1stP:
	decl %edx
	cmpl $255,%edx
	jge Lc1stM
Lc1stN:
	cmpl $0,%edx
	jl Lc1stI
	jmp Ls1p4j
Lc1stM:
	movl $255,%edx
	jmp Ls1p4j
Lc1stI:
	xorl %edx,%edx
	jmp Ls1p4j
Lu1sui:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1spS_info
.const
	.align 2
.align 3
Ln1tlX:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1spS_info_dsp:
.text
	.align 2
	.long	66
	.long	32
_c1spS_info:
Lc1spS:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd Ln1tm6-(1b)+0(%eax),%fake1
	fldl Ln1tm6-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1ssR
Lc1ssS:
	cmpl $255,%edx
	jge Lc1ssO
Lc1ssp:
	cmpl $0,%edx
	jl Lc1ssK
Ls1p4p:
	addl $_c1sqc_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	movl %edx,8(%ebp)
	testw $7,%si
	jne Lu1suc
Lc1srA:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1ssR:
	decl %edx
	cmpl $255,%edx
	jge Lc1ssO
Lc1ssP:
	cmpl $0,%edx
	jl Lc1ssK
	jmp Ls1p4p
Lc1ssO:
	movl $255,%edx
	jmp Ls1p4p
Lc1ssK:
	xorl %edx,%edx
	jmp Ls1p4p
Lu1suc:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sqc_info
	.long  _c1spS_info - _c1spS_info_dsp
.const
	.align 2
.align 3
Ln1tm6:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1sqc_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1sqc_info:
Lc1sqc:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1srT
Lc1srU:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sqf_entry
Lc1srT:
	addl $_c1srJ_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1sud
Lc1srM:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1sud:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1srJ_info
	.long  _c1sqc_info - _c1sqc_info_dsp
.text
	.align 2
_c1srJ_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1srJ_info:
Lc1srJ:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sqf_entry
	.long  _c1srJ_info - _c1srJ_info_dsp
.text
	.align 2
_c1sqf_entry:
Lc1sqf:
	call 1f
1:	popl	%eax
	addl $24,%edi
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
	cmpl 856(%ebx),%edi
	ja Lc1sqj
Lc1sqi:
	movl 12(%ebp),%ecx
	movl 16(%ebp),%edx
#	gldsd Ln1tmp-(1b)+0(%eax),%fake1
	fldl Ln1tmp-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
	movl %eax,64(%esp)
#	gdtoisdl %fake0,%eax
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %eax ; orl $0xC00, %eax
	movl %eax, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %eax
	addl $8, %esp
#	gitodlsd %eax,%fake1
	pushl %eax ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sry
Lc1srz:
	cmpl $255,%eax
	jge Lc1sqZ
Lc1sr0:
	cmpl $0,%eax
	jge Lc1sqR
Lc1sqS:
	movl 64(%esp),%eax
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl $0,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $20,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sqj:
	movl $24,904(%ebx)
	movl %eax,%ecx
	addl $_c1sqe_info-(1b)+0,%ecx
	movl %ecx,8(%ebp)
#	gstsd %fake0,104(%ebx)
	fstl 104(%ebx)
	addl $8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_d1$non_lazy_ptr-(1b)+0(%eax)
Lc1sqR:
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-20(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl %eax,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $20,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sqZ:
	movl 64(%esp),%eax
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl $255,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $20,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sro:
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-20(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl %eax,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $20,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sry:
	decl %eax
	cmpl $255,%eax
	jge Lc1srv
Lc1srw:
	cmpl $0,%eax
	jge Lc1sro
Lc1srp:
	movl 64(%esp),%eax
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl $0,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $20,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1srv:
	movl 64(%esp),%eax
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	movl $255,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $20,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.const
	.align 2
.align 3
Ln1tmp:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1sqe_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1sqe_info:
Lc1sqe:
#	gldsd 104(%ebx),%fake0
	fldl 104(%ebx) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sqf_entry
	.long  _c1sqe_info - _c1sqe_info_dsp
.text
	.align 2
_s1p5A_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1p5A_info:
Lc1suN:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1suO
Lc1suP:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1suO:
	jmp *-16(%ebx)
	.long  _s1p5A_info - _s1p5A_info_dsp
.text
	.align 2
_s1p5B_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1p5B_info:
Lc1suQ:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1suR
Lc1suS:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1suU
Lc1suT:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	addl $_s1p5A_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1suU:
	movl $16,904(%ebx)
Lc1suR:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1p5B_info - _s1p5B_info_dsp
.text
	.align 2
_s1p6V_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1p6V_info:
Lc1sxn:
	call 1f
1:	popl	%eax
	leal -32(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1sxo
Lc1sAO:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1sxd_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 12(%esi),%esi
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1sxd_info
Lc1sxe:
	jmp *(%esi)
Lc1sxo:
	jmp *-16(%ebx)
	.long  _s1p6V_info - _s1p6V_info_dsp
.text
	.align 2
_c1sxd_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1sxd_info:
Lc1sxd:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1sxl
Lc1sxm:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p67_entry
Lc1sxl:
	addl $_c1sAU_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1sB5
Lc1sAW:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1sB5:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sAU_info
	.long  _c1sxd_info - _c1sxd_info_dsp
.text
	.align 2
_c1sAU_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1sAU_info:
Lc1sAU:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p67_entry
	.long  _c1sAU_info - _c1sAU_info_dsp
.text
	.align 2
_s1p67_entry:
Ls1p67:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1tnj-(1b)+0(%eax),%fake1
	fldl Ln1tnj-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sAM
Lc1sAN:
	cmpl $255,%edx
	jge Lc1sAJ
Lc1sAk:
	cmpl $0,%edx
	jl Lc1sAF
Ls1p6b:
	addl $_c1sxG_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	movl %edx,12(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1sBc
Lc1szv:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1sAM:
	decl %edx
	cmpl $255,%edx
	jge Lc1sAJ
Lc1sAK:
	cmpl $0,%edx
	jl Lc1sAF
	jmp Ls1p6b
Lc1sAJ:
	movl $255,%edx
	jmp Ls1p6b
Lc1sAF:
	xorl %edx,%edx
	jmp Ls1p6b
Lu1sBc:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sxG_info
.const
	.align 2
.align 3
Ln1tnj:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1sxG_info_dsp:
.text
	.align 2
	.long	66
	.long	32
_c1sxG_info:
Lc1sxG:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1szO
Lc1szP:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p6d_entry
Lc1szO:
	addl $_c1szE_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1sB8
Lc1szH:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1sB8:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1szE_info
	.long  _c1sxG_info - _c1sxG_info_dsp
.text
	.align 2
_c1szE_info_dsp:
.text
	.align 2
	.long	66
	.long	32
_c1szE_info:
Lc1szE:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p6d_entry
	.long  _c1szE_info - _c1szE_info_dsp
.text
	.align 2
_s1p6d_entry:
Ls1p6d:
	call 1f
1:	popl	%eax
	movl 16(%ebp),%ecx
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1tnD-(1b)+0(%eax),%fake1
	fldl Ln1tnD-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1szt
Lc1szu:
	cmpl $255,%edx
	jge Lc1szq
Lc1sz1:
	cmpl $0,%edx
	jl Lc1szm
Ls1p6h:
	addl $_c1sxX_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	movl %edx,16(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1sBd
Lc1sxZ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1szt:
	decl %edx
	cmpl $255,%edx
	jge Lc1szq
Lc1szr:
	cmpl $0,%edx
	jl Lc1szm
	jmp Ls1p6h
Lc1szq:
	movl $255,%edx
	jmp Ls1p6h
Lc1szm:
	xorl %edx,%edx
	jmp Ls1p6h
Lu1sBd:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sxX_info
.const
	.align 2
.align 3
Ln1tnD:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1sxX_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1sxX_info:
Lc1sxX:
	call 1f
1:	popl	%eax
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1sy5
Lc1sy4:
	movl 4(%ebp),%ecx
	movl 8(%ebp),%edx
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gld1sd %fake1
	fld1 ; fstp %st(2)
#	gcmp_le %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1syv
Lc1syw:
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gcmp_le %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1syp
Lc1syq:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl %edx,-8(%edi)
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sy5:
	movl $24,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1syp:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl %edx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1syv:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl %edx,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1sxX_info - _c1sxX_info_dsp
.text
	.align 2
_s1p7O_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1p7O_info:
Lc1sDv:
	call 1f
1:	popl	%eax
	leal -32(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1sDw
Lc1sGW:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1sDl_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 12(%esi),%esi
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1sDl_info
Lc1sDm:
	jmp *(%esi)
Lc1sDw:
	jmp *-16(%ebx)
	.long  _s1p7O_info - _s1p7O_info_dsp
.text
	.align 2
_c1sDl_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1sDl_info:
Lc1sDl:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1sDt
Lc1sDu:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p70_entry
Lc1sDt:
	addl $_c1sH2_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1sHd
Lc1sH4:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1sHd:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sH2_info
	.long  _c1sDl_info - _c1sDl_info_dsp
.text
	.align 2
_c1sH2_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1sH2_info:
Lc1sH2:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p70_entry
	.long  _c1sH2_info - _c1sH2_info_dsp
.text
	.align 2
_s1p70_entry:
Ls1p70:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1toe-(1b)+0(%eax),%fake1
	fldl Ln1toe-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sGU
Lc1sGV:
	cmpl $255,%edx
	jge Lc1sGR
Lc1sGs:
	cmpl $0,%edx
	jl Lc1sGN
Ls1p74:
	addl $_c1sDO_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	movl %edx,12(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1sHk
Lc1sFD:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1sGU:
	decl %edx
	cmpl $255,%edx
	jge Lc1sGR
Lc1sGS:
	cmpl $0,%edx
	jl Lc1sGN
	jmp Ls1p74
Lc1sGR:
	movl $255,%edx
	jmp Ls1p74
Lc1sGN:
	xorl %edx,%edx
	jmp Ls1p74
Lu1sHk:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sDO_info
.const
	.align 2
.align 3
Ln1toe:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1sDO_info_dsp:
.text
	.align 2
	.long	66
	.long	32
_c1sDO_info:
Lc1sDO:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1sFW
Lc1sFX:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p76_entry
Lc1sFW:
	addl $_c1sFM_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1sHg
Lc1sFP:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1sHg:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sFM_info
	.long  _c1sDO_info - _c1sDO_info_dsp
.text
	.align 2
_c1sFM_info_dsp:
.text
	.align 2
	.long	66
	.long	32
_c1sFM_info:
Lc1sFM:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p76_entry
	.long  _c1sFM_info - _c1sFM_info_dsp
.text
	.align 2
_s1p76_entry:
Ls1p76:
	call 1f
1:	popl	%eax
	movl 16(%ebp),%ecx
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1toy-(1b)+0(%eax),%fake1
	fldl Ln1toy-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sFB
Lc1sFC:
	cmpl $255,%edx
	jge Lc1sFy
Lc1sF9:
	cmpl $0,%edx
	jl Lc1sFu
Ls1p7a:
	addl $_c1sE5_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	movl %edx,16(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1sHl
Lc1sE7:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1sFB:
	decl %edx
	cmpl $255,%edx
	jge Lc1sFy
Lc1sFz:
	cmpl $0,%edx
	jl Lc1sFu
	jmp Ls1p7a
Lc1sFy:
	movl $255,%edx
	jmp Ls1p7a
Lc1sFu:
	xorl %edx,%edx
	jmp Ls1p7a
Lu1sHl:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sE5_info
.const
	.align 2
.align 3
Ln1toy:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1sE5_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1sE5_info:
Lc1sE5:
	call 1f
1:	popl	%eax
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1sEd
Lc1sEc:
	movl 4(%ebp),%ecx
	movl 8(%ebp),%edx
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gld1sd %fake1
	fld1 ; fstp %st(2)
#	gcmp_le %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sED
Lc1sEE:
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gcmp_le %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sEx
Lc1sEy:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl %edx,-8(%edi)
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sEd:
	movl $24,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1sEx:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl %edx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sED:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl %edx,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1sE5_info - _c1sE5_info_dsp
.text
	.align 2
_s1p8f_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1p8f_info:
Lc1sKf:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1sKg
Lc1sKh:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1sKg:
	jmp *-16(%ebx)
	.long  _s1p8f_info - _s1p8f_info_dsp
.text
	.align 2
_s1p8S_info_dsp:
.text
	.align 2
	.long	4
	.long	16
_s1p8S_info:
Lc1sKs:
	call 1f
1:	popl	%eax
	leal -36(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1sKt
Lc1sNq:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1sKi_info-(1b)+0,%eax
	movl %eax,-28(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 24(%esi),%edx
	movl 12(%esi),%esi
	movl %eax,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl %edx,-16(%ebp)
	addl $-28,%ebp
	testw $7,%si
	jne _c1sKi_info
Lc1sKj:
	jmp *(%esi)
Lc1sKt:
	jmp *-16(%ebx)
	.long  _s1p8S_info - _s1p8S_info_dsp
.text
	.align 2
_c1sKi_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1sKi_info:
Lc1sKi:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1sKq
Lc1sKr:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p83_entry
Lc1sKq:
	addl $_c1sNw_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1sNN
Lc1sNy:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1sNN:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sNw_info
	.long  _c1sKi_info - _c1sKi_info_dsp
.text
	.align 2
_c1sNw_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1sNw_info:
Lc1sNw:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p83_entry
	.long  _c1sNw_info - _c1sNw_info_dsp
.text
	.align 2
_s1p83_entry:
Ls1p83:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1tpf-(1b)+0(%eax),%fake1
	fldl Ln1tpf-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sNo
Lc1sNp:
	cmpl $255,%edx
	jge Lc1sNl
Lc1sMW:
	cmpl $0,%edx
	jl Lc1sNh
Ls1p87:
	addl $_c1sKv_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	movl %edx,12(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1sNU
Lc1sM7:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1sNo:
	decl %edx
	cmpl $255,%edx
	jge Lc1sNl
Lc1sNm:
	cmpl $0,%edx
	jl Lc1sNh
	jmp Ls1p87
Lc1sNl:
	movl $255,%edx
	jmp Ls1p87
Lc1sNh:
	xorl %edx,%edx
	jmp Ls1p87
Lu1sNU:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sKv_info
.const
	.align 2
.align 3
Ln1tpf:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1sKv_info_dsp:
.text
	.align 2
	.long	67
	.long	32
_c1sKv_info:
Lc1sKv:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1sMq
Lc1sMr:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p89_entry
Lc1sMq:
	addl $_c1sMg_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1sNQ
Lc1sMj:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1sNQ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sMg_info
	.long  _c1sKv_info - _c1sKv_info_dsp
.text
	.align 2
_c1sMg_info_dsp:
.text
	.align 2
	.long	67
	.long	32
_c1sMg_info:
Lc1sMg:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p89_entry
	.long  _c1sMg_info - _c1sMg_info_dsp
.text
	.align 2
_s1p89_entry:
Ls1p89:
	call 1f
1:	popl	%eax
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1tpz-(1b)+0(%eax),%fake1
	fldl Ln1tpz-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%eax
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %eax ; orl $0xC00, %eax
	movl %eax, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %eax
	addl $8, %esp
#	gitodlsd %eax,%fake1
	pushl %eax ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sM5
Lc1sM6:
	cmpl $255,%eax
	jge Lc1sM2
Lc1sLD:
	cmpl $0,%eax
	jl Lc1sLY
Lc1sLw:
	movl %eax,8(%ebp)
	addl $8,%ebp
Lu1sNY:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sK9_entry
Lc1sM5:
	decl %eax
	cmpl $255,%eax
	jge Lc1sM2
Lc1sM3:
	cmpl $0,%eax
	jl Lc1sLY
Lc1sLX:
	movl %eax,8(%ebp)
	addl $8,%ebp
	jmp Lu1sNY
Lc1sLY:
	movl $0,8(%ebp)
	addl $8,%ebp
	jmp Lu1sNY
Lc1sM2:
	movl $255,8(%ebp)
	addl $8,%ebp
	jmp Lu1sNY
.const
	.align 2
.align 3
Ln1tpz:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1sK9_entry:
Lc1sK9:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1sKB
Lc1sKA:
	movl %eax,%ecx
	addl $_s1p8f_info-(1b)+0,%ecx
	movl %ecx,-12(%edi)
	movl 12(%ebp),%ecx
	movl %ecx,(%edi)
	addl $_c1sKy_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl 8(%ebp),%esi
	addl $-4,%ebp
	jmp _stg_ap_p_fast
Lc1sKB:
	movl $16,904(%ebx)
	movl (%ebp),%ecx
	movl %eax,%edx
	addl $_c1sK8_info-(1b)+0,%edx
	movl %edx,(%ebp)
	movl %ecx,%esi
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
.text
	.align 2
_c1sK8_info_dsp:
.text
	.align 2
	.long	67
	.long	32
_c1sK8_info:
Lc1sK8:
	movl %esi,(%ebp)
	jmp _c1sK9_entry
	.long  _c1sK8_info - _c1sK8_info_dsp
.text
	.align 2
_c1sKy_info_dsp:
.text
	.align 2
	.long	964
	.long	32
_c1sKy_info:
Lc1sKy:
	call 1f
1:	popl	%eax
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1sKH
Lc1sKG:
	movl 8(%ebp),%ecx
	movl 4(%ebp),%edx
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gld1sd %fake1
	fld1 ; fstp %st(2)
#	gcmp_le %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sL7
Lc1sL8:
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gcmp_le %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sL1
Lc1sL2:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl %edx,-8(%edi)
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $20,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sKH:
	movl $24,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1sL1:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl %edx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $20,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sL7:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl %edx,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $20,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1sKy_info - _c1sKy_info_dsp
.text
	.align 2
_s1p9A_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1p9A_info:
Lc1sPW:
	call 1f
1:	popl	%eax
	leal -28(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1sPX
Lc1sSW:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1sPM_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 16(%esi),%eax
	movl 12(%esi),%esi
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _c1sPM_info
Lc1sPN:
	jmp *(%esi)
Lc1sPX:
	jmp *-16(%ebx)
	.long  _s1p9A_info - _s1p9A_info_dsp
.text
	.align 2
_c1sPM_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1sPM_info:
Lc1sPM:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1sPU
Lc1sPV:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p8U_entry
Lc1sPU:
	addl $_c1sT2_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1sTe
Lc1sT4:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1sTe:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sT2_info
	.long  _c1sPM_info - _c1sPM_info_dsp
.text
	.align 2
_c1sT2_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1sT2_info:
Lc1sT2:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p8U_entry
	.long  _c1sT2_info - _c1sT2_info_dsp
.text
	.align 2
_s1p8U_entry:
Ls1p8U:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1tql-(1b)+0(%eax),%fake1
	fldl Ln1tql-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sSU
Lc1sSV:
	cmpl $255,%edx
	jge Lc1sSR
Lc1sSs:
	cmpl $0,%edx
	jl Lc1sSN
Ls1p8Y:
	addl $_c1sQf_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	movl %edx,12(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1sTm
Lc1sRD:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1sSU:
	decl %edx
	cmpl $255,%edx
	jge Lc1sSR
Lc1sSS:
	cmpl $0,%edx
	jl Lc1sSN
	jmp Ls1p8Y
Lc1sSR:
	movl $255,%edx
	jmp Ls1p8Y
Lc1sSN:
	xorl %edx,%edx
	jmp Ls1p8Y
Lu1sTm:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sQf_info
.const
	.align 2
.align 3
Ln1tql:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1sQf_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_c1sQf_info:
Lc1sQf:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1sRW
Lc1sRX:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sQi_entry
Lc1sRW:
	addl $_c1sRM_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1sTh
Lc1sRP:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1sTh:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sRM_info
	.long  _c1sQf_info - _c1sQf_info_dsp
.text
	.align 2
_c1sRM_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_c1sRM_info:
Lc1sRM:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sQi_entry
	.long  _c1sRM_info - _c1sRM_info_dsp
.text
	.align 2
_c1sQi_entry:
Lc1sQi:
	call 1f
1:	popl	%eax
	addl $24,%edi
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
	cmpl 856(%ebx),%edi
	ja Lc1sQm
Lc1sQl:
	movl 12(%ebp),%ecx
#	gldsd Ln1tqE-(1b)+0(%eax),%fake1
	fldl Ln1tqE-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sRB
Lc1sRC:
	cmpl $255,%edx
	jge Lc1sR2
Lc1sR3:
	cmpl $0,%edx
	jge Lc1sQU
Lc1sQV:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl $0,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sQm:
	movl $24,904(%ebx)
	movl %eax,%ecx
	addl $_c1sQh_info-(1b)+0,%ecx
	movl %ecx,8(%ebp)
#	gstsd %fake0,104(%ebx)
	fstl 104(%ebx)
	addl $8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_d1$non_lazy_ptr-(1b)+0(%eax)
Lc1sQU:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl %edx,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sR2:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl $255,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sRr:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl %edx,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sRB:
	decl %edx
	cmpl $255,%edx
	jge Lc1sRy
Lc1sRz:
	cmpl $0,%edx
	jge Lc1sRr
Lc1sRs:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl $0,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sRy:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl $255,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.const
	.align 2
.align 3
Ln1tqE:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1sQh_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_c1sQh_info:
Lc1sQh:
#	gldsd 104(%ebx),%fake0
	fldl 104(%ebx) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sQi_entry
	.long  _c1sQh_info - _c1sQh_info_dsp
.text
	.align 2
_s1paJ_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1paJ_info:
Lc1sVY:
	call 1f
1:	popl	%eax
	leal -32(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1sVZ
Lc1sZp:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1sVO_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 12(%esi),%esi
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1sVO_info
Lc1sVP:
	jmp *(%esi)
Lc1sVZ:
	jmp *-16(%ebx)
	.long  _s1paJ_info - _s1paJ_info_dsp
.text
	.align 2
_c1sVO_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1sVO_info:
Lc1sVO:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1sVW
Lc1sVX:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p9V_entry
Lc1sVW:
	addl $_c1sZv_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1sZG
Lc1sZx:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1sZG:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sZv_info
	.long  _c1sVO_info - _c1sVO_info_dsp
.text
	.align 2
_c1sZv_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1sZv_info:
Lc1sZv:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1p9V_entry
	.long  _c1sZv_info - _c1sZv_info_dsp
.text
	.align 2
_s1p9V_entry:
Ls1p9V:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1trk-(1b)+0(%eax),%fake1
	fldl Ln1trk-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sZn
Lc1sZo:
	cmpl $255,%edx
	jge Lc1sZk
Lc1sYV:
	cmpl $0,%edx
	jl Lc1sZg
Ls1p9Z:
	addl $_c1sWh_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	movl %edx,12(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1sZN
Lc1sY6:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1sZn:
	decl %edx
	cmpl $255,%edx
	jge Lc1sZk
Lc1sZl:
	cmpl $0,%edx
	jl Lc1sZg
	jmp Ls1p9Z
Lc1sZk:
	movl $255,%edx
	jmp Ls1p9Z
Lc1sZg:
	xorl %edx,%edx
	jmp Ls1p9Z
Lu1sZN:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sWh_info
.const
	.align 2
.align 3
Ln1trk:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1sWh_info_dsp:
.text
	.align 2
	.long	66
	.long	32
_c1sWh_info:
Lc1sWh:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1sYp
Lc1sYq:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1pa1_entry
Lc1sYp:
	addl $_c1sYf_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1sZJ
Lc1sYi:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1sZJ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sYf_info
	.long  _c1sWh_info - _c1sWh_info_dsp
.text
	.align 2
_c1sYf_info_dsp:
.text
	.align 2
	.long	66
	.long	32
_c1sYf_info:
Lc1sYf:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1pa1_entry
	.long  _c1sYf_info - _c1sYf_info_dsp
.text
	.align 2
_s1pa1_entry:
Ls1pa1:
	call 1f
1:	popl	%eax
	movl 16(%ebp),%ecx
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1trE-(1b)+0(%eax),%fake1
	fldl Ln1trE-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sY4
Lc1sY5:
	cmpl $255,%edx
	jge Lc1sY1
Lc1sXC:
	cmpl $0,%edx
	jl Lc1sXX
Ls1pa5:
	addl $_c1sWy_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	movl %edx,16(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1sZO
Lc1sWA:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1sY4:
	decl %edx
	cmpl $255,%edx
	jge Lc1sY1
Lc1sY2:
	cmpl $0,%edx
	jl Lc1sXX
	jmp Ls1pa5
Lc1sY1:
	movl $255,%edx
	jmp Ls1pa5
Lc1sXX:
	xorl %edx,%edx
	jmp Ls1pa5
Lu1sZO:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1sWy_info
.const
	.align 2
.align 3
Ln1trE:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1sWy_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1sWy_info:
Lc1sWy:
	call 1f
1:	popl	%eax
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1sWG
Lc1sWF:
	movl 4(%ebp),%ecx
	movl 8(%ebp),%edx
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gld1sd %fake1
	fld1 ; fstp %st(2)
#	gcmp_le %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sX6
Lc1sX7:
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gcmp_le %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1sX0
Lc1sX1:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl %edx,-8(%edi)
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sWG:
	movl $24,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1sX0:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl %edx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1sX6:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl %edx,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1sWy_info - _c1sWy_info_dsp
.text
	.align 2
_s1pbr_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1pbr_info:
Lc1t1M:
	call 1f
1:	popl	%eax
	leal -28(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1t1N
Lc1t4M:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1t1C_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 16(%esi),%eax
	movl 12(%esi),%esi
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _c1t1C_info
Lc1t1D:
	jmp *(%esi)
Lc1t1N:
	jmp *-16(%ebx)
	.long  _s1pbr_info - _s1pbr_info_dsp
.text
	.align 2
_c1t1C_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1t1C_info:
Lc1t1C:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1t1K
Lc1t1L:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1paL_entry
Lc1t1K:
	addl $_c1t4S_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1t54
Lc1t4U:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1t54:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1t4S_info
	.long  _c1t1C_info - _c1t1C_info_dsp
.text
	.align 2
_c1t4S_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1t4S_info:
Lc1t4S:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _s1paL_entry
	.long  _c1t4S_info - _c1t4S_info_dsp
.text
	.align 2
_s1paL_entry:
Ls1paL:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gldsd Ln1tsf-(1b)+0(%eax),%fake1
	fldl Ln1tsf-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1t4K
Lc1t4L:
	cmpl $255,%edx
	jge Lc1t4H
Lc1t4i:
	cmpl $0,%edx
	jl Lc1t4D
Ls1paP:
	addl $_c1t25_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	movl %edx,12(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1t5c
Lc1t3t:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1t4K:
	decl %edx
	cmpl $255,%edx
	jge Lc1t4H
Lc1t4I:
	cmpl $0,%edx
	jl Lc1t4D
	jmp Ls1paP
Lc1t4H:
	movl $255,%edx
	jmp Ls1paP
Lc1t4D:
	xorl %edx,%edx
	jmp Ls1paP
Lu1t5c:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1t25_info
.const
	.align 2
.align 3
Ln1tsf:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1t25_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_c1t25_info:
Lc1t25:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1t3M
Lc1t3N:
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1t28_entry
Lc1t3M:
	addl $_c1t3C_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne Lu1t57
Lc1t3F:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1t57:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1t3C_info
	.long  _c1t25_info - _c1t25_info_dsp
.text
	.align 2
_c1t3C_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_c1t3C_info:
Lc1t3C:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1t28_entry
	.long  _c1t3C_info - _c1t3C_info_dsp
.text
	.align 2
_c1t28_entry:
Lc1t28:
	call 1f
1:	popl	%eax
	addl $24,%edi
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
	cmpl 856(%ebx),%edi
	ja Lc1t2c
Lc1t2b:
	movl 12(%ebp),%ecx
#	gldsd Ln1tsy-(1b)+0(%eax),%fake1
	fldl Ln1tsy-(1b)+0(%eax) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gdtoisdl %fake0,%edx
	subl $8, %esp ; fnstcw 4(%esp)
	fld %st(0)
	movzwl 4(%esp), %edx ; orl $0xC00, %edx
	movl %edx, 0(%esp) ; fldcw 0(%esp)
	fistpl 0(%esp)
	fldcw 4(%esp) ; movl 0(%esp), %edx
	addl $8, %esp
#	gitodlsd %edx,%fake1
	pushl %edx ; fildl (%esp) ; fstp %st(2) ; addl $4,%esp
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1t3r
Lc1t3s:
	cmpl $255,%edx
	jge Lc1t2S
Lc1t2T:
	cmpl $0,%edx
	jge Lc1t2K
Lc1t2L:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl $0,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1t2c:
	movl $24,904(%ebx)
	movl %eax,%ecx
	addl $_c1t27_info-(1b)+0,%ecx
	movl %ecx,8(%ebp)
#	gstsd %fake0,104(%ebx)
	fstl 104(%ebx)
	addl $8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_d1$non_lazy_ptr-(1b)+0(%eax)
Lc1t2K:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl %edx,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1t2S:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl $255,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1t3h:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl %edx,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1t3r:
	decl %edx
	cmpl $255,%edx
	jge Lc1t3o
Lc1t3p:
	cmpl $0,%edx
	jge Lc1t3h
Lc1t3i:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl $0,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1t3o:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl $0,-12(%edi)
	movl $255,-8(%edi)
#	gld1sd %fake0
	fld1 ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -18(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.const
	.align 2
.align 3
Ln1tsy:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	112
	.byte	64
.text
	.align 2
_c1t27_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_c1t27_info:
Lc1t27:
#	gldsd 104(%ebx),%fake0
	fldl 104(%ebx) ; fstp %st(1)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1t28_entry
	.long  _c1t27_info - _c1t27_info_dsp
.text
	.align 2
_s1pbO_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1pbO_info:
Lc1t5H:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1t5I
Lc1t5J:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1t5I:
	jmp *-16(%ebx)
	.long  _s1pbO_info - _s1pbO_info_dsp
.text
	.align 2
_s1pbP_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1pbP_info:
Lc1t5K:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1t5L
Lc1t5M:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1t5O
Lc1t5N:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	addl $_s1pbO_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1t5O:
	movl $16,904(%ebx)
Lc1t5L:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1pbP_info - _s1pbP_info_dsp
.text
	.align 2
_s1pcC_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1pcC_info:
Lc1t6g:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1t6h
Lc1t6i:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1t6k
Lc1t6j:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	movl L_stg_sel_0_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1t6k:
	movl $16,904(%ebx)
Lc1t6h:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1pcC_info - _s1pcC_info_dsp
.text
	.align 2
_s1pdl_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1pdl_info:
Lc1t6P:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1t6Q
Lc1t6R:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1t6Q:
	jmp *-16(%ebx)
	.long  _s1pdl_info - _s1pdl_info_dsp
.text
	.align 2
_s1pdm_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1pdm_info:
Lc1t6S:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1t6T
Lc1t6U:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1t6W
Lc1t6V:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	addl $_s1pdl_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1t6W:
	movl $16,904(%ebx)
Lc1t6T:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1pdm_info - _s1pdm_info_dsp
.text
	.align 2
_CoreziRenderziInternal_zdwa_info_dsp:
.text
	.align 2
	.long	327704
	.long	0
	.long	15
.globl _CoreziRenderziInternal_zdwa_info
_CoreziRenderziInternal_zdwa_info:
Lc1t7c:
	call 1f
1:	popl	%eax
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	movl %eax,88(%esp)
	leal -20(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1t7d
Lc1t7e:
	movl 64(%esp),%eax
	addl $_c1t6l_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 88(%esp),%eax
	movl %eax,%esi
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _c1t6l_info
Lc1t6m:
	jmp *(%esi)
Lc1t7d:
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_zdwa_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdwa_info - _CoreziRenderziInternal_zdwa_info_dsp
.text
	.align 2
_c1t6l_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1t6l_info:
Lc1t6l:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1t7a
Lc1t7b:
	cmpl $2,%ecx
	jae Lc1t74
Lc1t75:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1td9
Lc1td8:
	movl 3(%esi),%ecx
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -2(%edi),%eax
	movl %eax,(%ebp)
	jmp _s1oXY_entry
Lc1t7a:
	cmpl $4,%ecx
	jae Lc1t77
Lc1t78:
	addl $_c1t6s_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1t6s_info
Lc1t6t:
	jmp *(%esi)
Lc1t74:
	addl $_c1tdb_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
Lc1t77:
	addl $_c1tdz_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1tdz_info
Lc1tdA:
	jmp *(%esi)
Lc1td9:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1t6l_info - _c1t6l_info_dsp
.text
	.align 2
_c1tdz_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1tdz_info:
Lc1tdz:
	call 1f
1:	popl	%eax
	addl $_c1tdE_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1tdE_info
Lc1tdH:
	jmp *(%esi)
	.long  _c1tdz_info - _c1tdz_info_dsp
.text
	.align 2
_c1tdE_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1tdE_info:
Lc1tdE:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1tdL_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1tdL_info
Lc1tdN:
	jmp *(%esi)
	.long  _c1tdE_info - _c1tdE_info_dsp
.text
	.align 2
_c1tdL_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1tdL_info:
Lc1tdL:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1teb
Lc1tec:
	addl $_c1tdR_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1tdR_info
Lc1tdV:
	jmp *(%esi)
Lc1teb:
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,4(%ebp)
	addl $4,%ebp
	jmp _s1oXY_entry
	.long  _c1tdL_info - _c1tdL_info_dsp
.text
	.align 2
_c1tdR_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1tdR_info:
Lc1tdR:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1tdZ_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1tdR_info - _c1tdR_info_dsp
.text
	.align 2
_c1tdZ_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1tdZ_info:
Lc1tdZ:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1te4
Lc1te3:
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -2(%edi),%eax
	movl %eax,(%ebp)
	jmp _s1oXY_entry
Lc1te4:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tdZ_info - _c1tdZ_info_dsp
.text
	.align 2
_c1t6s_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1t6s_info:
Lc1t6s:
	call 1f
1:	popl	%eax
	addl $_c1t6x_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1t6x_info
Lc1t6y:
	jmp *(%esi)
	.long  _c1t6s_info - _c1t6s_info_dsp
.text
	.align 2
_c1t6x_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1t6x_info:
Lc1t6x:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1t6C_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1t6C_info
Lc1t6D:
	jmp *(%esi)
	.long  _c1t6x_info - _c1t6x_info_dsp
.text
	.align 2
_c1t6C_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1t6C_info:
Lc1t6C:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1tdv
Lc1tdw:
	addl $28,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tdo
Lc1tdn:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1pdm_info-(1b)+0,%edx
	movl %edx,-24(%edi)
	movl 4(%ebp),%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -24(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%eax
	movl %eax,4(%ebp)
	addl $4,%ebp
	jmp _s1oXY_entry
Lc1tdo:
	movl $28,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1tdv:
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,4(%ebp)
	addl $4,%ebp
	jmp _s1oXY_entry
	.long  _c1t6C_info - _c1t6C_info_dsp
.text
	.align 2
_c1tdb_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1tdb_info:
Lc1tdb:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tdg
Lc1tdf:
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -2(%edi),%eax
	movl %eax,(%ebp)
	jmp _s1oXY_entry
Lc1tdg:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tdb_info - _c1tdb_info_dsp
.text
	.align 2
_s1oXY_entry:
Ls1oXY:
	call 1f
1:	popl	%eax
	addl $_c1t5P_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 4(%ebp),%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1t5P_info
Lc1t5Q:
	jmp *(%esi)
.text
	.align 2
_c1t5P_info_dsp:
.text
	.align 2
	.long	132
	.long	32
_c1t5P_info:
Lc1t5P:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1td4
Lc1td5:
	cmpl $2,%ecx
	jae Lc1tcY
Lc1tcZ:
	movl 3(%esi),%eax
	movl %eax,8(%ebp)
	addl $4,%ebp
	jmp _s1oY1_entry
Lc1td4:
	cmpl $4,%ecx
	jae Lc1td1
Lc1td2:
	addl $_c1t5W_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,8(%ebp)
	testw $7,%si
	jne _c1t5W_info
Lc1t5X:
	jmp *(%esi)
Lc1td1:
	addl $_c1tcj_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,8(%ebp)
	testw $7,%si
	jne _c1tcj_info
Lc1tck:
	jmp *(%esi)
Lc1tcY:
	addl $_c1tbV_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
	.long  _c1t5P_info - _c1t5P_info_dsp
.text
	.align 2
_c1tcj_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1tcj_info:
Lc1tcj:
	call 1f
1:	popl	%eax
	addl $_c1tco_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1tco_info
Lc1tcs:
	jmp *(%esi)
	.long  _c1tcj_info - _c1tcj_info_dsp
.text
	.align 2
_c1tco_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1tco_info:
Lc1tco:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1tcw_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1tcw_info
Lc1tcy:
	jmp *(%esi)
	.long  _c1tco_info - _c1tco_info_dsp
.text
	.align 2
_c1tcw_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1tcw_info:
Lc1tcw:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1tcU
Lc1tcV:
	addl $_c1tcC_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1tcC_info
Lc1tcG:
	jmp *(%esi)
Lc1tcU:
	addl $4,%ebp
	jmp _s1p60_entry
	.long  _c1tcw_info - _c1tcw_info_dsp
.text
	.align 2
_c1tcC_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1tcC_info:
Lc1tcC:
	call 1f
1:	popl	%eax
	addl $_c1tcK_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl 8(%ebp),%esi
	jmp _stg_ap_pv_fast
	.long  _c1tcC_info - _c1tcC_info_dsp
.text
	.align 2
_c1tcK_info_dsp:
.text
	.align 2
	.long	132
	.long	32
_c1tcK_info:
Lc1tcK:
	movl %esi,8(%ebp)
	addl $4,%ebp
	jmp _s1oY1_entry
	.long  _c1tcK_info - _c1tcK_info_dsp
.text
	.align 2
_c1t5W_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1t5W_info:
Lc1t5W:
	call 1f
1:	popl	%eax
	addl $_c1t61_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1t61_info
Lc1t62:
	jmp *(%esi)
	.long  _c1t5W_info - _c1t5W_info_dsp
.text
	.align 2
_c1t61_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1t61_info:
Lc1t61:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1t66_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1t66_info
Lc1t67:
	jmp *(%esi)
	.long  _c1t61_info - _c1t61_info_dsp
.text
	.align 2
_c1t66_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1t66_info:
Lc1t66:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1tcf
Lc1tcg:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tc8
Lc1tc7:
	movl 3(%esi),%ecx
	addl $_s1pcC_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 8(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -16(%edi),%eax
	movl %eax,8(%ebp)
	addl $4,%ebp
	jmp _s1oY1_entry
Lc1tc8:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1tcf:
	addl $4,%ebp
	jmp _s1p60_entry
	.long  _c1t66_info - _c1t66_info_dsp
.text
	.align 2
_s1p60_entry:
Ls1p60:
	call 1f
1:	popl	%eax
	addl $_c1t5d_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 8(%ebp),%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1t5d_info
Lc1t5e:
	jmp *(%esi)
.text
	.align 2
_c1t5d_info_dsp:
.text
	.align 2
	.long	388
	.long	32
_c1t5d_info:
Lc1t5d:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1tbO
Lc1tbP:
	cmpl $2,%ecx
	jae Lc1tbI
Lc1tbJ:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1taz
Lc1tay:
	movl 3(%esi),%ecx
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -2(%edi),%eax
	movl %eax,12(%ebp)
	addl $4,%ebp
	jmp _s1p62_entry
Lc1tbO:
	cmpl $4,%ecx
	jae Lc1tbL
Lc1tbM:
	addl $_c1t5k_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,12(%ebp)
	testw $7,%si
	jne _c1t5k_info
Lc1t5l:
	jmp *(%esi)
Lc1taz:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1tbL:
	addl $_c1tb1_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,12(%ebp)
	testw $7,%si
	jne _c1tb1_info
Lc1tb2:
	jmp *(%esi)
Lc1tbI:
	addl $_c1taB_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
	.long  _c1t5d_info - _c1t5d_info_dsp
.text
	.align 2
_c1tb1_info_dsp:
.text
	.align 2
	.long	132
	.long	32
_c1tb1_info:
Lc1tb1:
	call 1f
1:	popl	%eax
	addl $_c1tb6_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1tb6_info
Lc1tba:
	jmp *(%esi)
	.long  _c1tb1_info - _c1tb1_info_dsp
.text
	.align 2
_c1tb6_info_dsp:
.text
	.align 2
	.long	132
	.long	32
_c1tb6_info:
Lc1tb6:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1tbe_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1tbe_info
Lc1tbg:
	jmp *(%esi)
	.long  _c1tb6_info - _c1tb6_info_dsp
.text
	.align 2
_c1tbe_info_dsp:
.text
	.align 2
	.long	132
	.long	32
_c1tbe_info:
Lc1tbe:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1tbE
Lc1tbF:
	addl $_c1tbk_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1tbk_info
Lc1tbo:
	jmp *(%esi)
Lc1tbE:
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,12(%ebp)
	addl $4,%ebp
	jmp _s1p62_entry
	.long  _c1tbe_info - _c1tbe_info_dsp
.text
	.align 2
_c1tbk_info_dsp:
.text
	.align 2
	.long	132
	.long	32
_c1tbk_info:
Lc1tbk:
	call 1f
1:	popl	%eax
	addl $_c1tbs_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl 12(%ebp),%esi
	jmp _stg_ap_pv_fast
	.long  _c1tbk_info - _c1tbk_info_dsp
.text
	.align 2
_c1tbs_info_dsp:
.text
	.align 2
	.long	388
	.long	32
_c1tbs_info:
Lc1tbs:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tbx
Lc1tbw:
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -2(%edi),%eax
	movl %eax,12(%ebp)
	addl $4,%ebp
	jmp _s1p62_entry
Lc1tbx:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tbs_info - _c1tbs_info_dsp
.text
	.align 2
_c1t5k_info_dsp:
.text
	.align 2
	.long	132
	.long	32
_c1t5k_info:
Lc1t5k:
	call 1f
1:	popl	%eax
	addl $_c1t5p_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1t5p_info
Lc1t5q:
	jmp *(%esi)
	.long  _c1t5k_info - _c1t5k_info_dsp
.text
	.align 2
_c1t5p_info_dsp:
.text
	.align 2
	.long	132
	.long	32
_c1t5p_info:
Lc1t5p:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1t5u_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1t5u_info
Lc1t5v:
	jmp *(%esi)
	.long  _c1t5p_info - _c1t5p_info_dsp
.text
	.align 2
_c1t5u_info_dsp:
.text
	.align 2
	.long	132
	.long	32
_c1t5u_info:
Lc1t5u:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1taX
Lc1taY:
	addl $28,%edi
	cmpl 856(%ebx),%edi
	ja Lc1taQ
Lc1taP:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1pbP_info-(1b)+0,%edx
	movl %edx,-24(%edi)
	movl 12(%ebp),%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -24(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%eax
	movl %eax,12(%ebp)
	addl $4,%ebp
	jmp _s1p62_entry
Lc1taQ:
	movl $28,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1taX:
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,12(%ebp)
	addl $4,%ebp
	jmp _s1p62_entry
	.long  _c1t5u_info - _c1t5u_info_dsp
.text
	.align 2
_c1taB_info_dsp:
.text
	.align 2
	.long	388
	.long	32
_c1taB_info:
Lc1taB:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1taH
Lc1taG:
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -2(%edi),%eax
	movl %eax,12(%ebp)
	addl $4,%ebp
	jmp _s1p62_entry
Lc1taH:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1taB_info - _c1taB_info_dsp
.text
	.align 2
_s1p62_entry:
Ls1p62:
	call 1f
1:	popl	%eax
	addl $_c1sx2_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 12(%ebp),%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1sx2_info
Lc1sx3:
	jmp *(%esi)
.text
	.align 2
_c1sx2_info_dsp:
.text
	.align 2
	.long	644
	.long	32
_c1sx2_info:
Lc1sx2:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1tas
Lc1tat:
	cmpl $2,%ecx
	jae Lc1tam
Lc1tan:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1t9E
Lc1t9D:
	movl 3(%esi),%ecx
	addl $_s1p6V_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 4(%ebp),%eax
	movl %eax,-8(%edi)
	movl 12(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -20(%edi),%esi
	addl $20,%ebp
	jmp *(%ebp)
Lc1tas:
	cmpl $4,%ecx
	jae Lc1tap
Lc1taq:
	addl $_c1sJm_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,16(%ebp)
	testw $7,%si
	jne _c1sJm_info
Lc1sJn:
	jmp *(%esi)
Lc1tap:
	addl $_c1sVm_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,16(%ebp)
	testw $7,%si
	jne _c1sVm_info
Lc1sVn:
	jmp *(%esi)
Lc1t9E:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1tam:
	addl $_c1sDd_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
	.long  _c1sx2_info - _c1sx2_info_dsp
.text
	.align 2
_c1sVm_info_dsp:
.text
	.align 2
	.long	132
	.long	32
_c1sVm_info:
Lc1sVm:
	call 1f
1:	popl	%eax
	addl $_c1sVr_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1sVr_info
Lc1sVs:
	jmp *(%esi)
	.long  _c1sVm_info - _c1sVm_info_dsp
.text
	.align 2
_c1sVr_info_dsp:
.text
	.align 2
	.long	132
	.long	32
_c1sVr_info:
Lc1sVr:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1sVw_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1sVw_info
Lc1sVx:
	jmp *(%esi)
	.long  _c1sVr_info - _c1sVr_info_dsp
.text
	.align 2
_c1sVw_info_dsp:
.text
	.align 2
	.long	132
	.long	32
_c1sVw_info:
Lc1sVw:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1tai
Lc1taj:
	addl $_c1sVB_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1sVB_info
Lc1sVC:
	jmp *(%esi)
Lc1tai:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1taf
Lc1tae:
	addl $_s1pbr_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl 12(%ebp),%eax
	movl %eax,(%edi)
	leal -16(%edi),%esi
	addl $20,%ebp
	jmp *(%ebp)
Lc1taf:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1sVw_info - _c1sVw_info_dsp
.text
	.align 2
_c1sVB_info_dsp:
.text
	.align 2
	.long	132
	.long	32
_c1sVB_info:
Lc1sVB:
	call 1f
1:	popl	%eax
	addl $_c1sVG_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl 16(%ebp),%esi
	jmp _stg_ap_pv_fast
	.long  _c1sVB_info - _c1sVB_info_dsp
.text
	.align 2
_c1sVG_info_dsp:
.text
	.align 2
	.long	644
	.long	32
_c1sVG_info:
Lc1sVG:
	call 1f
1:	popl	%eax
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tab
Lc1taa:
	addl $_s1paJ_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 4(%ebp),%eax
	movl %eax,-8(%edi)
	movl 12(%ebp),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -20(%edi),%esi
	addl $20,%ebp
	jmp *(%ebp)
Lc1tab:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1sVG_info - _c1sVG_info_dsp
.text
	.align 2
_c1sJm_info_dsp:
.text
	.align 2
	.long	132
	.long	32
_c1sJm_info:
Lc1sJm:
	call 1f
1:	popl	%eax
	addl $_c1sJr_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1sJr_info
Lc1sJs:
	jmp *(%esi)
	.long  _c1sJm_info - _c1sJm_info_dsp
.text
	.align 2
_c1sJr_info_dsp:
.text
	.align 2
	.long	132
	.long	32
_c1sJr_info:
Lc1sJr:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1sJw_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1sJw_info
Lc1sJx:
	jmp *(%esi)
	.long  _c1sJr_info - _c1sJr_info_dsp
.text
	.align 2
_c1sJw_info_dsp:
.text
	.align 2
	.long	132
	.long	32
_c1sJw_info:
Lc1sJw:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	movl 12(%ebp),%edx
	movl %eax,64(%esp)
	movl %esi,%eax
	andl $7,%eax
	cmpl $2,%eax
	jae Lc1t9Z
Lc1ta0:
	addl $28,%edi
	cmpl 856(%ebx),%edi
	ja Lc1t9S
Lc1t9R:
	movl 3(%esi),%eax
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	addl $_s1p8S_info-(1b)+0,%ecx
	movl %ecx,-24(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-12(%edi)
	movl %edx,-8(%edi)
	movl 16(%ebp),%ecx
	movl %ecx,-4(%edi)
	movl %eax,(%edi)
	leal -24(%edi),%esi
	addl $20,%ebp
	jmp *(%ebp)
Lc1t9S:
	movl $28,904(%ebx)
	movl 64(%esp),%eax
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1t9Z:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1t9W
Lc1t9V:
	movl 64(%esp),%eax
	addl $_s1p9A_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-4(%edi)
	movl %edx,(%edi)
	leal -16(%edi),%esi
	addl $20,%ebp
	jmp *(%ebp)
Lc1t9W:
	movl $20,904(%ebx)
	movl 64(%esp),%eax
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1sJw_info - _c1sJw_info_dsp
.text
	.align 2
_c1sDd_info_dsp:
.text
	.align 2
	.long	644
	.long	32
_c1sDd_info:
Lc1sDd:
	call 1f
1:	popl	%eax
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1t9J
Lc1t9I:
	addl $_s1p7O_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 4(%ebp),%eax
	movl %eax,-8(%edi)
	movl 12(%ebp),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -20(%edi),%esi
	addl $20,%ebp
	jmp *(%ebp)
Lc1t9J:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1sDd_info - _c1sDd_info_dsp
.text
	.align 2
_c1tbV_info_dsp:
.text
	.align 2
	.long	132
	.long	32
_c1tbV_info:
Lc1tbV:
	movl %esi,8(%ebp)
	addl $4,%ebp
	jmp _s1oY1_entry
	.long  _c1tbV_info - _c1tbV_info_dsp
.text
	.align 2
_s1oY1_entry:
Ls1oY1:
	call 1f
1:	popl	%eax
	addl $_c1suj_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 8(%ebp),%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1suj_info
Lc1suk:
	jmp *(%esi)
.text
	.align 2
_c1suj_info_dsp:
.text
	.align 2
	.long	260
	.long	32
_c1suj_info:
Lc1suj:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1t9w
Lc1t9x:
	cmpl $2,%ecx
	jae Lc1t9q
Lc1t9r:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1t8h
Lc1t8g:
	movl 3(%esi),%ecx
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -2(%edi),%eax
	movl %eax,12(%ebp)
	addl $4,%ebp
	jmp _s1oY4_entry
Lc1t9w:
	cmpl $4,%ecx
	jae Lc1t9t
Lc1t9u:
	addl $_c1suq_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,12(%ebp)
	testw $7,%si
	jne _c1suq_info
Lc1sur:
	jmp *(%esi)
Lc1t8h:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1t9t:
	addl $_c1t8J_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,12(%ebp)
	testw $7,%si
	jne _c1t8J_info
Lc1t8K:
	jmp *(%esi)
Lc1t9q:
	addl $_c1t8j_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
	.long  _c1suj_info - _c1suj_info_dsp
.text
	.align 2
_c1t8J_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1t8J_info:
Lc1t8J:
	call 1f
1:	popl	%eax
	addl $_c1t8O_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1t8O_info
Lc1t8S:
	jmp *(%esi)
	.long  _c1t8J_info - _c1t8J_info_dsp
.text
	.align 2
_c1t8O_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1t8O_info:
Lc1t8O:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1t8W_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1t8W_info
Lc1t8Y:
	jmp *(%esi)
	.long  _c1t8O_info - _c1t8O_info_dsp
.text
	.align 2
_c1t8W_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1t8W_info:
Lc1t8W:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1t9m
Lc1t9n:
	addl $_c1t92_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1t92_info
Lc1t96:
	jmp *(%esi)
Lc1t9m:
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,12(%ebp)
	addl $4,%ebp
	jmp _s1oY4_entry
	.long  _c1t8W_info - _c1t8W_info_dsp
.text
	.align 2
_c1t92_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1t92_info:
Lc1t92:
	call 1f
1:	popl	%eax
	addl $_c1t9a_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl 12(%ebp),%esi
	jmp _stg_ap_pv_fast
	.long  _c1t92_info - _c1t92_info_dsp
.text
	.align 2
_c1t9a_info_dsp:
.text
	.align 2
	.long	260
	.long	32
_c1t9a_info:
Lc1t9a:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1t9f
Lc1t9e:
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -2(%edi),%eax
	movl %eax,12(%ebp)
	addl $4,%ebp
	jmp _s1oY4_entry
Lc1t9f:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1t9a_info - _c1t9a_info_dsp
.text
	.align 2
_c1suq_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1suq_info:
Lc1suq:
	call 1f
1:	popl	%eax
	addl $_c1suv_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1suv_info
Lc1suw:
	jmp *(%esi)
	.long  _c1suq_info - _c1suq_info_dsp
.text
	.align 2
_c1suv_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1suv_info:
Lc1suv:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1suA_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1suA_info
Lc1suB:
	jmp *(%esi)
	.long  _c1suv_info - _c1suv_info_dsp
.text
	.align 2
_c1suA_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1suA_info:
Lc1suA:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1t8F
Lc1t8G:
	addl $28,%edi
	cmpl 856(%ebx),%edi
	ja Lc1t8y
Lc1t8x:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1p5B_info-(1b)+0,%edx
	movl %edx,-24(%edi)
	movl 12(%ebp),%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -24(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%eax
	movl %eax,12(%ebp)
	addl $4,%ebp
	jmp _s1oY4_entry
Lc1t8y:
	movl $28,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1t8F:
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,12(%ebp)
	addl $4,%ebp
	jmp _s1oY4_entry
	.long  _c1suA_info - _c1suA_info_dsp
.text
	.align 2
_c1t8j_info_dsp:
.text
	.align 2
	.long	260
	.long	32
_c1t8j_info:
Lc1t8j:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1t8p
Lc1t8o:
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -2(%edi),%eax
	movl %eax,12(%ebp)
	addl $4,%ebp
	jmp _s1oY4_entry
Lc1t8p:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1t8j_info - _c1t8j_info_dsp
.text
	.align 2
_s1oY4_entry:
Ls1oY4:
	call 1f
1:	popl	%eax
	addl $_c1rKn_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 12(%ebp),%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1rKn_info
Lc1rKo:
	jmp *(%esi)
.text
	.align 2
_c1rKn_info_dsp:
.text
	.align 2
	.long	516
	.long	32
_c1rKn_info:
Lc1rKn:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1t8a
Lc1t8b:
	cmpl $2,%ecx
	jae Lc1t84
Lc1t85:
	addl $28,%edi
	cmpl 856(%ebx),%edi
	ja Lc1t7m
Lc1t7l:
	movl 3(%esi),%ecx
	addl $_s1oZf_info-(1b)+0,%eax
	movl %eax,-24(%edi)
	movl 4(%ebp),%eax
	movl %eax,-12(%edi)
	movl 8(%ebp),%eax
	movl %eax,-8(%edi)
	movl 12(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -24(%edi),%esi
	addl $20,%ebp
	jmp *(%ebp)
Lc1t8a:
	cmpl $4,%ecx
	jae Lc1t87
Lc1t88:
	addl $_c1s0T_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,16(%ebp)
	testw $7,%si
	jne _c1s0T_info
Lc1s0U:
	jmp *(%esi)
Lc1t87:
	addl $_c1sh5_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,16(%ebp)
	testw $7,%si
	jne _c1sh5_info
Lc1sh6:
	jmp *(%esi)
Lc1t7m:
	movl $28,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1t84:
	addl $_c1rSE_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
	.long  _c1rKn_info - _c1rKn_info_dsp
.text
	.align 2
_c1sh5_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1sh5_info:
Lc1sh5:
	call 1f
1:	popl	%eax
	addl $_c1sha_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1sha_info
Lc1shb:
	jmp *(%esi)
	.long  _c1sh5_info - _c1sh5_info_dsp
.text
	.align 2
_c1sha_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1sha_info:
Lc1sha:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1shf_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1shf_info
Lc1shg:
	jmp *(%esi)
	.long  _c1sha_info - _c1sha_info_dsp
.text
	.align 2
_c1shf_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1shf_info:
Lc1shf:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1t80
Lc1t81:
	addl $_c1shk_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1shk_info
Lc1shl:
	jmp *(%esi)
Lc1t80:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1t7X
Lc1t7W:
	addl $_s1p5d_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 4(%ebp),%eax
	movl %eax,-8(%edi)
	movl 8(%ebp),%eax
	movl %eax,-4(%edi)
	movl 12(%ebp),%eax
	movl %eax,(%edi)
	leal -20(%edi),%esi
	addl $20,%ebp
	jmp *(%ebp)
Lc1t7X:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1shf_info - _c1shf_info_dsp
.text
	.align 2
_c1shk_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1shk_info:
Lc1shk:
	call 1f
1:	popl	%eax
	addl $_c1shp_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl 16(%ebp),%esi
	jmp _stg_ap_pv_fast
	.long  _c1shk_info - _c1shk_info_dsp
.text
	.align 2
_c1shp_info_dsp:
.text
	.align 2
	.long	516
	.long	32
_c1shp_info:
Lc1shp:
	call 1f
1:	popl	%eax
	addl $28,%edi
	cmpl 856(%ebx),%edi
	ja Lc1t7T
Lc1t7S:
	addl $_s1p4d_info-(1b)+0,%eax
	movl %eax,-24(%edi)
	movl 4(%ebp),%eax
	movl %eax,-12(%edi)
	movl 8(%ebp),%eax
	movl %eax,-8(%edi)
	movl 12(%ebp),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -24(%edi),%esi
	addl $20,%ebp
	jmp *(%ebp)
Lc1t7T:
	movl $28,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1shp_info - _c1shp_info_dsp
.text
	.align 2
_c1s0T_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1s0T_info:
Lc1s0T:
	call 1f
1:	popl	%eax
	addl $_c1s0Y_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1s0Y_info
Lc1s0Z:
	jmp *(%esi)
	.long  _c1s0T_info - _c1s0T_info_dsp
.text
	.align 2
_c1s0Y_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1s0Y_info:
Lc1s0Y:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1s13_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1s13_info
Lc1s14:
	jmp *(%esi)
	.long  _c1s0Y_info - _c1s0Y_info_dsp
.text
	.align 2
_c1s13_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1s13_info:
Lc1s13:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	movl 8(%ebp),%edx
	movl %eax,64(%esp)
	movl 12(%ebp),%eax
	movl %ecx,76(%esp)
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1t7H
Lc1t7I:
	addl $32,%edi
	cmpl 856(%ebx),%edi
	ja Lc1t7A
Lc1t7z:
	movl 3(%esi),%ecx
	movl %edx,88(%esp)
	movl 64(%esp),%edx
	addl $_s1p1M_info-(1b)+0,%edx
	movl %edx,-28(%edi)
	movl 76(%esp),%edx
	movl %edx,-16(%edi)
	movl 88(%esp),%edx
	movl %edx,-12(%edi)
	movl %eax,-8(%edi)
	movl 16(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -28(%edi),%esi
	addl $20,%ebp
	jmp *(%ebp)
Lc1t7A:
	movl $32,904(%ebx)
	movl 64(%esp),%eax
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1t7H:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1t7E
Lc1t7D:
	movl 64(%esp),%ecx
	addl $_s1p2M_info-(1b)+0,%ecx
	movl %ecx,-20(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-8(%edi)
	movl %edx,-4(%edi)
	movl %eax,(%edi)
	leal -20(%edi),%esi
	addl $20,%ebp
	jmp *(%ebp)
Lc1t7E:
	movl $24,904(%ebx)
	movl 64(%esp),%eax
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1s13_info - _c1s13_info_dsp
.text
	.align 2
_c1rSE_info_dsp:
.text
	.align 2
	.long	516
	.long	32
_c1rSE_info:
Lc1rSE:
	call 1f
1:	popl	%eax
	addl $28,%edi
	cmpl 856(%ebx),%edi
	ja Lc1t7r
Lc1t7q:
	addl $_s1p0q_info-(1b)+0,%eax
	movl %eax,-24(%edi)
	movl 4(%ebp),%eax
	movl %eax,-12(%edi)
	movl 8(%ebp),%eax
	movl %eax,-8(%edi)
	movl 12(%ebp),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -24(%edi),%esi
	addl $20,%ebp
	jmp *(%ebp)
Lc1t7r:
	movl $28,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1rSE_info - _c1rSE_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_clipzuf3_closure
_CoreziRenderziInternal_clipzuf3_closure:
	.long	_CoreziRenderziInternal_clipzuf3_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1tBd_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	99
	.byte	116
	.byte	120
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	98
	.byte	101
	.byte	103
	.byte	105
	.byte	110
	.byte	80
	.byte	97
	.byte	116
	.byte	104
	.byte	40
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_clipzuf3_info_dsp:
.text
	.align 2
	.long	0
	.long	22
.globl _CoreziRenderziInternal_clipzuf3_info
_CoreziRenderziInternal_clipzuf3_info:
Lc1tBg:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1tBy
Lc1tBz:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1tBc
Lc1tBb:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1tBe_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1tBd_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1tBc:
	jmp *(%esi)
Lc1tBy:
	jmp *-16(%ebx)
	.long  _CoreziRenderziInternal_clipzuf3_info - _CoreziRenderziInternal_clipzuf3_info_dsp
.text
	.align 2
_c1tBe_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tBe_info:
Lc1tBe:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tBj_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tBe_info - _c1tBe_info_dsp
.text
	.align 2
_c1tBj_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tBj_info:
Lc1tBj:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tBD
Lc1tBC:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1tBv_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1tBD:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tBj_info - _c1tBj_info_dsp
.text
	.align 2
_c1tBv_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tBv_info:
Lc1tBv:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tBH
Lc1tBG:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1tBH:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tBv_info - _c1tBv_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_strokezuf1_closure
_CoreziRenderziInternal_strokezuf1_closure:
	.long	_CoreziRenderziInternal_strokezuf1_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1tCL_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	99
	.byte	116
	.byte	120
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	115
	.byte	116
	.byte	114
	.byte	111
	.byte	107
	.byte	101
	.byte	40
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_strokezuf1_info_dsp:
.text
	.align 2
	.long	0
	.long	22
.globl _CoreziRenderziInternal_strokezuf1_info
_CoreziRenderziInternal_strokezuf1_info:
Lc1tCO:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1tD6
Lc1tD7:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1tCK
Lc1tCJ:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1tCM_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1tCL_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1tCK:
	jmp *(%esi)
Lc1tD6:
	jmp *-16(%ebx)
	.long  _CoreziRenderziInternal_strokezuf1_info - _CoreziRenderziInternal_strokezuf1_info_dsp
.text
	.align 2
_c1tCM_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tCM_info:
Lc1tCM:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tCR_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tCM_info - _c1tCM_info_dsp
.text
	.align 2
_c1tCR_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tCR_info:
Lc1tCR:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tDb
Lc1tDa:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1tD3_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1tDb:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tCR_info - _c1tCR_info_dsp
.text
	.align 2
_c1tD3_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tD3_info:
Lc1tD3:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tDf
Lc1tDe:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1tDf:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tD3_info - _c1tD3_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_stroke1_closure
_CoreziRenderziInternal_stroke1_closure:
	.long	_CoreziRenderziInternal_stroke1_info
	.long	0
.text
	.align 2
_s1peZ_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1peZ_info)+60
	.long	131077
	.long	3
	.long	1040252937
_s1peZ_info:
Lc1tEY:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -24(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1tG7
Lc1tG8:
	addl $_c1tEV_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 6(%esi),%eax
	movl 10(%esi),%edx
	movl 2(%esi),%esi
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _c1tEV_info
Lc1tEW:
	jmp *(%esi)
Lc1tG7:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1peZ_info - _s1peZ_info_dsp
.text
	.align 2
_c1tEV_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tEV_info)+60
	.long	3
	.long	1040252960
_c1tEV_info:
Lc1tEV:
	call 1f
1:	popl	%eax
	addl $_c1tF1_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 15(%esi),%eax
	movl %eax,32(%ebx)
	movl 11(%esi),%eax
	movl %eax,24(%ebx)
	movl 7(%esi),%eax
	movl %eax,16(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_zdwa_info
	.long  _c1tEV_info - _c1tEV_info_dsp
.text
	.align 2
_c1tF1_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tF1_info)+60
	.long	3
	.long	1040252960
_c1tF1_info:
Lc1tF1:
	call 1f
1:	popl	%eax
	addl $_c1tF3_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,%eax
	movl 8(%ebp),%esi
	movl %eax,8(%ebp)
	testw $7,%si
	jne _c1tF3_info
Lc1tF4:
	jmp *(%esi)
	.long  _c1tF1_info - _c1tF1_info_dsp
.text
	.align 2
_c1tF3_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tF3_info)+60
	.long	3
	.long	1040252960
_c1tF3_info:
Lc1tF3:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tF8_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl 3(%esi),%ecx
	movl L_CoreziRenderziInternal_stroke3_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %ecx,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1tF8_info
Lc1tF9:
	jmp *(%esi)
	.long  _c1tF3_info - _c1tF3_info_dsp
.text
	.align 2
_c1tF8_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tF8_info)+60
	.long	68
	.long	503382048
_c1tF8_info:
Lc1tF8:
	call 1f
1:	popl	%eax
	addl $_c1tFd_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 12(%ebp),%eax
	movl %eax,8(%ebx)
	movl 3(%esi),%eax
	movl %eax,12(%ebp)
	jmp _CoreziRenderziInternal_zdwcolor2JSString_info
	.long  _c1tF8_info - _c1tF8_info_dsp
.text
	.align 2
_c1tFd_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tFd_info)+96
	.long	324
	.long	983072
_c1tFd_info:
Lc1tFd:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tFh_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl %esi,%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_jsSetzuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %ecx,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1tFh_info
Lc1tFi:
	jmp *(%esi)
	.long  _c1tFd_info - _c1tFd_info_dsp
.text
	.align 2
_c1tFh_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tFh_info)+100
	.long	709
	.long	458784
_c1tFh_info:
Lc1tFh:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1tFr_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl 16(%ebp),%edx
	movl %eax,16(%ebp)
	movl %edx,64(%esp)
	movl 8(%ebp),%edx
	addl $4,%ebp
	movl %edx,76(%esp)
	movl 872(%ebx),%edx
	movl %ecx,88(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,112(%esp)
	movl 104(%edx),%eax
	movl %eax,124(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,136(%esp)
	movl 112(%esp),%ecx
	subl %eax,%ecx
	movl 124(%esp),%eax
	movl %ecx,148(%esp)
	movl 136(%esp),%ecx
	sbbl %ecx,%eax
	movl 148(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $12,%esp
	movl 100(%esp),%ecx
	pushl %ecx
	movl 80(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 124(%esp),%ecx
	pushl %ecx
	movl %eax,188(%esp)
	call L___app3$stub
	addl $28,%esp
	subl $8,%esp
	movl 168(%esp),%ecx
	pushl %ecx
	movl %eax,184(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,184(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,196(%esp)
	movl %eax,%ecx
	movl %edx,208(%esp)
	movl 196(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 184(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,220(%esp)
	movl 208(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 220(%esp),%ecx
	adcl %eax,%ecx
	movl 184(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 172(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1tFh_info - _c1tFh_info_dsp
.text
	.align 2
_c1tFr_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tFr_info)+100
	.long	324
	.long	458784
_c1tFr_info:
Lc1tFr:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tFt_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_CoreziRenderziInternal_stroke2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	testw $7,%si
	jne _c1tFt_info
Lc1tFu:
	jmp *(%esi)
	.long  _c1tFr_info - _c1tFr_info_dsp
.text
	.align 2
_c1tFt_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tFt_info)+100
	.long	324
	.long	196640
_c1tFt_info:
Lc1tFt:
	call 1f
1:	popl	%eax
	addl $_c1tFy_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 16(%ebp),%esi
	movl %eax,16(%ebp)
	testw $7,%si
	jne _c1tFy_info
Lc1tFz:
	jmp *(%esi)
	.long  _c1tFt_info - _c1tFt_info_dsp
.text
	.align 2
_c1tFy_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tFy_info)+100
	.long	836
	.long	196640
_c1tFy_info:
Lc1tFy:
	call 1f
1:	popl	%eax
	addl $_c1tFF_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,64(%esp)
	movl 104(%eax),%edx
	movl %edx,76(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,88(%esp)
	movl 64(%esp),%ecx
	subl %edx,%ecx
	movl 76(%esp),%edx
	movl %ecx,100(%esp)
	movl 88(%esp),%ecx
	sbbl %ecx,%edx
	movl 100(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
#	gstt %fake0,124(%esp)
	fld %st(0) ; fstpt 124(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	subl $8,%esp
#	gldt 124(%esp),%fake0
	fldt 124(%esp) ; fstp %st(1)
#	gstsd %fake0,(%esp)
	fstl (%esp)
	movl %eax,136(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_String$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1tFy_info - _c1tFy_info_dsp
.text
	.align 2
_c1tFF_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tFF_info)+100
	.long	836
	.long	196640
_c1tFF_info:
Lc1tFF:
	call 1f
1:	popl	%eax
	addl $_c1tFM_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 12(%ebp),%eax
	movl 4(%ebp),%ecx
	movl 16(%ebp),%edx
	movl %eax,64(%esp)
	movl 872(%ebx),%eax
	movl %ecx,76(%esp)
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %edx,88(%esp)
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,100(%esp)
	movl 104(%eax),%edx
	movl %edx,112(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,124(%esp)
	movl 100(%esp),%ecx
	subl %edx,%ecx
	movl 112(%esp),%edx
	movl %ecx,136(%esp)
	movl 124(%esp),%ecx
	sbbl %ecx,%edx
	movl 136(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $12,%esp
	pushl %esi
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,176(%esp)
	call L___app3$stub
	addl $28,%esp
	subl $8,%esp
	movl 156(%esp),%ecx
	pushl %ecx
	movl %eax,172(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,172(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,184(%esp)
	movl %eax,%ecx
	movl %edx,196(%esp)
	movl 184(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 172(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,208(%esp)
	movl 196(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 208(%esp),%ecx
	adcl %eax,%ecx
	movl 172(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 160(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1tFF_info - _c1tFF_info_dsp
.text
	.align 2
_c1tFM_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tFM_info)+100
	.long	836
	.long	196640
_c1tFM_info:
Lc1tFM:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tFO_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_CoreziRenderziInternal_clipzuf3_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	testw $7,%si
	jne _c1tFO_info
Lc1tFP:
	jmp *(%esi)
	.long  _c1tFM_info - _c1tFM_info_dsp
.text
	.align 2
_c1tFO_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tFO_info)+104
	.long	836
	.long	65568
_c1tFO_info:
Lc1tFO:
	call 1f
1:	popl	%eax
	addl $_c1tFW_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1tFO_info - _c1tFO_info_dsp
.text
	.align 2
_c1tFW_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tFW_info)+104
	.long	836
	.long	65568
_c1tFW_info:
Lc1tFW:
	call 1f
1:	popl	%eax
	addl $_c1tFY_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%esi
	testw $7,%si
	jne _c1tFY_info
Lc1tFZ:
	jmp *(%esi)
	.long  _c1tFW_info - _c1tFW_info_dsp
.text
	.align 2
_c1tFY_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tFY_info)+104
	.long	964
	.long	65568
_c1tFY_info:
Lc1tFY:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tGo
Lc1tGn:
	movl 7(%esi),%ecx
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-4(%edi)
	movl 4(%ebp),%edx
	movl %edx,(%edi)
	movl %eax,%edx
	addl $_c1tG4_info-(1b)+0,%edx
	movl %edx,(%ebp)
	movl L_ghczmprim_GHCziTypes_False_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,16(%ebx)
	leal -3(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_ppv_fast
Lc1tGo:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tFY_info - _c1tFY_info_dsp
.text
	.align 2
_c1tG4_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tG4_info)+104
	.long	964
	.long	65568
_c1tG4_info:
Lc1tG4:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tG6_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_CoreziRenderziInternal_strokezuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	testw $7,%si
	jne _c1tG6_info
Lc1tGq:
	jmp *(%esi)
	.long  _c1tG4_info - _c1tG4_info_dsp
.text
	.align 2
_c1tG6_info_dsp:
.text
	.align 2
	.long	964
	.long	32
_c1tG6_info:
Lc1tG6:
	call 1f
1:	popl	%eax
	addl $_c1tGy_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl 4(%ebp),%eax
	addl $16,%ebp
	movl 3(%esi),%ecx
	movl 872(%ebx),%edx
	movl %ecx,64(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,76(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,88(%esp)
	movl 104(%edx),%eax
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,112(%esp)
	movl 88(%esp),%ecx
	subl %eax,%ecx
	movl 100(%esp),%eax
	movl %ecx,124(%esp)
	movl 112(%esp),%ecx
	sbbl %ecx,%eax
	movl 124(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1tG6_info - _c1tG6_info_dsp
.text
	.align 2
_c1tGy_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tGy_info:
Lc1tGy:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1tGy_info - _c1tGy_info_dsp
.text
	.align 2
_s1pf0_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pf0_info)+60
	.long	131077
	.long	3
	.long	1040252937
_s1pf0_info:
Lc1tHo:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1tHs
Lc1tHr:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_s1peZ_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 88(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -10(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_getImage2_info
Lc1tHs:
	movl $16,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pf0_info - _s1pf0_info_dsp
.text
	.align 2
_CoreziRenderziInternal_stroke1_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_stroke1_info)+60
	.long	196631
	.long	0
	.long	2113994767
.globl _CoreziRenderziInternal_stroke1_info
_CoreziRenderziInternal_stroke1_info:
Lc1tHv:
	call 1f
1:	popl	%eax
	addl $40,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1tHz
Lc1tHy:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_s1pf0_info-(1b)+0,%eax
	movl %eax,-36(%edi)
	movl 76(%esp),%eax
	movl %eax,-32(%edi)
	movl %edx,-28(%edi)
	movl %ecx,-24(%edi)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_EmbedDraw_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-20(%edi)
	leal -34(%edi),%ecx
	movl %ecx,-16(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	leal -19(%edi),%ecx
	movl %ecx,-4(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	jmp *(%ebp)
Lc1tHz:
	movl $40,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_stroke1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_stroke1_info - _CoreziRenderziInternal_stroke1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_stroke_closure
_CoreziRenderziInternal_stroke_closure:
	.long	_CoreziRenderziInternal_stroke_info
	.long	0
.text
	.align 2
_CoreziRenderziInternal_stroke_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_stroke_info)+116
	.long	196631
	.long	0
	.long	65551
.globl _CoreziRenderziInternal_stroke_info
_CoreziRenderziInternal_stroke_info:
Lc1tKN:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_stroke1_info
	.long  _CoreziRenderziInternal_stroke_info - _CoreziRenderziInternal_stroke_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_fillzuf1_closure
_CoreziRenderziInternal_fillzuf1_closure:
	.long	_CoreziRenderziInternal_fillzuf1_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1tLc_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	99
	.byte	116
	.byte	120
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	102
	.byte	105
	.byte	108
	.byte	108
	.byte	40
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_fillzuf1_info_dsp:
.text
	.align 2
	.long	0
	.long	22
.globl _CoreziRenderziInternal_fillzuf1_info
_CoreziRenderziInternal_fillzuf1_info:
Lc1tLf:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1tLx
Lc1tLy:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1tLb
Lc1tLa:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1tLd_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1tLc_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1tLb:
	jmp *(%esi)
Lc1tLx:
	jmp *-16(%ebx)
	.long  _CoreziRenderziInternal_fillzuf1_info - _CoreziRenderziInternal_fillzuf1_info_dsp
.text
	.align 2
_c1tLd_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tLd_info:
Lc1tLd:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tLi_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tLd_info - _c1tLd_info_dsp
.text
	.align 2
_c1tLi_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tLi_info:
Lc1tLi:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tLC
Lc1tLB:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1tLu_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1tLC:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tLi_info - _c1tLi_info_dsp
.text
	.align 2
_c1tLu_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tLu_info:
Lc1tLu:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tLG
Lc1tLF:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1tLG:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tLu_info - _c1tLu_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_fill1_closure
_CoreziRenderziInternal_fill1_closure:
	.long	_CoreziRenderziInternal_fill1_info
	.long	0
.const_data
	.align 2
.align 0
_u1tOX_srtd:
	.long	_S1qJo_srt+60
	.long	17
	.long	99841
.text
	.align 2
_s1pfR_info_dsp:
.text
	.align 2
	.long	_u1tOX_srtd-(_s1pfR_info)+0
	.long	131077
	.long	2
	.long	-65524
_s1pfR_info:
Lc1tNa:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -24(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1tNX
Lc1tNY:
	addl $_c1tN7_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 6(%esi),%eax
	movl 2(%esi),%esi
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1tN7_info
Lc1tN8:
	jmp *(%esi)
Lc1tNX:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pfR_info - _s1pfR_info_dsp
.const_data
	.align 2
.align 0
_u1tOY_srtd:
	.long	_S1qJo_srt+60
	.long	17
	.long	99841
.text
	.align 2
_c1tN7_info_dsp:
.text
	.align 2
	.long	_u1tOY_srtd-(_c1tN7_info)+0
	.long	2
	.long	-65504
_c1tN7_info:
Lc1tN7:
	call 1f
1:	popl	%eax
	addl $_c1tNd_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 15(%esi),%eax
	movl %eax,32(%ebx)
	movl 11(%esi),%eax
	movl %eax,24(%ebx)
	movl 7(%esi),%eax
	movl %eax,16(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_zdwa_info
	.long  _c1tN7_info - _c1tN7_info_dsp
.const_data
	.align 2
.align 0
_u1tOZ_srtd:
	.long	_S1qJo_srt+60
	.long	17
	.long	99841
.text
	.align 2
_c1tNd_info_dsp:
.text
	.align 2
	.long	_u1tOZ_srtd-(_c1tNd_info)+0
	.long	2
	.long	-65504
_c1tNd_info:
Lc1tNd:
	call 1f
1:	popl	%eax
	addl $_c1tNf_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,%eax
	movl 8(%ebp),%esi
	movl %eax,8(%ebp)
	testw $7,%si
	jne _c1tNf_info
Lc1tNg:
	jmp *(%esi)
	.long  _c1tNd_info - _c1tNd_info_dsp
.const_data
	.align 2
.align 0
_u1tP0_srtd:
	.long	_S1qJo_srt+60
	.long	17
	.long	99841
.text
	.align 2
_c1tNf_info_dsp:
.text
	.align 2
	.long	_u1tP0_srtd-(_c1tNf_info)+0
	.long	2
	.long	-65504
_c1tNf_info:
Lc1tNf:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tNk_info-(1b)+0,%ecx
	movl %ecx,-8(%ebp)
	movl %esi,%ecx
	movl 3(%esi),%edx
	movl L_CoreziRenderziInternal_fill2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %edx,-4(%ebp)
	movl %ecx,(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1tNk_info
Lc1tNl:
	jmp *(%esi)
	.long  _c1tNf_info - _c1tNf_info_dsp
.text
	.align 2
_c1tNk_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tNk_info)+60
	.long	68
	.long	-2046754784
_c1tNk_info:
Lc1tNk:
	call 1f
1:	popl	%eax
	addl $_c1tNp_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 16(%ebp),%eax
	movl %eax,8(%ebx)
	movl 3(%esi),%eax
	movl %eax,16(%ebp)
	jmp _CoreziRenderziInternal_zdwcolor2JSString_info
	.long  _c1tNk_info - _c1tNk_info_dsp
.text
	.align 2
_c1tNp_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tNp_info)+96
	.long	580
	.long	4390944
_c1tNp_info:
Lc1tNp:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tNt_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl %esi,%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_jsSetzuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %ecx,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1tNt_info
Lc1tNu:
	jmp *(%esi)
	.long  _c1tNp_info - _c1tNp_info_dsp
.text
	.align 2
_c1tNt_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tNt_info)+100
	.long	1221
	.long	2162720
_c1tNt_info:
Lc1tNt:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1tND_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 8(%ebp),%eax
	movl 20(%ebp),%edx
	addl $4,%ebp
	movl %eax,64(%esp)
	movl 3(%esi),%eax
	movl %eax,76(%esp)
	movl 872(%ebx),%eax
	movl %edx,88(%esp)
	movl 20(%eax),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%edx)
	movl 100(%eax),%ecx
	movl %ecx,112(%esp)
	movl 104(%eax),%ecx
	movl %ecx,124(%esp)
	leal 4(%edi),%ecx
	subl (%edx),%ecx
	xorl %edx,%edx
	movl %edx,136(%esp)
	movl 112(%esp),%edx
	subl %ecx,%edx
	movl 124(%esp),%ecx
	movl %edx,148(%esp)
	movl 136(%esp),%edx
	sbbl %edx,%ecx
	movl 148(%esp),%edx
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $12,%esp
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 84(%esp),%ecx
	pushl %ecx
	movl 100(%esp),%ecx
	pushl %ecx
	movl %eax,188(%esp)
	call L___app3$stub
	addl $28,%esp
	subl $8,%esp
	movl 168(%esp),%ecx
	pushl %ecx
	movl %eax,184(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,184(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,196(%esp)
	movl %eax,%ecx
	movl %edx,208(%esp)
	movl 196(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 184(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,220(%esp)
	movl 208(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 220(%esp),%ecx
	adcl %eax,%ecx
	movl 184(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 172(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1tNt_info - _c1tNt_info_dsp
.text
	.align 2
_c1tND_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tND_info)+100
	.long	580
	.long	2162720
_c1tND_info:
Lc1tND:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tNF_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_CoreziRenderziInternal_clipzuf3_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	testw $7,%si
	jne _c1tNF_info
Lc1tNG:
	jmp *(%esi)
	.long  _c1tND_info - _c1tND_info_dsp
.text
	.align 2
_c1tNF_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tNF_info)+120
	.long	580
	.long	65568
_c1tNF_info:
Lc1tNF:
	call 1f
1:	popl	%eax
	addl $_c1tNN_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1tNF_info - _c1tNF_info_dsp
.text
	.align 2
_c1tNN_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tNN_info)+120
	.long	580
	.long	65568
_c1tNN_info:
Lc1tNN:
	call 1f
1:	popl	%eax
	addl $_c1tNP_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 12(%ebp),%esi
	testw $7,%si
	jne _c1tNP_info
Lc1tNQ:
	jmp *(%esi)
	.long  _c1tNN_info - _c1tNN_info_dsp
.text
	.align 2
_c1tNP_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tNP_info)+120
	.long	836
	.long	65568
_c1tNP_info:
Lc1tNP:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tNU_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_ghczmprim_GHCziTypes_True_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	addl $2,%eax
	movl %eax,16(%ebx)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl 7(%esi),%esi
	jmp _stg_ap_ppv_fast
	.long  _c1tNP_info - _c1tNP_info_dsp
.text
	.align 2
_c1tNU_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1tNU_info)+120
	.long	964
	.long	65568
_c1tNU_info:
Lc1tNU:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tNW_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_CoreziRenderziInternal_fillzuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	testw $7,%si
	jne _c1tNW_info
Lc1tOa:
	jmp *(%esi)
	.long  _c1tNU_info - _c1tNU_info_dsp
.text
	.align 2
_c1tNW_info_dsp:
.text
	.align 2
	.long	964
	.long	32
_c1tNW_info:
Lc1tNW:
	call 1f
1:	popl	%eax
	addl $_c1tOi_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl 4(%ebp),%eax
	addl $16,%ebp
	movl 3(%esi),%ecx
	movl 872(%ebx),%edx
	movl %ecx,64(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,76(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,88(%esp)
	movl 104(%edx),%eax
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,112(%esp)
	movl 88(%esp),%ecx
	subl %eax,%ecx
	movl 100(%esp),%eax
	movl %ecx,124(%esp)
	movl 112(%esp),%ecx
	sbbl %ecx,%eax
	movl 124(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1tNW_info - _c1tNW_info_dsp
.text
	.align 2
_c1tOi_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tOi_info:
Lc1tOi:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1tOi_info - _c1tOi_info_dsp
.const_data
	.align 2
.align 0
_u1tP1_srtd:
	.long	_S1qJo_srt+60
	.long	18
	.long	230913
.text
	.align 2
_CoreziRenderziInternal_fill1_info_dsp:
.text
	.align 2
	.long	_u1tP1_srtd-(_CoreziRenderziInternal_fill1_info)+0
	.long	131087
	.long	0
	.long	-65521
.globl _CoreziRenderziInternal_fill1_info
_CoreziRenderziInternal_fill1_info:
Lc1tOS:
	call 1f
1:	popl	%eax
	addl $36,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1tOW
Lc1tOV:
	movl %eax,64(%esp)
	addl $_s1pfR_info-(1b)+0,%eax
	movl %eax,-32(%edi)
	movl %edx,-28(%edi)
	movl %ecx,-24(%edi)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_EmbedDraw_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-20(%edi)
	leal -30(%edi),%ecx
	movl %ecx,-16(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	leal -19(%edi),%ecx
	movl %ecx,-4(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	jmp *(%ebp)
Lc1tOW:
	movl $36,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziRenderziInternal_fill1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_fill1_info - _CoreziRenderziInternal_fill1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_fill_closure
_CoreziRenderziInternal_fill_closure:
	.long	_CoreziRenderziInternal_fill_info
	.long	0
.text
	.align 2
_CoreziRenderziInternal_fill_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_fill_info)+128
	.long	131087
	.long	0
	.long	65551
.globl _CoreziRenderziInternal_fill_info
_CoreziRenderziInternal_fill_info:
Lc1tRo:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_fill1_info
	.long  _CoreziRenderziInternal_fill_info - _CoreziRenderziInternal_fill_info_dsp
.data
	.align 2
.align 0
_r1mSx_closure:
	.long	_r1mSx_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1tRM_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	99
	.byte	116
	.byte	120
	.byte	44
	.byte	97
	.byte	44
	.byte	98
	.byte	44
	.byte	99
	.byte	44
	.byte	100
	.byte	44
	.byte	101
	.byte	44
	.byte	102
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	116
	.byte	114
	.byte	97
	.byte	110
	.byte	115
	.byte	102
	.byte	111
	.byte	114
	.byte	109
	.byte	40
	.byte	97
	.byte	44
	.byte	100
	.byte	44
	.byte	98
	.byte	44
	.byte	101
	.byte	44
	.byte	99
	.byte	44
	.byte	102
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_r1mSx_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r1mSx_info:
Lc1tRP:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1tS7
Lc1tS8:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1tRL
Lc1tRK:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1tRN_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1tRM_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1tRL:
	jmp *(%esi)
Lc1tS7:
	jmp *-16(%ebx)
	.long  _r1mSx_info - _r1mSx_info_dsp
.text
	.align 2
_c1tRN_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tRN_info:
Lc1tRN:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tRS_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tRN_info - _c1tRN_info_dsp
.text
	.align 2
_c1tRS_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tRS_info:
Lc1tRS:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tSc
Lc1tSb:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1tS4_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1tSc:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tRS_info - _c1tRS_info_dsp
.text
	.align 2
_c1tS4_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tS4_info:
Lc1tS4:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tSg
Lc1tSf:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1tSg:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tS4_info - _c1tS4_info_dsp
.data
	.align 2
.align 0
_r1mSy_closure:
	.long	_r1mSy_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1tTk_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	99
	.byte	116
	.byte	120
	.byte	44
	.byte	120
	.byte	44
	.byte	121
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	116
	.byte	114
	.byte	97
	.byte	110
	.byte	115
	.byte	108
	.byte	97
	.byte	116
	.byte	101
	.byte	40
	.byte	120
	.byte	44
	.byte	121
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_r1mSy_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r1mSy_info:
Lc1tTn:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1tTF
Lc1tTG:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1tTj
Lc1tTi:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1tTl_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1tTk_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1tTj:
	jmp *(%esi)
Lc1tTF:
	jmp *-16(%ebx)
	.long  _r1mSy_info - _r1mSy_info_dsp
.text
	.align 2
_c1tTl_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tTl_info:
Lc1tTl:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tTq_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tTl_info - _c1tTl_info_dsp
.text
	.align 2
_c1tTq_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tTq_info:
Lc1tTq:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tTK
Lc1tTJ:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1tTC_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1tTK:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tTq_info - _c1tTq_info_dsp
.text
	.align 2
_c1tTC_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tTC_info:
Lc1tTC:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tTO
Lc1tTN:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1tTO:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tTC_info - _c1tTC_info_dsp
.data
	.align 2
.align 0
_r1mSz_closure:
	.long	_r1mSz_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1tUS_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	99
	.byte	116
	.byte	120
	.byte	44
	.byte	114
	.byte	97
	.byte	100
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	114
	.byte	111
	.byte	116
	.byte	97
	.byte	116
	.byte	101
	.byte	40
	.byte	114
	.byte	97
	.byte	100
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_r1mSz_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r1mSz_info:
Lc1tUV:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1tVd
Lc1tVe:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1tUR
Lc1tUQ:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1tUT_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1tUS_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1tUR:
	jmp *(%esi)
Lc1tVd:
	jmp *-16(%ebx)
	.long  _r1mSz_info - _r1mSz_info_dsp
.text
	.align 2
_c1tUT_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tUT_info:
Lc1tUT:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tUY_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tUT_info - _c1tUT_info_dsp
.text
	.align 2
_c1tUY_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tUY_info:
Lc1tUY:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tVi
Lc1tVh:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1tVa_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1tVi:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tUY_info - _c1tUY_info_dsp
.text
	.align 2
_c1tVa_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tVa_info:
Lc1tVa:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tVm
Lc1tVl:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1tVm:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tVa_info - _c1tVa_info_dsp
.data
	.align 2
.align 0
_r1mSA_closure:
	.long	_r1mSA_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1tWq_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	99
	.byte	116
	.byte	120
	.byte	44
	.byte	120
	.byte	44
	.byte	121
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	115
	.byte	99
	.byte	97
	.byte	108
	.byte	101
	.byte	40
	.byte	120
	.byte	44
	.byte	121
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_r1mSA_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r1mSA_info:
Lc1tWt:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1tWL
Lc1tWM:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1tWp
Lc1tWo:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1tWr_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1tWq_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1tWp:
	jmp *(%esi)
Lc1tWL:
	jmp *-16(%ebx)
	.long  _r1mSA_info - _r1mSA_info_dsp
.text
	.align 2
_c1tWr_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tWr_info:
Lc1tWr:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tWw_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tWr_info - _c1tWr_info_dsp
.text
	.align 2
_c1tWw_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tWw_info:
Lc1tWw:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tWQ
Lc1tWP:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1tWI_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1tWQ:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tWw_info - _c1tWw_info_dsp
.text
	.align 2
_c1tWI_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tWI_info:
Lc1tWI:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tWU
Lc1tWT:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1tWU:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tWI_info - _c1tWI_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_clipzuf4_closure
_CoreziRenderziInternal_clipzuf4_closure:
	.long	_CoreziRenderziInternal_clipzuf4_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1tXY_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	99
	.byte	116
	.byte	120
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	115
	.byte	97
	.byte	118
	.byte	101
	.byte	40
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_clipzuf4_info_dsp:
.text
	.align 2
	.long	0
	.long	22
.globl _CoreziRenderziInternal_clipzuf4_info
_CoreziRenderziInternal_clipzuf4_info:
Lc1tY1:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1tYj
Lc1tYk:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1tXX
Lc1tXW:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1tXZ_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1tXY_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1tXX:
	jmp *(%esi)
Lc1tYj:
	jmp *-16(%ebx)
	.long  _CoreziRenderziInternal_clipzuf4_info - _CoreziRenderziInternal_clipzuf4_info_dsp
.text
	.align 2
_c1tXZ_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tXZ_info:
Lc1tXZ:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tY4_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tXZ_info - _c1tXZ_info_dsp
.text
	.align 2
_c1tY4_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tY4_info:
Lc1tY4:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tYo
Lc1tYn:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1tYg_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1tYo:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tY4_info - _c1tY4_info_dsp
.text
	.align 2
_c1tYg_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tYg_info:
Lc1tYg:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tYs
Lc1tYr:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1tYs:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tYg_info - _c1tYg_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_clipzuf1_closure
_CoreziRenderziInternal_clipzuf1_closure:
	.long	_CoreziRenderziInternal_clipzuf1_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1tZw_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	99
	.byte	116
	.byte	120
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	114
	.byte	101
	.byte	115
	.byte	116
	.byte	111
	.byte	114
	.byte	101
	.byte	40
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_clipzuf1_info_dsp:
.text
	.align 2
	.long	0
	.long	22
.globl _CoreziRenderziInternal_clipzuf1_info
_CoreziRenderziInternal_clipzuf1_info:
Lc1tZz:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1tZR
Lc1tZS:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1tZv
Lc1tZu:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1tZx_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1tZw_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1tZv:
	jmp *(%esi)
Lc1tZR:
	jmp *-16(%ebx)
	.long  _CoreziRenderziInternal_clipzuf1_info - _CoreziRenderziInternal_clipzuf1_info_dsp
.text
	.align 2
_c1tZx_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tZx_info:
Lc1tZx:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1tZC_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tZx_info - _c1tZx_info_dsp
.text
	.align 2
_c1tZC_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tZC_info:
Lc1tZC:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1tZW
Lc1tZV:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1tZO_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1tZW:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tZC_info - _c1tZC_info_dsp
.text
	.align 2
_c1tZO_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1tZO_info:
Lc1tZO:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1u00
Lc1tZZ:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1u00:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1tZO_info - _c1tZO_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_render2_closure
_CoreziRenderziInternal_render2_closure:
	.long	_CoreziRenderziInternal_render2_info
	.long	0
.text
	.align 2
_s1pin_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pin_info)+132
	.long	131077
	.long	7
	.long	983049
_s1pin_info:
Lc1u7e:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -64(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1u8r
Lc1u8s:
	addl $_c1u7b_info-(1b)+0,%eax
	movl %eax,-32(%ebp)
	movl 6(%esi),%eax
	movl 10(%esi),%edx
	movl %eax,64(%esp)
	movl 14(%esi),%eax
	movl %edx,76(%esp)
	movl 18(%esi),%edx
	movl %eax,88(%esp)
	movl 22(%esi),%eax
	movl %edx,100(%esp)
	movl 26(%esi),%edx
	movl 2(%esi),%esi
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	movl %eax,-28(%ebp)
	movl 76(%esp),%eax
	movl %eax,-24(%ebp)
	movl 88(%esp),%eax
	movl %eax,-20(%ebp)
	movl 100(%esp),%eax
	movl %eax,-16(%ebp)
	movl 112(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-32,%ebp
	testw $7,%si
	jne _c1u7b_info
Lc1u7c:
	jmp *(%esi)
Lc1u8r:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pin_info - _s1pin_info_dsp
.text
	.align 2
_c1u7b_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1u7b_info)+132
	.long	7
	.long	983072
_c1u7b_info:
Lc1u7b:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1u7h_info-(1b)+0,%ecx
	movl %ecx,-8(%ebp)
	movl %esi,%ecx
	movl 3(%esi),%edx
	movl L_CoreziRenderziInternal_clipzuf4_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %edx,-4(%ebp)
	movl %ecx,(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1u7h_info
Lc1u7i:
	jmp *(%esi)
	.long  _c1u7b_info - _c1u7b_info_dsp
.text
	.align 2
_c1u7h_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1u7h_info)+132
	.long	73
	.long	852000
_c1u7h_info:
Lc1u7h:
	call 1f
1:	popl	%eax
	addl $_c1u7p_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1u7h_info - _c1u7h_info_dsp
.text
	.align 2
_c1u7p_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1u7p_info)+132
	.long	73
	.long	852000
_c1u7p_info:
Lc1u7p:
	call 1f
1:	popl	%eax
	addl $_c1u7r_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 16(%ebp),%esi
	testw $7,%si
	jne _c1u7r_info
Lc1u7s:
	jmp *(%esi)
	.long  _c1u7p_info - _c1u7p_info_dsp
.text
	.align 2
_c1u7r_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1u7r_info)+132
	.long	585
	.long	852000
_c1u7r_info:
Lc1u7r:
	call 1f
1:	popl	%eax
	addl $_c1u7w_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 20(%ebp),%esi
#	gstsd %fake0,16(%ebp)
	fstl 16(%ebp)
	testw $7,%si
	jne Lu1u9k
Lc1u7x:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1u9k:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1u7w_info
	.long  _c1u7r_info - _c1u7r_info_dsp
.text
	.align 2
_c1u7w_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1u7w_info)+132
	.long	1609
	.long	852000
_c1u7w_info:
Lc1u7w:
	call 1f
1:	popl	%eax
	addl $_c1u7B_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 24(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1u9l
Lc1u7C:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1u9l:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1u7B_info
	.long  _c1u7w_info - _c1u7w_info_dsp
.text
	.align 2
_c1u7B_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1u7B_info)+132
	.long	29644
	.long	852000
_c1u7B_info:
Lc1u7B:
	call 1f
1:	popl	%eax
	addl $_c1u7G_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 40(%ebp),%esi
#	gstsd %fake0,36(%ebp)
	fstl 36(%ebp)
	testw $7,%si
	jne Lu1u9m
Lc1u7H:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1u9m:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1u7G_info
	.long  _c1u7B_info - _c1u7B_info_dsp
.text
	.align 2
_c1u7G_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1u7G_info)+132
	.long	62412
	.long	852000
_c1u7G_info:
Lc1u7G:
	call 1f
1:	popl	%eax
	addl $_c1u7L_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 44(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1u9n
Lc1u7M:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1u9n:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1u7L_info
	.long  _c1u7G_info - _c1u7G_info_dsp
.text
	.align 2
_c1u7L_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1u7L_info)+132
	.long	1023951
	.long	852000
_c1u7L_info:
Lc1u7L:
	call 1f
1:	popl	%eax
	addl $_c1u7Q_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 60(%ebp),%esi
#	gstsd %fake0,56(%ebp)
	fstl 56(%ebp)
	testw $7,%si
	jne Lu1u9o
Lc1u7R:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1u9o:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1u7Q_info
	.long  _c1u7L_info - _c1u7L_info_dsp
.text
	.align 2
_c1u7Q_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1u7Q_info)+132
	.long	2072527
	.long	852000
_c1u7Q_info:
Lc1u7Q:
	call 1f
1:	popl	%eax
	addl $164,%edi
	cmpl 856(%ebx),%edi
	ja Lc1u8D
Lc1u8C:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-160(%edi)
	movl 28(%ebp),%ecx
	movl %ecx,-156(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-152(%edi)
	leal -159(%edi),%ecx
	movl %ecx,-148(%edi)
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-144(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-140(%edi)
#	gldsd 40(%ebp),%fake1
	fldl 40(%ebp) ; fstp %st(2)
#	gstsd %fake1,-136(%edi)
	fld %st(1) ; fstpl -136(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-128(%edi)
	leal -139(%edi),%ecx
	movl %ecx,-124(%edi)
	leal -150(%edi),%ecx
	movl %ecx,-120(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-116(%edi)
#	gldsd 16(%ebp),%fake1
	fldl 16(%ebp) ; fstp %st(2)
#	gstsd %fake1,-112(%edi)
	fld %st(1) ; fstpl -112(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-104(%edi)
	leal -115(%edi),%ecx
	movl %ecx,-100(%edi)
	leal -126(%edi),%ecx
	movl %ecx,-96(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-92(%edi)
#	gldsd 48(%ebp),%fake1
	fldl 48(%ebp) ; fstp %st(2)
#	gstsd %fake1,-88(%edi)
	fld %st(1) ; fstpl -88(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-80(%edi)
	leal -91(%edi),%ecx
	movl %ecx,-76(%edi)
	leal -102(%edi),%ecx
	movl %ecx,-72(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-68(%edi)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gstsd %fake1,-64(%edi)
	fld %st(1) ; fstpl -64(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-56(%edi)
	leal -67(%edi),%ecx
	movl %ecx,-52(%edi)
	leal -78(%edi),%ecx
	movl %ecx,-48(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-44(%edi)
#	gldsd 56(%ebp),%fake1
	fldl 56(%ebp) ; fstp %st(2)
#	gstsd %fake1,-40(%edi)
	fld %st(1) ; fstpl -40(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-32(%edi)
	leal -43(%edi),%ecx
	movl %ecx,-28(%edi)
	leal -54(%edi),%ecx
	movl %ecx,-24(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-20(%edi)
#	gstsd %fake0,-16(%edi)
	fstl -16(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	leal -19(%edi),%ecx
	movl %ecx,-4(%edi)
	leal -30(%edi),%ecx
	movl %ecx,(%edi)
	movl %eax,%ecx
	addl $_c1u8e_info-(1b)+0,%ecx
	movl %ecx,24(%ebp)
	movl %eax,%esi
	addl $_r1mSx_closure-(1b)+0,%esi
	movl -3(%edi),%eax
	movl %eax,60(%ebp)
	addl $24,%ebp
	testw $7,%si
	jne Lu1u9p
Lc1u8f:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1u8D:
	movl $164,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1u9p:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1u8e_info
	.long  _c1u7Q_info - _c1u7Q_info_dsp
.text
	.align 2
_c1u8e_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1u8e_info)+132
	.long	32329
	.long	327712
_c1u8e_info:
Lc1u8e:
	call 1f
1:	popl	%eax
	addl $_c1u8m_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 36(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___apply$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1u8e_info - _c1u8e_info_dsp
.text
	.align 2
_c1u8m_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1u8m_info)+132
	.long	32329
	.long	327712
_c1u8m_info:
Lc1u8m:
	call 1f
1:	popl	%eax
	addl $_c1u8o_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 12(%ebp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1u8m_info - _c1u8m_info_dsp
.text
	.align 2
_c1u8o_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1u8o_info)+132
	.long	32713
	.long	65568
_c1u8o_info:
Lc1u8o:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1u8q_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_CoreziRenderziInternal_clipzuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	testw $7,%si
	jne _c1u8q_info
Lc1u8I:
	jmp *(%esi)
	.long  _c1u8o_info - _c1u8o_info_dsp
.text
	.align 2
_c1u8q_info_dsp:
.text
	.align 2
	.long	32713
	.long	32
_c1u8q_info:
Lc1u8q:
	call 1f
1:	popl	%eax
	addl $_c1u8Q_info-(1b)+0,%eax
	movl %eax,36(%ebp)
	movl 4(%ebp),%eax
	addl $36,%ebp
	movl 3(%esi),%ecx
	movl 872(%ebx),%edx
	movl %ecx,64(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,76(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,88(%esp)
	movl 104(%edx),%eax
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,112(%esp)
	movl 88(%esp),%ecx
	subl %eax,%ecx
	movl 100(%esp),%eax
	movl %ecx,124(%esp)
	movl 112(%esp),%ecx
	sbbl %ecx,%eax
	movl 124(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1u8q_info - _c1u8q_info_dsp
.text
	.align 2
_c1u8Q_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1u8Q_info:
Lc1u8Q:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1u8Q_info - _c1u8Q_info_dsp
.text
	.align 2
_s1pio_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pio_info)+132
	.long	131077
	.long	7
	.long	983049
_s1pio_info:
Lc1u9r:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1u9v
Lc1u9u:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 22(%esi),%eax
	movl %edx,124(%esp)
	movl 26(%esi),%edx
	movl %eax,136(%esp)
	movl 64(%esp),%eax
	addl $_s1pin_info-(1b)+0,%eax
	movl %eax,-28(%edi)
	movl 76(%esp),%eax
	movl %eax,-24(%edi)
	movl 100(%esp),%eax
	movl %eax,-20(%edi)
	movl 112(%esp),%eax
	movl %eax,-16(%edi)
	movl 124(%esp),%eax
	movl %eax,-12(%edi)
	movl 136(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -26(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_getImage2_info
Lc1u9v:
	movl $32,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pio_info - _s1pio_info_dsp
.text
	.align 2
_s1pip_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pip_info)+132
	.long	131077
	.long	7
	.long	983049
_s1pip_info:
Lc1u9w:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1u9A
Lc1u9z:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 22(%esi),%eax
	movl %edx,124(%esp)
	movl 26(%esi),%edx
	movl %eax,136(%esp)
	movl 64(%esp),%eax
	addl $_s1pio_info-(1b)+0,%eax
	movl %eax,-28(%edi)
	movl 76(%esp),%eax
	movl %eax,-24(%edi)
	movl 100(%esp),%eax
	movl %eax,-20(%edi)
	movl 112(%esp),%eax
	movl %eax,-16(%edi)
	movl 124(%esp),%eax
	movl %eax,-12(%edi)
	movl 136(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -26(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_getImage2_info
Lc1u9A:
	movl $32,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pip_info - _s1pip_info_dsp
.text
	.align 2
_s1piq_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1piq_info)+132
	.long	131077
	.long	7
	.long	983049
_s1piq_info:
Lc1u9B:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1u9F
Lc1u9E:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 22(%esi),%eax
	movl %edx,124(%esp)
	movl 26(%esi),%edx
	movl %eax,136(%esp)
	movl 64(%esp),%eax
	addl $_s1pip_info-(1b)+0,%eax
	movl %eax,-28(%edi)
	movl 76(%esp),%eax
	movl %eax,-24(%edi)
	movl 100(%esp),%eax
	movl %eax,-20(%edi)
	movl 112(%esp),%eax
	movl %eax,-16(%edi)
	movl 124(%esp),%eax
	movl %eax,-12(%edi)
	movl 136(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -26(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_getImage2_info
Lc1u9F:
	movl $32,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1piq_info - _s1piq_info_dsp
.text
	.align 2
_s1pir_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pir_info)+132
	.long	131077
	.long	7
	.long	983049
_s1pir_info:
Lc1u9G:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1u9K
Lc1u9J:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 22(%esi),%eax
	movl %edx,124(%esp)
	movl 26(%esi),%edx
	movl %eax,136(%esp)
	movl 64(%esp),%eax
	addl $_s1piq_info-(1b)+0,%eax
	movl %eax,-28(%edi)
	movl 76(%esp),%eax
	movl %eax,-24(%edi)
	movl 100(%esp),%eax
	movl %eax,-20(%edi)
	movl 112(%esp),%eax
	movl %eax,-16(%edi)
	movl 124(%esp),%eax
	movl %eax,-12(%edi)
	movl 136(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -26(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_getImage2_info
Lc1u9K:
	movl $32,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pir_info - _s1pir_info_dsp
.text
	.align 2
_s1phm_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1phm_info)+132
	.long	131077
	.long	7
	.long	983049
_s1phm_info:
Lc1u9L:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1u9P
Lc1u9O:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 22(%esi),%eax
	movl %edx,124(%esp)
	movl 26(%esi),%edx
	movl %eax,136(%esp)
	movl 64(%esp),%eax
	addl $_s1pir_info-(1b)+0,%eax
	movl %eax,-28(%edi)
	movl 76(%esp),%eax
	movl %eax,-24(%edi)
	movl 100(%esp),%eax
	movl %eax,-20(%edi)
	movl 112(%esp),%eax
	movl %eax,-16(%edi)
	movl 124(%esp),%eax
	movl %eax,-12(%edi)
	movl 136(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -26(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_getImage2_info
Lc1u9P:
	movl $32,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1phm_info - _s1phm_info_dsp
.text
	.align 2
_s1piU_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1piU_info:
Lc1uak:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1ual
Lc1uam:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1ual:
	jmp *-16(%ebx)
	.long  _s1piU_info - _s1piU_info_dsp
.text
	.align 2
_s1piV_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1piV_info:
Lc1uan:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1uar
Lc1uaq:
	movl 12(%esi),%ecx
	movl 16(%esi),%edx
	addl $_s1piU_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %edx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_p_fast
Lc1uar:
	movl $16,904(%ebx)
	jmp *-16(%ebx)
	.long  _s1piV_info - _s1piV_info_dsp
.text
	.align 2
_s1pk8_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pk8_info)+132
	.long	131077
	.long	3
	.long	1507337
_s1pk8_info:
Lc1ube:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -24(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1uc2
Lc1uc3:
	addl $_c1ubb_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 6(%esi),%eax
	movl 10(%esi),%edx
	movl 2(%esi),%esi
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _c1ubb_info
Lc1ubc:
	jmp *(%esi)
Lc1uc2:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pk8_info - _s1pk8_info_dsp
.text
	.align 2
_c1ubb_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ubb_info)+132
	.long	3
	.long	1507360
_c1ubb_info:
Lc1ubb:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1ubh_info-(1b)+0,%ecx
	movl %ecx,-8(%ebp)
	movl %esi,%ecx
	movl 3(%esi),%edx
	movl L_CoreziRenderziInternal_clipzuf4_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %edx,-4(%ebp)
	movl %ecx,(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1ubh_info
Lc1ubi:
	jmp *(%esi)
	.long  _c1ubb_info - _c1ubb_info_dsp
.text
	.align 2
_c1ubh_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ubh_info)+132
	.long	69
	.long	1376288
_c1ubh_info:
Lc1ubh:
	call 1f
1:	popl	%eax
	addl $_c1ubp_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1ubh_info - _c1ubh_info_dsp
.text
	.align 2
_c1ubp_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ubp_info)+132
	.long	69
	.long	1376288
_c1ubp_info:
Lc1ubp:
	call 1f
1:	popl	%eax
	addl $_c1ubr_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 16(%ebp),%esi
	testw $7,%si
	jne _c1ubr_info
Lc1ubs:
	jmp *(%esi)
	.long  _c1ubp_info - _c1ubp_info_dsp
.text
	.align 2
_c1ubr_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ubr_info)+132
	.long	581
	.long	1376288
_c1ubr_info:
Lc1ubr:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1uc9
Lc1uc8:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1ubC_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 20(%ebp),%esi
	movl -4(%edi),%eax
	movl %eax,20(%ebp)
	testw $7,%si
	jne Lu1ucU
Lc1ubD:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1uc9:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1ucU:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1ubC_info
	.long  _c1ubr_info - _c1ubr_info_dsp
.text
	.align 2
_c1ubC_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ubC_info)+132
	.long	1605
	.long	1376288
_c1ubC_info:
Lc1ubC:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1ucd
Lc1ucc:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	movl %eax,%ecx
	addl $_c1ubN_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r1mSy_closure-(1b)+0,%esi
	movl -4(%edi),%eax
	movl %eax,16(%ebp)
	testw $7,%si
	jne Lu1ucV
Lc1ubO:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1ucd:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1ucV:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1ubN_info
	.long  _c1ubC_info - _c1ubC_info_dsp
.text
	.align 2
_c1ubN_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ubN_info)+132
	.long	1605
	.long	327712
_c1ubN_info:
Lc1ubN:
	call 1f
1:	popl	%eax
	addl $_c1ubX_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%ecx
	movl 20(%ebp),%edx
	movl %eax,64(%esp)
	movl 16(%ebp),%eax
	movl %ecx,76(%esp)
	movl 872(%ebx),%ecx
	movl %edx,88(%esp)
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,112(%esp)
	movl 104(%ecx),%eax
	movl %eax,124(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,136(%esp)
	movl 112(%esp),%edx
	subl %eax,%edx
	movl 124(%esp),%eax
	movl %edx,148(%esp)
	movl 136(%esp),%edx
	sbbl %edx,%eax
	movl 148(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $12,%esp
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,188(%esp)
	call L___app3$stub
	addl $28,%esp
	subl $8,%esp
	movl 168(%esp),%ecx
	pushl %ecx
	movl %eax,184(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,184(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,196(%esp)
	movl %eax,%ecx
	movl %edx,208(%esp)
	movl 196(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 184(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,220(%esp)
	movl 208(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 220(%esp),%ecx
	adcl %eax,%ecx
	movl 184(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 172(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1ubN_info - _c1ubN_info_dsp
.text
	.align 2
_c1ubX_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ubX_info)+132
	.long	1605
	.long	327712
_c1ubX_info:
Lc1ubX:
	call 1f
1:	popl	%eax
	addl $_c1ubZ_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 12(%ebp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1ubX_info - _c1ubX_info_dsp
.text
	.align 2
_c1ubZ_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ubZ_info)+132
	.long	1989
	.long	65568
_c1ubZ_info:
Lc1ubZ:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1uc1_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_CoreziRenderziInternal_clipzuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	testw $7,%si
	jne _c1uc1_info
Lc1uci:
	jmp *(%esi)
	.long  _c1ubZ_info - _c1ubZ_info_dsp
.text
	.align 2
_c1uc1_info_dsp:
.text
	.align 2
	.long	1989
	.long	32
_c1uc1_info:
Lc1uc1:
	call 1f
1:	popl	%eax
	addl $_c1ucq_info-(1b)+0,%eax
	movl %eax,20(%ebp)
	movl 4(%ebp),%eax
	addl $20,%ebp
	movl 3(%esi),%ecx
	movl 872(%ebx),%edx
	movl %ecx,64(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,76(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,88(%esp)
	movl 104(%edx),%eax
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,112(%esp)
	movl 88(%esp),%ecx
	subl %eax,%ecx
	movl 100(%esp),%eax
	movl %ecx,124(%esp)
	movl 112(%esp),%ecx
	sbbl %ecx,%eax
	movl 124(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1uc1_info - _c1uc1_info_dsp
.text
	.align 2
_c1ucq_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1ucq_info:
Lc1ucq:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1ucq_info - _c1ucq_info_dsp
.text
	.align 2
_s1pjy_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pjy_info)+132
	.long	131077
	.long	3
	.long	1507337
_s1pjy_info:
Lc1ucX:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1ud1
Lc1ud0:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_s1pk8_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl %eax,-8(%edi)
	movl 88(%esp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -10(%edi),%eax
	movl %eax,16(%ebx)
	movl %edx,8(%ebx)
	jmp _CoreziRenderziInternal_getImage2_info
Lc1ud1:
	movl $16,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pjy_info - _s1pjy_info_dsp
.text
	.align 2
_s1pkB_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1pkB_info:
Lc1udw:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1udx
Lc1udy:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1udx:
	jmp *-16(%ebx)
	.long  _s1pkB_info - _s1pkB_info_dsp
.text
	.align 2
_s1pkC_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1pkC_info:
Lc1udz:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1udD
Lc1udC:
	movl 12(%esi),%ecx
	movl 16(%esi),%edx
	addl $_s1pkB_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %edx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_p_fast
Lc1udD:
	movl $16,904(%ebx)
	jmp *-16(%ebx)
	.long  _s1pkC_info - _s1pkC_info_dsp
.text
	.align 2
_s1plc_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1plc_info)+132
	.long	131077
	.long	2
	.long	2555916
_s1plc_info:
Lc1udO:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -20(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1ueq
Lc1uer:
	addl $_c1udL_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 6(%esi),%eax
	movl 2(%esi),%esi
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1udL_info
Lc1udM:
	jmp *(%esi)
Lc1ueq:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1plc_info - _s1plc_info_dsp
.text
	.align 2
_c1udL_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1udL_info)+132
	.long	2
	.long	2555936
_c1udL_info:
Lc1udL:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1udR_info-(1b)+0,%ecx
	movl %ecx,-8(%ebp)
	movl %esi,%ecx
	movl 3(%esi),%edx
	movl L_CoreziRenderziInternal_clipzuf4_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %edx,-4(%ebp)
	movl %ecx,(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1udR_info
Lc1udS:
	jmp *(%esi)
	.long  _c1udL_info - _c1udL_info_dsp
.text
	.align 2
_c1udR_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1udR_info)+132
	.long	68
	.long	2424864
_c1udR_info:
Lc1udR:
	call 1f
1:	popl	%eax
	addl $_c1udZ_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1udR_info - _c1udR_info_dsp
.text
	.align 2
_c1udZ_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1udZ_info)+132
	.long	68
	.long	2424864
_c1udZ_info:
Lc1udZ:
	call 1f
1:	popl	%eax
	addl $_c1ue1_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 16(%ebp),%esi
	testw $7,%si
	jne _c1ue1_info
Lc1ue2:
	jmp *(%esi)
	.long  _c1udZ_info - _c1udZ_info_dsp
.text
	.align 2
_c1ue1_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ue1_info)+132
	.long	580
	.long	2424864
_c1ue1_info:
Lc1ue1:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1uex
Lc1uew:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	movl %eax,%ecx
	addl $_c1uec_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r1mSz_closure-(1b)+0,%esi
	movl -4(%edi),%eax
	movl %eax,16(%ebp)
	testw $7,%si
	jne Lu1ufe
Lc1ued:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1uex:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1ufe:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1uec_info
	.long  _c1ue1_info - _c1ue1_info_dsp
.text
	.align 2
_c1uec_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uec_info)+132
	.long	580
	.long	327712
_c1uec_info:
Lc1uec:
	call 1f
1:	popl	%eax
	addl $_c1uel_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%ecx
	movl 16(%ebp),%edx
	movl %eax,64(%esp)
	movl 872(%ebx),%eax
	movl %ecx,76(%esp)
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %edx,88(%esp)
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,100(%esp)
	movl 104(%eax),%edx
	movl %edx,112(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,124(%esp)
	movl 100(%esp),%ecx
	subl %edx,%ecx
	movl 112(%esp),%edx
	movl %ecx,136(%esp)
	movl 124(%esp),%ecx
	sbbl %ecx,%edx
	movl 136(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	movl 88(%esp),%ecx
	pushl %ecx
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L___app2$stub
	addl $12,%esp
	subl $8,%esp
	movl 156(%esp),%ecx
	pushl %ecx
	movl %eax,172(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,172(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,184(%esp)
	movl %eax,%ecx
	movl %edx,196(%esp)
	movl 184(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 172(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,208(%esp)
	movl 196(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 208(%esp),%ecx
	adcl %eax,%ecx
	movl 172(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 160(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1uec_info - _c1uec_info_dsp
.text
	.align 2
_c1uel_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uel_info)+132
	.long	580
	.long	327712
_c1uel_info:
Lc1uel:
	call 1f
1:	popl	%eax
	addl $_c1uen_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 12(%ebp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1uel_info - _c1uel_info_dsp
.text
	.align 2
_c1uen_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uen_info)+132
	.long	964
	.long	65568
_c1uen_info:
Lc1uen:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1uep_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_CoreziRenderziInternal_clipzuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	testw $7,%si
	jne _c1uep_info
Lc1ueC:
	jmp *(%esi)
	.long  _c1uen_info - _c1uen_info_dsp
.text
	.align 2
_c1uep_info_dsp:
.text
	.align 2
	.long	964
	.long	32
_c1uep_info:
Lc1uep:
	call 1f
1:	popl	%eax
	addl $_c1ueK_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl 4(%ebp),%eax
	addl $16,%ebp
	movl 3(%esi),%ecx
	movl 872(%ebx),%edx
	movl %ecx,64(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,76(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,88(%esp)
	movl 104(%edx),%eax
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,112(%esp)
	movl 88(%esp),%ecx
	subl %eax,%ecx
	movl 100(%esp),%eax
	movl %ecx,124(%esp)
	movl 112(%esp),%ecx
	sbbl %ecx,%eax
	movl 124(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1uep_info - _c1uep_info_dsp
.text
	.align 2
_c1ueK_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1ueK_info:
Lc1ueK:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1ueK_info - _c1ueK_info_dsp
.text
	.align 2
_s1pm8_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1pm8_info:
Lc1ufK:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1ufL
Lc1ufM:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1ufL:
	jmp *-16(%ebx)
	.long  _s1pm8_info - _s1pm8_info_dsp
.text
	.align 2
_s1pm9_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1pm9_info:
Lc1ufN:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1ufR
Lc1ufQ:
	movl 12(%esi),%ecx
	movl 16(%esi),%edx
	addl $_s1pm8_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %edx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_p_fast
Lc1ufR:
	movl $16,904(%ebx)
	jmp *-16(%ebx)
	.long  _s1pm9_info - _s1pm9_info_dsp
.text
	.align 2
_s1pnm_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pnm_info)+132
	.long	131077
	.long	3
	.long	4653065
_s1pnm_info:
Lc1ugE:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -24(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1uhs
Lc1uht:
	addl $_c1ugB_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 6(%esi),%eax
	movl 10(%esi),%edx
	movl 2(%esi),%esi
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _c1ugB_info
Lc1ugC:
	jmp *(%esi)
Lc1uhs:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pnm_info - _s1pnm_info_dsp
.text
	.align 2
_c1ugB_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ugB_info)+132
	.long	3
	.long	4653088
_c1ugB_info:
Lc1ugB:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1ugH_info-(1b)+0,%ecx
	movl %ecx,-8(%ebp)
	movl %esi,%ecx
	movl 3(%esi),%edx
	movl L_CoreziRenderziInternal_clipzuf4_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %edx,-4(%ebp)
	movl %ecx,(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1ugH_info
Lc1ugI:
	jmp *(%esi)
	.long  _c1ugB_info - _c1ugB_info_dsp
.text
	.align 2
_c1ugH_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ugH_info)+132
	.long	69
	.long	4522016
_c1ugH_info:
Lc1ugH:
	call 1f
1:	popl	%eax
	addl $_c1ugP_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1ugH_info - _c1ugH_info_dsp
.text
	.align 2
_c1ugP_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ugP_info)+132
	.long	69
	.long	4522016
_c1ugP_info:
Lc1ugP:
	call 1f
1:	popl	%eax
	addl $_c1ugR_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 16(%ebp),%esi
	testw $7,%si
	jne _c1ugR_info
Lc1ugS:
	jmp *(%esi)
	.long  _c1ugP_info - _c1ugP_info_dsp
.text
	.align 2
_c1ugR_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ugR_info)+132
	.long	581
	.long	4522016
_c1ugR_info:
Lc1ugR:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1uhz
Lc1uhy:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1uh2_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 20(%ebp),%esi
	movl -4(%edi),%eax
	movl %eax,20(%ebp)
	testw $7,%si
	jne Lu1uik
Lc1uh3:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1uhz:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1uik:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1uh2_info
	.long  _c1ugR_info - _c1ugR_info_dsp
.text
	.align 2
_c1uh2_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uh2_info)+132
	.long	1605
	.long	4522016
_c1uh2_info:
Lc1uh2:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1uhD
Lc1uhC:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	movl %eax,%ecx
	addl $_c1uhd_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r1mSA_closure-(1b)+0,%esi
	movl -4(%edi),%eax
	movl %eax,16(%ebp)
	testw $7,%si
	jne Lu1uil
Lc1uhe:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1uhD:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1uil:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1uhd_info
	.long  _c1uh2_info - _c1uh2_info_dsp
.text
	.align 2
_c1uhd_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uhd_info)+132
	.long	1605
	.long	327712
_c1uhd_info:
Lc1uhd:
	call 1f
1:	popl	%eax
	addl $_c1uhn_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%ecx
	movl 20(%ebp),%edx
	movl %eax,64(%esp)
	movl 16(%ebp),%eax
	movl %ecx,76(%esp)
	movl 872(%ebx),%ecx
	movl %edx,88(%esp)
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,112(%esp)
	movl 104(%ecx),%eax
	movl %eax,124(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,136(%esp)
	movl 112(%esp),%edx
	subl %eax,%edx
	movl 124(%esp),%eax
	movl %edx,148(%esp)
	movl 136(%esp),%edx
	sbbl %edx,%eax
	movl 148(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $12,%esp
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,188(%esp)
	call L___app3$stub
	addl $28,%esp
	subl $8,%esp
	movl 168(%esp),%ecx
	pushl %ecx
	movl %eax,184(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,184(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,196(%esp)
	movl %eax,%ecx
	movl %edx,208(%esp)
	movl 196(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 184(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,220(%esp)
	movl 208(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 220(%esp),%ecx
	adcl %eax,%ecx
	movl 184(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 172(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1uhd_info - _c1uhd_info_dsp
.text
	.align 2
_c1uhn_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uhn_info)+132
	.long	1605
	.long	327712
_c1uhn_info:
Lc1uhn:
	call 1f
1:	popl	%eax
	addl $_c1uhp_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 12(%ebp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1uhn_info - _c1uhn_info_dsp
.text
	.align 2
_c1uhp_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uhp_info)+132
	.long	1989
	.long	65568
_c1uhp_info:
Lc1uhp:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1uhr_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_CoreziRenderziInternal_clipzuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	testw $7,%si
	jne _c1uhr_info
Lc1uhI:
	jmp *(%esi)
	.long  _c1uhp_info - _c1uhp_info_dsp
.text
	.align 2
_c1uhr_info_dsp:
.text
	.align 2
	.long	1989
	.long	32
_c1uhr_info:
Lc1uhr:
	call 1f
1:	popl	%eax
	addl $_c1uhQ_info-(1b)+0,%eax
	movl %eax,20(%ebp)
	movl 4(%ebp),%eax
	addl $20,%ebp
	movl 3(%esi),%ecx
	movl 872(%ebx),%edx
	movl %ecx,64(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,76(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,88(%esp)
	movl 104(%edx),%eax
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,112(%esp)
	movl 88(%esp),%ecx
	subl %eax,%ecx
	movl 100(%esp),%eax
	movl %ecx,124(%esp)
	movl 112(%esp),%ecx
	sbbl %ecx,%eax
	movl 124(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1uhr_info - _c1uhr_info_dsp
.text
	.align 2
_c1uhQ_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1uhQ_info:
Lc1uhQ:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1uhQ_info - _c1uhQ_info_dsp
.text
	.align 2
_s1pmM_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pmM_info)+132
	.long	131077
	.long	3
	.long	4653065
_s1pmM_info:
Lc1uin:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1uir
Lc1uiq:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_s1pnm_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl %eax,-8(%edi)
	movl 88(%esp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -10(%edi),%eax
	movl %eax,16(%ebx)
	movl %edx,8(%ebx)
	jmp _CoreziRenderziInternal_getImage2_info
Lc1uir:
	movl $16,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pmM_info - _s1pmM_info_dsp
.text
	.align 2
_s1pnP_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1pnP_info:
Lc1uiW:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1uiX
Lc1uiY:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1uiX:
	jmp *-16(%ebx)
	.long  _s1pnP_info - _s1pnP_info_dsp
.text
	.align 2
_s1pnQ_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1pnQ_info:
Lc1uiZ:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1uj3
Lc1uj2:
	movl 12(%esi),%ecx
	movl 16(%esi),%edx
	addl $_s1pnP_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %edx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_p_fast
Lc1uj3:
	movl $16,904(%ebx)
	jmp *-16(%ebx)
	.long  _s1pnQ_info - _s1pnQ_info_dsp
.text
	.align 2
_CoreziRenderziInternal_render2_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_render2_info)+132
	.long	196623
	.long	0
	.long	8323087
.globl _CoreziRenderziInternal_render2_info
_CoreziRenderziInternal_render2_info:
Lc1ujb:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -24(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1ujc
Lc1ujd:
	movl 64(%esp),%eax
	addl $_c1u6s_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1u6s_info
Lc1u6t:
	jmp *(%esi)
Lc1ujc:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_render2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_render2_info - _CoreziRenderziInternal_render2_info_dsp
.text
	.align 2
_c1u6s_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1u6s_info)+132
	.long	1
	.long	8323104
_c1u6s_info:
Lc1u6s:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1uj9
Lc1uja:
	movl 3(%esi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1uj9:
	addl $_c1u6y_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 6(%esi),%eax
	movl 2(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1u6y_info
Lc1u6z:
	jmp *(%esi)
	.long  _c1u6s_info - _c1u6s_info_dsp
.text
	.align 2
_c1u6y_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1u6y_info)+132
	.long	2
	.long	8323104
_c1u6y_info:
Lc1u6y:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
	movl -1(%esi),%edx
	movzwl -2(%edx),%edx
	movl %edx,64(%esp)
	movl %eax,%edx
	addl $Ln1uC0-(1b)+0,%edx
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl (%edx,%eax,4),%edx
	jmp *%edx
Lc1ujX:
	addl $32,%edi
	cmpl 856(%ebx),%edi
	ja Lc1uk0
Lc1ujZ:
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,88(%esp)
	movl 11(%esi),%ecx
	movl %eax,100(%esp)
	movl 15(%esi),%eax
	movl %edx,112(%esp)
	movl 19(%esi),%edx
	movl %ecx,124(%esp)
	movl 23(%esi),%ecx
	movl %eax,136(%esp)
	movl 27(%esi),%eax
	movl %edx,148(%esp)
	movl 31(%esi),%edx
	movl %ecx,160(%esp)
	movl 76(%esp),%ecx
	addl $_s1phm_info-(1b)+0,%ecx
	movl %ecx,-28(%edi)
	movl 88(%esp),%ecx
	movl %ecx,-24(%edi)
	movl 112(%esp),%ecx
	movl %ecx,-20(%edi)
	movl 124(%esp),%ecx
	movl %ecx,-16(%edi)
	movl 136(%esp),%ecx
	movl %ecx,-12(%edi)
	movl 148(%esp),%ecx
	movl %ecx,-8(%edi)
	movl 160(%esp),%ecx
	movl %ecx,-4(%edi)
	movl %eax,(%edi)
	movl 76(%esp),%eax
	addl $_c1u9Q_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 100(%esp),%eax
	movl %eax,%esi
	movl %edx,-4(%ebp)
	leal -26(%edi),%eax
	movl %eax,(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1u9Q_info
Lc1u9R:
	jmp *(%esi)
Lc1ulY:
	movl 76(%esp),%eax
	addl $_c1uaW_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 7(%esi),%eax
	movl 11(%esi),%ecx
	movl 3(%esi),%esi
	movl %ecx,-4(%ebp)
	movl %eax,(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1uaW_info
Lc1uaX:
	jmp *(%esi)
Lc1unY:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1uo1
Lc1uo0:
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,88(%esp)
	movl 11(%esi),%ecx
	movl %eax,172(%esp)
	movl 76(%esp),%eax
	addl $_s1plc_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl 88(%esp),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	movl 76(%esp),%eax
	addl $_c1ufg_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 172(%esp),%eax
	movl %eax,%esi
	movl %ecx,-4(%ebp)
	leal -6(%edi),%eax
	movl %eax,(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1ufg_info
Lc1ufh:
	jmp *(%esi)
Lc1upZ:
	movl 76(%esp),%eax
	addl $_c1ugm_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 7(%esi),%eax
	movl 11(%esi),%ecx
	movl 3(%esi),%esi
	movl %ecx,-4(%ebp)
	movl %eax,(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1ugm_info
Lc1ugn:
	jmp *(%esi)
Lc1ujn:
	movl 76(%esp),%eax
	addl $_c1uji_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 7(%esi),%eax
	movl 3(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp _stg_ap_pv_fast
Lc1ujy:
	movl 76(%esp),%eax
	addl $_c1uju_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	jmp _stg_ap_v_fast
Lc1ujH:
	movl 4(%ebp),%eax
	movl 76(%esp),%ecx
	addl $_c1ujF_info-(1b)+0,%ecx
	movl %ecx,4(%ebp)
	movl 7(%esi),%ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	addl $4,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
Lc1ujR:
	movl 76(%esp),%eax
	addl $_c1ujN_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%eax
	movl %eax,16(%ebx)
	movl 7(%esi),%eax
	movl %eax,8(%ebx)
	movl 11(%esi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp _CoreziRenderziInternal_render2_info
Lc1uk0:
	movl $32,904(%ebx)
	movl 76(%esp),%eax
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1uo1:
	movl $12,904(%ebx)
	movl 76(%esp),%eax
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1us5:
	movl 76(%esp),%eax
	addl $_c1us1_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,16(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl 11(%esi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1u6y_info - _c1u6y_info_dsp
.const
	.align 2
.align 0
Ln1uC0:
	.long	Lc1ujn-(Ln1uC0)+0
	.long	Lc1ujy-(Ln1uC0)+0
	.long	Lc1ujH-(Ln1uC0)+0
	.long	Lc1ujR-(Ln1uC0)+0
	.long	Lc1ujX-(Ln1uC0)+0
	.long	Lc1ulY-(Ln1uC0)+0
	.long	Lc1unY-(Ln1uC0)+0
	.long	Lc1upZ-(Ln1uC0)+0
	.long	Lc1us5-(Ln1uC0)+0
.text
	.align 2
_c1us1_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1us1_info)+140
	.long	3
	.long	65568
_c1us1_info:
Lc1us1:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
	addl $_c1us3_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $8,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1us1_info - _c1us1_info_dsp
.text
	.align 2
_c1us3_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1us3_info)+140
	.long	1
	.long	65568
_c1us3_info:
Lc1us3:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1us3_info - _c1us3_info_dsp
.text
	.align 2
_c1ugm_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ugm_info)+132
	.long	4
	.long	4653088
_c1ugm_info:
Lc1ugm:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1uq2
Lc1uq1:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_s1pmM_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 16(%ebp),%eax
	movl %eax,-8(%edi)
	movl 8(%ebp),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	movl 64(%esp),%eax
	addl $_c1uis_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	leal -10(%edi),%eax
	movl %eax,8(%ebp)
	testw $7,%si
	jne _c1uis_info
Lc1uit:
	jmp *(%esi)
Lc1uq2:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1ugm_info - _c1ugm_info_dsp
.text
	.align 2
_c1uis_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uis_info)+132
	.long	4
	.long	4653088
_c1uis_info:
Lc1uis:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1urX
Lc1urY:
	cmpl $2,%ecx
	jae Lc1urR
Lc1urS:
	addl $_c1uq4_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl 8(%ebp),%esi
	jmp _s1pmM_info
Lc1urX:
	cmpl $4,%ecx
	jae Lc1urU
Lc1urV:
	addl $_c1uiz_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1uiz_info
Lc1uiA:
	jmp *(%esi)
Lc1urU:
	addl $_c1uqZ_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1uqZ_info
Lc1ur0:
	jmp *(%esi)
Lc1urR:
	addl $_c1uqg_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
	.long  _c1uis_info - _c1uis_info_dsp
.text
	.align 2
_c1uqZ_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uqZ_info)+132
	.long	5
	.long	4653088
_c1uqZ_info:
Lc1uqZ:
	call 1f
1:	popl	%eax
	addl $_c1ur4_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1ur4_info
Lc1ur8:
	jmp *(%esi)
	.long  _c1uqZ_info - _c1uqZ_info_dsp
.text
	.align 2
_c1ur4_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ur4_info)+132
	.long	5
	.long	4653088
_c1ur4_info:
Lc1ur4:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1urc_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1urc_info
Lc1ure:
	jmp *(%esi)
	.long  _c1ur4_info - _c1ur4_info_dsp
.text
	.align 2
_c1urc_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1urc_info)+132
	.long	5
	.long	4653088
_c1urc_info:
Lc1urc:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1urN
Lc1urO:
	addl $_c1uri_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1uri_info
Lc1urj:
	jmp *(%esi)
Lc1urN:
	movl 16(%ebp),%ecx
	addl $_c1urE_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $16,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1urc_info - _c1urc_info_dsp
.text
	.align 2
_c1urE_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1urE_info)+140
	.long	1
	.long	65568
_c1urE_info:
Lc1urE:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1urE_info - _c1urE_info_dsp
.text
	.align 2
_c1uri_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uri_info)+132
	.long	5
	.long	4653088
_c1uri_info:
Lc1uri:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1urn_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1uri_info - _c1uri_info_dsp
.text
	.align 2
_c1urn_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1urn_info)+132
	.long	4
	.long	4653088
_c1urn_info:
Lc1urn:
	call 1f
1:	popl	%eax
	addl $_c1urp_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,8(%ebx)
	movl 8(%ebp),%esi
	jmp _s1pmM_info
	.long  _c1urn_info - _c1urn_info_dsp
.text
	.align 2
_c1urp_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1urp_info)+140
	.long	132
	.long	65568
_c1urp_info:
Lc1urp:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c1urr_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1urp_info - _c1urp_info_dsp
.text
	.align 2
_c1urr_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1urr_info)+140
	.long	1
	.long	65568
_c1urr_info:
Lc1urr:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1urr_info - _c1urr_info_dsp
.text
	.align 2
_c1uiz_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uiz_info)+132
	.long	5
	.long	4653088
_c1uiz_info:
Lc1uiz:
	call 1f
1:	popl	%eax
	addl $_c1uiE_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1uiE_info
Lc1uiF:
	jmp *(%esi)
	.long  _c1uiz_info - _c1uiz_info_dsp
.text
	.align 2
_c1uiE_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uiE_info)+132
	.long	5
	.long	4653088
_c1uiE_info:
Lc1uiE:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1uiJ_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1uiJ_info
Lc1uiK:
	jmp *(%esi)
	.long  _c1uiE_info - _c1uiE_info_dsp
.text
	.align 2
_c1uiJ_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uiJ_info)+132
	.long	5
	.long	4653088
_c1uiJ_info:
Lc1uiJ:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1uqV
Lc1uqW:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1uqE
Lc1uqD:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1pnQ_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	movl 4(%ebp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	addl $_c1uqx_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	leal -16(%edi),%eax
	movl %eax,8(%ebx)
	movl 12(%ebp),%esi
	addl $4,%ebp
	jmp _s1pmM_info
Lc1uqE:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1uqV:
	movl 16(%ebp),%ecx
	addl $_c1uqM_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $16,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1uiJ_info - _c1uiJ_info_dsp
.text
	.align 2
_c1uqM_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uqM_info)+140
	.long	1
	.long	65568
_c1uqM_info:
Lc1uqM:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1uqM_info - _c1uqM_info_dsp
.text
	.align 2
_c1uqx_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uqx_info)+140
	.long	132
	.long	65568
_c1uqx_info:
Lc1uqx:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c1uqz_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1uqx_info - _c1uqx_info_dsp
.text
	.align 2
_c1uqz_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uqz_info)+140
	.long	1
	.long	65568
_c1uqz_info:
Lc1uqz:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1uqz_info - _c1uqz_info_dsp
.text
	.align 2
_c1uqg_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uqg_info)+132
	.long	4
	.long	4653088
_c1uqg_info:
Lc1uqg:
	call 1f
1:	popl	%eax
	addl $_c1uqi_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,8(%ebx)
	movl 8(%ebp),%esi
	jmp _s1pmM_info
	.long  _c1uqg_info - _c1uqg_info_dsp
.text
	.align 2
_c1uqi_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uqi_info)+140
	.long	132
	.long	65568
_c1uqi_info:
Lc1uqi:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c1uqk_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1uqi_info - _c1uqi_info_dsp
.text
	.align 2
_c1uqk_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uqk_info)+140
	.long	1
	.long	65568
_c1uqk_info:
Lc1uqk:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1uqk_info - _c1uqk_info_dsp
.text
	.align 2
_c1uq4_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uq4_info)+140
	.long	132
	.long	65568
_c1uq4_info:
Lc1uq4:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c1uq6_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1uq4_info - _c1uq4_info_dsp
.text
	.align 2
_c1uq6_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uq6_info)+140
	.long	1
	.long	65568
_c1uq6_info:
Lc1uq6:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1uq6_info - _c1uq6_info_dsp
.text
	.align 2
_c1ufg_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ufg_info)+132
	.long	4
	.long	2555936
_c1ufg_info:
Lc1ufg:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1upW
Lc1upX:
	cmpl $2,%ecx
	jae Lc1upQ
Lc1upR:
	addl $_c1uo3_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl 8(%ebp),%esi
	jmp _s1plc_info
Lc1upW:
	cmpl $4,%ecx
	jae Lc1upT
Lc1upU:
	addl $_c1ufn_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1ufn_info
Lc1ufo:
	jmp *(%esi)
Lc1upT:
	addl $_c1uoY_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1uoY_info
Lc1uoZ:
	jmp *(%esi)
Lc1upQ:
	addl $_c1uof_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
	.long  _c1ufg_info - _c1ufg_info_dsp
.text
	.align 2
_c1uoY_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uoY_info)+132
	.long	5
	.long	2555936
_c1uoY_info:
Lc1uoY:
	call 1f
1:	popl	%eax
	addl $_c1up3_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1up3_info
Lc1up7:
	jmp *(%esi)
	.long  _c1uoY_info - _c1uoY_info_dsp
.text
	.align 2
_c1up3_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1up3_info)+132
	.long	5
	.long	2555936
_c1up3_info:
Lc1up3:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1upb_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1upb_info
Lc1upd:
	jmp *(%esi)
	.long  _c1up3_info - _c1up3_info_dsp
.text
	.align 2
_c1upb_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1upb_info)+132
	.long	5
	.long	2555936
_c1upb_info:
Lc1upb:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1upM
Lc1upN:
	addl $_c1uph_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1uph_info
Lc1upi:
	jmp *(%esi)
Lc1upM:
	movl 16(%ebp),%ecx
	addl $_c1upD_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $16,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1upb_info - _c1upb_info_dsp
.text
	.align 2
_c1upD_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1upD_info)+140
	.long	1
	.long	65568
_c1upD_info:
Lc1upD:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1upD_info - _c1upD_info_dsp
.text
	.align 2
_c1uph_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uph_info)+132
	.long	5
	.long	2555936
_c1uph_info:
Lc1uph:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1upm_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1uph_info - _c1uph_info_dsp
.text
	.align 2
_c1upm_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1upm_info)+132
	.long	4
	.long	2555936
_c1upm_info:
Lc1upm:
	call 1f
1:	popl	%eax
	addl $_c1upo_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,8(%ebx)
	movl 8(%ebp),%esi
	jmp _s1plc_info
	.long  _c1upm_info - _c1upm_info_dsp
.text
	.align 2
_c1upo_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1upo_info)+140
	.long	132
	.long	65568
_c1upo_info:
Lc1upo:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c1upq_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1upo_info - _c1upo_info_dsp
.text
	.align 2
_c1upq_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1upq_info)+140
	.long	1
	.long	65568
_c1upq_info:
Lc1upq:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1upq_info - _c1upq_info_dsp
.text
	.align 2
_c1ufn_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ufn_info)+132
	.long	5
	.long	2555936
_c1ufn_info:
Lc1ufn:
	call 1f
1:	popl	%eax
	addl $_c1ufs_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1ufs_info
Lc1uft:
	jmp *(%esi)
	.long  _c1ufn_info - _c1ufn_info_dsp
.text
	.align 2
_c1ufs_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ufs_info)+132
	.long	5
	.long	2555936
_c1ufs_info:
Lc1ufs:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1ufx_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1ufx_info
Lc1ufy:
	jmp *(%esi)
	.long  _c1ufs_info - _c1ufs_info_dsp
.text
	.align 2
_c1ufx_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ufx_info)+132
	.long	5
	.long	2555936
_c1ufx_info:
Lc1ufx:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1uoU
Lc1uoV:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1uoD
Lc1uoC:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1pm9_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	movl 4(%ebp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	addl $_c1uow_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	leal -16(%edi),%eax
	movl %eax,8(%ebx)
	movl 12(%ebp),%esi
	addl $4,%ebp
	jmp _s1plc_info
Lc1uoD:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1uoU:
	movl 16(%ebp),%ecx
	addl $_c1uoL_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $16,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1ufx_info - _c1ufx_info_dsp
.text
	.align 2
_c1uoL_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uoL_info)+140
	.long	1
	.long	65568
_c1uoL_info:
Lc1uoL:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1uoL_info - _c1uoL_info_dsp
.text
	.align 2
_c1uow_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uow_info)+140
	.long	132
	.long	65568
_c1uow_info:
Lc1uow:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c1uoy_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1uow_info - _c1uow_info_dsp
.text
	.align 2
_c1uoy_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uoy_info)+140
	.long	1
	.long	65568
_c1uoy_info:
Lc1uoy:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1uoy_info - _c1uoy_info_dsp
.text
	.align 2
_c1uof_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uof_info)+132
	.long	4
	.long	2555936
_c1uof_info:
Lc1uof:
	call 1f
1:	popl	%eax
	addl $_c1uoh_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,8(%ebx)
	movl 8(%ebp),%esi
	jmp _s1plc_info
	.long  _c1uof_info - _c1uof_info_dsp
.text
	.align 2
_c1uoh_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uoh_info)+140
	.long	132
	.long	65568
_c1uoh_info:
Lc1uoh:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c1uoj_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1uoh_info - _c1uoh_info_dsp
.text
	.align 2
_c1uoj_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uoj_info)+140
	.long	1
	.long	65568
_c1uoj_info:
Lc1uoj:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1uoj_info - _c1uoj_info_dsp
.text
	.align 2
_c1uo3_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uo3_info)+140
	.long	132
	.long	65568
_c1uo3_info:
Lc1uo3:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c1uo5_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1uo3_info - _c1uo3_info_dsp
.text
	.align 2
_c1uo5_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uo5_info)+140
	.long	1
	.long	65568
_c1uo5_info:
Lc1uo5:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1uo5_info - _c1uo5_info_dsp
.text
	.align 2
_c1uaW_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uaW_info)+132
	.long	4
	.long	1507360
_c1uaW_info:
Lc1uaW:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1um1
Lc1um0:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_s1pjy_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 16(%ebp),%eax
	movl %eax,-8(%edi)
	movl 8(%ebp),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	movl 64(%esp),%eax
	addl $_c1ud2_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	leal -10(%edi),%eax
	movl %eax,8(%ebp)
	testw $7,%si
	jne _c1ud2_info
Lc1ud3:
	jmp *(%esi)
Lc1um1:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1uaW_info - _c1uaW_info_dsp
.text
	.align 2
_c1ud2_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ud2_info)+132
	.long	4
	.long	1507360
_c1ud2_info:
Lc1ud2:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1unW
Lc1unX:
	cmpl $2,%ecx
	jae Lc1unQ
Lc1unR:
	addl $_c1um3_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl 8(%ebp),%esi
	jmp _s1pjy_info
Lc1unW:
	cmpl $4,%ecx
	jae Lc1unT
Lc1unU:
	addl $_c1ud9_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1ud9_info
Lc1uda:
	jmp *(%esi)
Lc1unT:
	addl $_c1umY_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1umY_info
Lc1umZ:
	jmp *(%esi)
Lc1unQ:
	addl $_c1umf_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
	.long  _c1ud2_info - _c1ud2_info_dsp
.text
	.align 2
_c1umY_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1umY_info)+132
	.long	5
	.long	1507360
_c1umY_info:
Lc1umY:
	call 1f
1:	popl	%eax
	addl $_c1un3_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1un3_info
Lc1un7:
	jmp *(%esi)
	.long  _c1umY_info - _c1umY_info_dsp
.text
	.align 2
_c1un3_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1un3_info)+132
	.long	5
	.long	1507360
_c1un3_info:
Lc1un3:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1unb_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1unb_info
Lc1und:
	jmp *(%esi)
	.long  _c1un3_info - _c1un3_info_dsp
.text
	.align 2
_c1unb_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1unb_info)+132
	.long	5
	.long	1507360
_c1unb_info:
Lc1unb:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1unM
Lc1unN:
	addl $_c1unh_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1unh_info
Lc1uni:
	jmp *(%esi)
Lc1unM:
	movl 16(%ebp),%ecx
	addl $_c1unD_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $16,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1unb_info - _c1unb_info_dsp
.text
	.align 2
_c1unD_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1unD_info)+140
	.long	1
	.long	65568
_c1unD_info:
Lc1unD:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1unD_info - _c1unD_info_dsp
.text
	.align 2
_c1unh_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1unh_info)+132
	.long	5
	.long	1507360
_c1unh_info:
Lc1unh:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1unm_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1unh_info - _c1unh_info_dsp
.text
	.align 2
_c1unm_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1unm_info)+132
	.long	4
	.long	1507360
_c1unm_info:
Lc1unm:
	call 1f
1:	popl	%eax
	addl $_c1uno_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,8(%ebx)
	movl 8(%ebp),%esi
	jmp _s1pjy_info
	.long  _c1unm_info - _c1unm_info_dsp
.text
	.align 2
_c1uno_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uno_info)+140
	.long	132
	.long	65568
_c1uno_info:
Lc1uno:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c1unq_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1uno_info - _c1uno_info_dsp
.text
	.align 2
_c1unq_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1unq_info)+140
	.long	1
	.long	65568
_c1unq_info:
Lc1unq:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1unq_info - _c1unq_info_dsp
.text
	.align 2
_c1ud9_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ud9_info)+132
	.long	5
	.long	1507360
_c1ud9_info:
Lc1ud9:
	call 1f
1:	popl	%eax
	addl $_c1ude_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1ude_info
Lc1udf:
	jmp *(%esi)
	.long  _c1ud9_info - _c1ud9_info_dsp
.text
	.align 2
_c1ude_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ude_info)+132
	.long	5
	.long	1507360
_c1ude_info:
Lc1ude:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1udj_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1udj_info
Lc1udk:
	jmp *(%esi)
	.long  _c1ude_info - _c1ude_info_dsp
.text
	.align 2
_c1udj_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1udj_info)+132
	.long	5
	.long	1507360
_c1udj_info:
Lc1udj:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1umU
Lc1umV:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1umD
Lc1umC:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1pkC_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	movl 4(%ebp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	addl $_c1umw_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	leal -16(%edi),%eax
	movl %eax,8(%ebx)
	movl 12(%ebp),%esi
	addl $4,%ebp
	jmp _s1pjy_info
Lc1umD:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1umU:
	movl 16(%ebp),%ecx
	addl $_c1umL_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $16,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1udj_info - _c1udj_info_dsp
.text
	.align 2
_c1umL_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1umL_info)+140
	.long	1
	.long	65568
_c1umL_info:
Lc1umL:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1umL_info - _c1umL_info_dsp
.text
	.align 2
_c1umw_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1umw_info)+140
	.long	132
	.long	65568
_c1umw_info:
Lc1umw:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c1umy_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1umw_info - _c1umw_info_dsp
.text
	.align 2
_c1umy_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1umy_info)+140
	.long	1
	.long	65568
_c1umy_info:
Lc1umy:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1umy_info - _c1umy_info_dsp
.text
	.align 2
_c1umf_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1umf_info)+132
	.long	4
	.long	1507360
_c1umf_info:
Lc1umf:
	call 1f
1:	popl	%eax
	addl $_c1umh_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,8(%ebx)
	movl 8(%ebp),%esi
	jmp _s1pjy_info
	.long  _c1umf_info - _c1umf_info_dsp
.text
	.align 2
_c1umh_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1umh_info)+140
	.long	132
	.long	65568
_c1umh_info:
Lc1umh:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c1umj_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1umh_info - _c1umh_info_dsp
.text
	.align 2
_c1umj_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1umj_info)+140
	.long	1
	.long	65568
_c1umj_info:
Lc1umj:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1umj_info - _c1umj_info_dsp
.text
	.align 2
_c1um3_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1um3_info)+140
	.long	132
	.long	65568
_c1um3_info:
Lc1um3:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c1um5_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1um3_info - _c1um3_info_dsp
.text
	.align 2
_c1um5_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1um5_info)+140
	.long	1
	.long	65568
_c1um5_info:
Lc1um5:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1um5_info - _c1um5_info_dsp
.text
	.align 2
_c1u9Q_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1u9Q_info)+132
	.long	4
	.long	983072
_c1u9Q_info:
Lc1u9Q:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1ulV
Lc1ulW:
	cmpl $2,%ecx
	jae Lc1ulP
Lc1ulQ:
	addl $_c1uk2_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl 8(%ebp),%esi
	jmp _s1phm_info
Lc1ulV:
	cmpl $4,%ecx
	jae Lc1ulS
Lc1ulT:
	addl $_c1u9X_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1u9X_info
Lc1u9Y:
	jmp *(%esi)
Lc1ulS:
	addl $_c1ukX_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1ukX_info
Lc1ukY:
	jmp *(%esi)
Lc1ulP:
	addl $_c1uke_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
	.long  _c1u9Q_info - _c1u9Q_info_dsp
.text
	.align 2
_c1ukX_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ukX_info)+132
	.long	5
	.long	983072
_c1ukX_info:
Lc1ukX:
	call 1f
1:	popl	%eax
	addl $_c1ul2_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1ul2_info
Lc1ul6:
	jmp *(%esi)
	.long  _c1ukX_info - _c1ukX_info_dsp
.text
	.align 2
_c1ul2_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ul2_info)+132
	.long	5
	.long	983072
_c1ul2_info:
Lc1ul2:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1ula_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1ula_info
Lc1ulc:
	jmp *(%esi)
	.long  _c1ul2_info - _c1ul2_info_dsp
.text
	.align 2
_c1ula_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ula_info)+132
	.long	5
	.long	983072
_c1ula_info:
Lc1ula:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1ulL
Lc1ulM:
	addl $_c1ulg_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1ulg_info
Lc1ulh:
	jmp *(%esi)
Lc1ulL:
	movl 16(%ebp),%ecx
	addl $_c1ulC_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $16,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1ula_info - _c1ula_info_dsp
.text
	.align 2
_c1ulC_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ulC_info)+140
	.long	1
	.long	65568
_c1ulC_info:
Lc1ulC:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1ulC_info - _c1ulC_info_dsp
.text
	.align 2
_c1ulg_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ulg_info)+132
	.long	5
	.long	983072
_c1ulg_info:
Lc1ulg:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1ull_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1ulg_info - _c1ulg_info_dsp
.text
	.align 2
_c1ull_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ull_info)+132
	.long	4
	.long	983072
_c1ull_info:
Lc1ull:
	call 1f
1:	popl	%eax
	addl $_c1uln_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,8(%ebx)
	movl 8(%ebp),%esi
	jmp _s1phm_info
	.long  _c1ull_info - _c1ull_info_dsp
.text
	.align 2
_c1uln_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uln_info)+140
	.long	132
	.long	65568
_c1uln_info:
Lc1uln:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c1ulp_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1uln_info - _c1uln_info_dsp
.text
	.align 2
_c1ulp_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ulp_info)+140
	.long	1
	.long	65568
_c1ulp_info:
Lc1ulp:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1ulp_info - _c1ulp_info_dsp
.text
	.align 2
_c1u9X_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1u9X_info)+132
	.long	5
	.long	983072
_c1u9X_info:
Lc1u9X:
	call 1f
1:	popl	%eax
	addl $_c1ua2_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1ua2_info
Lc1ua3:
	jmp *(%esi)
	.long  _c1u9X_info - _c1u9X_info_dsp
.text
	.align 2
_c1ua2_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ua2_info)+132
	.long	5
	.long	983072
_c1ua2_info:
Lc1ua2:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1ua7_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1ua7_info
Lc1ua8:
	jmp *(%esi)
	.long  _c1ua2_info - _c1ua2_info_dsp
.text
	.align 2
_c1ua7_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ua7_info)+132
	.long	5
	.long	983072
_c1ua7_info:
Lc1ua7:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1ukT
Lc1ukU:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1ukC
Lc1ukB:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1piV_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	movl 4(%ebp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	addl $_c1ukv_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	leal -16(%edi),%eax
	movl %eax,8(%ebx)
	movl 12(%ebp),%esi
	addl $4,%ebp
	jmp _s1phm_info
Lc1ukC:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1ukT:
	movl 16(%ebp),%ecx
	addl $_c1ukK_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $16,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1ua7_info - _c1ua7_info_dsp
.text
	.align 2
_c1ukK_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ukK_info)+140
	.long	1
	.long	65568
_c1ukK_info:
Lc1ukK:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1ukK_info - _c1ukK_info_dsp
.text
	.align 2
_c1ukv_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ukv_info)+140
	.long	132
	.long	65568
_c1ukv_info:
Lc1ukv:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c1ukx_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1ukv_info - _c1ukv_info_dsp
.text
	.align 2
_c1ukx_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ukx_info)+140
	.long	1
	.long	65568
_c1ukx_info:
Lc1ukx:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1ukx_info - _c1ukx_info_dsp
.text
	.align 2
_c1uke_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uke_info)+132
	.long	4
	.long	983072
_c1uke_info:
Lc1uke:
	call 1f
1:	popl	%eax
	addl $_c1ukg_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,8(%ebx)
	movl 8(%ebp),%esi
	jmp _s1phm_info
	.long  _c1uke_info - _c1uke_info_dsp
.text
	.align 2
_c1ukg_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ukg_info)+140
	.long	132
	.long	65568
_c1ukg_info:
Lc1ukg:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c1uki_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1ukg_info - _c1ukg_info_dsp
.text
	.align 2
_c1uki_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uki_info)+140
	.long	1
	.long	65568
_c1uki_info:
Lc1uki:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1uki_info - _c1uki_info_dsp
.text
	.align 2
_c1uk2_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uk2_info)+140
	.long	132
	.long	65568
_c1uk2_info:
Lc1uk2:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c1uk4_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1uk2_info - _c1uk2_info_dsp
.text
	.align 2
_c1uk4_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uk4_info)+140
	.long	1
	.long	65568
_c1uk4_info:
Lc1uk4:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1uk4_info - _c1uk4_info_dsp
.text
	.align 2
_c1ujN_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ujN_info)+140
	.long	3
	.long	65568
_c1ujN_info:
Lc1ujN:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
	addl $_c1ujP_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $8,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1ujN_info - _c1ujN_info_dsp
.text
	.align 2
_c1ujP_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ujP_info)+140
	.long	1
	.long	65568
_c1ujP_info:
Lc1ujP:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1ujP_info - _c1ujP_info_dsp
.text
	.align 2
_c1ujF_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ujF_info)+140
	.long	1
	.long	65568
_c1ujF_info:
Lc1ujF:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1ujF_info - _c1ujF_info_dsp
.text
	.align 2
_c1uju_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uju_info)+140
	.long	2
	.long	65568
_c1uju_info:
Lc1uju:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1ujw_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %esi,16(%ebx)
	movl %ecx,8(%ebx)
	addl $4,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1uju_info - _c1uju_info_dsp
.text
	.align 2
_c1ujw_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ujw_info)+140
	.long	1
	.long	65568
_c1ujw_info:
Lc1ujw:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1ujw_info - _c1ujw_info_dsp
.text
	.align 2
_c1uji_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uji_info)+140
	.long	3
	.long	65568
_c1uji_info:
Lc1uji:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
	addl $_c1ujk_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $8,%ebp
	jmp _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_debonezugo_info
	.long  _c1uji_info - _c1uji_info_dsp
.text
	.align 2
_c1ujk_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1ujk_info)+140
	.long	1
	.long	65568
_c1ujk_info:
Lc1ujk:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_render2_info
	.long  _c1ujk_info - _c1ujk_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdwa1_closure
_CoreziRenderziInternal_zdwa1_closure:
	.long	_CoreziRenderziInternal_zdwa1_info
	.long	0
.text
	.align 2
_CoreziRenderziInternal_zdwa1_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_zdwa1_info)+140
	.long	262161
	.long	0
	.long	6357007
.globl _CoreziRenderziInternal_zdwa1_info
_CoreziRenderziInternal_zdwa1_info:
Lc1uLe:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1uLn
Lc1uLo:
	movl 64(%esp),%eax
	addl $_c1uLb_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 64(%esp),%eax
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_bufferzuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _c1uLb_info
Lc1uLc:
	jmp *(%esi)
Lc1uLn:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_zdwa1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdwa1_info - _CoreziRenderziInternal_zdwa1_info_dsp
.text
	.align 2
_c1uLb_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uLb_info)+140
	.long	195
	.long	65568
_c1uLb_info:
Lc1uLb:
	call 1f
1:	popl	%eax
	addl $_c1uLk_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 8(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1uLb_info - _c1uLb_info_dsp
.text
	.align 2
_c1uLk_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uLk_info)+140
	.long	195
	.long	65568
_c1uLk_info:
Lc1uLk:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1uLs
Lc1uLr:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl 4(%ebp),%eax
	movl %eax,(%edi)
	leal -3(%edi),%eax
	movl %eax,16(%ebx)
	movl 12(%ebp),%eax
	movl %eax,8(%ebx)
	addl $16,%ebp
	jmp _CoreziRenderziInternal_render2_info
Lc1uLs:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1uLk_info - _c1uLk_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_render1_closure
_CoreziRenderziInternal_render1_closure:
	.long	_CoreziRenderziInternal_render1_info
	.long	0
.text
	.align 2
_CoreziRenderziInternal_render1_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_render1_info)+164
	.long	196623
	.long	0
	.long	196623
.globl _CoreziRenderziInternal_render1_info
_CoreziRenderziInternal_render1_info:
Lc1uMl:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1uMm
Lc1uMn:
	movl 64(%esp),%eax
	addl $_c1uMi_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1uMi_info
Lc1uMj:
	jmp *(%esi)
Lc1uMm:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_render1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_render1_info - _CoreziRenderziInternal_render1_info_dsp
.text
	.align 2
_c1uMi_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uMi_info)+164
	.long	1
	.long	65568
_c1uMi_info:
Lc1uMi:
	movl 4(%ebp),%eax
	movl %eax,24(%ebx)
	movl 7(%esi),%eax
	movl %eax,16(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	addl $8,%ebp
	jmp _CoreziRenderziInternal_zdwa1_info
	.long  _c1uMi_info - _c1uMi_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_render_closure
_CoreziRenderziInternal_render_closure:
	.long	_CoreziRenderziInternal_render_info
	.long	0
.text
	.align 2
_CoreziRenderziInternal_render_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_render_info)+168
	.long	196623
	.long	0
	.long	65551
.globl _CoreziRenderziInternal_render_info
_CoreziRenderziInternal_render_info:
Lc1uMJ:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_render1_info
	.long  _CoreziRenderziInternal_render_info - _CoreziRenderziInternal_render_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_clip6_closure
_CoreziRenderziInternal_clip6_closure:
	.long	_CoreziRenderziInternal_clip6_info
	.long	0
.text
	.align 2
_CoreziRenderziInternal_clip6_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_clip6_info)+132
	.long	131077
	.long	0
	.long	67174415
.globl _CoreziRenderziInternal_clip6_info
_CoreziRenderziInternal_clip6_info:
Lc1uN5:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -8(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1uN9
Lc1uNa:
	addl $_c1uN2_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1uN2_info
Lc1uN3:
	jmp *(%esi)
Lc1uN9:
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_clip6_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_clip6_info - _CoreziRenderziInternal_clip6_info_dsp
.text
	.align 2
_c1uN2_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uN2_info)+132
	.long	0
	.long	65568
_c1uN2_info:
Lc1uN2:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1uN8_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl 3(%esi),%ecx
	movl L_CoreziRenderziInternal_clipzuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %ecx,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1uN8_info
Lc1uNc:
	jmp *(%esi)
	.long  _c1uN2_info - _c1uN2_info_dsp
.text
	.align 2
_c1uN8_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_c1uN8_info:
Lc1uN8:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1uNk_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	addl $4,%ebp
	movl 3(%esi),%eax
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1uN8_info - _c1uN8_info_dsp
.text
	.align 2
_c1uNk_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1uNk_info:
Lc1uNk:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1uNk_info - _c1uNk_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_clip5_closure
_CoreziRenderziInternal_clip5_closure:
	.long	_CoreziRenderziInternal_EmbedDraw_static_info
	.long	_CoreziRenderziInternal_clip6_closure+2
	.long	_ghczmprim_GHCziTuple_Z0T_closure+1
	.long	0
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_clip4_closure
_CoreziRenderziInternal_clip4_closure:
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_static_info
	.long	_CoreziRenderziInternal_clip5_closure+1
	.long	_CoreziRenderziInternal_zdfAffineRender2_closure+1
	.long	0
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_clip3_closure
_CoreziRenderziInternal_clip3_closure:
	.long	_CoreziRenderziInternal_clip3_info
	.long	0
.text
	.align 2
_CoreziRenderziInternal_clip3_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_clip3_info)+176
	.long	65541
	.long	0
	.long	65551
.globl _CoreziRenderziInternal_clip3_info
_CoreziRenderziInternal_clip3_info:
Lc1uOe:
	call 1f
1:	popl	%eax
	movl L_CoreziRenderziInternal_clip4_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 2(%eax),%esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_clip3_info - _CoreziRenderziInternal_clip3_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_clip2_closure
_CoreziRenderziInternal_clip2_closure:
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_static_info
	.long	_CoreziRenderziInternal_clip3_closure+1
	.long	0
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_clip1_closure
_CoreziRenderziInternal_clip1_closure:
	.long	_CoreziRenderziInternal_clip1_info
	.long	0
.text
	.align 2
_s1ppu_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1ppu_info:
Lc1uOV:
	movl 3(%esi),%esi
	andl $-8,%esi
	jmp *(%esi)
	.long  _s1ppu_info - _s1ppu_info_dsp
.const_data
	.align 2
.align 0
_u1uQy_srtd:
	.long	_S1qJo_srt+100
	.long	21
	.long	1049089
.text
	.align 2
_s1ppr_info_dsp:
.text
	.align 2
	.long	_u1uQy_srtd-(_s1ppr_info)+0
	.long	131077
	.long	1
	.long	-65526
_s1ppr_info:
Lc1uP9:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -16(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1uPE
Lc1uPF:
	addl $_c1uP6_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 2(%esi),%eax
	movl %ecx,%esi
	movl %eax,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1uP6_info
Lc1uP7:
	jmp *(%esi)
Lc1uPE:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1ppr_info - _s1ppr_info_dsp
.const_data
	.align 2
.align 0
_u1uQz_srtd:
	.long	_S1qJo_srt+100
	.long	21
	.long	1049089
.text
	.align 2
_c1uP6_info_dsp:
.text
	.align 2
	.long	_u1uQz_srtd-(_c1uP6_info)+0
	.long	1
	.long	-65504
_c1uP6_info:
Lc1uP6:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1uPc_info-(1b)+0,%ecx
	movl %ecx,-8(%ebp)
	movl %esi,%ecx
	movl 3(%esi),%edx
	movl L_CoreziRenderziInternal_clipzuf4_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %edx,-4(%ebp)
	movl %ecx,(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1uPc_info
Lc1uPd:
	jmp *(%esi)
	.long  _c1uP6_info - _c1uP6_info_dsp
.const_data
	.align 2
.align 0
_u1uQA_srtd:
	.long	_S1qJo_srt+100
	.long	21
	.long	1048577
.text
	.align 2
_c1uPc_info_dsp:
.text
	.align 2
	.long	_u1uQA_srtd-(_c1uPc_info)+0
	.long	67
	.long	-65504
_c1uPc_info:
Lc1uPc:
	call 1f
1:	popl	%eax
	addl $_c1uPk_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1uPc_info - _c1uPc_info_dsp
.const_data
	.align 2
.align 0
_u1uQB_srtd:
	.long	_S1qJo_srt+100
	.long	21
	.long	1048577
.text
	.align 2
_c1uPk_info_dsp:
.text
	.align 2
	.long	_u1uQB_srtd-(_c1uPk_info)+0
	.long	67
	.long	-65504
_c1uPk_info:
Lc1uPk:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1uPm_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_CoreziRenderziInternal_clipzuf3_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	testw $7,%si
	jne _c1uPm_info
Lc1uPn:
	jmp *(%esi)
	.long  _c1uPk_info - _c1uPk_info_dsp
.text
	.align 2
_c1uPm_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uPm_info)+180
	.long	67
	.long	65568
_c1uPm_info:
Lc1uPm:
	call 1f
1:	popl	%eax
	addl $_c1uPu_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1uPm_info - _c1uPm_info_dsp
.text
	.align 2
_c1uPu_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uPu_info)+180
	.long	67
	.long	65568
_c1uPu_info:
Lc1uPu:
	call 1f
1:	popl	%eax
	addl $_c1uPw_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 12(%ebp),%esi
	testw $7,%si
	jne _c1uPw_info
Lc1uPx:
	jmp *(%esi)
	.long  _c1uPu_info - _c1uPu_info_dsp
.text
	.align 2
_c1uPw_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uPw_info)+180
	.long	323
	.long	65568
_c1uPw_info:
Lc1uPw:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1uPB_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_ghczmprim_GHCziTypes_True_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	addl $2,%eax
	movl %eax,16(%ebx)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl 7(%esi),%esi
	jmp _stg_ap_ppv_fast
	.long  _c1uPw_info - _c1uPw_info_dsp
.text
	.align 2
_c1uPB_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uPB_info)+180
	.long	451
	.long	65568
_c1uPB_info:
Lc1uPB:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1uPD_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_CoreziRenderziInternal_clipzuf2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	testw $7,%si
	jne _c1uPD_info
Lc1uPN:
	jmp *(%esi)
	.long  _c1uPB_info - _c1uPB_info_dsp
.text
	.align 2
_c1uPD_info_dsp:
.text
	.align 2
	.long	451
	.long	32
_c1uPD_info:
Lc1uPD:
	call 1f
1:	popl	%eax
	addl $_c1uPV_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 4(%ebp),%eax
	addl $12,%ebp
	movl 3(%esi),%ecx
	movl 872(%ebx),%edx
	movl %ecx,64(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,76(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,88(%esp)
	movl 104(%edx),%eax
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,112(%esp)
	movl 88(%esp),%ecx
	subl %eax,%ecx
	movl 100(%esp),%eax
	movl %ecx,124(%esp)
	movl 112(%esp),%ecx
	sbbl %ecx,%eax
	movl 124(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1uPD_info - _c1uPD_info_dsp
.text
	.align 2
_c1uPV_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1uPV_info:
Lc1uPV:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1uPV_info - _c1uPV_info_dsp
.const_data
	.align 2
.align 0
_u1uQC_srtd:
	.long	_S1qJo_srt+100
	.long	23
	.long	7340545
.text
	.align 2
_CoreziRenderziInternal_clip1_info_dsp:
.text
	.align 2
	.long	_u1uQC_srtd-(_CoreziRenderziInternal_clip1_info)+0
	.long	131087
	.long	0
	.long	-65521
.globl _CoreziRenderziInternal_clip1_info
_CoreziRenderziInternal_clip1_info:
Lc1uQt:
	call 1f
1:	popl	%eax
	addl $72,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1uQx
Lc1uQw:
	movl %eax,64(%esp)
	addl $_s1ppu_info-(1b)+0,%eax
	movl %eax,-68(%edi)
	movl %ecx,-64(%edi)
	movl 64(%esp),%eax
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-60(%edi)
	leal -67(%edi),%ecx
	movl %ecx,-56(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-52(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-48(%edi)
	leal -59(%edi),%ecx
	movl %ecx,-44(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-40(%edi)
	leal -50(%edi),%ecx
	movl %ecx,-36(%edi)
	movl L_CoreziRenderziInternal_clip2_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-32(%edi)
	movl %eax,%ecx
	addl $_s1ppr_info-(1b)+0,%ecx
	movl %ecx,-28(%edi)
	movl %edx,-24(%edi)
	movl L_CoreziRenderziInternal_EmbedDraw_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-20(%edi)
	leal -26(%edi),%ecx
	movl %ecx,-16(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -19(%edi),%eax
	movl %eax,-4(%edi)
	leal -38(%edi),%eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	jmp *(%ebp)
Lc1uQx:
	movl $72,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziRenderziInternal_clip1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_clip1_info - _CoreziRenderziInternal_clip1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_clip_closure
_CoreziRenderziInternal_clip_closure:
	.long	_CoreziRenderziInternal_clip_info
	.long	0
.text
	.align 2
_CoreziRenderziInternal_clip_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_clip_info)+184
	.long	131087
	.long	0
	.long	65551
.globl _CoreziRenderziInternal_clip_info
_CoreziRenderziInternal_clip_info:
Lc1uSN:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_clip1_info
	.long  _CoreziRenderziInternal_clip_info - _CoreziRenderziInternal_clip_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_shadowed1_closure
_CoreziRenderziInternal_shadowed1_closure:
	.long	_CoreziRenderziInternal_shadowed1_info
	.long	0
.text
	.align 2
_s1pqW_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1pqW_info:
Lc1uT5:
	movl 3(%esi),%esi
	andl $-8,%esi
	jmp *(%esi)
	.long  _s1pqW_info - _s1pqW_info_dsp
.text
	.align 2
_s1pqQ_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pqQ_info)+192
	.long	131077
	.long	4
	.long	16711689
_s1pqQ_info:
Lc1uUs:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -28(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1uW9
Lc1uWa:
	addl $_c1uUp_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 6(%esi),%eax
	movl 10(%esi),%edx
	movl %eax,64(%esp)
	movl 14(%esi),%eax
	movl 2(%esi),%esi
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl %edx,-16(%ebp)
	movl 76(%esp),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _c1uUp_info
Lc1uUq:
	jmp *(%esi)
Lc1uW9:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pqQ_info - _s1pqQ_info_dsp
.text
	.align 2
_c1uUp_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uUp_info)+192
	.long	4
	.long	16711712
_c1uUp_info:
Lc1uUp:
	call 1f
1:	popl	%eax
	addl $_c1uUv_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 15(%esi),%eax
	movl %eax,32(%ebx)
	movl 11(%esi),%eax
	movl %eax,24(%ebx)
	movl 7(%esi),%eax
	movl %eax,16(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_zdwa_info
	.long  _c1uUp_info - _c1uUp_info_dsp
.text
	.align 2
_c1uUv_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uUv_info)+192
	.long	4
	.long	16711712
_c1uUv_info:
Lc1uUv:
	call 1f
1:	popl	%eax
	addl $_c1uUx_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _c1uUx_info
Lc1uUy:
	jmp *(%esi)
	.long  _c1uUv_info - _c1uUv_info_dsp
.text
	.align 2
_c1uUx_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uUx_info)+192
	.long	4
	.long	16711712
_c1uUx_info:
Lc1uUx:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1uUC_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl 3(%esi),%ecx
	movl L_CoreziRenderziInternal_clipzuf4_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %ecx,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1uUC_info
Lc1uUD:
	jmp *(%esi)
	.long  _c1uUx_info - _c1uUx_info_dsp
.text
	.align 2
_c1uUC_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uUC_info)+192
	.long	69
	.long	15663136
_c1uUC_info:
Lc1uUC:
	call 1f
1:	popl	%eax
	addl $_c1uUK_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1uUC_info - _c1uUC_info_dsp
.text
	.align 2
_c1uUK_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uUK_info)+192
	.long	69
	.long	15663136
_c1uUK_info:
Lc1uUK:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1uUM_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r1mSp_closure-(1b)+0,%esi
	testw $7,%si
	jne _c1uUM_info
Lc1uUN:
	jmp *(%esi)
	.long  _c1uUK_info - _c1uUK_info_dsp
.text
	.align 2
_c1uUM_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uUM_info)+192
	.long	69
	.long	15138848
_c1uUM_info:
Lc1uUM:
	call 1f
1:	popl	%eax
	addl $_c1uUR_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebp)
	jmp _CoreziRenderziInternal_zdwcolor2JSString_info
	.long  _c1uUM_info - _c1uUM_info_dsp
.text
	.align 2
_c1uUR_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uUR_info)+192
	.long	197
	.long	6750240
_c1uUR_info:
Lc1uUR:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1uUV_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl %esi,%ecx
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_jsSetzuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %ecx,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1uUV_info
Lc1uUW:
	jmp *(%esi)
	.long  _c1uUR_info - _c1uUR_info_dsp
.text
	.align 2
_c1uUV_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uUV_info)+192
	.long	454
	.long	2555936
_c1uUV_info:
Lc1uUV:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1uV5_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl 12(%ebp),%edx
	movl %eax,12(%ebp)
	movl %edx,64(%esp)
	movl 8(%ebp),%edx
	addl $4,%ebp
	movl %edx,76(%esp)
	movl 872(%ebx),%edx
	movl %ecx,88(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,112(%esp)
	movl 104(%edx),%eax
	movl %eax,124(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,136(%esp)
	movl 112(%esp),%ecx
	subl %eax,%ecx
	movl 124(%esp),%eax
	movl %ecx,148(%esp)
	movl 136(%esp),%ecx
	sbbl %ecx,%eax
	movl 148(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $12,%esp
	movl 100(%esp),%ecx
	pushl %ecx
	movl 80(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 124(%esp),%ecx
	pushl %ecx
	movl %eax,188(%esp)
	call L___app3$stub
	addl $28,%esp
	subl $8,%esp
	movl 168(%esp),%ecx
	pushl %ecx
	movl %eax,184(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,184(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,196(%esp)
	movl %eax,%ecx
	movl %edx,208(%esp)
	movl 196(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 184(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,220(%esp)
	movl 208(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 220(%esp),%ecx
	adcl %eax,%ecx
	movl 184(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 172(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1uUV_info - _c1uUV_info_dsp
.text
	.align 2
_c1uV5_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uV5_info)+192
	.long	197
	.long	2555936
_c1uV5_info:
Lc1uV5:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1uV7_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r1mSo_closure-(1b)+0,%esi
	testw $7,%si
	jne _c1uV7_info
Lc1uV8:
	jmp *(%esi)
	.long  _c1uV5_info - _c1uV5_info_dsp
.text
	.align 2
_c1uV7_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uV7_info)+192
	.long	197
	.long	2293792
_c1uV7_info:
Lc1uV7:
	call 1f
1:	popl	%eax
	addl $_c1uVc_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 12(%ebp),%esi
	movl %eax,12(%ebp)
	testw $7,%si
	jne _c1uVc_info
Lc1uVd:
	jmp *(%esi)
	.long  _c1uV7_info - _c1uV7_info_dsp
.text
	.align 2
_c1uVc_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uVc_info)+192
	.long	453
	.long	2293792
_c1uVc_info:
Lc1uVc:
	call 1f
1:	popl	%eax
	addl $_c1uVj_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,64(%esp)
	movl 104(%eax),%edx
	movl %edx,76(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,88(%esp)
	movl 64(%esp),%ecx
	subl %edx,%ecx
	movl 76(%esp),%edx
	movl %ecx,100(%esp)
	movl 88(%esp),%ecx
	sbbl %ecx,%edx
	movl 100(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
#	gstt %fake0,124(%esp)
	fld %st(0) ; fstpt 124(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	subl $8,%esp
#	gldt 124(%esp),%fake0
	fldt 124(%esp) ; fstp %st(1)
#	gstsd %fake0,(%esp)
	fstl (%esp)
	movl %eax,136(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_String$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1uVc_info - _c1uVc_info_dsp
.text
	.align 2
_c1uVj_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uVj_info)+192
	.long	453
	.long	2293792
_c1uVj_info:
Lc1uVj:
	call 1f
1:	popl	%eax
	addl $_c1uVq_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%eax
	movl 4(%ebp),%ecx
	movl 12(%ebp),%edx
	movl %eax,64(%esp)
	movl 872(%ebx),%eax
	movl %ecx,76(%esp)
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %edx,88(%esp)
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,100(%esp)
	movl 104(%eax),%edx
	movl %edx,112(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,124(%esp)
	movl 100(%esp),%ecx
	subl %edx,%ecx
	movl 112(%esp),%edx
	movl %ecx,136(%esp)
	movl 124(%esp),%ecx
	sbbl %ecx,%edx
	movl 136(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $12,%esp
	pushl %esi
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,176(%esp)
	call L___app3$stub
	addl $28,%esp
	subl $8,%esp
	movl 156(%esp),%ecx
	pushl %ecx
	movl %eax,172(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,172(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,184(%esp)
	movl %eax,%ecx
	movl %edx,196(%esp)
	movl 184(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 172(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,208(%esp)
	movl 196(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 208(%esp),%ecx
	adcl %eax,%ecx
	movl 172(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 160(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1uVj_info - _c1uVj_info_dsp
.text
	.align 2
_c1uVq_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uVq_info)+192
	.long	453
	.long	2293792
_c1uVq_info:
Lc1uVq:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1uVs_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r1mSn_closure-(1b)+0,%esi
	testw $7,%si
	jne _c1uVs_info
Lc1uVt:
	jmp *(%esi)
	.long  _c1uVq_info - _c1uVq_info_dsp
.text
	.align 2
_c1uVs_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uVs_info)+192
	.long	453
	.long	2162720
_c1uVs_info:
Lc1uVs:
	call 1f
1:	popl	%eax
	addl $_c1uVx_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 16(%ebp),%esi
	movl %eax,16(%ebp)
	testw $7,%si
	jne _c1uVx_info
Lc1uVy:
	jmp *(%esi)
	.long  _c1uVs_info - _c1uVs_info_dsp
.text
	.align 2
_c1uVx_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uVx_info)+192
	.long	965
	.long	2162720
_c1uVx_info:
Lc1uVx:
	call 1f
1:	popl	%eax
	addl $_c1uVE_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,64(%esp)
	movl 104(%eax),%edx
	movl %edx,76(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,88(%esp)
	movl 64(%esp),%ecx
	subl %edx,%ecx
	movl 76(%esp),%edx
	movl %ecx,100(%esp)
	movl 88(%esp),%ecx
	sbbl %ecx,%edx
	movl 100(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
#	gstt %fake0,124(%esp)
	fld %st(0) ; fstpt 124(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	subl $8,%esp
#	gldt 124(%esp),%fake0
	fldt 124(%esp) ; fstp %st(1)
#	gstsd %fake0,(%esp)
	fstl (%esp)
	movl %eax,136(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_String$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1uVx_info - _c1uVx_info_dsp
.text
	.align 2
_c1uVE_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uVE_info)+192
	.long	965
	.long	2162720
_c1uVE_info:
Lc1uVE:
	call 1f
1:	popl	%eax
	addl $_c1uVL_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%eax
	movl 4(%ebp),%ecx
	movl 16(%ebp),%edx
	movl %eax,64(%esp)
	movl 872(%ebx),%eax
	movl %ecx,76(%esp)
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %edx,88(%esp)
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,100(%esp)
	movl 104(%eax),%edx
	movl %edx,112(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,124(%esp)
	movl 100(%esp),%ecx
	subl %edx,%ecx
	movl 112(%esp),%edx
	movl %ecx,136(%esp)
	movl 124(%esp),%ecx
	sbbl %ecx,%edx
	movl 136(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $12,%esp
	pushl %esi
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,176(%esp)
	call L___app3$stub
	addl $28,%esp
	subl $8,%esp
	movl 156(%esp),%ecx
	pushl %ecx
	movl %eax,172(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,172(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,184(%esp)
	movl %eax,%ecx
	movl %edx,196(%esp)
	movl 184(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 172(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,208(%esp)
	movl 196(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 208(%esp),%ecx
	adcl %eax,%ecx
	movl 172(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 160(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1uVE_info - _c1uVE_info_dsp
.text
	.align 2
_c1uVL_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uVL_info)+192
	.long	965
	.long	2162720
_c1uVL_info:
Lc1uVL:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1uVN_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r1mSm_closure-(1b)+0,%esi
	testw $7,%si
	jne _c1uVN_info
Lc1uVO:
	jmp *(%esi)
	.long  _c1uVL_info - _c1uVL_info_dsp
.text
	.align 2
_c1uVN_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uVN_info)+212
	.long	965
	.long	65568
_c1uVN_info:
Lc1uVN:
	call 1f
1:	popl	%eax
	addl $_c1uVS_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 20(%ebp),%esi
	movl %eax,20(%ebp)
	testw $7,%si
	jne _c1uVS_info
Lc1uVT:
	jmp *(%esi)
	.long  _c1uVN_info - _c1uVN_info_dsp
.text
	.align 2
_c1uVS_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uVS_info)+212
	.long	1989
	.long	65568
_c1uVS_info:
Lc1uVS:
	call 1f
1:	popl	%eax
	addl $_c1uVZ_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,64(%esp)
	movl 104(%eax),%edx
	movl %edx,76(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,88(%esp)
	movl 64(%esp),%ecx
	subl %edx,%ecx
	movl 76(%esp),%edx
	movl %ecx,100(%esp)
	movl 88(%esp),%ecx
	sbbl %ecx,%edx
	movl 100(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
#	gstt %fake0,124(%esp)
	fld %st(0) ; fstpt 124(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	subl $8,%esp
#	gldt 124(%esp),%fake0
	fldt 124(%esp) ; fstp %st(1)
#	gstsd %fake0,(%esp)
	fstl (%esp)
	movl %eax,136(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_String$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1uVS_info - _c1uVS_info_dsp
.text
	.align 2
_c1uVZ_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uVZ_info)+212
	.long	1989
	.long	65568
_c1uVZ_info:
Lc1uVZ:
	call 1f
1:	popl	%eax
	addl $_c1uW6_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%eax
	movl 4(%ebp),%ecx
	movl 20(%ebp),%edx
	movl %eax,64(%esp)
	movl 872(%ebx),%eax
	movl %ecx,76(%esp)
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %edx,88(%esp)
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,100(%esp)
	movl 104(%eax),%edx
	movl %edx,112(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,124(%esp)
	movl 100(%esp),%ecx
	subl %edx,%ecx
	movl 112(%esp),%edx
	movl %ecx,136(%esp)
	movl 124(%esp),%ecx
	sbbl %ecx,%edx
	movl 136(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $12,%esp
	pushl %esi
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,176(%esp)
	call L___app3$stub
	addl $28,%esp
	subl $8,%esp
	movl 156(%esp),%ecx
	pushl %ecx
	movl %eax,172(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,172(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,184(%esp)
	movl %eax,%ecx
	movl %edx,196(%esp)
	movl 184(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 172(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,208(%esp)
	movl 196(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 208(%esp),%ecx
	adcl %eax,%ecx
	movl 172(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 160(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1uVZ_info - _c1uVZ_info_dsp
.text
	.align 2
_c1uW6_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1uW6_info)+212
	.long	1989
	.long	65568
_c1uW6_info:
Lc1uW6:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1uW8_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_CoreziRenderziInternal_clipzuf3_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	testw $7,%si
	jne _c1uW8_info
Lc1uWw:
	jmp *(%esi)
	.long  _c1uW6_info - _c1uW6_info_dsp
.text
	.align 2
_c1uW8_info_dsp:
.text
	.align 2
	.long	1989
	.long	32
_c1uW8_info:
Lc1uW8:
	call 1f
1:	popl	%eax
	addl $_c1uWE_info-(1b)+0,%eax
	movl %eax,20(%ebp)
	movl 4(%ebp),%eax
	addl $20,%ebp
	movl 3(%esi),%ecx
	movl 872(%ebx),%edx
	movl %ecx,64(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,76(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,88(%esp)
	movl 104(%edx),%eax
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,112(%esp)
	movl 88(%esp),%ecx
	subl %eax,%ecx
	movl 100(%esp),%eax
	movl %ecx,124(%esp)
	movl 112(%esp),%ecx
	sbbl %ecx,%eax
	movl 124(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1uW8_info - _c1uW8_info_dsp
.text
	.align 2
_c1uWE_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1uWE_info:
Lc1uWE:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1uWE_info - _c1uWE_info_dsp
.text
	.align 2
_s1pqR_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pqR_info)+192
	.long	131077
	.long	4
	.long	16711689
_s1pqR_info:
Lc1uY3:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1uY7
Lc1uY6:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 64(%esp),%edx
	addl $_s1pqQ_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	movl 88(%esp),%edx
	movl %edx,-12(%edi)
	movl 100(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -14(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_getImage2_info
Lc1uY7:
	movl $20,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pqR_info - _s1pqR_info_dsp
.text
	.align 2
_s1pqS_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pqS_info)+192
	.long	131077
	.long	4
	.long	16711689
_s1pqS_info:
Lc1uY8:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1uYc
Lc1uYb:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 64(%esp),%edx
	addl $_s1pqR_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	movl 88(%esp),%edx
	movl %edx,-12(%edi)
	movl 100(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -14(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_getImage2_info
Lc1uYc:
	movl $20,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pqS_info - _s1pqS_info_dsp
.text
	.align 2
_s1pqT_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pqT_info)+192
	.long	131077
	.long	4
	.long	16711689
_s1pqT_info:
Lc1uYd:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1uYh
Lc1uYg:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 64(%esp),%edx
	addl $_s1pqS_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	movl 88(%esp),%edx
	movl %edx,-12(%edi)
	movl 100(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -14(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_getImage2_info
Lc1uYh:
	movl $20,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pqT_info - _s1pqT_info_dsp
.text
	.align 2
_CoreziRenderziInternal_shadowed1_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_shadowed1_info)+188
	.long	327705
	.long	0
	.long	67043343
.globl _CoreziRenderziInternal_shadowed1_info
_CoreziRenderziInternal_shadowed1_info:
Lc1uYk:
	call 1f
1:	popl	%eax
	addl $84,%edi
	movl 40(%ebx),%ecx
	movl 32(%ebx),%edx
	movl %eax,64(%esp)
	movl 24(%ebx),%eax
	movl %eax,76(%esp)
	movl 16(%ebx),%eax
	movl %eax,88(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1uYo
Lc1uYn:
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	addl $_s1pqW_info-(1b)+0,%eax
	movl %eax,-80(%edi)
	movl %ecx,-76(%edi)
	movl 64(%esp),%eax
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-72(%edi)
	leal -79(%edi),%ecx
	movl %ecx,-68(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-64(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-60(%edi)
	leal -71(%edi),%ecx
	movl %ecx,-56(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-52(%edi)
	leal -62(%edi),%ecx
	movl %ecx,-48(%edi)
	movl L_CoreziRenderziInternal_clip2_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-44(%edi)
	movl %eax,%ecx
	addl $_s1pqT_info-(1b)+0,%ecx
	movl %ecx,-40(%edi)
	movl 100(%esp),%ecx
	movl %ecx,-36(%edi)
	movl 88(%esp),%ecx
	movl %ecx,-32(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-28(%edi)
	movl %edx,-24(%edi)
	movl L_CoreziRenderziInternal_EmbedDraw_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-20(%edi)
	leal -38(%edi),%ecx
	movl %ecx,-16(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -19(%edi),%eax
	movl %eax,-4(%edi)
	leal -50(%edi),%eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	jmp *(%ebp)
Lc1uYo:
	movl $84,904(%ebx)
	movl %ecx,40(%ebx)
	movl %edx,32(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,24(%ebx)
	movl 88(%esp),%ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_shadowed1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_shadowed1_info - _CoreziRenderziInternal_shadowed1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_shadowed_closure
_CoreziRenderziInternal_shadowed_closure:
	.long	_CoreziRenderziInternal_shadowed_info
	.long	0
.text
	.align 2
_CoreziRenderziInternal_shadowed_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_shadowed_info)+224
	.long	262168
	.long	0
	.long	196623
.globl _CoreziRenderziInternal_shadowed_info
_CoreziRenderziInternal_shadowed_info:
Lc1v3z:
	call 1f
1:	popl	%eax
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	movl %eax,88(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1v3A
Lc1v3B:
	movl 64(%esp),%eax
	addl $_c1v3w_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 88(%esp),%eax
	movl %eax,%esi
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _c1v3w_info
Lc1v3x:
	jmp *(%esi)
Lc1v3A:
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_shadowed_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_shadowed_info - _CoreziRenderziInternal_shadowed_info_dsp
.text
	.align 2
_c1v3w_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1v3w_info)+224
	.long	3
	.long	65568
_c1v3w_info:
Lc1v3w:
	movl 12(%ebp),%eax
	movl %eax,40(%ebx)
	movl 8(%ebp),%eax
	movl %eax,32(%ebx)
	movl 4(%ebp),%eax
	movl %eax,24(%ebx)
	movl 7(%esi),%eax
	movl %eax,16(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	addl $16,%ebp
	jmp _CoreziRenderziInternal_shadowed1_info
	.long  _c1v3w_info - _c1v3w_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_getImagezuf2_closure
_CoreziRenderziInternal_getImagezuf2_closure:
	.long	_CoreziRenderziInternal_getImagezuf2_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1v4a_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	99
	.byte	116
	.byte	120
	.byte	44
	.byte	105
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	100
	.byte	114
	.byte	97
	.byte	119
	.byte	73
	.byte	109
	.byte	97
	.byte	103
	.byte	101
	.byte	40
	.byte	105
	.byte	44
	.byte	48
	.byte	44
	.byte	48
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_getImagezuf2_info_dsp:
.text
	.align 2
	.long	0
	.long	22
.globl _CoreziRenderziInternal_getImagezuf2_info
_CoreziRenderziInternal_getImagezuf2_info:
Lc1v4d:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1v4v
Lc1v4w:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1v49
Lc1v48:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1v4b_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1v4a_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1v49:
	jmp *(%esi)
Lc1v4v:
	jmp *-16(%ebx)
	.long  _CoreziRenderziInternal_getImagezuf2_info - _CoreziRenderziInternal_getImagezuf2_info_dsp
.text
	.align 2
_c1v4b_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1v4b_info:
Lc1v4b:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1v4g_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1v4b_info - _c1v4b_info_dsp
.text
	.align 2
_c1v4g_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1v4g_info:
Lc1v4g:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1v4A
Lc1v4z:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1v4s_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1v4A:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1v4g_info - _c1v4g_info_dsp
.text
	.align 2
_c1v4s_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1v4s_info:
Lc1v4s:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1v4E
Lc1v4D:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1v4E:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1v4s_info - _c1v4s_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_getImagezuf1_closure
_CoreziRenderziInternal_getImagezuf1_closure:
	.long	_CoreziRenderziInternal_getImagezuf1_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1v5I_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	99
	.byte	116
	.byte	120
	.byte	44
	.byte	105
	.byte	109
	.byte	103
	.byte	44
	.byte	120
	.byte	44
	.byte	121
	.byte	44
	.byte	119
	.byte	44
	.byte	104
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	100
	.byte	114
	.byte	97
	.byte	119
	.byte	73
	.byte	109
	.byte	97
	.byte	103
	.byte	101
	.byte	40
	.byte	105
	.byte	109
	.byte	103
	.byte	44
	.byte	120
	.byte	44
	.byte	121
	.byte	44
	.byte	119
	.byte	44
	.byte	104
	.byte	44
	.byte	48
	.byte	44
	.byte	48
	.byte	44
	.byte	119
	.byte	44
	.byte	104
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_getImagezuf1_info_dsp:
.text
	.align 2
	.long	0
	.long	22
.globl _CoreziRenderziInternal_getImagezuf1_info
_CoreziRenderziInternal_getImagezuf1_info:
Lc1v5L:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1v63
Lc1v64:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1v5H
Lc1v5G:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1v5J_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1v5I_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1v5H:
	jmp *(%esi)
Lc1v63:
	jmp *-16(%ebx)
	.long  _CoreziRenderziInternal_getImagezuf1_info - _CoreziRenderziInternal_getImagezuf1_info_dsp
.text
	.align 2
_c1v5J_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1v5J_info:
Lc1v5J:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1v5O_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1v5J_info - _c1v5J_info_dsp
.text
	.align 2
_c1v5O_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1v5O_info:
Lc1v5O:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1v68
Lc1v67:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1v60_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1v68:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1v5O_info - _c1v5O_info_dsp
.text
	.align 2
_c1v60_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1v60_info:
Lc1v60:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1v6c
Lc1v6b:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1v6c:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1v60_info - _c1v60_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdwmakeImage_closure
_CoreziRenderziInternal_zdwmakeImage_closure:
	.long	_CoreziRenderziInternal_zdwmakeImage_info
	.long	0
.text
	.align 2
_s1psq_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1psq_info)+232
	.long	131077
	.long	5
	.long	65545
_s1psq_info:
Lc1v8F:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -48(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1v9n
Lc1v9o:
	addl $_c1v8C_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 2(%esi),%eax
	movl 10(%esi),%edx
	movl %eax,64(%esp)
	movl 14(%esi),%eax
	movl %edx,76(%esp)
	movl 18(%esi),%edx
	movl 6(%esi),%esi
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	movl %eax,-20(%ebp)
	movl 76(%esp),%eax
	movl %eax,-16(%ebp)
	movl 88(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1v8C_info
Lc1v8D:
	jmp *(%esi)
Lc1v9n:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1psq_info - _s1psq_info_dsp
.text
	.align 2
_c1v8C_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1v8C_info)+232
	.long	5
	.long	65568
_c1v8C_info:
Lc1v8C:
	call 1f
1:	popl	%eax
	addl $_c1v8I_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _c1v8I_info
Lc1v8J:
	jmp *(%esi)
	.long  _c1v8C_info - _c1v8C_info_dsp
.text
	.align 2
_c1v8I_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1v8I_info)+232
	.long	5
	.long	65568
_c1v8I_info:
Lc1v8I:
	call 1f
1:	popl	%eax
	addl $_c1v8N_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,%eax
	movl 8(%ebp),%esi
	movl %eax,8(%ebp)
	testw $7,%si
	jne _c1v8N_info
Lc1v8O:
	jmp *(%esi)
	.long  _c1v8I_info - _c1v8I_info_dsp
.text
	.align 2
_c1v8N_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1v8N_info)+232
	.long	5
	.long	65568
_c1v8N_info:
Lc1v8N:
	call 1f
1:	popl	%eax
	addl $_c1v8S_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 12(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1v9U
Lc1v8T:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1v9U:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1v8S_info
	.long  _c1v8N_info - _c1v8N_info_dsp
.text
	.align 2
_c1v8S_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1v8S_info)+232
	.long	2504
	.long	65568
_c1v8S_info:
Lc1v8S:
	call 1f
1:	popl	%eax
	addl $_c1v8X_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 28(%ebp),%esi
#	gstsd %fake0,24(%ebp)
	fstl 24(%ebp)
	testw $7,%si
	jne Lu1v9V
Lc1v8Y:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1v9V:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1v8X_info
	.long  _c1v8S_info - _c1v8S_info_dsp
.text
	.align 2
_c1v8X_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1v8X_info)+232
	.long	6600
	.long	65568
_c1v8X_info:
Lc1v8X:
	call 1f
1:	popl	%eax
	addl $_c1v92_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 32(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1v9W
Lc1v93:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1v9W:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1v92_info
	.long  _c1v8X_info - _c1v8X_info_dsp
.text
	.align 2
_c1v92_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1v92_info)+232
	.long	118731
	.long	65568
_c1v92_info:
Lc1v92:
	call 1f
1:	popl	%eax
	addl $120,%edi
	cmpl 856(%ebx),%edi
	ja Lc1v9w
Lc1v9v:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-116(%edi)
	movl 28(%ebp),%ecx
	movl %ecx,-112(%edi)
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-108(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-104(%edi)
	movl 32(%ebp),%ecx
	movl %ecx,-100(%edi)
	leal -114(%edi),%ecx
	movl %ecx,-96(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-92(%edi)
#	gldsd 16(%ebp),%fake1
	fldl 16(%ebp) ; fstp %st(2)
#	gstsd %fake1,-88(%edi)
	fld %st(1) ; fstpl -88(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-80(%edi)
	leal -91(%edi),%ecx
	movl %ecx,-76(%edi)
	leal -102(%edi),%ecx
	movl %ecx,-72(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-68(%edi)
#	gldsd 36(%ebp),%fake1
	fldl 36(%ebp) ; fstp %st(2)
#	gstsd %fake1,-64(%edi)
	fld %st(1) ; fstpl -64(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-56(%edi)
	leal -67(%edi),%ecx
	movl %ecx,-52(%edi)
	leal -78(%edi),%ecx
	movl %ecx,-48(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-44(%edi)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gstsd %fake1,-40(%edi)
	fld %st(1) ; fstpl -40(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-32(%edi)
	leal -43(%edi),%ecx
	movl %ecx,-28(%edi)
	leal -54(%edi),%ecx
	movl %ecx,-24(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-20(%edi)
#	gstsd %fake0,-16(%edi)
	fstl -16(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	leal -19(%edi),%ecx
	movl %ecx,-4(%edi)
	leal -30(%edi),%ecx
	movl %ecx,(%edi)
	movl %eax,%ecx
	addl $_c1v9m_info-(1b)+0,%ecx
	movl %ecx,40(%ebp)
	movl L_CoreziRenderziInternal_getImagezuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl -3(%edi),%eax
	movl %eax,44(%ebp)
	addl $40,%ebp
	testw $7,%si
	jne Lu1v9X
Lc1v9y:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1v9w:
	movl $120,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1v9X:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1v9m_info
	.long  _c1v92_info - _c1v92_info_dsp
.text
	.align 2
_c1v9m_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_c1v9m_info:
Lc1v9m:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1v9G_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	addl $4,%ebp
	movl 3(%esi),%eax
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___apply$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1v9m_info - _c1v9m_info_dsp
.text
	.align 2
_c1v9G_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1v9G_info:
Lc1v9G:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1v9G_info - _c1v9G_info_dsp
.text
	.align 2
_s1psr_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1psr_info)+232
	.long	131077
	.long	5
	.long	65545
_s1psr_info:
Lc1v9Y:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1va2
Lc1va1:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1psq_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 76(%esp),%eax
	movl %eax,-16(%edi)
	movl 100(%esp),%eax
	movl %eax,-12(%edi)
	movl 112(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -18(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_getImage2_info
Lc1va2:
	movl $24,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1psr_info - _s1psr_info_dsp
.text
	.align 2
_s1pss_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pss_info)+232
	.long	131077
	.long	5
	.long	65545
_s1pss_info:
Lc1va3:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1va7
Lc1va6:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1psr_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 76(%esp),%eax
	movl %eax,-16(%edi)
	movl 100(%esp),%eax
	movl %eax,-12(%edi)
	movl 112(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -18(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_getImage2_info
Lc1va7:
	movl $24,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pss_info - _s1pss_info_dsp
.text
	.align 2
_s1pst_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pst_info)+232
	.long	131077
	.long	5
	.long	65545
_s1pst_info:
Lc1va8:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1vac
Lc1vab:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1pss_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 76(%esp),%eax
	movl %eax,-16(%edi)
	movl 100(%esp),%eax
	movl %eax,-12(%edi)
	movl 112(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -18(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_getImage2_info
Lc1vac:
	movl $24,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pst_info - _s1pst_info_dsp
.text
	.align 2
_s1psu_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1psu_info)+232
	.long	131077
	.long	5
	.long	65545
_s1psu_info:
Lc1vad:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1vah
Lc1vag:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1pst_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 76(%esp),%eax
	movl %eax,-16(%edi)
	movl 100(%esp),%eax
	movl %eax,-12(%edi)
	movl 112(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -18(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_getImage2_info
Lc1vah:
	movl $24,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1psu_info - _s1psu_info_dsp
.text
	.align 2
_s1psw_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1psw_info)+232
	.long	131087
	.long	1
	.long	65546
_s1psw_info:
Lc1vai:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1val
Lc1vam:
	movl 64(%esp),%eax
	addl $_c1v83_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 2(%esi),%eax
	movl %edx,%esi
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1v83_info
Lc1v84:
	jmp *(%esi)
Lc1val:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1psw_info - _s1psw_info_dsp
.text
	.align 2
_c1v83_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1v83_info)+232
	.long	2
	.long	65568
_c1v83_info:
Lc1v83:
	call 1f
1:	popl	%eax
	addl $_c1v88_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl 8(%ebp),%esi
	movl %ecx,(%ebp)
	movl %eax,8(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1v88_info
Lc1v89:
	jmp *(%esi)
	.long  _c1v83_info - _c1v83_info_dsp
.text
	.align 2
_c1v88_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1v88_info)+232
	.long	3
	.long	65568
_c1v88_info:
Lc1v88:
	call 1f
1:	popl	%eax
	addl $48,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vaq
Lc1vap:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_s1psu_info-(1b)+0,%eax
	movl %eax,-44(%edi)
	movl 8(%ebp),%eax
	movl %eax,-40(%edi)
	movl 12(%ebp),%eax
	movl %eax,-36(%edi)
	movl 4(%ebp),%eax
	movl %eax,-32(%edi)
	movl %ecx,-28(%edi)
	movl %edx,-24(%edi)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_EmbedDraw_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-20(%edi)
	leal -42(%edi),%ecx
	movl %ecx,-16(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	leal -19(%edi),%ecx
	movl %ecx,-4(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	addl $16,%ebp
	jmp *(%ebp)
Lc1vaq:
	movl $48,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1v88_info - _c1v88_info_dsp
.text
	.align 2
_s1prC_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1prC_info)+236
	.long	131077
	.long	1
	.long	65546
_s1prC_info:
Lc1vaB:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1vaK
Lc1vaL:
	addl $_c1vay_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 2(%esi),%eax
	movl %ecx,%esi
	movl %eax,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1vay_info
Lc1vaz:
	jmp *(%esi)
Lc1vaK:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1prC_info - _s1prC_info_dsp
.text
	.align 2
_c1vay_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vay_info)+236
	.long	1
	.long	65568
_c1vay_info:
Lc1vay:
	call 1f
1:	popl	%eax
	addl $_c1vaE_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _c1vaE_info
Lc1vaF:
	jmp *(%esi)
	.long  _c1vay_info - _c1vay_info_dsp
.text
	.align 2
_c1vaE_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vaE_info)+236
	.long	65
	.long	65568
_c1vaE_info:
Lc1vaE:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1vaJ_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl 3(%esi),%ecx
	movl L_CoreziRenderziInternal_getImagezuf2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %ecx,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1vaJ_info
Lc1vaO:
	jmp *(%esi)
	.long  _c1vaE_info - _c1vaE_info_dsp
.text
	.align 2
_c1vaJ_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1vaJ_info:
Lc1vaJ:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
	addl $_c1vaX_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl 4(%ebp),%eax
	addl $8,%ebp
	movl 3(%esi),%edx
	movl %edx,64(%esp)
	movl 872(%ebx),%edx
	movl %ecx,76(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,100(%esp)
	movl 104(%edx),%eax
	movl %eax,112(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,124(%esp)
	movl 100(%esp),%ecx
	subl %eax,%ecx
	movl 112(%esp),%eax
	movl %ecx,136(%esp)
	movl 124(%esp),%ecx
	sbbl %ecx,%eax
	movl 136(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	movl 88(%esp),%ecx
	pushl %ecx
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L___app2$stub
	addl $12,%esp
	subl $8,%esp
	movl 156(%esp),%ecx
	pushl %ecx
	movl %eax,172(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,172(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,184(%esp)
	movl %eax,%ecx
	movl %edx,196(%esp)
	movl 184(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 172(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,208(%esp)
	movl 196(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 208(%esp),%ecx
	adcl %eax,%ecx
	movl 172(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 160(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1vaJ_info - _c1vaJ_info_dsp
.text
	.align 2
_c1vaX_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1vaX_info:
Lc1vaX:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1vaX_info - _c1vaX_info_dsp
.text
	.align 2
_CoreziRenderziInternal_zdwmakeImage_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_zdwmakeImage_info)+232
	.long	65541
	.long	0
	.long	458767
.globl _CoreziRenderziInternal_zdwmakeImage_info
_CoreziRenderziInternal_zdwmakeImage_info:
Lc1vbd:
	call 1f
1:	popl	%eax
	addl $40,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1vbh
Lc1vbg:
	movl %eax,%edx
	addl $_s1psw_info-(1b)+0,%edx
	movl %edx,-36(%edi)
	movl %ecx,-32(%edi)
	movl %eax,%edx
	addl $_s1prC_info-(1b)+0,%edx
	movl %edx,-28(%edi)
	movl %ecx,-24(%edi)
	movl L_CoreziRenderziInternal_EmbedDraw_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-20(%edi)
	leal -26(%edi),%edx
	movl %edx,-16(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%edi)
	leal -19(%edi),%edx
	movl %edx,-4(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,(%edi)
	leal -34(%edi),%eax
	movl %eax,16(%ebx)
	leal -6(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp *(%ebp)
Lc1vbh:
	movl $40,904(%ebx)
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_zdwmakeImage_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdwmakeImage_info - _CoreziRenderziInternal_zdwmakeImage_info_dsp
.data
	.align 2
.align 0
_r1mSB_closure:
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_static_info
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_ReturnS_closure+1
	.long	1
.data
	.align 2
.align 0
_r1mSC_closure:
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_static_info
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_ReturnS_closure+1
	.long	1
.data
	.align 2
.align 0
_r1mSD_closure:
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_static_info
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_ReturnS_closure+1
	.long	1
.data
	.align 2
.align 0
_r1mSE_closure:
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_static_info
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_ReturnS_closure+1
	.long	1
.data
	.align 2
.align 0
_r1mSF_closure:
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_static_info
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_ReturnS_closure+1
	.long	1
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_zdwcache_closure
_CoreziRenderziInternal_zdwcache_closure:
	.long	_CoreziRenderziInternal_zdwcache_info
	.long	0
.text
	.align 2
.globl _CoreziRenderziInternal_zdwcache_slow
_CoreziRenderziInternal_zdwcache_slow:
Lc1vf5:
	movl 16(%ebp),%eax
	movl %eax,40(%ebx)
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl (%ebp),%eax
	movl %eax,8(%ebx)
	addl $20,%ebp
	jmp _CoreziRenderziInternal_zdwcache_info
.text
	.align 2
_s1pt1_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pt1_info)+240
	.long	65536
	.long	65554
_s1pt1_info:
Lc1vfN:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -16(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1vfO
Lc1vfP:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vfR
Lc1vfQ:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%ecx
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	addl $_c1vfK_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	leal -3(%edi),%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _CoreziRenderziInternal_zdwmakeImage_info
Lc1vfR:
	movl $8,904(%ebx)
Lc1vfO:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1pt1_info - _s1pt1_info_dsp
.text
	.align 2
_c1vfK_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1vfK_info:
Lc1vfK:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1vfU
Lc1vfT:
	movl L_CoreziRenderziInternal_Image_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %esi,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1vfU:
	movl $16,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1vfK_info - _c1vfK_info_dsp
.text
	.align 2
_s1psJ_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1psJ_info)+240
	.long	65539
	.long	1
	.long	196618
_s1psJ_info:
Lc1vfV:
	call 1f
1:	popl	%eax
	leal -8(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1vfW
Lc1vfX:
	addl $_c1vfg_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1vfg_info
Lc1vfh:
	jmp *(%esi)
Lc1vfW:
	jmp *-8(%ebx)
	.long  _s1psJ_info - _s1psJ_info_dsp
.text
	.align 2
_c1vfg_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vfg_info)+240
	.long	0
	.long	196640
_c1vfg_info:
Lc1vfg:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1vfl_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1vfg_info - _c1vfg_info_dsp
.text
	.align 2
_c1vfl_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vfl_info)+240
	.long	0
	.long	196640
_c1vfl_info:
Lc1vfl:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vg1
Lc1vg0:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	movl %eax,%ecx
	addl $_c1vfv_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl L_CoreziFrontziInternal_getCachezuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1vfv_info
Lc1vfw:
	jmp *(%esi)
Lc1vg1:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1vfl_info - _c1vfl_info_dsp
.text
	.align 2
_c1vfv_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vfv_info)+240
	.long	65
	.long	65568
_c1vfv_info:
Lc1vfv:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1vfD_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	addl $4,%ebp
	movl 3(%esi),%eax
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1vfv_info - _c1vfv_info_dsp
.text
	.align 2
_c1vfD_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vfD_info)+240
	.long	0
	.long	65568
_c1vfD_info:
Lc1vfD:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vg6
Lc1vg5:
	addl $_s1pt1_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1vg6:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1vfD_info - _c1vfD_info_dsp
.text
	.align 2
_s1pt3_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1pt3_info:
Lc1vgn:
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziEase_valueIO1_info
	.long  _s1pt3_info - _s1pt3_info_dsp
.text
	.align 2
_s1pt5_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1pt5_info:
Lc1vgw:
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziEase_valueIO1_info
	.long  _s1pt5_info - _s1pt5_info_dsp
.text
	.align 2
_s1pt7_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1pt7_info:
Lc1vgF:
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziEase_valueIO1_info
	.long  _s1pt7_info - _s1pt7_info_dsp
.text
	.align 2
_s1pt9_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1pt9_info:
Lc1vgO:
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziEase_valueIO1_info
	.long  _s1pt9_info - _s1pt9_info_dsp
.text
	.align 2
_s1ptb_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1ptb_info:
Lc1vgX:
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziEase_valueIO1_info
	.long  _s1ptb_info - _s1ptb_info_dsp
.text
	.align 2
_s1ptz_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1ptz_info)+248
	.long	2
	.long	65555
_s1ptz_info:
Lc1viz:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1viA
Lc1viB:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1viD
Lc1viC:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	movl %eax,64(%esp)
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -3(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 64(%esp),%eax
	movl L_base_GHCziFloat_divideDouble_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	addl $2,%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _CoreziEase_opLift_info
Lc1viD:
	movl $8,904(%ebx)
Lc1viA:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1ptz_info - _s1ptz_info_dsp
.text
	.align 2
_s1ptE_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1ptE_info)+248
	.long	2
	.long	65555
_s1ptE_info:
Lc1vj1:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1vj2
Lc1vj3:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vj5
Lc1vj4:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	movl %eax,64(%esp)
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -3(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 64(%esp),%eax
	movl L_base_GHCziFloat_divideDouble_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	addl $2,%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _CoreziEase_opLift_info
Lc1vj5:
	movl $8,904(%ebx)
Lc1vj2:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1ptE_info - _s1ptE_info_dsp
.text
	.align 2
_s1ptH_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_s1ptH_info:
Lc1vjh:
	call 1f
1:	popl	%eax
	addl $72,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1vjl
Lc1vjk:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_stg_sel_1_upd_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-68(%edi)
	movl %ecx,-56(%edi)
	movl 64(%esp),%ecx
	movl L_CoreziRenderziInternal_Scaled_con_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-52(%edi)
	movl %eax,-48(%edi)
	leal -68(%edi),%eax
	movl %eax,-44(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%ecx),%eax
	incl %eax
	movl %eax,-40(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,-36(%edi)
	leal -51(%edi),%eax
	movl %eax,-32(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%ecx),%eax
	incl %eax
	movl %eax,-28(%edi)
	movl L_CoreziRenderziInternal_Translated_con_info$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,-24(%edi)
	movl 76(%esp),%eax
	movl %eax,-20(%edi)
	leal -34(%edi),%eax
	movl %eax,-16(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%ecx),%eax
	incl %eax
	movl %eax,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,-8(%edi)
	leal -23(%edi),%eax
	movl %eax,-4(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%ecx),%eax
	incl %eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	jmp *(%ebp)
Lc1vjl:
	movl $72,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1ptH_info - _s1ptH_info_dsp
.text
	.align 2
_s1ptU_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1ptU_info:
Lc1vju:
	movl 3(%esi),%esi
	jmp *(%ebp)
	.long  _s1ptU_info - _s1ptU_info_dsp
.text
	.align 2
_s1ptY_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1ptY_info)+252
	.long	65539
	.long	2
	.long	65548
_s1ptY_info:
Lc1vlk:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1vlJ
Lc1vlK:
	addl $_c1vlh_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 7(%esi),%eax
	movl 3(%esi),%esi
	movl %eax,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1vlh_info
Lc1vli:
	jmp *(%esi)
Lc1vlJ:
	jmp *-8(%ebx)
	.long  _s1ptY_info - _s1ptY_info_dsp
.text
	.align 2
_c1vlh_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vlh_info)+252
	.long	1
	.long	65568
_c1vlh_info:
Lc1vlh:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1vln_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1vlh_info - _c1vlh_info_dsp
.text
	.align 2
_c1vln_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vln_info)+252
	.long	1
	.long	65568
_c1vln_info:
Lc1vln:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vlO
Lc1vlN:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1vlx_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 4(%ebp),%esi
	movl (%edi),%eax
	movl %eax,4(%ebp)
	testw $7,%si
	jne _c1vlx_info
Lc1vly:
	jmp *(%esi)
Lc1vlO:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1vln_info - _c1vln_info_dsp
.text
	.align 2
_c1vlx_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vlx_info)+252
	.long	65
	.long	65568
_c1vlx_info:
Lc1vlx:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vlS
Lc1vlR:
	movl 3(%esi),%ecx
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl %eax,%ecx
	addl $_c1vlI_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl L_CoreziFrontziInternal_endCachezuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1vlI_info
Lc1vlU:
	jmp *(%esi)
Lc1vlS:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1vlx_info - _c1vlx_info_dsp
.text
	.align 2
_c1vlI_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1vlI_info:
Lc1vlI:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
	addl $_c1vm3_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl 4(%ebp),%eax
	addl $8,%ebp
	movl 3(%esi),%edx
	movl %edx,64(%esp)
	movl 872(%ebx),%edx
	movl %ecx,76(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,100(%esp)
	movl 104(%edx),%eax
	movl %eax,112(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,124(%esp)
	movl 100(%esp),%ecx
	subl %eax,%ecx
	movl 112(%esp),%eax
	movl %ecx,136(%esp)
	movl 124(%esp),%ecx
	sbbl %ecx,%eax
	movl 136(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	movl 88(%esp),%ecx
	pushl %ecx
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L___app2$stub
	addl $12,%esp
	subl $8,%esp
	movl 156(%esp),%ecx
	pushl %ecx
	movl %eax,172(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,172(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,184(%esp)
	movl %eax,%ecx
	movl %edx,196(%esp)
	movl 184(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 172(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,208(%esp)
	movl 196(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 208(%esp),%ecx
	adcl %eax,%ecx
	movl 172(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 160(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1vlI_info - _c1vlI_info_dsp
.text
	.align 2
_c1vm3_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1vm3_info:
Lc1vm3:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1vm3_info - _c1vm3_info_dsp
.text
	.align 2
_s1puh_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1puh_info:
Lc1vmo:
	movl 3(%esi),%esi
	jmp *(%ebp)
	.long  _s1puh_info - _s1puh_info_dsp
.text
	.align 2
_s1pul_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_s1pul_info:
Lc1vmA:
	call 1f
1:	popl	%eax
	addl $28,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1vmE
Lc1vmD:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_CoreziRenderziInternal_WithCtx_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-24(%edi)
	movl %ecx,-20(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-16(%edi)
	movl 64(%esp),%ecx
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%ecx),%edx
	incl %edx
	movl %edx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-8(%edi)
	leal -23(%edi),%ecx
	movl %ecx,-4(%edi)
	movl %eax,(%edi)
	leal -6(%edi),%esi
	jmp *(%ebp)
Lc1vmE:
	movl $28,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pul_info - _s1pul_info_dsp
.text
	.align 2
_s1pvk_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1pvk_info:
Lc1vna:
	movl 3(%esi),%esi
	jmp *(%ebp)
	.long  _s1pvk_info - _s1pvk_info_dsp
.text
	.align 2
_s1pvm_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pvm_info)+256
	.long	65541
	.long	2
	.long	65548
_s1pvm_info:
Lc1vnd:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -20(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1vne
Lc1vnf:
	addl $_c1vmN_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1vmN_info
Lc1vmO:
	jmp *(%esi)
Lc1vne:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pvm_info - _s1pvm_info_dsp
.text
	.align 2
_c1vmN_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vmN_info)+256
	.long	2
	.long	65568
_c1vmN_info:
Lc1vmN:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1vmS_info-(1b)+0,%ecx
	movl %ecx,-8(%ebp)
	movl %esi,%ecx
	movl 3(%esi),%edx
	movl L_IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_nullValue_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %edx,-4(%ebp)
	movl %ecx,(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1vmS_info
Lc1vmT:
	jmp *(%esi)
	.long  _c1vmN_info - _c1vmN_info_dsp
.text
	.align 2
_c1vmS_info_dsp:
.text
	.align 2
	.long	68
	.long	32
_c1vmS_info:
Lc1vmS:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1vn0_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	addl $4,%ebp
	movl 3(%esi),%eax
	movl 872(%ebx),%edx
	movl %ecx,64(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,76(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,88(%esp)
	movl 104(%edx),%eax
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,112(%esp)
	movl 88(%esp),%ecx
	subl %eax,%ecx
	movl 100(%esp),%eax
	movl %ecx,124(%esp)
	movl 112(%esp),%ecx
	sbbl %ecx,%eax
	movl 124(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___eq$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1vmS_info - _c1vmS_info_dsp
.text
	.align 2
_c1vn0_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1vn0_info:
Lc1vn0:
	call 1f
1:	popl	%eax
	addl $28,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vnk
Lc1vnj:
	testl %esi,%esi
	jne Lc1vnm
Lc1vnp:
	movl %eax,%ecx
	addl $_s1pvk_info-(1b)+0,%ecx
	movl %ecx,-24(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-20(%edi)
	movl L_CoreziRenderziInternal_EmbedIO_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -23(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -15(%edi),%eax
	movl %eax,-4(%edi)
	movl 12(%ebp),%eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	addl $16,%ebp
	jmp *(%ebp)
Lc1vnk:
	movl $28,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1vnm:
	addl $-28,%edi
	movl 8(%ebp),%esi
	addl $16,%ebp
	jmp *(%ebp)
	.long  _c1vn0_info - _c1vn0_info_dsp
.text
	.align 2
_s1pv7_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pv7_info)+260
	.long	65539
	.long	8
	.long	65545
_s1pv7_info:
Lc1vnK:
	call 1f
1:	popl	%eax
	leal -68(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1voW
Lc1voX:
	addl $_c1vnH_info-(1b)+0,%eax
	movl %eax,-32(%ebp)
	movl 7(%esi),%eax
	movl 11(%esi),%ecx
	movl 15(%esi),%edx
	movl %eax,64(%esp)
	movl 19(%esi),%eax
	movl %ecx,76(%esp)
	movl 23(%esi),%ecx
	movl %edx,88(%esp)
	movl 27(%esi),%edx
	movl %eax,100(%esp)
	movl 31(%esi),%eax
	movl 3(%esi),%esi
	movl %ecx,112(%esp)
	movl 64(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-32,%ebp
	testw $7,%si
	jne _c1vnH_info
Lc1vnI:
	jmp *(%esi)
Lc1voW:
	jmp *-8(%ebx)
	.long  _s1pv7_info - _s1pv7_info_dsp
.text
	.align 2
_c1vnH_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vnH_info)+260
	.long	7
	.long	65568
_c1vnH_info:
Lc1vnH:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1vnN_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1vnH_info - _c1vnH_info_dsp
.text
	.align 2
_c1vnN_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vnN_info)+260
	.long	7
	.long	65568
_c1vnN_info:
Lc1vnN:
	call 1f
1:	popl	%eax
	addl $_c1vnR_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _c1vnR_info
Lc1vnS:
	jmp *(%esi)
	.long  _c1vnN_info - _c1vnN_info_dsp
.text
	.align 2
_c1vnR_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vnR_info)+260
	.long	71
	.long	65568
_c1vnR_info:
Lc1vnR:
	call 1f
1:	popl	%eax
	addl $_c1vnW_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 8(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1vpo
Lc1vnX:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1vpo:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1vnW_info
	.long  _c1vnR_info - _c1vnR_info_dsp
.text
	.align 2
_c1vnW_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vnW_info)+260
	.long	1994
	.long	65568
_c1vnW_info:
Lc1vnW:
	call 1f
1:	popl	%eax
	addl $_c1vo1_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 24(%ebp),%esi
#	gstsd %fake0,20(%ebp)
	fstl 20(%ebp)
	testw $7,%si
	jne Lu1vpp
Lc1vo2:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1vpp:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1vo1_info
	.long  _c1vnW_info - _c1vnW_info_dsp
.text
	.align 2
_c1vo1_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vo1_info)+260
	.long	4042
	.long	65568
_c1vo1_info:
Lc1vo1:
	call 1f
1:	popl	%eax
	addl $_c1vo6_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 28(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1vpq
Lc1vo7:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1vpq:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1vo6_info
	.long  _c1vo1_info - _c1vo1_info_dsp
.text
	.align 2
_c1vo6_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vo6_info)+260
	.long	65485
	.long	65568
_c1vo6_info:
Lc1vo6:
	call 1f
1:	popl	%eax
	addl $_c1vob_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 44(%ebp),%esi
#	gstsd %fake0,40(%ebp)
	fstl 40(%ebp)
	testw $7,%si
	jne Lu1vpr
Lc1voc:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1vpr:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1vob_info
	.long  _c1vo6_info - _c1vo6_info_dsp
.text
	.align 2
_c1vob_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vob_info)+260
	.long	131021
	.long	65568
_c1vob_info:
Lc1vob:
	call 1f
1:	popl	%eax
	addl $_c1vog_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 48(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1vps
Lc1voh:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1vps:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1vog_info
	.long  _c1vob_info - _c1vob_info_dsp
.text
	.align 2
_c1vog_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vog_info)+260
	.long	2097104
	.long	65568
_c1vog_info:
Lc1vog:
	call 1f
1:	popl	%eax
	addl $_c1vol_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 64(%ebp),%esi
#	gstsd %fake0,60(%ebp)
	fstl 60(%ebp)
	testw $7,%si
	jne Lu1vpt
Lc1vom:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1vpt:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1vol_info
	.long  _c1vog_info - _c1vog_info_dsp
.text
	.align 2
_c1vol_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vol_info)+260
	.long	4194256
	.long	65568
_c1vol_info:
Lc1vol:
	call 1f
1:	popl	%eax
	addl $184,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vp8
Lc1vp7:
	movl 3(%esi),%ecx
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-180(%edi)
	movl 40(%ebp),%edx
	movl %edx,-176(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-172(%edi)
	leal -179(%edi),%edx
	movl %edx,-168(%edi)
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,-164(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-160(%edi)
#	gldsd 28(%ebp),%fake0
	fldl 28(%ebp) ; fstp %st(1)
#	gstsd %fake0,-156(%edi)
	fstl -156(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-148(%edi)
	leal -159(%edi),%edx
	movl %edx,-144(%edi)
	leal -170(%edi),%edx
	movl %edx,-140(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-136(%edi)
#	gldsd 44(%ebp),%fake0
	fldl 44(%ebp) ; fstp %st(1)
#	gstsd %fake0,-132(%edi)
	fstl -132(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-124(%edi)
	leal -135(%edi),%edx
	movl %edx,-120(%edi)
	leal -146(%edi),%edx
	movl %edx,-116(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-112(%edi)
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gstsd %fake0,-108(%edi)
	fstl -108(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-100(%edi)
	leal -111(%edi),%edx
	movl %edx,-96(%edi)
	leal -122(%edi),%edx
	movl %edx,-92(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-88(%edi)
#	gldsd 52(%ebp),%fake0
	fldl 52(%ebp) ; fstp %st(1)
#	gstsd %fake0,-84(%edi)
	fstl -84(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-76(%edi)
	leal -87(%edi),%edx
	movl %edx,-72(%edi)
	leal -98(%edi),%edx
	movl %edx,-68(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-64(%edi)
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gstsd %fake0,-60(%edi)
	fstl -60(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-52(%edi)
	leal -63(%edi),%edx
	movl %edx,-48(%edi)
	leal -74(%edi),%edx
	movl %edx,-44(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-40(%edi)
#	gldsd 60(%ebp),%fake0
	fldl 60(%ebp) ; fstp %st(1)
#	gstsd %fake0,-36(%edi)
	fstl -36(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-28(%edi)
	leal -39(%edi),%edx
	movl %edx,-24(%edi)
	leal -50(%edi),%edx
	movl %edx,-20(%edi)
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-16(%edi)
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	leal -15(%edi),%ecx
	movl %ecx,-4(%edi)
	leal -26(%edi),%ecx
	movl %ecx,(%edi)
	movl %eax,%ecx
	addl $_c1voL_info-(1b)+0,%ecx
	movl %ecx,60(%ebp)
	movl L_CoreziFrontziInternal_beginCachezuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl -3(%edi),%eax
	movl %eax,64(%ebp)
	addl $60,%ebp
	testw $7,%si
	jne Lu1vpu
Lc1voM:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1vp8:
	movl $184,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1vpu:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1voL_info
	.long  _c1vol_info - _c1vol_info_dsp
.text
	.align 2
_c1voL_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_c1voL_info:
Lc1voL:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1voT_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	addl $4,%ebp
	movl 3(%esi),%eax
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___apply$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1voL_info - _c1voL_info_dsp
.text
	.align 2
_c1voT_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1voT_info:
Lc1voT:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vpd
Lc1vpc:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1vpd:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1voT_info - _c1voT_info_dsp
.text
	.align 2
_s1pvp_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pvp_info)+252
	.long	65541
	.long	10
	.long	458761
_s1pvp_info:
Lc1vpx:
	call 1f
1:	popl	%eax
	addl $192,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1vpB
Lc1vpA:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 11(%esi),%edx
	movl %eax,88(%esp)
	movl 15(%esi),%eax
	movl %edx,100(%esp)
	movl 19(%esi),%edx
	movl %eax,112(%esp)
	movl 23(%esi),%eax
	movl %edx,124(%esp)
	movl 27(%esi),%edx
	movl %eax,136(%esp)
	movl 31(%esi),%eax
	movl %edx,148(%esp)
	movl 35(%esi),%edx
	movl %eax,160(%esp)
	movl 39(%esi),%eax
	movl %edx,172(%esp)
	movl 64(%esp),%edx
	addl $_s1ptY_info-(1b)+0,%edx
	movl %edx,-188(%edi)
	movl 76(%esp),%edx
	movl %edx,-184(%edi)
	movl %ecx,-180(%edi)
	movl 64(%esp),%edx
	movl L_CoreziRenderziInternal_EmbedIO_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-176(%edi)
	leal -187(%edi),%edx
	movl %edx,-172(%edi)
	movl 64(%esp),%edx
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-168(%edi)
	leal -175(%edi),%edx
	movl %edx,-164(%edi)
	movl 64(%esp),%edx
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%edx),%edx
	incl %edx
	movl %edx,-160(%edi)
	movl 64(%esp),%edx
	addl $_s1puh_info-(1b)+0,%edx
	movl %edx,-156(%edi)
	leal -166(%edi),%edx
	movl %edx,-152(%edi)
	movl 64(%esp),%edx
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-148(%edi)
	leal -155(%edi),%edx
	movl %edx,-144(%edi)
	movl 64(%esp),%edx
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-140(%edi)
	movl 64(%esp),%edx
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%edx),%edx
	incl %edx
	movl %edx,-136(%edi)
	leal -147(%edi),%edx
	movl %edx,-132(%edi)
	movl 64(%esp),%edx
	addl $_s1pul_info-(1b)+0,%edx
	movl %edx,-128(%edi)
	movl 88(%esp),%edx
	movl %edx,-124(%edi)
	leal -138(%edi),%edx
	movl %edx,-120(%edi)
	movl 64(%esp),%edx
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-116(%edi)
	leal -127(%edi),%edx
	movl %edx,-112(%edi)
	movl 64(%esp),%edx
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-108(%edi)
	movl 64(%esp),%edx
	addl $_r1mSF_closure-(1b)+1,%edx
	movl %edx,-104(%edi)
	leal -115(%edi),%edx
	movl %edx,-100(%edi)
	movl 64(%esp),%edx
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-96(%edi)
	leal -106(%edi),%edx
	movl %edx,-92(%edi)
	movl %eax,-88(%edi)
	movl 64(%esp),%eax
	movl %eax,%edx
	addl $_s1pvm_info-(1b)+0,%edx
	movl %edx,-84(%edi)
	movl 172(%esp),%edx
	movl %edx,-80(%edi)
	leal -94(%edi),%edx
	movl %edx,-76(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-72(%edi)
	leal -83(%edi),%edx
	movl %edx,-68(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-64(%edi)
	movl %eax,%edx
	addl $_r1mSE_closure-(1b)+1,%edx
	movl %edx,-60(%edi)
	leal -71(%edi),%edx
	movl %edx,-56(%edi)
	movl %eax,%edx
	addl $_s1pv7_info-(1b)+0,%edx
	movl %edx,-52(%edi)
	movl 76(%esp),%edx
	movl %edx,-48(%edi)
	movl 100(%esp),%edx
	movl %edx,-44(%edi)
	movl 112(%esp),%edx
	movl %edx,-40(%edi)
	movl 124(%esp),%edx
	movl %edx,-36(%edi)
	movl 136(%esp),%edx
	movl %edx,-32(%edi)
	movl 148(%esp),%edx
	movl %edx,-28(%edi)
	movl 160(%esp),%edx
	movl %edx,-24(%edi)
	movl %ecx,-20(%edi)
	movl L_CoreziRenderziInternal_EmbedIO_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -51(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -15(%edi),%eax
	movl %eax,-4(%edi)
	leal -62(%edi),%eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	jmp *(%ebp)
Lc1vpB:
	movl $192,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pvp_info - _s1pvp_info_dsp
.text
	.align 2
_s1pvu_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pvu_info)+248
	.long	65541
	.long	12
	.long	983049
_s1pvu_info:
Lc1vpJ:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -52(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1vpK
Lc1vpL:
	addl $_c1viQ_info-(1b)+0,%eax
	movl %eax,-52(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %eax,88(%esp)
	movl 19(%esi),%eax
	movl %edx,100(%esp)
	movl 23(%esi),%edx
	movl %eax,112(%esp)
	movl 27(%esi),%eax
	movl %edx,124(%esp)
	movl 31(%esi),%edx
	movl %eax,136(%esp)
	movl 35(%esi),%eax
	movl %edx,148(%esp)
	movl 39(%esi),%edx
	movl %eax,160(%esp)
	movl 43(%esi),%eax
	movl %edx,172(%esp)
	movl 47(%esi),%edx
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-48(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-44(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-40(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-36(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-32(%ebp)
	movl 124(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 136(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 148(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 160(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 172(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-52,%ebp
	testw $7,%si
	jne _c1viQ_info
Lc1viR:
	jmp *(%esi)
Lc1vpK:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pvu_info - _s1pvu_info_dsp
.text
	.align 2
_c1viQ_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1viQ_info)+248
	.long	12
	.long	983072
_c1viQ_info:
Lc1viQ:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1vpH
Lc1vpI:
	movl L_CoreziRenderziInternal_zdswhen1_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $52,%ebp
	jmp *(%ebp)
Lc1vpH:
	addl $196,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vpV
Lc1vpU:
	movl 2(%esi),%ecx
	movl %eax,%edx
	addl $_s1ptE_info-(1b)+0,%edx
	movl %edx,-192(%edi)
	movl 40(%ebp),%edx
	movl %edx,-180(%edi)
	movl %ecx,-176(%edi)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-172(%edi)
	movl 48(%ebp),%edx
	movl %edx,-168(%edi)
	leal -192(%edi),%edx
	movl %edx,-164(%edi)
	movl %eax,%edx
	addl $_s1ptH_info-(1b)+0,%edx
	movl %edx,-160(%edi)
	movl 28(%ebp),%edx
	movl %edx,-156(%edi)
	leal -171(%edi),%edx
	movl %edx,-152(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-148(%edi)
	leal -159(%edi),%edx
	movl %edx,-144(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-140(%edi)
	movl %eax,%edx
	addl $_r1mSB_closure-(1b)+1,%edx
	movl %edx,-136(%edi)
	leal -147(%edi),%edx
	movl %edx,-132(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-128(%edi)
	movl 16(%ebp),%edx
	movl %edx,-124(%edi)
	leal -138(%edi),%edx
	movl %edx,-120(%edi)
	movl %eax,%edx
	addl $_s1ptU_info-(1b)+0,%edx
	movl %edx,-116(%edi)
	leal -126(%edi),%edx
	movl %edx,-112(%edi)
	movl %edx,64(%esp)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-108(%edi)
	leal -115(%edi),%edx
	movl %edx,-104(%edi)
	movl %eax,%edx
	addl $_s1pvp_info-(1b)+0,%edx
	movl %edx,-100(%edi)
	movl 4(%ebp),%edx
	movl %edx,-96(%edi)
	movl 8(%ebp),%edx
	movl %edx,-92(%edi)
	movl %eax,76(%esp)
	movl 20(%ebp),%eax
	movl %eax,-88(%edi)
	movl 24(%ebp),%eax
	movl %eax,-84(%edi)
	movl 32(%ebp),%eax
	movl %eax,-80(%edi)
	movl 36(%ebp),%eax
	movl %eax,-76(%edi)
	movl 44(%ebp),%eax
	movl %eax,-72(%edi)
	movl %ecx,-68(%edi)
	movl 64(%esp),%eax
	movl %eax,-64(%edi)
	leal -107(%edi),%eax
	movl %eax,-60(%edi)
	movl 76(%esp),%eax
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-56(%edi)
	leal -99(%edi),%ecx
	movl %ecx,-52(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-48(%edi)
	movl %eax,%ecx
	addl $_r1mSC_closure-(1b)+1,%ecx
	movl %ecx,-44(%edi)
	leal -55(%edi),%ecx
	movl %ecx,-40(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-36(%edi)
	movl 12(%ebp),%ecx
	movl %ecx,-32(%edi)
	leal -46(%edi),%ecx
	movl %ecx,-28(%edi)
	movl L_CoreziRenderziInternal_Switch_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-24(%edi)
	leal -34(%edi),%ecx
	movl %ecx,-20(%edi)
	movl %edx,-16(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	leal -23(%edi),%ecx
	movl %ecx,-4(%edi)
	movl L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	addl $52,%ebp
	jmp *(%ebp)
Lc1vpV:
	movl $196,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1viQ_info - _c1viQ_info_dsp
.text
	.align 2
_s1pvx_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pvx_info)+248
	.long	65541
	.long	12
	.long	983049
_s1pvx_info:
Lc1vq4:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -52(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1vq5
Lc1vq6:
	addl $_c1vio_info-(1b)+0,%eax
	movl %eax,-52(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %eax,88(%esp)
	movl 19(%esi),%eax
	movl %edx,100(%esp)
	movl 23(%esi),%edx
	movl %eax,112(%esp)
	movl 27(%esi),%eax
	movl %edx,124(%esp)
	movl 31(%esi),%edx
	movl %eax,136(%esp)
	movl 35(%esi),%eax
	movl %edx,148(%esp)
	movl 39(%esi),%edx
	movl %eax,160(%esp)
	movl 43(%esi),%eax
	movl %edx,172(%esp)
	movl 47(%esi),%edx
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-48(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-44(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-40(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-36(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-32(%ebp)
	movl 124(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 136(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 148(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 160(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 172(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-52,%ebp
	testw $7,%si
	jne _c1vio_info
Lc1vip:
	jmp *(%esi)
Lc1vq5:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pvx_info - _s1pvx_info_dsp
.text
	.align 2
_c1vio_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vio_info)+248
	.long	12
	.long	983072
_c1vio_info:
Lc1vio:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1vq2
Lc1vq3:
	movl L_CoreziRenderziInternal_zdswhen1_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $52,%ebp
	jmp *(%ebp)
Lc1vq2:
	addl $104,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vqe
Lc1vqd:
	movl 2(%esi),%ecx
	movl %eax,%edx
	addl $_s1ptz_info-(1b)+0,%edx
	movl %edx,-100(%edi)
	movl 40(%ebp),%edx
	movl %edx,-88(%edi)
	movl %ecx,-84(%edi)
	movl %eax,%edx
	addl $_s1pvu_info-(1b)+0,%edx
	movl %edx,-80(%edi)
	movl 4(%ebp),%edx
	movl %edx,-76(%edi)
	movl 8(%ebp),%edx
	movl %edx,-72(%edi)
	movl 12(%ebp),%edx
	movl %edx,-68(%edi)
	movl 16(%ebp),%edx
	movl %edx,-64(%edi)
	movl 24(%ebp),%edx
	movl %edx,-60(%edi)
	movl 28(%ebp),%edx
	movl %edx,-56(%edi)
	movl 32(%ebp),%edx
	movl %edx,-52(%edi)
	movl 36(%ebp),%edx
	movl %edx,-48(%edi)
	movl 44(%ebp),%edx
	movl %edx,-44(%edi)
	movl 48(%ebp),%edx
	movl %edx,-40(%edi)
	movl %ecx,-36(%edi)
	leal -100(%edi),%ecx
	movl %ecx,-32(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	leal -79(%edi),%ecx
	movl %ecx,-24(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-20(%edi)
	movl %eax,%ecx
	addl $_r1mSD_closure-(1b)+1,%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 20(%ebp),%eax
	movl %eax,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	addl $52,%ebp
	jmp *(%ebp)
Lc1vqe:
	movl $104,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1vio_info - _c1vio_info_dsp
.text
	.align 2
_s1pvA_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pvA_info)+248
	.long	65541
	.long	11
	.long	983049
_s1pvA_info:
Lc1vqn:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -48(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1vqo
Lc1vqp:
	addl $_c1vic_info-(1b)+0,%eax
	movl %eax,-48(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %eax,88(%esp)
	movl 19(%esi),%eax
	movl %edx,100(%esp)
	movl 23(%esi),%edx
	movl %eax,112(%esp)
	movl 27(%esi),%eax
	movl %edx,124(%esp)
	movl 31(%esi),%edx
	movl %eax,136(%esp)
	movl 35(%esi),%eax
	movl %edx,148(%esp)
	movl 39(%esi),%edx
	movl %eax,160(%esp)
	movl 43(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-44(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-40(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-36(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-32(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 124(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 136(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 148(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 160(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-48,%ebp
	testw $7,%si
	jne _c1vic_info
Lc1vid:
	jmp *(%esi)
Lc1vqo:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pvA_info - _s1pvA_info_dsp
.text
	.align 2
_c1vic_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vic_info)+248
	.long	11
	.long	983072
_c1vic_info:
Lc1vic:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1vql
Lc1vqm:
	movl L_CoreziRenderziInternal_zdswhen1_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $48,%ebp
	jmp *(%ebp)
Lc1vql:
	addl $92,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vqx
Lc1vqw:
	movl 2(%esi),%ecx
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-88(%edi)
	movl %ecx,-84(%edi)
	movl %eax,%edx
	addl $_s1pvx_info-(1b)+0,%edx
	movl %edx,-80(%edi)
	movl 4(%ebp),%edx
	movl %edx,-76(%edi)
	movl 8(%ebp),%edx
	movl %edx,-72(%edi)
	movl 12(%ebp),%edx
	movl %edx,-68(%edi)
	movl 16(%ebp),%edx
	movl %edx,-64(%edi)
	movl 20(%ebp),%edx
	movl %edx,-60(%edi)
	movl 28(%ebp),%edx
	movl %edx,-56(%edi)
	movl 32(%ebp),%edx
	movl %edx,-52(%edi)
	movl 36(%ebp),%edx
	movl %edx,-48(%edi)
	movl 40(%ebp),%edx
	movl %edx,-44(%edi)
	movl 44(%ebp),%edx
	movl %edx,-40(%edi)
	movl %ecx,-36(%edi)
	leal -87(%edi),%ecx
	movl %ecx,-32(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	leal -79(%edi),%ecx
	movl %ecx,-24(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-20(%edi)
	movl %eax,%ecx
	addl $_r1mSD_closure-(1b)+1,%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 24(%ebp),%eax
	movl %eax,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	addl $48,%ebp
	jmp *(%ebp)
Lc1vqx:
	movl $92,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1vic_info - _c1vic_info_dsp
.text
	.align 2
_s1pvD_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pvD_info)+248
	.long	65541
	.long	10
	.long	983049
_s1pvD_info:
Lc1vqG:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -44(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1vqH
Lc1vqI:
	addl $_c1vi0_info-(1b)+0,%eax
	movl %eax,-44(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %eax,88(%esp)
	movl 19(%esi),%eax
	movl %edx,100(%esp)
	movl 23(%esi),%edx
	movl %eax,112(%esp)
	movl 27(%esi),%eax
	movl %edx,124(%esp)
	movl 31(%esi),%edx
	movl %eax,136(%esp)
	movl 35(%esi),%eax
	movl %edx,148(%esp)
	movl 39(%esi),%edx
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-40(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-36(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-32(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 124(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 136(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 148(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-44,%ebp
	testw $7,%si
	jne _c1vi0_info
Lc1vi1:
	jmp *(%esi)
Lc1vqH:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pvD_info - _s1pvD_info_dsp
.text
	.align 2
_c1vi0_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vi0_info)+248
	.long	10
	.long	983072
_c1vi0_info:
Lc1vi0:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1vqE
Lc1vqF:
	movl L_CoreziRenderziInternal_zdswhen1_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $44,%ebp
	jmp *(%ebp)
Lc1vqE:
	addl $88,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vqQ
Lc1vqP:
	movl 2(%esi),%ecx
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-84(%edi)
	movl %ecx,-80(%edi)
	movl %eax,%edx
	addl $_s1pvA_info-(1b)+0,%edx
	movl %edx,-76(%edi)
	movl 4(%ebp),%edx
	movl %edx,-72(%edi)
	movl 8(%ebp),%edx
	movl %edx,-68(%edi)
	movl 12(%ebp),%edx
	movl %edx,-64(%edi)
	movl 16(%ebp),%edx
	movl %edx,-60(%edi)
	movl 20(%ebp),%edx
	movl %edx,-56(%edi)
	movl 24(%ebp),%edx
	movl %edx,-52(%edi)
	movl 32(%ebp),%edx
	movl %edx,-48(%edi)
	movl 36(%ebp),%edx
	movl %edx,-44(%edi)
	movl 40(%ebp),%edx
	movl %edx,-40(%edi)
	movl %ecx,-36(%edi)
	leal -83(%edi),%ecx
	movl %ecx,-32(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	leal -75(%edi),%ecx
	movl %ecx,-24(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-20(%edi)
	movl %eax,%ecx
	addl $_r1mSD_closure-(1b)+1,%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 28(%ebp),%eax
	movl %eax,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	addl $44,%ebp
	jmp *(%ebp)
Lc1vqQ:
	movl $88,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1vi0_info - _c1vi0_info_dsp
.text
	.align 2
_s1pvG_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pvG_info)+248
	.long	65541
	.long	10
	.long	983049
_s1pvG_info:
Lc1vqZ:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -44(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1vr0
Lc1vr1:
	addl $_c1vhN_info-(1b)+0,%eax
	movl %eax,-44(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %eax,88(%esp)
	movl 19(%esi),%eax
	movl %edx,100(%esp)
	movl 23(%esi),%edx
	movl %eax,112(%esp)
	movl 27(%esi),%eax
	movl %edx,124(%esp)
	movl 31(%esi),%edx
	movl %eax,136(%esp)
	movl 35(%esi),%eax
	movl %edx,148(%esp)
	movl 39(%esi),%edx
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-40(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-36(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-32(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 124(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 136(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 148(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-44,%ebp
	testw $7,%si
	jne _c1vhN_info
Lc1vhO:
	jmp *(%esi)
Lc1vr0:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pvG_info - _s1pvG_info_dsp
.text
	.align 2
_c1vhN_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vhN_info)+248
	.long	10
	.long	983072
_c1vhN_info:
Lc1vhN:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1vqX
Lc1vqY:
	movl L_CoreziRenderziInternal_zdswhen1_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $44,%ebp
	jmp *(%ebp)
Lc1vqX:
	addl $96,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vr9
Lc1vr8:
	movl 2(%esi),%ecx
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-92(%edi)
	movl %ecx,-88(%edi)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-84(%edi)
	movl 40(%ebp),%edx
	movl %edx,-80(%edi)
	leal -91(%edi),%edx
	movl %edx,-76(%edi)
	movl %eax,%edx
	addl $_s1pvD_info-(1b)+0,%edx
	movl %edx,-72(%edi)
	movl 4(%ebp),%edx
	movl %edx,-68(%edi)
	movl 8(%ebp),%edx
	movl %edx,-64(%edi)
	movl 12(%ebp),%edx
	movl %edx,-60(%edi)
	movl 16(%ebp),%edx
	movl %edx,-56(%edi)
	movl 20(%ebp),%edx
	movl %edx,-52(%edi)
	movl 24(%ebp),%edx
	movl %edx,-48(%edi)
	movl 28(%ebp),%edx
	movl %edx,-44(%edi)
	movl 36(%ebp),%edx
	movl %edx,-40(%edi)
	movl %ecx,-36(%edi)
	leal -83(%edi),%ecx
	movl %ecx,-32(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	leal -71(%edi),%ecx
	movl %ecx,-24(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-20(%edi)
	movl %eax,%ecx
	addl $_r1mSD_closure-(1b)+1,%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 32(%ebp),%eax
	movl %eax,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	addl $44,%ebp
	jmp *(%ebp)
Lc1vr9:
	movl $96,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1vhN_info - _c1vhN_info_dsp
.text
	.align 2
_s1pvJ_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pvJ_info)+248
	.long	65541
	.long	9
	.long	983049
_s1pvJ_info:
Lc1vri:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -40(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1vrj
Lc1vrk:
	addl $_c1vhB_info-(1b)+0,%eax
	movl %eax,-40(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %eax,88(%esp)
	movl 19(%esi),%eax
	movl %edx,100(%esp)
	movl 23(%esi),%edx
	movl %eax,112(%esp)
	movl 27(%esi),%eax
	movl %edx,124(%esp)
	movl 31(%esi),%edx
	movl %eax,136(%esp)
	movl 35(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-36(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-32(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 124(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 136(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-40,%ebp
	testw $7,%si
	jne _c1vhB_info
Lc1vhC:
	jmp *(%esi)
Lc1vrj:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1pvJ_info - _s1pvJ_info_dsp
.text
	.align 2
_c1vhB_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vhB_info)+248
	.long	9
	.long	983072
_c1vhB_info:
Lc1vhB:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1vrg
Lc1vrh:
	movl L_CoreziRenderziInternal_zdswhen1_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $40,%ebp
	jmp *(%ebp)
Lc1vrg:
	addl $84,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vrs
Lc1vrr:
	movl 2(%esi),%ecx
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-80(%edi)
	movl %ecx,-76(%edi)
	movl %eax,%edx
	addl $_s1pvG_info-(1b)+0,%edx
	movl %edx,-72(%edi)
	movl 4(%ebp),%edx
	movl %edx,-68(%edi)
	movl 8(%ebp),%edx
	movl %edx,-64(%edi)
	movl 12(%ebp),%edx
	movl %edx,-60(%edi)
	movl 16(%ebp),%edx
	movl %edx,-56(%edi)
	movl 20(%ebp),%edx
	movl %edx,-52(%edi)
	movl 24(%ebp),%edx
	movl %edx,-48(%edi)
	movl 28(%ebp),%edx
	movl %edx,-44(%edi)
	movl 32(%ebp),%edx
	movl %edx,-40(%edi)
	movl %ecx,-36(%edi)
	leal -79(%edi),%ecx
	movl %ecx,-32(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	leal -71(%edi),%ecx
	movl %ecx,-24(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-20(%edi)
	movl %eax,%ecx
	addl $_r1mSD_closure-(1b)+1,%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 36(%ebp),%eax
	movl %eax,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	addl $40,%ebp
	jmp *(%ebp)
Lc1vrs:
	movl $84,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1vhB_info - _c1vhB_info_dsp
.text
	.align 2
_s1ptd_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1ptd_info:
Lc1vrB:
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziEase_valueIO1_info
	.long  _s1ptd_info - _s1ptd_info_dsp
.text
	.align 2
_CoreziRenderziInternal_zdwcache_info_dsp:
.text
	.align 2
	.long	_CoreziRenderziInternal_zdwcache_slow-(_CoreziRenderziInternal_zdwcache_info)+0
	.long	10
	.long	_S1qJo_srt-(_CoreziRenderziInternal_zdwcache_info)+240
	.long	655360
	.long	0
	.long	8323087
.globl _CoreziRenderziInternal_zdwcache_info
_CoreziRenderziInternal_zdwcache_info:
Lc1vrG:
	call 1f
1:	popl	%eax
	addl $212,%edi
	movl 40(%ebx),%ecx
	movl 32(%ebx),%edx
	movl %eax,64(%esp)
	movl 24(%ebx),%eax
	movl %eax,76(%esp)
	movl 16(%ebx),%eax
	movl %eax,88(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1vrK
Lc1vrJ:
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-208(%edi)
	movl 100(%esp),%eax
	movl %eax,-196(%edi)
	movl 12(%ebp),%eax
	movl %eax,-192(%edi)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_EmbedIO_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-188(%edi)
	leal -208(%edi),%eax
	movl %eax,-184(%edi)
	movl 64(%esp),%eax
	addl $_s1psJ_info-(1b)+0,%eax
	movl %eax,-180(%edi)
	movl 88(%esp),%eax
	movl %eax,-176(%edi)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_EmbedIO_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-172(%edi)
	leal -179(%edi),%eax
	movl %eax,-168(%edi)
	movl 64(%esp),%eax
	addl $_s1pt3_info-(1b)+0,%eax
	movl %eax,-164(%edi)
	movl 8(%ebp),%eax
	movl %eax,-160(%edi)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_EmbedIO_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-156(%edi)
	leal -163(%edi),%eax
	movl %eax,-152(%edi)
	movl 64(%esp),%eax
	addl $_s1pt5_info-(1b)+0,%eax
	movl %eax,-148(%edi)
	movl 4(%ebp),%eax
	movl %eax,-144(%edi)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_EmbedIO_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-140(%edi)
	leal -147(%edi),%eax
	movl %eax,-136(%edi)
	movl 64(%esp),%eax
	addl $_s1pt7_info-(1b)+0,%eax
	movl %eax,-132(%edi)
	movl (%ebp),%eax
	movl %eax,-128(%edi)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_EmbedIO_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-124(%edi)
	leal -131(%edi),%eax
	movl %eax,-120(%edi)
	movl 64(%esp),%eax
	addl $_s1pt9_info-(1b)+0,%eax
	movl %eax,-116(%edi)
	movl %ecx,-112(%edi)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_EmbedIO_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-108(%edi)
	leal -115(%edi),%ecx
	movl %ecx,-104(%edi)
	movl %eax,%ecx
	addl $_s1ptb_info-(1b)+0,%ecx
	movl %ecx,-100(%edi)
	movl %edx,-96(%edi)
	movl L_CoreziRenderziInternal_EmbedIO_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-92(%edi)
	leal -99(%edi),%ecx
	movl %ecx,-88(%edi)
	movl %eax,%ecx
	addl $_s1pvJ_info-(1b)+0,%ecx
	movl %ecx,-84(%edi)
	movl 88(%esp),%ecx
	movl %ecx,-80(%edi)
	movl 16(%ebp),%ecx
	movl %ecx,-76(%edi)
	leal -187(%edi),%ecx
	movl %ecx,-72(%edi)
	leal -171(%edi),%ecx
	movl %ecx,-68(%edi)
	leal -155(%edi),%ecx
	movl %ecx,-64(%edi)
	leal -139(%edi),%ecx
	movl %ecx,-60(%edi)
	leal -123(%edi),%ecx
	movl %ecx,-56(%edi)
	leal -107(%edi),%ecx
	movl %ecx,-52(%edi)
	leal -91(%edi),%ecx
	movl %ecx,-48(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-44(%edi)
	leal -83(%edi),%ecx
	movl %ecx,-40(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-36(%edi)
	movl %eax,%ecx
	addl $_r1mSD_closure-(1b)+1,%ecx
	movl %ecx,-32(%edi)
	leal -43(%edi),%ecx
	movl %ecx,-28(%edi)
	movl %eax,%ecx
	addl $_s1ptd_info-(1b)+0,%ecx
	movl %ecx,-24(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-20(%edi)
	movl L_CoreziRenderziInternal_EmbedIO_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -23(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -15(%edi),%eax
	movl %eax,-4(%edi)
	leal -34(%edi),%eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	addl $20,%ebp
	jmp *(%ebp)
Lc1vrK:
	movl $212,904(%ebx)
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_zdwcache_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl 100(%esp),%eax
	movl %eax,-20(%ebp)
	movl 88(%esp),%eax
	movl %eax,-16(%ebp)
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-20,%ebp
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_zdwcache_info - _CoreziRenderziInternal_zdwcache_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_cache_closure
_CoreziRenderziInternal_cache_closure:
	.long	_CoreziRenderziInternal_cache_info
	.long	0
.text
	.align 2
.globl _CoreziRenderziInternal_cache_slow
_CoreziRenderziInternal_cache_slow:
Lc1vCT:
	movl 16(%ebp),%eax
	movl %eax,40(%ebx)
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl (%ebp),%eax
	movl %eax,8(%ebx)
	addl $20,%ebp
	jmp _CoreziRenderziInternal_cache_info
.text
	.align 2
_CoreziRenderziInternal_cache_info_dsp:
.text
	.align 2
	.long	_CoreziRenderziInternal_cache_slow-(_CoreziRenderziInternal_cache_info)+0
	.long	7
	.long	_S1qJo_srt-(_CoreziRenderziInternal_cache_info)+264
	.long	458752
	.long	0
	.long	196623
.globl _CoreziRenderziInternal_cache_info
_CoreziRenderziInternal_cache_info:
Lc1vD0:
	call 1f
1:	popl	%eax
	movl 40(%ebx),%ecx
	movl 32(%ebx),%edx
	movl %eax,64(%esp)
	movl 24(%ebx),%eax
	movl %eax,76(%esp)
	movl 16(%ebx),%eax
	movl %eax,88(%esp)
	movl 8(%ebx),%eax
	movl %eax,100(%esp)
	leal -28(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1vD9
Lc1vDa:
	movl 64(%esp),%eax
	addl $_c1vCX_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 76(%esp),%eax
	movl %eax,%esi
	movl 100(%esp),%eax
	movl %eax,-16(%ebp)
	movl 88(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _c1vCX_info
Lc1vCY:
	jmp *(%esi)
Lc1vD9:
	movl 64(%esp),%eax
	movl L_CoreziRenderziInternal_cache_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl 100(%esp),%eax
	movl %eax,-20(%ebp)
	movl 88(%esp),%eax
	movl %eax,-16(%ebp)
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-20,%ebp
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_cache_info - _CoreziRenderziInternal_cache_info_dsp
.text
	.align 2
_c1vCX_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vCX_info)+264
	.long	6
	.long	65568
_c1vCX_info:
Lc1vCX:
	call 1f
1:	popl	%eax
	addl $_c1vD3_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl 12(%ebp),%esi
	movl %ecx,(%ebp)
	movl %eax,12(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1vD3_info
Lc1vD4:
	jmp *(%esi)
	.long  _c1vCX_info - _c1vCX_info_dsp
.text
	.align 2
_c1vD3_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vD3_info)+264
	.long	7
	.long	65568
_c1vD3_info:
Lc1vD3:
	call 1f
1:	popl	%eax
	addl $_c1vD8_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl 20(%ebp),%esi
	movl %ecx,(%ebp)
	movl %eax,20(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1vD8_info
Lc1vDd:
	jmp *(%esi)
	.long  _c1vD3_info - _c1vD3_info_dsp
.text
	.align 2
_c1vD8_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vD8_info)+264
	.long	8
	.long	65568
_c1vD8_info:
Lc1vD8:
	movl 24(%ebp),%eax
	movl %eax,40(%ebx)
	movl 8(%ebp),%eax
	movl %eax,32(%ebx)
	movl 20(%ebp),%eax
	movl %eax,24(%ebx)
	movl 16(%ebp),%eax
	movl %eax,16(%ebx)
	movl 12(%ebp),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebp)
	movl 3(%esi),%eax
	movl %eax,20(%ebp)
	movl 7(%esi),%eax
	movl %eax,24(%ebp)
	addl $16,%ebp
	jmp _CoreziRenderziInternal_zdwcache_info
	.long  _c1vD8_info - _c1vD8_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_getImage1_closure
_CoreziRenderziInternal_getImage1_closure:
	.long	_CoreziRenderziInternal_getImage1_info
	.long	0
.text
	.align 2
_s1pwk_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_s1pwk_info)+240
	.long	65536
	.long	65554
_s1pwk_info:
Lc1vEE:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -16(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1vEF
Lc1vEG:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vEI
Lc1vEH:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%ecx
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	addl $_c1vEB_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	leal -3(%edi),%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _CoreziRenderziInternal_zdwmakeImage_info
Lc1vEI:
	movl $8,904(%ebx)
Lc1vEF:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1pwk_info - _s1pwk_info_dsp
.text
	.align 2
_c1vEB_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1vEB_info:
Lc1vEB:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1vEL
Lc1vEK:
	movl L_CoreziRenderziInternal_Image_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %esi,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1vEL:
	movl $16,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1vEB_info - _c1vEB_info_dsp
.text
	.align 2
_CoreziRenderziInternal_getImage1_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_getImage1_info)+240
	.long	131077
	.long	0
	.long	50397199
.globl _CoreziRenderziInternal_getImage1_info
_CoreziRenderziInternal_getImage1_info:
Lc1vEM:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -8(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1vEN
Lc1vEO:
	movl %eax,%edx
	addl $_c1vEc_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
Lc1vEN:
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_getImage1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_getImage1_info - _CoreziRenderziInternal_getImage1_info_dsp
.text
	.align 2
_c1vEc_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vEc_info)+240
	.long	0
	.long	16842784
_c1vEc_info:
Lc1vEc:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vER
Lc1vEQ:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	movl %eax,%ecx
	addl $_c1vEm_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl L_CoreziFrontziInternal_imageCachezuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1vEm_info
Lc1vEn:
	jmp *(%esi)
Lc1vER:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1vEc_info - _c1vEc_info_dsp
.text
	.align 2
_c1vEm_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vEm_info)+240
	.long	65
	.long	65568
_c1vEm_info:
Lc1vEm:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1vEu_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	addl $4,%ebp
	movl 3(%esi),%eax
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___app1$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1vEm_info - _c1vEm_info_dsp
.text
	.align 2
_c1vEu_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_c1vEu_info)+240
	.long	0
	.long	65568
_c1vEu_info:
Lc1vEu:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1vEW
Lc1vEV:
	addl $_s1pwk_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1vEW:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1vEu_info - _c1vEu_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_getImage_closure
_CoreziRenderziInternal_getImage_closure:
	.long	_CoreziRenderziInternal_getImage_info
	.long	0
.text
	.align 2
_CoreziRenderziInternal_getImage_info_dsp:
.text
	.align 2
	.long	_S1qJo_srt-(_CoreziRenderziInternal_getImage_info)+276
	.long	131077
	.long	0
	.long	65551
.globl _CoreziRenderziInternal_getImage_info
_CoreziRenderziInternal_getImage_info:
Lc1vG1:
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziRenderziInternal_getImage1_info
	.long  _CoreziRenderziInternal_getImage_info - _CoreziRenderziInternal_getImage_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_Image_closure
_CoreziRenderziInternal_Image_closure:
	.long	_CoreziRenderziInternal_Image_info
.text
	.align 2
_CoreziRenderziInternal_Image_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_CoreziRenderziInternal_Image_info:
Lc1vGe:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %ecx,64(%esp)
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1vGi
Lc1vGh:
	movl L_CoreziRenderziInternal_Image_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %ecx,-8(%edi)
	movl %edx,-4(%edi)
	movl 64(%esp),%eax
	movl %eax,(%edi)
	leal -11(%edi),%esi
	jmp *(%ebp)
Lc1vGi:
	movl $16,904(%ebx)
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl %edx,24(%ebx)
	movl 76(%esp),%edx
	movl %edx,16(%ebx)
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_Image_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_Image_info - _CoreziRenderziInternal_Image_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_EmbedDraw_closure
_CoreziRenderziInternal_EmbedDraw_closure:
	.long	_CoreziRenderziInternal_EmbedDraw_info
.text
	.align 2
_CoreziRenderziInternal_EmbedDraw_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
_CoreziRenderziInternal_EmbedDraw_info:
Lc1vGu:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1vGy
Lc1vGx:
	movl L_CoreziRenderziInternal_EmbedDraw_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
Lc1vGy:
	movl $12,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziRenderziInternal_EmbedDraw_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_EmbedDraw_info - _CoreziRenderziInternal_EmbedDraw_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_EmbedIO_closure
_CoreziRenderziInternal_EmbedIO_closure:
	.long	_CoreziRenderziInternal_EmbedIO_info
.text
	.align 2
_CoreziRenderziInternal_EmbedIO_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
_CoreziRenderziInternal_EmbedIO_info:
Lc1vGK:
	call 1f
1:	popl	%eax
	addl $8,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1vGO
Lc1vGN:
	movl L_CoreziRenderziInternal_EmbedIO_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -3(%edi),%esi
	jmp *(%ebp)
Lc1vGO:
	movl $8,904(%ebx)
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_EmbedIO_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_EmbedIO_info - _CoreziRenderziInternal_EmbedIO_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_EmbedWorld_closure
_CoreziRenderziInternal_EmbedWorld_closure:
	.long	_CoreziRenderziInternal_EmbedWorld_info
.text
	.align 2
_CoreziRenderziInternal_EmbedWorld_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
_CoreziRenderziInternal_EmbedWorld_info:
Lc1vH0:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1vH4
Lc1vH3:
	movl L_CoreziRenderziInternal_EmbedWorld_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
Lc1vH4:
	movl $12,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziRenderziInternal_EmbedWorld_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_EmbedWorld_info - _CoreziRenderziInternal_EmbedWorld_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_WithCtx_closure
_CoreziRenderziInternal_WithCtx_closure:
	.long	_CoreziRenderziInternal_WithCtx_info
.text
	.align 2
_CoreziRenderziInternal_WithCtx_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_CoreziRenderziInternal_WithCtx_info:
Lc1vHg:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %ecx,64(%esp)
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1vHk
Lc1vHj:
	movl L_CoreziRenderziInternal_WithCtx_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %ecx,-8(%edi)
	movl %edx,-4(%edi)
	movl 64(%esp),%eax
	movl %eax,(%edi)
	leal -11(%edi),%esi
	jmp *(%ebp)
Lc1vHk:
	movl $16,904(%ebx)
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl %edx,24(%ebx)
	movl 76(%esp),%edx
	movl %edx,16(%ebx)
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_WithCtx_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_WithCtx_info - _CoreziRenderziInternal_WithCtx_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_Affined_closure
_CoreziRenderziInternal_Affined_closure:
	.long	_CoreziRenderziInternal_Affined_info
.text
	.align 2
.globl _CoreziRenderziInternal_Affined_slow
_CoreziRenderziInternal_Affined_slow:
Lc1vHs:
	movl 16(%ebp),%eax
	movl %eax,40(%ebx)
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl (%ebp),%eax
	movl %eax,8(%ebx)
	addl $20,%ebp
	jmp _CoreziRenderziInternal_Affined_info
.text
	.align 2
_CoreziRenderziInternal_Affined_info_dsp:
.text
	.align 2
	.long	_CoreziRenderziInternal_Affined_slow-(_CoreziRenderziInternal_Affined_info)+0
	.long	8
	.long	0
	.long	524288
	.long	0
	.long	15
_CoreziRenderziInternal_Affined_info:
Lc1vHx:
	call 1f
1:	popl	%eax
	addl $36,%edi
	movl 40(%ebx),%ecx
	movl 32(%ebx),%edx
	movl %ecx,64(%esp)
	movl 24(%ebx),%ecx
	movl %edx,76(%esp)
	movl 16(%ebx),%edx
	movl %ecx,88(%esp)
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1vHB
Lc1vHA:
	movl L_CoreziRenderziInternal_Affined_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-32(%edi)
	movl %ecx,-28(%edi)
	movl %edx,-24(%edi)
	movl 88(%esp),%eax
	movl %eax,-20(%edi)
	movl 76(%esp),%eax
	movl %eax,-16(%edi)
	movl 64(%esp),%eax
	movl %eax,-12(%edi)
	movl (%ebp),%eax
	movl %eax,-8(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl 8(%ebp),%eax
	movl %eax,(%edi)
	leal -31(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
Lc1vHB:
	movl $36,904(%ebx)
	movl L_CoreziRenderziInternal_Affined_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %ecx,-20(%ebp)
	movl %edx,-16(%ebp)
	movl 88(%esp),%eax
	movl %eax,-12(%ebp)
	movl 76(%esp),%eax
	movl %eax,-8(%ebp)
	movl 64(%esp),%eax
	movl %eax,-4(%ebp)
	addl $-20,%ebp
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_Affined_info - _CoreziRenderziInternal_Affined_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_Translated_closure
_CoreziRenderziInternal_Translated_closure:
	.long	_CoreziRenderziInternal_Translated_info
.text
	.align 2
_CoreziRenderziInternal_Translated_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_CoreziRenderziInternal_Translated_info:
Lc1vHX:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %ecx,64(%esp)
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1vI1
Lc1vI0:
	movl L_CoreziRenderziInternal_Translated_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %ecx,-8(%edi)
	movl %edx,-4(%edi)
	movl 64(%esp),%eax
	movl %eax,(%edi)
	leal -11(%edi),%esi
	jmp *(%ebp)
Lc1vI1:
	movl $16,904(%ebx)
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl %edx,24(%ebx)
	movl 76(%esp),%edx
	movl %edx,16(%ebx)
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_Translated_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_Translated_info - _CoreziRenderziInternal_Translated_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_Rotated_closure
_CoreziRenderziInternal_Rotated_closure:
	.long	_CoreziRenderziInternal_Rotated_info
.text
	.align 2
_CoreziRenderziInternal_Rotated_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_CoreziRenderziInternal_Rotated_info:
Lc1vId:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %ecx,64(%esp)
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1vIh
Lc1vIg:
	movl L_CoreziRenderziInternal_Rotated_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %ecx,-8(%edi)
	movl %edx,-4(%edi)
	movl 64(%esp),%eax
	movl %eax,(%edi)
	leal -11(%edi),%esi
	jmp *(%ebp)
Lc1vIh:
	movl $16,904(%ebx)
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl %edx,24(%ebx)
	movl 76(%esp),%edx
	movl %edx,16(%ebx)
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_Rotated_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_Rotated_info - _CoreziRenderziInternal_Rotated_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_Scaled_closure
_CoreziRenderziInternal_Scaled_closure:
	.long	_CoreziRenderziInternal_Scaled_info
.text
	.align 2
_CoreziRenderziInternal_Scaled_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_CoreziRenderziInternal_Scaled_info:
Lc1vIt:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %ecx,64(%esp)
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1vIx
Lc1vIw:
	movl L_CoreziRenderziInternal_Scaled_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %ecx,-8(%edi)
	movl %edx,-4(%edi)
	movl 64(%esp),%eax
	movl %eax,(%edi)
	leal -11(%edi),%esi
	jmp *(%ebp)
Lc1vIx:
	movl $16,904(%ebx)
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl %edx,24(%ebx)
	movl 76(%esp),%edx
	movl %edx,16(%ebx)
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_Scaled_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_Scaled_info - _CoreziRenderziInternal_Scaled_info_dsp
.data
	.align 2
.align 0
.globl _CoreziRenderziInternal_Switch_closure
_CoreziRenderziInternal_Switch_closure:
	.long	_CoreziRenderziInternal_Switch_info
.text
	.align 2
_CoreziRenderziInternal_Switch_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_CoreziRenderziInternal_Switch_info:
Lc1vIJ:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %ecx,64(%esp)
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1vIN
Lc1vIM:
	movl L_CoreziRenderziInternal_Switch_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %ecx,-8(%edi)
	movl %edx,-4(%edi)
	movl 64(%esp),%eax
	movl %eax,(%edi)
	leal -11(%edi),%esi
	jmp *(%ebp)
Lc1vIN:
	movl $16,904(%ebx)
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl %edx,24(%ebx)
	movl 76(%esp),%edx
	movl %edx,16(%ebx)
	movl %ecx,8(%ebx)
	movl L_CoreziRenderziInternal_Switch_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziRenderziInternal_Switch_info - _CoreziRenderziInternal_Switch_info_dsp
.const
	.align 2
.align 0
_i1vIW_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	73
	.byte	109
	.byte	97
	.byte	103
	.byte	101
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_Image_con_info_dsp:
.text
	.align 2
	.long	_i1vIW_str-(_CoreziRenderziInternal_Image_con_info)+0
	.long	3
	.long	1
.globl _CoreziRenderziInternal_Image_con_info
_CoreziRenderziInternal_Image_con_info:
Lc1vIU:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_Image_con_info - _CoreziRenderziInternal_Image_con_info_dsp
.const
	.align 2
.align 0
_i1vIX_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	73
	.byte	109
	.byte	97
	.byte	103
	.byte	101
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_Image_static_info_dsp:
.text
	.align 2
	.long	_i1vIX_str-(_CoreziRenderziInternal_Image_static_info)+0
	.long	3
	.long	7
.globl _CoreziRenderziInternal_Image_static_info
_CoreziRenderziInternal_Image_static_info:
Lc1vIV:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_Image_static_info - _CoreziRenderziInternal_Image_static_info_dsp
.const
	.align 2
.align 0
_i1vJ6_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	69
	.byte	109
	.byte	98
	.byte	101
	.byte	100
	.byte	68
	.byte	114
	.byte	97
	.byte	119
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_EmbedDraw_con_info_dsp:
.text
	.align 2
	.long	_i1vJ6_str-(_CoreziRenderziInternal_EmbedDraw_con_info)+0
	.long	2
	.long	4
.globl _CoreziRenderziInternal_EmbedDraw_con_info
_CoreziRenderziInternal_EmbedDraw_con_info:
Lc1vJ4:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_EmbedDraw_con_info - _CoreziRenderziInternal_EmbedDraw_con_info_dsp
.const
	.align 2
.align 0
_i1vJ7_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	69
	.byte	109
	.byte	98
	.byte	101
	.byte	100
	.byte	68
	.byte	114
	.byte	97
	.byte	119
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_EmbedDraw_static_info_dsp:
.text
	.align 2
	.long	_i1vJ7_str-(_CoreziRenderziInternal_EmbedDraw_static_info)+0
	.long	2
	.long	7
.globl _CoreziRenderziInternal_EmbedDraw_static_info
_CoreziRenderziInternal_EmbedDraw_static_info:
Lc1vJ5:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_EmbedDraw_static_info - _CoreziRenderziInternal_EmbedDraw_static_info_dsp
.const
	.align 2
.align 0
_i1vJg_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	69
	.byte	109
	.byte	98
	.byte	101
	.byte	100
	.byte	73
	.byte	79
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_EmbedIO_con_info_dsp:
.text
	.align 2
	.long	_i1vJg_str-(_CoreziRenderziInternal_EmbedIO_con_info)+0
	.long	1
	.long	65538
.globl _CoreziRenderziInternal_EmbedIO_con_info
_CoreziRenderziInternal_EmbedIO_con_info:
Lc1vJe:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_EmbedIO_con_info - _CoreziRenderziInternal_EmbedIO_con_info_dsp
.const
	.align 2
.align 0
_i1vJh_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	69
	.byte	109
	.byte	98
	.byte	101
	.byte	100
	.byte	73
	.byte	79
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_EmbedIO_static_info_dsp:
.text
	.align 2
	.long	_i1vJh_str-(_CoreziRenderziInternal_EmbedIO_static_info)+0
	.long	1
	.long	65543
.globl _CoreziRenderziInternal_EmbedIO_static_info
_CoreziRenderziInternal_EmbedIO_static_info:
Lc1vJf:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_EmbedIO_static_info - _CoreziRenderziInternal_EmbedIO_static_info_dsp
.const
	.align 2
.align 0
_i1vJq_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	69
	.byte	109
	.byte	98
	.byte	101
	.byte	100
	.byte	87
	.byte	111
	.byte	114
	.byte	108
	.byte	100
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_EmbedWorld_con_info_dsp:
.text
	.align 2
	.long	_i1vJq_str-(_CoreziRenderziInternal_EmbedWorld_con_info)+0
	.long	2
	.long	131076
.globl _CoreziRenderziInternal_EmbedWorld_con_info
_CoreziRenderziInternal_EmbedWorld_con_info:
Lc1vJo:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_EmbedWorld_con_info - _CoreziRenderziInternal_EmbedWorld_con_info_dsp
.const
	.align 2
.align 0
_i1vJr_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	69
	.byte	109
	.byte	98
	.byte	101
	.byte	100
	.byte	87
	.byte	111
	.byte	114
	.byte	108
	.byte	100
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_EmbedWorld_static_info_dsp:
.text
	.align 2
	.long	_i1vJr_str-(_CoreziRenderziInternal_EmbedWorld_static_info)+0
	.long	2
	.long	131079
.globl _CoreziRenderziInternal_EmbedWorld_static_info
_CoreziRenderziInternal_EmbedWorld_static_info:
Lc1vJp:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_EmbedWorld_static_info - _CoreziRenderziInternal_EmbedWorld_static_info_dsp
.const
	.align 2
.align 0
_i1vJA_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	87
	.byte	105
	.byte	116
	.byte	104
	.byte	67
	.byte	116
	.byte	120
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_WithCtx_con_info_dsp:
.text
	.align 2
	.long	_i1vJA_str-(_CoreziRenderziInternal_WithCtx_con_info)+0
	.long	3
	.long	196609
.globl _CoreziRenderziInternal_WithCtx_con_info
_CoreziRenderziInternal_WithCtx_con_info:
Lc1vJy:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_WithCtx_con_info - _CoreziRenderziInternal_WithCtx_con_info_dsp
.const
	.align 2
.align 0
_i1vJB_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	87
	.byte	105
	.byte	116
	.byte	104
	.byte	67
	.byte	116
	.byte	120
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_WithCtx_static_info_dsp:
.text
	.align 2
	.long	_i1vJB_str-(_CoreziRenderziInternal_WithCtx_static_info)+0
	.long	3
	.long	196615
.globl _CoreziRenderziInternal_WithCtx_static_info
_CoreziRenderziInternal_WithCtx_static_info:
Lc1vJz:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_WithCtx_static_info - _CoreziRenderziInternal_WithCtx_static_info_dsp
.const
	.align 2
.align 0
_i1vJK_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	65
	.byte	102
	.byte	102
	.byte	105
	.byte	110
	.byte	101
	.byte	100
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_Affined_con_info_dsp:
.text
	.align 2
	.long	_i1vJK_str-(_CoreziRenderziInternal_Affined_con_info)+0
	.long	8
	.long	262145
.globl _CoreziRenderziInternal_Affined_con_info
_CoreziRenderziInternal_Affined_con_info:
Lc1vJI:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_Affined_con_info - _CoreziRenderziInternal_Affined_con_info_dsp
.const
	.align 2
.align 0
_i1vJL_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	65
	.byte	102
	.byte	102
	.byte	105
	.byte	110
	.byte	101
	.byte	100
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_Affined_static_info_dsp:
.text
	.align 2
	.long	_i1vJL_str-(_CoreziRenderziInternal_Affined_static_info)+0
	.long	8
	.long	262151
.globl _CoreziRenderziInternal_Affined_static_info
_CoreziRenderziInternal_Affined_static_info:
Lc1vJJ:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_Affined_static_info - _CoreziRenderziInternal_Affined_static_info_dsp
.const
	.align 2
.align 0
_i1vJU_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	84
	.byte	114
	.byte	97
	.byte	110
	.byte	115
	.byte	108
	.byte	97
	.byte	116
	.byte	101
	.byte	100
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_Translated_con_info_dsp:
.text
	.align 2
	.long	_i1vJU_str-(_CoreziRenderziInternal_Translated_con_info)+0
	.long	3
	.long	327681
.globl _CoreziRenderziInternal_Translated_con_info
_CoreziRenderziInternal_Translated_con_info:
Lc1vJS:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_Translated_con_info - _CoreziRenderziInternal_Translated_con_info_dsp
.const
	.align 2
.align 0
_i1vJV_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	84
	.byte	114
	.byte	97
	.byte	110
	.byte	115
	.byte	108
	.byte	97
	.byte	116
	.byte	101
	.byte	100
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_Translated_static_info_dsp:
.text
	.align 2
	.long	_i1vJV_str-(_CoreziRenderziInternal_Translated_static_info)+0
	.long	3
	.long	327687
.globl _CoreziRenderziInternal_Translated_static_info
_CoreziRenderziInternal_Translated_static_info:
Lc1vJT:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_Translated_static_info - _CoreziRenderziInternal_Translated_static_info_dsp
.const
	.align 2
.align 0
_i1vK4_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	82
	.byte	111
	.byte	116
	.byte	97
	.byte	116
	.byte	101
	.byte	100
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_Rotated_con_info_dsp:
.text
	.align 2
	.long	_i1vK4_str-(_CoreziRenderziInternal_Rotated_con_info)+0
	.long	3
	.long	393217
.globl _CoreziRenderziInternal_Rotated_con_info
_CoreziRenderziInternal_Rotated_con_info:
Lc1vK2:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_Rotated_con_info - _CoreziRenderziInternal_Rotated_con_info_dsp
.const
	.align 2
.align 0
_i1vK5_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	82
	.byte	111
	.byte	116
	.byte	97
	.byte	116
	.byte	101
	.byte	100
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_Rotated_static_info_dsp:
.text
	.align 2
	.long	_i1vK5_str-(_CoreziRenderziInternal_Rotated_static_info)+0
	.long	3
	.long	393223
.globl _CoreziRenderziInternal_Rotated_static_info
_CoreziRenderziInternal_Rotated_static_info:
Lc1vK3:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_Rotated_static_info - _CoreziRenderziInternal_Rotated_static_info_dsp
.const
	.align 2
.align 0
_i1vKe_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	83
	.byte	99
	.byte	97
	.byte	108
	.byte	101
	.byte	100
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_Scaled_con_info_dsp:
.text
	.align 2
	.long	_i1vKe_str-(_CoreziRenderziInternal_Scaled_con_info)+0
	.long	3
	.long	458753
.globl _CoreziRenderziInternal_Scaled_con_info
_CoreziRenderziInternal_Scaled_con_info:
Lc1vKc:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_Scaled_con_info - _CoreziRenderziInternal_Scaled_con_info_dsp
.const
	.align 2
.align 0
_i1vKf_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	83
	.byte	99
	.byte	97
	.byte	108
	.byte	101
	.byte	100
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_Scaled_static_info_dsp:
.text
	.align 2
	.long	_i1vKf_str-(_CoreziRenderziInternal_Scaled_static_info)+0
	.long	3
	.long	458759
.globl _CoreziRenderziInternal_Scaled_static_info
_CoreziRenderziInternal_Scaled_static_info:
Lc1vKd:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_Scaled_static_info - _CoreziRenderziInternal_Scaled_static_info_dsp
.const
	.align 2
.align 0
_i1vKo_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	83
	.byte	119
	.byte	105
	.byte	116
	.byte	99
	.byte	104
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_Switch_con_info_dsp:
.text
	.align 2
	.long	_i1vKo_str-(_CoreziRenderziInternal_Switch_con_info)+0
	.long	3
	.long	524289
.globl _CoreziRenderziInternal_Switch_con_info
_CoreziRenderziInternal_Switch_con_info:
Lc1vKm:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_Switch_con_info - _CoreziRenderziInternal_Switch_con_info_dsp
.const
	.align 2
.align 0
_i1vKp_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	82
	.byte	101
	.byte	110
	.byte	100
	.byte	101
	.byte	114
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	83
	.byte	119
	.byte	105
	.byte	116
	.byte	99
	.byte	104
	.byte	0
.text
	.align 2
_CoreziRenderziInternal_Switch_static_info_dsp:
.text
	.align 2
	.long	_i1vKp_str-(_CoreziRenderziInternal_Switch_static_info)+0
	.long	3
	.long	524295
.globl _CoreziRenderziInternal_Switch_static_info
_CoreziRenderziInternal_Switch_static_info:
Lc1vKn:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziRenderziInternal_Switch_static_info - _CoreziRenderziInternal_Switch_static_info_dsp
.const_data
	.align 2
.align 0
_S1qJo_srt:
	.long	_base_GHCziErr_error_closure
	.long	_base_TextziRead_readEither4_closure
	.long	_base_TextziRead_readEither2_closure
	.long	_base_GHCziRead_zdfReadDoublezuzdsconvertFrac_closure
	.long	_base_GHCziRead_zdfReadDouble9_closure
	.long	_CoreziRenderziInternal_sizzeOf3_closure
	.long	_CoreziRenderziInternal_sizzeOf4_closure
	.long	_CoreziRenderziInternal_sizzeOf5_closure
	.long	_CoreziRenderziInternal_sizzeOf6_closure
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziJSString_getProp_closure
	.long	_CoreziRenderziInternal_sizzeOf1_closure
	.long	_CoreziRenderziInternal_sizzeOf2_closure
	.long	_CoreziRenderziInternal_sizzeOf_closure
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_zdfFunctorSkeletonzuzdcfmap_closure
	.long	_CoreziRenderziInternal_withValue1_closure
	.long	_CoreziRenderziInternal_zdwcolor2JSString_closure
	.long	_r1mSr_closure
	.long	_r1mSs_closure
	.long	_r1mSt_closure
	.long	_r1mSu_closure
	.long	_r1mSv_closure
	.long	_base_GHCziErr_error_closure
	.long	_r1mSw_closure
	.long	_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_zdfFunctorSkeletonzuzdczlzd_closure
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_jsSetzuf1_closure
	.long	_CoreziRenderziInternal_clipzuf3_closure
	.long	_CoreziRenderziInternal_strokezuf1_closure
	.long	_CoreziRenderziInternal_stroke2_closure
	.long	_CoreziRenderziInternal_stroke3_closure
	.long	_CoreziRenderziInternal_stroke1_closure
	.long	_CoreziRenderziInternal_fillzuf1_closure
	.long	_CoreziRenderziInternal_fill2_closure
	.long	_CoreziRenderziInternal_fill1_closure
	.long	_CoreziRenderziInternal_clipzuf1_closure
	.long	_CoreziRenderziInternal_clipzuf4_closure
	.long	_CoreziRenderziInternal_render2_closure
	.long	_r1mSx_closure
	.long	_r1mSy_closure
	.long	_r1mSz_closure
	.long	_r1mSA_closure
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_bufferzuf1_closure
	.long	_CoreziRenderziInternal_zdwa1_closure
	.long	_CoreziRenderziInternal_render1_closure
	.long	_CoreziRenderziInternal_clip6_closure
	.long	_CoreziRenderziInternal_clip4_closure
	.long	_CoreziRenderziInternal_clipzuf2_closure
	.long	_CoreziRenderziInternal_clip1_closure
	.long	_CoreziRenderziInternal_clip2_closure
	.long	_r1mSm_closure
	.long	_r1mSn_closure
	.long	_r1mSo_closure
	.long	_r1mSp_closure
	.long	_CoreziRenderziInternal_clipzuf4_closure
	.long	_CoreziRenderziInternal_clipzuf3_closure
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_jsSetzuf1_closure
	.long	_CoreziRenderziInternal_zdwcolor2JSString_closure
	.long	_CoreziRenderziInternal_shadowed1_closure
	.long	_CoreziRenderziInternal_shadowed_closure
	.long	_CoreziRenderziInternal_getImagezuf1_closure
	.long	_CoreziRenderziInternal_getImagezuf2_closure
	.long	_CoreziRenderziInternal_zdwmakeImage_closure
	.long	_CoreziFrontziInternal_getCachezuf1_closure
	.long	_CoreziEase_opLift_closure
	.long	_CoreziFrontziInternal_endCachezuf1_closure
	.long	_IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_nullValue_closure
	.long	_CoreziFrontziInternal_beginCachezuf1_closure
	.long	_CoreziRenderziInternal_zdwcache_closure
	.long	_CoreziRenderziInternal_cache_closure
	.long	_CoreziFrontziInternal_imageCachezuf1_closure
	.long	_CoreziRenderziInternal_getImage1_closure
.section __TEXT,__textcoal_nt,coalesced,no_toc
.weak_definition ___i686.get_pc_thunk.ax
.private_extern ___i686.get_pc_thunk.ax
___i686.get_pc_thunk.ax:
	movl (%esp), %eax
	ret
.non_lazy_symbol_pointer
L_CoreziEase_Action_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziEase_Action_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziEase_Exact_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziEase_Exact_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziEase_MorphAct_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziEase_MorphAct_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziEase_Morph_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziEase_Morph_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziFrontziInternal_beginCachezuf1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziFrontziInternal_beginCachezuf1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziFrontziInternal_endCachezuf1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziFrontziInternal_endCachezuf1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziFrontziInternal_getCachezuf1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziFrontziInternal_getCachezuf1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziFrontziInternal_imageCachezuf1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziFrontziInternal_imageCachezuf1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_Affined_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_Affined_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_Affined_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_Affined_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_EmbedDraw_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_EmbedDraw_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_EmbedDraw_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_EmbedDraw_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_EmbedIO_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_EmbedIO_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_EmbedIO_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_EmbedIO_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_EmbedWorld_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_EmbedWorld_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_EmbedWorld_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_EmbedWorld_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_Image_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_Image_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_Image_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_Image_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_Rotated_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_Rotated_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_Rotated_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_Rotated_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_Scaled_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_Scaled_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_Scaled_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_Scaled_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_Switch_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_Switch_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_Switch_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_Switch_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_Translated_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_Translated_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_Translated_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_Translated_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_WithCtx_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_WithCtx_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_WithCtx_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_WithCtx_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_applyTransform1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_applyTransform1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_applyTransform2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_applyTransform2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_applyTransform_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_applyTransform_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_applyTransformzuworld_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_applyTransformzuworld_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_cache_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_cache_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_clip1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_clip1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_clip2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_clip2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_clip4_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_clip4_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_clip6_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_clip6_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_clipzuf1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_clipzuf1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_clipzuf2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_clipzuf2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_clipzuf3_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_clipzuf3_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_clipzuf4_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_clipzuf4_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_drawClipped1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_drawClipped1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_embedTransformation1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_embedTransformation1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_fill1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_fill1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_fill2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_fill2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_fillzuf1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_fillzuf1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_getImage1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_getImage1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_getImage2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_getImage2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_getImagezuf1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_getImagezuf1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_getImagezuf2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_getImagezuf2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_render1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_render1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_render2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_render2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_shadowed1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_shadowed1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_shadowed_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_shadowed_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_sizzeOf1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_sizzeOf1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_sizzeOf2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_sizzeOf2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_sizzeOf3_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_sizzeOf3_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_sizzeOf4_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_sizzeOf4_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_sizzeOf5_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_sizzeOf5_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_sizzeOf6_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_sizzeOf6_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_sizzeOf_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_sizzeOf_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_stroke1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_stroke1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_stroke2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_stroke2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_stroke3_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_stroke3_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_strokezuf1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_strokezuf1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_withValue1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_withValue1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_withValue2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_withValue2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_withValue3_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_withValue3_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdfAffineRender1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdfAffineRender1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdfAffineRender2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdfAffineRender2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdfAffineRender3_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdfAffineRender3_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdfAffineRender4_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdfAffineRender4_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdfAffineRender5_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdfAffineRender5_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdfAffineRender6_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdfAffineRender6_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdfAffineRender7_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdfAffineRender7_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdfAffineRenderzuzdcrotateAt_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdfAffineRenderzuzdcrotateAt_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdfAffineRenderzuzdcscaleAt_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdfAffineRenderzuzdcscaleAt_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdfApplicativeRenderzuzdcreturn_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdfApplicativeRenderzuzdcreturn_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdfFunctorRenderFzuzdcfmap_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdfFunctorRenderFzuzdcfmap_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdfFunctorRenderFzuzdczlzd_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdfFunctorRenderFzuzdczlzd_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdfMonadIORender1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdfMonadIORender1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzg_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzg_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzgze_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdfMonadRenderzuzdszdfApplicativeSkeletonzuzdczgzgze_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdswhen1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdswhen1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdwa1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdwa1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdwa_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdwa_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdwcache_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdwcache_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdwcolor2JSString_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdwcolor2JSString_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zdwmakeImage_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zdwmakeImage_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zuimageDrawClipped_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zuimageDrawClipped_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zuimageDraw_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zuimageDraw_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziRenderziInternal_zuimageElem_closure$non_lazy_ptr:
	.indirect_symbol _CoreziRenderziInternal_zuimageElem_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfMonadWorldzuzdszdfApplicativeStateTzuzdcpure_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfMonadWorldzuzdszdfApplicativeStateTzuzdcpure_closure
	.long	0
.non_lazy_symbol_pointer
L_IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_nullValue_closure$non_lazy_ptr:
	.indirect_symbol _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_nullValue_closure
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_jsSetzuf1_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_jsSetzuf1_closure
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_zdfIsElemElem_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_zdfIsElemElem_closure
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_RGBA_con_info
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_bufferzuf1_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziGraphicsziCanvas_bufferzuf1_closure
	.long	0
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L_String$stub:
	.indirect_symbol _String
	call ___i686.get_pc_thunk.ax
1:
	movl L_String$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L_String$stub_binder:
	lea L_String$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L_String$lazy_ptr:
	.indirect_symbol _String
	.long L_String$stub_binder
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L___app1$stub:
	.indirect_symbol ___app1
	call ___i686.get_pc_thunk.ax
1:
	movl L___app1$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L___app1$stub_binder:
	lea L___app1$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L___app1$lazy_ptr:
	.indirect_symbol ___app1
	.long L___app1$stub_binder
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L___app2$stub:
	.indirect_symbol ___app2
	call ___i686.get_pc_thunk.ax
1:
	movl L___app2$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L___app2$stub_binder:
	lea L___app2$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L___app2$lazy_ptr:
	.indirect_symbol ___app2
	.long L___app2$stub_binder
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L___app3$stub:
	.indirect_symbol ___app3
	call ___i686.get_pc_thunk.ax
1:
	movl L___app3$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L___app3$stub_binder:
	lea L___app3$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L___app3$lazy_ptr:
	.indirect_symbol ___app3
	.long L___app3$stub_binder
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L___apply$stub:
	.indirect_symbol ___apply
	call ___i686.get_pc_thunk.ax
1:
	movl L___apply$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L___apply$stub_binder:
	lea L___apply$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L___apply$lazy_ptr:
	.indirect_symbol ___apply
	.long L___apply$stub_binder
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L___eq$stub:
	.indirect_symbol ___eq
	call ___i686.get_pc_thunk.ax
1:
	movl L___eq$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L___eq$stub_binder:
	lea L___eq$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L___eq$lazy_ptr:
	.indirect_symbol ___eq
	.long L___eq$stub_binder
.non_lazy_symbol_pointer
L_base_GHCziBase_Just_closure$non_lazy_ptr:
	.indirect_symbol _base_GHCziBase_Just_closure
	.long	0
.non_lazy_symbol_pointer
L_base_GHCziBase_Just_con_info$non_lazy_ptr:
	.indirect_symbol _base_GHCziBase_Just_con_info
	.long	0
.non_lazy_symbol_pointer
L_base_GHCziBase_Nothing_closure$non_lazy_ptr:
	.indirect_symbol _base_GHCziBase_Nothing_closure
	.long	0
.non_lazy_symbol_pointer
L_base_GHCziFloat_divideDouble_closure$non_lazy_ptr:
	.indirect_symbol _base_GHCziFloat_divideDouble_closure
	.long	0
.non_lazy_symbol_pointer
L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr:
	.indirect_symbol _base_GHCziPtr_Ptr_con_info
	.long	0
.non_lazy_symbol_pointer
L_base_GHCziRead_zdfReadDoublezuzdsconvertFrac_closure$non_lazy_ptr:
	.indirect_symbol _base_GHCziRead_zdfReadDoublezuzdsconvertFrac_closure
	.long	0
.non_lazy_symbol_pointer
L_base_TextziParserCombinatorsziReadPrec_minPrec_closure$non_lazy_ptr:
	.indirect_symbol _base_TextziParserCombinatorsziReadPrec_minPrec_closure
	.long	0
.non_lazy_symbol_pointer
L_base_TextziRead_readEither2_closure$non_lazy_ptr:
	.indirect_symbol _base_TextziRead_readEither2_closure
	.long	0
.non_lazy_symbol_pointer
L_base_TextziRead_readEither4_closure$non_lazy_ptr:
	.indirect_symbol _base_TextziRead_readEither4_closure
	.long	0
.non_lazy_symbol_pointer
L_base_TextziRead_readEither5_closure$non_lazy_ptr:
	.indirect_symbol _base_TextziRead_readEither5_closure
	.long	0
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L_eval$stub:
	.indirect_symbol _eval
	call ___i686.get_pc_thunk.ax
1:
	movl L_eval$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L_eval$stub_binder:
	lea L_eval$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L_eval$lazy_ptr:
	.indirect_symbol _eval
	.long L_eval$stub_binder
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTuple_Z0T_closure
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTuple_Z2T_closure$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTuple_Z2T_closure
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTuple_Z2T_con_info
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_Dzh_con_info
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_False_closure$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_False_closure
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_Izh_con_info
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_True_closure$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_True_closure
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_ZC_con_info
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_ZMZN_closure
	.long	0
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L_jsCat$stub:
	.indirect_symbol _jsCat
	call ___i686.get_pc_thunk.ax
1:
	movl L_jsCat$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L_jsCat$stub_binder:
	lea L_jsCat$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L_jsCat$lazy_ptr:
	.indirect_symbol _jsCat
	.long L_jsCat$stub_binder
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L_newCAF$stub:
	.indirect_symbol _newCAF
	call ___i686.get_pc_thunk.ax
1:
	movl L_newCAF$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L_newCAF$stub_binder:
	lea L_newCAF$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L_newCAF$lazy_ptr:
	.indirect_symbol _newCAF
	.long L_newCAF$stub_binder
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L_resumeThread$stub:
	.indirect_symbol _resumeThread
	call ___i686.get_pc_thunk.ax
1:
	movl L_resumeThread$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L_resumeThread$stub_binder:
	lea L_resumeThread$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L_resumeThread$lazy_ptr:
	.indirect_symbol _resumeThread
	.long L_resumeThread$stub_binder
.non_lazy_symbol_pointer
L_stg_ap_2_upd_info$non_lazy_ptr:
	.indirect_symbol _stg_ap_2_upd_info
	.long	0
.non_lazy_symbol_pointer
L_stg_ap_7_upd_info$non_lazy_ptr:
	.indirect_symbol _stg_ap_7_upd_info
	.long	0
.non_lazy_symbol_pointer
L_stg_ap_p_info$non_lazy_ptr:
	.indirect_symbol _stg_ap_p_info
	.long	0
.non_lazy_symbol_pointer
L_stg_ap_pp_info$non_lazy_ptr:
	.indirect_symbol _stg_ap_pp_info
	.long	0
.non_lazy_symbol_pointer
L_stg_bh_upd_frame_info$non_lazy_ptr:
	.indirect_symbol _stg_bh_upd_frame_info
	.long	0
.non_lazy_symbol_pointer
L_stg_gc_d1$non_lazy_ptr:
	.indirect_symbol _stg_gc_d1
	.long	0
.non_lazy_symbol_pointer
L_stg_gc_ppp$non_lazy_ptr:
	.indirect_symbol _stg_gc_ppp
	.long	0
.non_lazy_symbol_pointer
L_stg_gc_unbx_r1$non_lazy_ptr:
	.indirect_symbol _stg_gc_unbx_r1
	.long	0
.non_lazy_symbol_pointer
L_stg_gc_unpt_r1$non_lazy_ptr:
	.indirect_symbol _stg_gc_unpt_r1
	.long	0
.non_lazy_symbol_pointer
L_stg_sel_0_upd_info$non_lazy_ptr:
	.indirect_symbol _stg_sel_0_upd_info
	.long	0
.non_lazy_symbol_pointer
L_stg_sel_1_upd_info$non_lazy_ptr:
	.indirect_symbol _stg_sel_1_upd_info
	.long	0
.non_lazy_symbol_pointer
L_stg_upd_frame_info$non_lazy_ptr:
	.indirect_symbol _stg_upd_frame_info
	.long	0
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L_suspendThread$stub:
	.indirect_symbol _suspendThread
	call ___i686.get_pc_thunk.ax
1:
	movl L_suspendThread$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L_suspendThread$stub_binder:
	lea L_suspendThread$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L_suspendThread$lazy_ptr:
	.indirect_symbol _suspendThread
	.long L_suspendThread$stub_binder
.non_lazy_symbol_pointer
L_toJSStr$non_lazy_ptr:
	.indirect_symbol _toJSStr
	.long	0
.non_lazy_symbol_pointer
L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info$non_lazy_ptr:
	.indirect_symbol _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_BindS_con_info
	.long	0
.non_lazy_symbol_pointer
L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_ReturnS_con_info$non_lazy_ptr:
	.indirect_symbol _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeleton_ReturnS_con_info
	.long	0
.non_lazy_symbol_pointer
L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_con_info$non_lazy_ptr:
	.indirect_symbol _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Leaf_con_info
	.long	0
.non_lazy_symbol_pointer
L_z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info$non_lazy_ptr:
	.indirect_symbol _z34UYuBqPJSH1q5RDeTURPyZZT_ControlziMonadziSkeletonziInternal_Tree_con_info
	.long	0
.subsections_via_symbols
.ident "GHC 7.10.3"

