{-# LINE 1 "/var/folders/vf/3ps995857210wmpgxv8lrnbh0000gn/T/ghc4970_0/ghc_10.s" #-}
.data
	.align 2
.align 0
.globl ___stginit_CoreziWorldziInternal
___stginit_CoreziWorldziInternal:
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdWWorldState_closure
_CoreziWorldziInternal_zdWWorldState_closure:
	.long	_CoreziWorldziInternal_zdWWorldState_info
.text
	.align 2
_CoreziWorldziInternal_zdWWorldState_info_dsp:
.text
	.align 2
	.long	262168
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdWWorldState_info
_CoreziWorldziInternal_zdWWorldState_info:
LcRH8:
	call 1f
1:	popl	%eax
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	movl %eax,88(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcRHr
LcRHs:
	movl 64(%esp),%eax
	addl $_cRH5_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 88(%esp),%eax
	movl %eax,%esi
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _cRH5_info
LcRH6:
	jmp *(%esi)
LcRHr:
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdWWorldState_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdWWorldState_info - _CoreziWorldziInternal_zdWWorldState_info_dsp
.text
	.align 2
_cRH5_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_cRH5_info:
LcRH5:
	call 1f
1:	popl	%eax
	addl $_cRHb_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cRHb_info
LcRHc:
	jmp *(%esi)
	.long  _cRH5_info - _cRH5_info_dsp
.text
	.align 2
_cRHb_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_cRHb_info:
LcRHb:
	call 1f
1:	popl	%eax
	addl $_cRHg_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 8(%ebp),%esi
	movl %eax,8(%ebp)
	testw $7,%si
	jne _cRHg_info
LcRHh:
	jmp *(%esi)
	.long  _cRHb_info - _cRHb_info_dsp
.text
	.align 2
_cRHg_info_dsp:
.text
	.align 2
	.long	131
	.long	32
_cRHg_info:
LcRHg:
	call 1f
1:	popl	%eax
	addl $_cRHl_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,%eax
	movl 12(%ebp),%esi
	movl %eax,12(%ebp)
	testw $7,%si
	jne _cRHl_info
LcRHm:
	jmp *(%esi)
	.long  _cRHg_info - _cRHg_info_dsp
.text
	.align 2
_cRHl_info_dsp:
.text
	.align 2
	.long	131
	.long	32
_cRHl_info:
LcRHl:
	call 1f
1:	popl	%eax
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja LcRHy
LcRHx:
	movl L_CoreziWorldziInternal_WorldState_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-16(%edi)
	movl 4(%ebp),%eax
	movl %eax,-12(%edi)
	movl 12(%ebp),%eax
	movl %eax,-8(%edi)
	movl %esi,-4(%edi)
	movl 8(%ebp),%eax
	movl %eax,(%edi)
	leal -15(%edi),%esi
	addl $16,%ebp
	jmp *(%ebp)
LcRHy:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cRHl_info - _cRHl_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_oneway2_closure
_CoreziWorldziInternal_oneway2_closure:
	.long	_CoreziWorldziInternal_oneway2_info
.text
	.align 2
_CoreziWorldziInternal_oneway2_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziWorldziInternal_oneway2_info
_CoreziWorldziInternal_oneway2_info:
LcRIc:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja LcRIg
LcRIf:
	movl %eax,64(%esp)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_p_fast
LcRIg:
	movl $12,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziWorldziInternal_oneway2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_oneway2_info - _CoreziWorldziInternal_oneway2_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_oneway1_closure
_CoreziWorldziInternal_oneway1_closure:
	.long	_CoreziWorldziInternal_oneway1_info
.text
	.align 2
_CoreziWorldziInternal_oneway1_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_oneway1_info
_CoreziWorldziInternal_oneway1_info:
LcRIu:
	movl 16(%ebx),%eax
	movl 24(%ebx),%ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_oneway2_info
	.long  _CoreziWorldziInternal_oneway1_info - _CoreziWorldziInternal_oneway1_info_dsp
.data
	.align 2
.align 0
_rQT2_closure:
	.long	_rQT2_info
.text
	.align 2
_sRpW_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_sRpW_info:
LcRIR:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcRIV
LcRIW:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_cRIO_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _cRIO_info
LcRIP:
	jmp *(%esi)
LcRIV:
	jmp *-16(%ebx)
	.long  _sRpW_info - _sRpW_info_dsp
.text
	.align 2
_cRIO_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cRIO_info:
LcRIO:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcRIZ
LcRIY:
	movl 15(%esi),%ecx
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcRIZ:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cRIO_info - _cRIO_info_dsp
.text
	.align 2
_rQT2_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_rQT2_info:
LcRJ3:
	call 1f
1:	popl	%eax
	addl $40,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcRJ7
LcRJ6:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_sRpW_info-(1b)+0,%eax
	movl %eax,-36(%edi)
	movl 76(%esp),%eax
	movl %eax,-24(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	leal -36(%edi),%eax
	movl %eax,-16(%edi)
	movl 76(%esp),%eax
	movl %eax,-12(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -19(%edi),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_p_fast
LcRJ7:
	movl $40,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl %eax,%esi
	addl $_rQT2_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQT2_info - _rQT2_info_dsp
.data
	.align 2
.align 0
_rQT3_closure:
	.long	_rQT3_info
.text
	.align 2
_sRqa_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_sRqa_info:
LcRJO:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcRJS
LcRJT:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_cRJL_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _cRJL_info
LcRJM:
	jmp *(%esi)
LcRJS:
	jmp *-16(%ebx)
	.long  _sRqa_info - _sRqa_info_dsp
.text
	.align 2
_cRJL_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cRJL_info:
LcRJL:
	call 1f
1:	popl	%eax
	addl $_cRJR_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _cRJR_info
LcRJV:
	jmp *(%esi)
	.long  _cRJL_info - _cRJL_info_dsp
.text
	.align 2
_cRJR_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cRJR_info:
LcRJR:
	movl 7(%esi),%esi
	andl $-8,%esi
	addl $4,%ebp
	jmp *(%esi)
	.long  _cRJR_info - _cRJR_info_dsp
.text
	.align 2
_rQT3_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_rQT3_info:
LcRK4:
	call 1f
1:	popl	%eax
	addl $40,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcRK8
LcRK7:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_sRqa_info-(1b)+0,%eax
	movl %eax,-36(%edi)
	movl 76(%esp),%eax
	movl %eax,-24(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	leal -36(%edi),%eax
	movl %eax,-16(%edi)
	movl 76(%esp),%eax
	movl %eax,-12(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -19(%edi),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_p_fast
LcRK8:
	movl $40,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl %eax,%esi
	addl $_rQT3_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQT3_info - _rQT3_info_dsp
.data
	.align 2
.align 0
_rQT4_closure:
	.long	_rQT4_info
.text
	.align 2
_sRqm_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_sRqm_info:
LcRKT:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcRL0
LcRL1:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_cRKQ_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _cRKQ_info
LcRKR:
	jmp *(%esi)
LcRL0:
	jmp *-16(%ebx)
	.long  _sRqm_info - _sRqm_info_dsp
.text
	.align 2
_cRKQ_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cRKQ_info:
LcRKQ:
	call 1f
1:	popl	%eax
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja LcRL4
LcRL3:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %ecx,76(%esp)
	movl 15(%esi),%ecx
	incl %ecx
	movl %edx,88(%esp)
	movl 64(%esp),%edx
	movl L_CoreziWorldziInternal_WorldState_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-16(%edi)
	movl 76(%esp),%edx
	movl %edx,-12(%edi)
	movl 88(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -15(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcRL4:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cRKQ_info - _cRKQ_info_dsp
.text
	.align 2
_rQT4_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_rQT4_info:
LcRL8:
	call 1f
1:	popl	%eax
	addl $40,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcRLc
LcRLb:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_sRqm_info-(1b)+0,%eax
	movl %eax,-36(%edi)
	movl 76(%esp),%eax
	movl %eax,-24(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-16(%edi)
	leal -36(%edi),%eax
	movl %eax,-12(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -19(%edi),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_p_fast
LcRLc:
	movl $40,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl %eax,%esi
	addl $_rQT4_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQT4_info - _rQT4_info_dsp
.data
	.align 2
.align 0
_rQT5_closure:
	.long	_rQT5_info
.text
	.align 2
_sRqB_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_sRqB_info:
LcRLX:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcRLY
LcRLZ:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_cRLU_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _cRLU_info
LcRLV:
	jmp *(%esi)
LcRLY:
	jmp *-16(%ebx)
	.long  _sRqB_info - _sRqB_info_dsp
.text
	.align 2
_cRLU_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cRLU_info:
LcRLU:
	call 1f
1:	popl	%eax
	addl $_cRM2_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 7(%esi),%esi
	testw $7,%si
	jne _cRM2_info
LcRM4:
	jmp *(%esi)
	.long  _cRLU_info - _cRLU_info_dsp
.text
	.align 2
_cRM2_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cRM2_info:
LcRM2:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae LcRMk
LcRMl:
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcRMk:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcRMh
LcRMg:
	movl 2(%esi),%ecx
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -2(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcRMh:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cRM2_info - _cRM2_info_dsp
.text
	.align 2
_rQT5_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_rQT5_info:
LcRMq:
	call 1f
1:	popl	%eax
	addl $40,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcRMu
LcRMt:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_sRqB_info-(1b)+0,%eax
	movl %eax,-36(%edi)
	movl 76(%esp),%eax
	movl %eax,-24(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	leal -36(%edi),%eax
	movl %eax,-16(%edi)
	movl 76(%esp),%eax
	movl %eax,-12(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -19(%edi),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_p_fast
LcRMu:
	movl $40,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl %eax,%esi
	addl $_rQT5_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQT5_info - _rQT5_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_switch2_closure
_CoreziWorldziInternal_switch2_closure:
	.long	_ghczmprim_GHCziTypes_Izh_static_info
	.long	0
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_switch1_closure
_CoreziWorldziInternal_switch1_closure:
	.long	_CoreziWorldziInternal_switch1_info
	.long	0
.text
	.align 2
_sRqI_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRqI_info:
LcRNd:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcRNh
LcRNg:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-8(%edi)
	movl %ecx,-4(%edi)
	movl 76(%esp),%ecx
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
LcRNh:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRqI_info - _sRqI_info_dsp
.text
	.align 2
_CoreziWorldziInternal_switch1_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_switch1_info)+0
	.long	131087
	.long	0
	.long	196623
.globl _CoreziWorldziInternal_switch1_info
_CoreziWorldziInternal_switch1_info:
LcRNl:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -4(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcRNm
LcRNn:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcRNp
LcRNo:
	movl 64(%esp),%eax
	addl $_sRqI_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	movl %eax,%ecx
	addl $_cRNi_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	leal -7(%edi),%ecx
	movl %ecx,16(%ebx)
	movl L_CoreziWorldziInternal_switch2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	addl $-4,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrent_zdwa_info
LcRNp:
	movl $12,904(%ebx)
LcRNm:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_switch1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_switch1_info - _CoreziWorldziInternal_switch1_info_dsp
.text
	.align 2
_cRNi_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cRNi_info:
LcRNi:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcRNs
LcRNr:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcRNs:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cRNi_info - _cRNi_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadStateWorld3_closure
_CoreziWorldziInternal_zdfMonadStateWorld3_closure:
	.long	_CoreziWorldziInternal_zdfMonadStateWorld3_info
.text
	.align 2
_CoreziWorldziInternal_zdfMonadStateWorld3_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadStateWorld3_info
_CoreziWorldziInternal_zdfMonadStateWorld3_info:
LcRNV:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja LcRNZ
LcRNY:
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_p_fast
LcRNZ:
	movl $12,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadStateWorld3_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfMonadStateWorld3_info - _CoreziWorldziInternal_zdfMonadStateWorld3_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadEventWorld2_closure
_CoreziWorldziInternal_zdfMonadEventWorld2_closure:
	.long	_CoreziWorldziInternal_zdfMonadEventWorld2_info
.text
	.align 2
_CoreziWorldziInternal_zdfMonadEventWorld2_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadEventWorld2_info
_CoreziWorldziInternal_zdfMonadEventWorld2_info:
LcROh:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcROi
LcROj:
	addl $_cROe_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _cROe_info
LcROf:
	jmp *(%esi)
LcROi:
	movl %ecx,8(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadEventWorld2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfMonadEventWorld2_info - _CoreziWorldziInternal_zdfMonadEventWorld2_info_dsp
.text
	.align 2
_cROe_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cROe_info:
LcROe:
	call 1f
1:	popl	%eax
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Stop_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 3(%eax),%esi
	addl $4,%ebp
	jmp *(%ebp)
	.long  _cROe_info - _cROe_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadEventWorld1_closure
_CoreziWorldziInternal_zdfMonadEventWorld1_closure:
	.long	_CoreziWorldziInternal_zdfMonadEventWorld1_info
.text
	.align 2
_sRqX_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_sRqX_info:
LcRON:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcROO
LcROP:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	movl L_CoreziWorldziInternal_zdfMonadEventWorld2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,24(%ebx)
	movl 16(%esi),%eax
	movl %eax,16(%ebx)
	movl 20(%esi),%eax
	movl %eax,8(%ebx)
	movl 12(%esi),%esi
	addl $-12,%ebp
	jmp _stg_ap_ppp_fast
LcROO:
	jmp *-16(%ebx)
	.long  _sRqX_info - _sRqX_info_dsp
.text
	.align 2
_sRqY_info_dsp:
.text
	.align 2
	.long	131077
	.long	2
	.long	12
_sRqY_info:
LcROQ:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcROU
LcROT:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_sRqX_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl 76(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,16(%ebx)
	leal -20(%edi),%eax
	movl %eax,8(%ebx)
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_zdfMonadEventCIOzuzdsa_info
LcROU:
	movl $24,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRqY_info - _sRqY_info_dsp
.text
	.align 2
_CoreziWorldziInternal_zdfMonadEventWorld1_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadEventWorld1_info
_CoreziWorldziInternal_zdfMonadEventWorld1_info:
LcROW:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcRP0
LcROZ:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_sRqY_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 76(%esp),%eax
	movl %eax,-16(%edi)
	movl %edx,-12(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -18(%edi),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_p_fast
LcRP0:
	movl $24,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfMonadEventWorld1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfMonadEventWorld1_info - _CoreziWorldziInternal_zdfMonadEventWorld1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadStateWorld1_closure
_CoreziWorldziInternal_zdfMonadStateWorld1_closure:
	.long	_CoreziWorldziInternal_zdfMonadStateWorld1_info
.text
	.align 2
_sRr4_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_sRr4_info:
LcRPC:
	movl 8(%ebx),%eax
	movl 3(%esi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
	.long  _sRr4_info - _sRr4_info_dsp
.text
	.align 2
_CoreziWorldziInternal_zdfMonadStateWorld1_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadStateWorld1_info
_CoreziWorldziInternal_zdfMonadStateWorld1_info:
LcRPF:
	call 1f
1:	popl	%eax
	addl $28,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja LcRPJ
LcRPI:
	movl %eax,64(%esp)
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-24(%edi)
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl 64(%esp),%eax
	addl $_sRr4_info-(1b)+0,%eax
	movl %eax,-4(%edi)
	leal -24(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	jmp *(%ebp)
LcRPJ:
	movl $28,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadStateWorld1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfMonadStateWorld1_info - _CoreziWorldziInternal_zdfMonadStateWorld1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadStateWorld2_closure
_CoreziWorldziInternal_zdfMonadStateWorld2_closure:
	.long	_CoreziWorldziInternal_zdfMonadStateWorld2_info
.text
	.align 2
_CoreziWorldziInternal_zdfMonadStateWorld2_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadStateWorld2_info
_CoreziWorldziInternal_zdfMonadStateWorld2_info:
LcRQ1:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 24(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja LcRQ5
LcRQ4:
	movl %eax,64(%esp)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_p_fast
LcRQ5:
	movl $12,904(%ebx)
	movl %ecx,24(%ebx)
	movl 16(%ebx),%ecx
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadStateWorld2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfMonadStateWorld2_info - _CoreziWorldziInternal_zdfMonadStateWorld2_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadConcWorld1_closure
_CoreziWorldziInternal_zdfMonadConcWorld1_closure:
	.long	_CoreziWorldziInternal_zdfMonadConcWorld1_info
.text
	.align 2
_sRre_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_sRre_info:
LcRQo:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcRQp
LcRQq:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	movl L_CoreziWorldziInternal_zdfMonadEventWorld2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,16(%ebx)
	movl 16(%esi),%eax
	movl %eax,8(%ebx)
	movl 12(%esi),%esi
	addl $-12,%ebp
	jmp _stg_ap_pp_fast
LcRQp:
	jmp *-16(%ebx)
	.long  _sRre_info - _sRre_info_dsp
.text
	.align 2
_sRrd_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_sRrd_info:
LcRQx:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcRQy
LcRQz:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcRQB
LcRQA:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	movl %eax,64(%esp)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
LcRQB:
	movl $12,904(%ebx)
LcRQy:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _sRrd_info - _sRrd_info_dsp
.text
	.align 2
_CoreziWorldziInternal_zdfMonadConcWorld1_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadConcWorld1_info
_CoreziWorldziInternal_zdfMonadConcWorld1_info:
LcRQE:
	call 1f
1:	popl	%eax
	addl $72,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcRQI
LcRQH:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_sRre_info-(1b)+0,%eax
	movl %eax,-68(%edi)
	movl 76(%esp),%eax
	movl %eax,-56(%edi)
	movl %edx,-52(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-48(%edi)
	leal -68(%edi),%eax
	movl %eax,-44(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-40(%edi)
	movl 64(%esp),%eax
	addl $_sRrd_info-(1b)+0,%eax
	movl %eax,-36(%edi)
	movl %edx,-24(%edi)
	movl %ecx,-20(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -36(%edi),%ecx
	movl %ecx,-12(%edi)
	leal -46(%edi),%ecx
	movl %ecx,-8(%edi)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Fork_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	jmp *(%ebp)
LcRQI:
	movl $72,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfMonadConcWorld1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfMonadConcWorld1_info - _CoreziWorldziInternal_zdfMonadConcWorld1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdwa1_closure
_CoreziWorldziInternal_zdwa1_closure:
	.long	_CoreziWorldziInternal_zdwa1_info
.text
	.align 2
_sRrm_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_sRrm_info:
LcRRC:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcRRD
LcRRE:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%esi
	addl $-12,%ebp
	jmp _sRro_info
LcRRD:
	jmp *-16(%ebx)
	.long  _sRrm_info - _sRrm_info_dsp
.text
	.align 2
_sRrn_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_sRrn_info:
LcRRJ:
	movl 3(%esi),%esi
	andl $-8,%esi
	jmp *(%esi)
	.long  _sRrn_info - _sRrn_info_dsp
.text
	.align 2
_sRro_info_dsp:
.text
	.align 2
	.long	65539
	.long	2
	.long	12
_sRro_info:
LcRRT:
	call 1f
1:	popl	%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcRRU
LcRRV:
	addl $_cRRQ_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 7(%esi),%eax
	movl %eax,16(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	addl $-4,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_zdwa2_info
LcRRU:
	jmp *-8(%ebx)
	.long  _sRro_info - _sRro_info_dsp
.text
	.align 2
_cRRQ_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cRRQ_info:
LcRRQ:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcRRY
LcRRX:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcRRY:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cRRQ_info - _cRRQ_info_dsp
.text
	.align 2
_sRrt_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_sRrt_info:
LcRRZ:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcRS0
LcRS1:
	addl $36,%edi
	cmpl 856(%ebx),%edi
	ja LcRS3
LcRS2:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%ecx
	movl %eax,%edx
	addl $_sRrm_info-(1b)+0,%edx
	movl %edx,-32(%edi)
	leal -7(%edi),%edx
	movl %edx,-20(%edi)
	movl %edx,64(%esp)
	movl %eax,%edx
	addl $_sRrn_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	leal -32(%edi),%edx
	movl %edx,-12(%edi)
	addl $_sRro_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl %ecx,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	movl 64(%esp),%eax
	movl %eax,%esi
	addl $-12,%ebp
	jmp _sRro_info
LcRS3:
	movl $36,904(%ebx)
LcRS0:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _sRrt_info - _sRrt_info_dsp
.text
	.align 2
_sRrl_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_sRrl_info:
LcRSa:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcRSb
LcRSc:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcRSe
LcRSd:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	movl %eax,64(%esp)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
LcRSe:
	movl $12,904(%ebx)
LcRSb:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _sRrl_info - _sRrl_info_dsp
.text
	.align 2
_CoreziWorldziInternal_zdwa1_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdwa1_info
_CoreziWorldziInternal_zdwa1_info:
LcRSg:
	call 1f
1:	popl	%eax
	addl $60,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcRSk
LcRSj:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_sRrt_info-(1b)+0,%eax
	movl %eax,-56(%edi)
	movl 76(%esp),%eax
	movl %eax,-44(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-40(%edi)
	leal -56(%edi),%eax
	movl %eax,-36(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-32(%edi)
	movl 64(%esp),%eax
	addl $_sRrl_info-(1b)+0,%eax
	movl %eax,-28(%edi)
	movl %edx,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -28(%edi),%eax
	movl %eax,-4(%edi)
	leal -38(%edi),%eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	jmp *(%ebp)
LcRSk:
	movl $60,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdwa1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdwa1_info - _CoreziWorldziInternal_zdwa1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_consume1_closure
_CoreziWorldziInternal_consume1_closure:
	.long	_CoreziWorldziInternal_consume1_info
.text
	.align 2
_CoreziWorldziInternal_consume1_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_consume1_info
_CoreziWorldziInternal_consume1_info:
LcRTo:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -4(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcRTp
LcRTq:
	movl 64(%esp),%eax
	addl $_cRTl_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	addl $-4,%ebp
	jmp _CoreziWorldziInternal_zdwa1_info
LcRTp:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_consume1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_consume1_info - _CoreziWorldziInternal_consume1_info_dsp
.text
	.align 2
_cRTl_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cRTl_info:
LcRTl:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcRTt
LcRTs:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Fork_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -2(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcRTt:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cRTl_info - _cRTl_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_liftW1_closure
_CoreziWorldziInternal_liftW1_closure:
	.long	_CoreziWorldziInternal_liftW1_info
.text
	.align 2
_sRrG_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRrG_info:
LcRTQ:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcRTU
LcRTT:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-8(%edi)
	movl %ecx,-4(%edi)
	movl 76(%esp),%ecx
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
LcRTU:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRrG_info - _sRrG_info_dsp
.text
	.align 2
_CoreziWorldziInternal_liftW1_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_liftW1_info
_CoreziWorldziInternal_liftW1_info:
LcRTV:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcRTZ
LcRTY:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_sRrG_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 76(%esp),%eax
	movl %eax,%esi
	jmp _stg_ap_p_fast
LcRTZ:
	movl $12,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_liftW1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_liftW1_info - _CoreziWorldziInternal_liftW1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_obtain1_closure
_CoreziWorldziInternal_obtain1_closure:
	.long	_CoreziWorldziInternal_obtain1_info
.text
	.align 2
_sRrM_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRrM_info:
LcRUn:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcRUr
LcRUq:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-8(%edi)
	movl %ecx,-4(%edi)
	movl 76(%esp),%ecx
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
LcRUr:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRrM_info - _sRrM_info_dsp
.text
	.align 2
_CoreziWorldziInternal_obtain1_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_obtain1_info
_CoreziWorldziInternal_obtain1_info:
LcRUv:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -4(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcRUw
LcRUx:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcRUz
LcRUy:
	movl 64(%esp),%eax
	addl $_sRrM_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	addl $_cRUs_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	leal -7(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	addl $-4,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_zdwa2_info
LcRUz:
	movl $12,904(%ebx)
LcRUw:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_obtain1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_obtain1_info - _CoreziWorldziInternal_obtain1_info_dsp
.text
	.align 2
_cRUs_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cRUs_info:
LcRUs:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcRUC
LcRUB:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcRUC:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cRUs_info - _cRUs_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfFunctorWorld1_closure
_CoreziWorldziInternal_zdfFunctorWorld1_closure:
	.long	_CoreziWorldziInternal_zdfFunctorWorld1_info
.text
	.align 2
_sRrY_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_sRrY_info:
LcRVq:
	call 1f
1:	popl	%eax
	leal -20(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcRVu
LcRVv:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_cRVn_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%esi
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _cRVn_info
LcRVo:
	jmp *(%esi)
LcRVu:
	jmp *-16(%ebx)
	.long  _sRrY_info - _sRrY_info_dsp
.text
	.align 2
_cRVn_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cRVn_info:
LcRVn:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcRVy
LcRVx:
	movl 7(%esi),%ecx
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
LcRVy:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cRVn_info - _cRVn_info_dsp
.text
	.align 2
_sRrZ_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRrZ_info:
LcRVA:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcRVE
LcRVD:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_sRrY_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	movl 76(%esp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -16(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
LcRVE:
	movl $20,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRrZ_info - _sRrZ_info_dsp
.text
	.align 2
_sRs0_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRs0_info:
LcRVF:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcRVJ
LcRVI:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_sRrZ_info-(1b)+0,%edx
	movl %edx,-8(%edi)
	movl 76(%esp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
LcRVJ:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRs0_info - _sRs0_info_dsp
.text
	.align 2
_CoreziWorldziInternal_zdfFunctorWorld1_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfFunctorWorld1_info
_CoreziWorldziInternal_zdfFunctorWorld1_info:
LcRVK:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcRVO
LcRVN:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-28(%edi)
	movl %edx,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	addl $_sRs0_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl 76(%esp),%eax
	movl %eax,-4(%edi)
	leal -28(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
LcRVO:
	movl $32,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfFunctorWorld1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfFunctorWorld1_info - _CoreziWorldziInternal_zdfFunctorWorld1_info_dsp
.data
	.align 2
.align 0
_rQTh_closure:
	.long	_rQTh_info
.text
	.align 2
_rQTh_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_rQTh_info:
LcRWr:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcRWv
LcRWu:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 76(%esp),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_p_fast
LcRWv:
	movl $12,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl %eax,%esi
	addl $_rQTh_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQTh_info - _rQTh_info_dsp
.data
	.align 2
.align 0
_rQTk_closure:
	.long	_base_DataziEither_Left_static_info
	.long	_ghczmprim_GHCziTypes_False_closure+1
	.long	1
.data
	.align 2
.align 0
_rQTl_closure:
	.long	_base_DataziEither_Left_static_info
	.long	_ghczmprim_GHCziTypes_True_closure+2
	.long	1
.data
	.align 2
.align 0
_rQTo_closure:
	.long	_rQTo_info
	.long	0
.text
	.align 2
_rQTo_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_rQTo_info)+8
	.long	131087
	.long	0
	.long	65551
_rQTo_info:
LcRWM:
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _base_GHCziErr_error_info
	.long  _rQTo_info - _rQTo_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdcfail_closure
_CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdcfail_closure:
	.long	_CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdcfail_info
	.long	0
.text
	.align 2
_CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdcfail_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdcfail_info)+12
	.long	131087
	.long	0
	.long	65551
.globl _CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdcfail_info
_CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdcfail_info:
LcRWY:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _rQTo_info
	.long  _CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdcfail_info - _CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdcfail_info_dsp
.data
	.align 2
.align 0
_rQTp_closure:
	.long	_rQTp_info
.text
	.align 2
_sRsg_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRsg_info:
LcRXv:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcRXw
LcRXx:
	addl $_cRXs_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cRXs_info
LcRXt:
	jmp *(%esi)
LcRXw:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRsg_info - _sRsg_info_dsp
.text
	.align 2
_cRXs_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cRXs_info:
LcRXs:
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 7(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_pp_fast
	.long  _cRXs_info - _cRXs_info_dsp
.text
	.align 2
_sRsh_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRsh_info:
LcRXC:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcRXG
LcRXF:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_sRsg_info-(1b)+0,%edx
	movl %edx,-8(%edi)
	movl 76(%esp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
LcRXG:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRsh_info - _sRsh_info_dsp
.text
	.align 2
_rQTp_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_rQTp_info:
LcRXH:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcRXL
LcRXK:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-28(%edi)
	movl 76(%esp),%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	addl $_sRsh_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -28(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
LcRXL:
	movl $32,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl %eax,%esi
	addl $_rQTp_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQTp_info - _rQTp_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzg_closure
_CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzg_closure:
	.long	_CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzg_info
.text
	.align 2
_CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzg_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzg_info
_CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzg_info:
LcRYg:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _rQTp_info
	.long  _CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzg_info - _CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzg_info_dsp
.data
	.align 2
.align 0
_rQTq_closure:
	.long	_rQTq_info
.text
	.align 2
_sRsr_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRsr_info:
LcRYO:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcRYP
LcRYQ:
	addl $_cRYL_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cRYL_info
LcRYM:
	jmp *(%esi)
LcRYP:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRsr_info - _sRsr_info_dsp
.text
	.align 2
_cRYL_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cRYL_info:
LcRYL:
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 7(%esi),%eax
	movl %eax,16(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_ppp_fast
	.long  _cRYL_info - _cRYL_info_dsp
.text
	.align 2
_sRss_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRss_info:
LcRYV:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcRYZ
LcRYY:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_sRsr_info-(1b)+0,%edx
	movl %edx,-8(%edi)
	movl 76(%esp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
LcRYZ:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRss_info - _sRss_info_dsp
.text
	.align 2
_rQTq_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_rQTq_info:
LcRZ0:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcRZ4
LcRZ3:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-28(%edi)
	movl 76(%esp),%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	addl $_sRss_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -28(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
LcRZ4:
	movl $32,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl %eax,%esi
	addl $_rQTq_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQTq_info - _rQTq_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzgze_closure
_CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzgze_closure:
	.long	_CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzgze_info
.text
	.align 2
_CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzgze_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzgze_info
_CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzgze_info:
LcRZA:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _rQTq_info
	.long  _CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzgze_info - _CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzgze_info_dsp
.data
	.align 2
.align 0
_rQTr_closure:
	.long	_rQTr_info
.text
	.align 2
_sRsD_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_sRsD_info:
LcS0d:
	call 1f
1:	popl	%eax
	leal -20(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcS0i
LcS0j:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_cS0a_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%esi
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _cS0a_info
LcS0b:
	jmp *(%esi)
LcS0i:
	jmp *-16(%ebx)
	.long  _sRsD_info - _sRsD_info_dsp
.text
	.align 2
_cS0a_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cS0a_info:
LcS0a:
	call 1f
1:	popl	%eax
	addl $32,%edi
	cmpl 856(%ebx),%edi
	ja LcS0m
LcS0l:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-28(%edi)
	movl 4(%ebp),%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -28(%edi),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
LcS0m:
	movl $32,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cS0a_info - _cS0a_info_dsp
.text
	.align 2
_sRsE_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRsE_info:
LcS0o:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcS0s
LcS0r:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_sRsD_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	movl 76(%esp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -16(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
LcS0s:
	movl $20,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRsE_info - _sRsE_info_dsp
.text
	.align 2
_sRsF_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRsF_info:
LcS0t:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcS0x
LcS0w:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_sRsE_info-(1b)+0,%edx
	movl %edx,-8(%edi)
	movl 76(%esp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
LcS0x:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRsF_info - _sRsF_info_dsp
.text
	.align 2
_rQTr_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_rQTr_info:
LcS0y:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcS0C
LcS0B:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-28(%edi)
	movl %edx,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	addl $_sRsF_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl 76(%esp),%eax
	movl %eax,-4(%edi)
	leal -28(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
LcS0C:
	movl $32,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl %eax,%esi
	addl $_rQTr_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQTr_info - _rQTr_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfFunctorWorldzuzdszdfFunctorStateTzuzdcfmap_closure
_CoreziWorldziInternal_zdfFunctorWorldzuzdszdfFunctorStateTzuzdcfmap_closure:
	.long	_CoreziWorldziInternal_zdfFunctorWorldzuzdszdfFunctorStateTzuzdcfmap_info
.text
	.align 2
_CoreziWorldziInternal_zdfFunctorWorldzuzdszdfFunctorStateTzuzdcfmap_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfFunctorWorldzuzdszdfFunctorStateTzuzdcfmap_info
_CoreziWorldziInternal_zdfFunctorWorldzuzdszdfFunctorStateTzuzdcfmap_info:
LcS1h:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _rQTr_info
	.long  _CoreziWorldziInternal_zdfFunctorWorldzuzdszdfFunctorStateTzuzdcfmap_info - _CoreziWorldziInternal_zdfFunctorWorldzuzdszdfFunctorStateTzuzdcfmap_info_dsp
.data
	.align 2
.align 0
_rQTw_closure:
	.long	_rQTw_info
.text
	.align 2
_sRsV_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRsV_info:
LcS23:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcS28
LcS29:
	addl $_cS20_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cS20_info
LcS21:
	jmp *(%esi)
LcS28:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRsV_info - _sRsV_info_dsp
.text
	.align 2
_cS20_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cS20_info:
LcS20:
	call 1f
1:	popl	%eax
	addl $32,%edi
	cmpl 856(%ebx),%edi
	ja LcS2c
LcS2b:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-28(%edi)
	movl 8(%ebp),%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -28(%edi),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_p_fast
LcS2c:
	movl $32,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cS20_info - _cS20_info_dsp
.text
	.align 2
_sRsW_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRsW_info:
LcS2e:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcS2f
LcS2g:
	addl $_cS1Q_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cS1Q_info
LcS1R:
	jmp *(%esi)
LcS2f:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRsW_info - _sRsW_info_dsp
.text
	.align 2
_cS1Q_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cS1Q_info:
LcS1Q:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcS2j
LcS2i:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_sRsV_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl 8(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%eax
	movl %eax,16(%ebx)
	movl %edx,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_pp_fast
LcS2j:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cS1Q_info - _cS1Q_info_dsp
.text
	.align 2
_sRsX_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRsX_info:
LcS2l:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcS2p
LcS2o:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_sRsW_info-(1b)+0,%edx
	movl %edx,-8(%edi)
	movl 76(%esp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
LcS2p:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRsX_info - _sRsX_info_dsp
.text
	.align 2
_rQTw_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_rQTw_info:
LcS2q:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcS2u
LcS2t:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-28(%edi)
	movl 76(%esp),%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	addl $_sRsX_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -28(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
LcS2u:
	movl $32,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl %eax,%esi
	addl $_rQTw_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQTw_info - _rQTw_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfApplicativeWorldzuzdszdfApplicativeStateTzuzdczlztzg_closure
_CoreziWorldziInternal_zdfApplicativeWorldzuzdszdfApplicativeStateTzuzdczlztzg_closure:
	.long	_CoreziWorldziInternal_zdfApplicativeWorldzuzdszdfApplicativeStateTzuzdczlztzg_info
.text
	.align 2
_CoreziWorldziInternal_zdfApplicativeWorldzuzdszdfApplicativeStateTzuzdczlztzg_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfApplicativeWorldzuzdszdfApplicativeStateTzuzdczlztzg_info
_CoreziWorldziInternal_zdfApplicativeWorldzuzdszdfApplicativeStateTzuzdczlztzg_info:
LcS3g:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _rQTw_info
	.long  _CoreziWorldziInternal_zdfApplicativeWorldzuzdszdfApplicativeStateTzuzdczlztzg_info - _CoreziWorldziInternal_zdfApplicativeWorldzuzdszdfApplicativeStateTzuzdczlztzg_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadWorldzuzdszdfApplicativeStateTzuzdcpure_closure
_CoreziWorldziInternal_zdfMonadWorldzuzdszdfApplicativeStateTzuzdcpure_closure:
	.long	_CoreziWorldziInternal_zdfMonadWorldzuzdszdfApplicativeStateTzuzdcpure_info
.text
	.align 2
_CoreziWorldziInternal_zdfMonadWorldzuzdszdfApplicativeStateTzuzdcpure_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadWorldzuzdszdfApplicativeStateTzuzdcpure_info
_CoreziWorldziInternal_zdfMonadWorldzuzdszdfApplicativeStateTzuzdcpure_info:
LcS3u:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _rQTh_info
	.long  _CoreziWorldziInternal_zdfMonadWorldzuzdszdfApplicativeStateTzuzdcpure_info - _CoreziWorldziInternal_zdfMonadWorldzuzdszdfApplicativeStateTzuzdcpure_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadIOWorld1_closure
_CoreziWorldziInternal_zdfMonadIOWorld1_closure:
	.long	_CoreziWorldziInternal_zdfMonadIOWorld1_info
.text
	.align 2
_sRt6_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_sRt6_info:
LcS3U:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcS3V
LcS3W:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcS3Y
LcS3X:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl %eax,64(%esp)
	movl 16(%ecx),%eax
	movl 20(%ecx),%ecx
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-8(%edi)
	movl %ecx,-4(%edi)
	movl 76(%esp),%ecx
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
LcS3Y:
	movl $12,904(%ebx)
LcS3V:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _sRt6_info - _sRt6_info_dsp
.text
	.align 2
_sRt7_info_dsp:
.text
	.align 2
	.long	65539
	.long	3
	.long	9
_sRt7_info:
LcS3Z:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcS40
LcS41:
	addl $_cS3N_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 7(%esi),%eax
	movl 11(%esi),%ecx
	movl 3(%esi),%esi
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	jmp _stg_ap_v_fast
LcS40:
	jmp *-8(%ebx)
	.long  _sRt7_info - _sRt7_info_dsp
.text
	.align 2
_cS3N_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cS3N_info:
LcS3N:
	call 1f
1:	popl	%eax
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja LcS44
LcS43:
	addl $_sRt6_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 4(%ebp),%eax
	movl %eax,-8(%edi)
	movl 8(%ebp),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -20(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
LcS44:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cS3N_info - _cS3N_info_dsp
.text
	.align 2
_CoreziWorldziInternal_zdfMonadIOWorld1_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadIOWorld1_info
_CoreziWorldziInternal_zdfMonadIOWorld1_info:
LcS46:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcS4a
LcS49:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_sRt7_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 76(%esp),%eax
	movl %eax,-16(%edi)
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl 64(%esp),%eax
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -19(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	jmp *(%ebp)
LcS4a:
	movl $24,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfMonadIOWorld1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfMonadIOWorld1_info - _CoreziWorldziInternal_zdfMonadIOWorld1_info_dsp
.data
	.align 2
.align 0
_rQTz_closure:
	.long	_rQTz_info
.text
	.align 2
_sRty_info_dsp:
.text
	.align 2
	.long	131087
	.long	65536
	.long	11
_sRty_info:
LcS5N:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcS61
LcS62:
	movl 64(%esp),%eax
	addl $_cS5K_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cS5K_info
LcS5L:
	jmp *(%esi)
LcS61:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRty_info - _sRty_info_dsp
.text
	.align 2
_cS5K_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cS5K_info:
LcS5K:
	call 1f
1:	popl	%eax
	addl $_cS5Q_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cS5Q_info
LcS5R:
	jmp *(%esi)
	.long  _cS5K_info - _cS5K_info_dsp
.text
	.align 2
_cS5Q_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cS5Q_info:
LcS5Q:
	call 1f
1:	popl	%eax
	addl $_cS5V_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cS5V_info
LcS5W:
	jmp *(%esi)
	.long  _cS5Q_info - _cS5Q_info_dsp
.text
	.align 2
_cS5V_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cS5V_info:
LcS5V:
	call 1f
1:	popl	%eax
	addl $_cS60_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cS60_info
LcS66:
	jmp *(%esi)
	.long  _cS5V_info - _cS5V_info_dsp
.text
	.align 2
_cS60_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_cS60_info:
LcS60:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	movl 3(%esi),%edx
	cmpl %edx,%ecx
	jl LcS6j
LcS6k:
	cmpl %edx,%ecx
	sete %cl
	movzbl %cl,%ecx
	shll $2,%ecx
	movl L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr-(1b)+0(%eax),%eax
	movl (%ecx,%eax,1),%esi
	addl $8,%ebp
	jmp *(%ebp)
LcS6j:
	movl L_ghczmprim_GHCziTypes_True_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 2(%eax),%esi
	addl $8,%ebp
	jmp *(%ebp)
	.long  _cS60_info - _cS60_info_dsp
.text
	.align 2
_sRt9_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_sRt9_info:
LcS6r:
	call 1f
1:	popl	%eax
	leal -36(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcS6F
LcS6G:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_cS5u_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _cS5u_info
LcS5v:
	jmp *(%esi)
LcS6F:
	jmp *-16(%ebx)
	.long  _sRt9_info - _sRt9_info_dsp
.text
	.align 2
_cS5u_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cS5u_info:
LcS5u:
	call 1f
1:	popl	%eax
	addl $_cS5z_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 11(%esi),%ecx
	movl 15(%esi),%edx
	movl 7(%esi),%esi
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	movl %eax,(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cS5z_info
LcS5A:
	jmp *(%esi)
	.long  _cS5u_info - _cS5u_info_dsp
.text
	.align 2
_cS5z_info_dsp:
.text
	.align 2
	.long	67
	.long	32
_cS5z_info:
LcS5z:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae LcS6x
LuS7h:
	addl $4,%ebp
	jmp _cS79_entry
LcS6x:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcS6N
LcS6M:
	movl 6(%esi),%ecx
	movl 10(%esi),%edx
	movl %eax,64(%esp)
	addl $_sRty_info-(1b)+0,%eax
	movl %eax,-4(%edi)
	movl 64(%esp),%eax
	addl $_cS6K_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,16(%ebx)
	leal -2(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,(%ebp)
	addl $-4,%ebp
	jmp _EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_extractBin_info
LcS6N:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cS5z_info - _cS5z_info_dsp
.text
	.align 2
_cS6K_info_dsp:
.text
	.align 2
	.long	196
	.long	32
_cS6K_info:
LcS6K:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae LcS78
LuS7i:
	addl $8,%ebp
	jmp _cS79_entry
LcS78:
	addl $_cS6W_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 2(%esi),%eax
	movl 10(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _cS6W_info
LcS6Z:
	jmp *(%esi)
	.long  _cS6K_info - _cS6K_info_dsp
.text
	.align 2
_cS6W_info_dsp:
.text
	.align 2
	.long	389
	.long	32
_cS6W_info:
LcS6W:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja LcS75
LcS74:
	movl L_EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_MinQueue_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl 4(%ebp),%eax
	movl %eax,-8(%edi)
	movl %esi,-4(%edi)
	movl 8(%ebp),%eax
	decl %eax
	movl %eax,(%edi)
	leal -10(%edi),%eax
	movl %eax,8(%ebp)
	addl $8,%ebp
	jmp _cS6C_entry
LcS75:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cS6W_info - _cS6W_info_dsp
.text
	.align 2
_cS79_entry:
LcS79:
	call 1f
1:	popl	%eax
	movl L_EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_Empty_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%ebp)
	addl $-4,%ebp
	jmp _cS6C_entry
.text
	.align 2
_cS6C_entry:
LcS6C:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl (%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja LcS7c
LcS7b:
	movl L_CoreziWorldziInternal_WorldState_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-16(%edi)
	movl 12(%ebp),%eax
	movl %eax,-12(%edi)
	movl %ecx,-8(%edi)
	movl 8(%ebp),%eax
	movl %eax,-4(%edi)
	movl 4(%ebp),%eax
	movl %eax,(%edi)
	leal -15(%edi),%esi
	addl $16,%ebp
	jmp *(%ebp)
LcS7c:
	movl $20,904(%ebx)
	movl %eax,%edx
	addl $_cS6B_info-(1b)+0,%edx
	movl %edx,(%ebp)
	movl %ecx,%esi
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
.text
	.align 2
_cS6B_info_dsp:
.text
	.align 2
	.long	67
	.long	32
_cS6B_info:
LcS6B:
	movl %esi,(%ebp)
	jmp _cS6C_entry
	.long  _cS6B_info - _cS6B_info_dsp
.text
	.align 2
_sRtK_info_dsp:
.text
	.align 2
	.long	131087
	.long	1
	.long	10
_sRtK_info:
LcS7B:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja LcS7F
LcS7E:
	movl %eax,64(%esp)
	movl 2(%esi),%eax
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 76(%esp),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_p_fast
LcS7F:
	movl $12,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRtK_info - _sRtK_info_dsp
.text
	.align 2
_rQTz_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
_rQTz_info:
LcS7G:
	call 1f
1:	popl	%eax
	addl $36,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcS7K
LcS7J:
	movl %eax,%edx
	addl $_sRt9_info-(1b)+0,%edx
	movl %edx,-32(%edi)
	movl %ecx,-20(%edi)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-12(%edi)
	leal -32(%edi),%ecx
	movl %ecx,-8(%edi)
	addl $_sRtK_info-(1b)+0,%eax
	movl %eax,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	jmp *(%ebp)
LcS7K:
	movl $36,904(%ebx)
	movl %ecx,8(%ebx)
	movl %eax,%esi
	addl $_rQTz_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQTz_info - _rQTz_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfApplicativeWorld2_closure
_CoreziWorldziInternal_zdfApplicativeWorld2_closure:
	.long	_CoreziWorldziInternal_zdfApplicativeWorld2_info
.text
	.align 2
_sRtQ_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_sRtQ_info:
LcS9Q:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -8(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcS9R
LcS9S:
	addl $_cS9N_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 3(%esi),%eax
	movl %ecx,%esi
	movl %eax,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cS9N_info
LcS9O:
	jmp *(%esi)
LcS9R:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRtQ_info - _sRtQ_info_dsp
.text
	.align 2
_cS9N_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cS9N_info:
LcS9N:
	movl %esi,8(%ebx)
	movl 4(%ebp),%esi
	addl $8,%ebp
	jmp _stg_ap_p_fast
	.long  _cS9N_info - _cS9N_info_dsp
.text
	.align 2
_sRtZ_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRtZ_info:
LcSa5:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSa6
LcSa7:
	addl $_cSa2_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cSa2_info
LcSa3:
	jmp *(%esi)
LcSa6:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRtZ_info - _sRtZ_info_dsp
.text
	.align 2
_cSa2_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cSa2_info:
LcSa2:
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 7(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_pp_fast
	.long  _cSa2_info - _cSa2_info_dsp
.text
	.align 2
_sRu0_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRu0_info:
LcSac:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcSag
LcSaf:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_sRtQ_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%ecx
	addl $_sRtZ_info-(1b)+0,%ecx
	movl %ecx,-8(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-4(%edi)
	leal -15(%edi),%ecx
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
LcSag:
	movl $20,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRu0_info - _sRu0_info_dsp
.text
	.align 2
_CoreziWorldziInternal_zdfApplicativeWorld2_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfApplicativeWorld2_info
_CoreziWorldziInternal_zdfApplicativeWorld2_info:
LcSah:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcSal
LcSak:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-28(%edi)
	movl 76(%esp),%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	addl $_sRu0_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -28(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
LcSal:
	movl $32,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfApplicativeWorld2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfApplicativeWorld2_info - _CoreziWorldziInternal_zdfApplicativeWorld2_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfApplicativeWorld1_closure
_CoreziWorldziInternal_zdfApplicativeWorld1_closure:
	.long	_CoreziWorldziInternal_zdfApplicativeWorld1_info
.text
	.align 2
_sRuf_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRuf_info:
LcSby:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSbC
LcSbD:
	addl $_cSbv_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cSbv_info
LcSbw:
	jmp *(%esi)
LcSbC:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRuf_info - _sRuf_info_dsp
.text
	.align 2
_cSbv_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cSbv_info:
LcSbv:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcSbG
LcSbF:
	movl 7(%esi),%ecx
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 8(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_p_fast
LcSbG:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSbv_info - _cSbv_info_dsp
.text
	.align 2
_sRug_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRug_info:
LcSbI:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSbJ
LcSbK:
	addl $_cSbl_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cSbl_info
LcSbm:
	jmp *(%esi)
LcSbJ:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRug_info - _sRug_info_dsp
.text
	.align 2
_cSbl_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cSbl_info:
LcSbl:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcSbN
LcSbM:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_sRuf_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl 8(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%eax
	movl %eax,16(%ebx)
	movl %edx,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_pp_fast
LcSbN:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSbl_info - _cSbl_info_dsp
.text
	.align 2
_sRuh_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRuh_info:
LcSbP:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcSbT
LcSbS:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_sRug_info-(1b)+0,%edx
	movl %edx,-8(%edi)
	movl 76(%esp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
LcSbT:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRuh_info - _sRuh_info_dsp
.text
	.align 2
_CoreziWorldziInternal_zdfApplicativeWorld1_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfApplicativeWorld1_info
_CoreziWorldziInternal_zdfApplicativeWorld1_info:
LcSbU:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcSbY
LcSbX:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-28(%edi)
	movl 76(%esp),%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	addl $_sRuh_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -28(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
LcSbY:
	movl $32,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfApplicativeWorld1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfApplicativeWorld1_info - _CoreziWorldziInternal_zdfApplicativeWorld1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_znz3fU2_closure
_CoreziWorldziInternal_znz3fU2_closure:
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Empty_static_info
	.long	_ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	1
.data
	.align 2
.align 0
_rQTB_closure:
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Empty_static_info
	.long	_ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	1
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_hole1_closure
_CoreziWorldziInternal_hole1_closure:
	.long	_CoreziWorldziInternal_hole1_info
.text
	.align 2
_sRuq_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_sRuq_info:
LcScY:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcScZ
LcSd0:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja LcSd2
LcSd1:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl %eax,64(%esp)
	movl 16(%ecx),%eax
	movl 20(%ecx),%ecx
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_base_GHCziSTRef_STRef_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%ecx
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-8(%edi)
	leal -15(%edi),%ecx
	movl %ecx,-4(%edi)
	movl 76(%esp),%ecx
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
LcSd2:
	movl $20,904(%ebx)
LcScZ:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _sRuq_info - _sRuq_info_dsp
.text
	.align 2
_sRur_info_dsp:
.text
	.align 2
	.long	65539
	.long	2
	.long	12
_sRur_info:
LcSd3:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcSd4
LcSd5:
	movl %eax,%ecx
	addl $_cScQ_info-(1b)+0,%ecx
	movl %ecx,-12(%ebp)
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,%esi
	addl $_rQTB_closure-(1b)+2,%esi
	movl %ecx,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	jmp _stg_newMutVarzh
LcSd4:
	jmp *-8(%ebx)
	.long  _sRur_info - _sRur_info_dsp
.text
	.align 2
_cScQ_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cScQ_info:
LcScQ:
	call 1f
1:	popl	%eax
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja LcSd8
LcSd7:
	addl $_sRuq_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 4(%ebp),%eax
	movl %eax,-8(%edi)
	movl 8(%ebp),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -20(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
LcSd8:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cScQ_info - _cScQ_info_dsp
.text
	.align 2
_CoreziWorldziInternal_hole1_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziWorldziInternal_hole1_info
_CoreziWorldziInternal_hole1_info:
LcSda:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja LcSde
LcSdd:
	movl %eax,64(%esp)
	addl $_sRur_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl 64(%esp),%eax
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	jmp *(%ebp)
LcSde:
	movl $20,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziWorldziInternal_hole1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_hole1_info - _CoreziWorldziInternal_hole1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_oneway_closure
_CoreziWorldziInternal_oneway_closure:
	.long	_CoreziWorldziInternal_oneway_info
.text
	.align 2
_CoreziWorldziInternal_oneway_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziWorldziInternal_oneway_info
_CoreziWorldziInternal_oneway_info:
LcSdQ:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcSdU
LcSdT:
	movl L_CoreziWorldziInternal_Mail_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%edi)
	movl %ecx,-4(%edi)
	movl L_CoreziWorldziInternal_oneway1_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	addl $3,%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
LcSdU:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	movl L_CoreziWorldziInternal_oneway_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_oneway_info - _CoreziWorldziInternal_oneway_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdwa4_closure
_CoreziWorldziInternal_zdwa4_closure:
	.long	_CoreziWorldziInternal_zdwa4_info
.text
	.align 2
_sRuF_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRuF_info:
LcSex:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSey
LcSez:
	addl $_cSeu_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cSeu_info
LcSev:
	jmp *(%esi)
LcSey:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRuF_info - _sRuF_info_dsp
.text
	.align 2
_cSeu_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cSeu_info:
LcSeu:
	movl 4(%ebp),%eax
	movl %eax,24(%ebx)
	movl 7(%esi),%eax
	movl %eax,16(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl 8(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_ppp_fast
	.long  _cSeu_info - _cSeu_info_dsp
.text
	.align 2
_sRuG_info_dsp:
.text
	.align 2
	.long	65541
	.long	3
	.long	9
_sRuG_info:
LcSeE:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -16(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSeF
LcSeG:
	addl $_cSek_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _cSek_info
LcSel:
	jmp *(%esi)
LcSeF:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRuG_info - _sRuG_info_dsp
.text
	.align 2
_cSek_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_cSek_info:
LcSek:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcSeJ
LcSeI:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_sRuF_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl 12(%ebp),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,24(%ebx)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	movl 4(%ebp),%esi
	addl $16,%ebp
	jmp _stg_ap_ppp_fast
LcSeJ:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSek_info - _cSek_info_dsp
.text
	.align 2
_CoreziWorldziInternal_zdwa4_info_dsp:
.text
	.align 2
	.long	262168
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdwa4_info
_CoreziWorldziInternal_zdwa4_info:
LcSeL:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcSeP
LcSeO:
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_sRuG_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_zdwa2_info
LcSeP:
	movl $16,904(%ebx)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdwa4_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdwa4_info - _CoreziWorldziInternal_zdwa4_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_interpret1_closure
_CoreziWorldziInternal_interpret1_closure:
	.long	_CoreziWorldziInternal_interpret1_info
.text
	.align 2
_CoreziWorldziInternal_interpret1_info_dsp:
.text
	.align 2
	.long	262168
	.long	0
	.long	15
.globl _CoreziWorldziInternal_interpret1_info
_CoreziWorldziInternal_interpret1_info:
LcSfu:
	call 1f
1:	popl	%eax
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	movl %eax,88(%esp)
	leal -4(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcSfv
LcSfw:
	movl 64(%esp),%eax
	addl $_cSfr_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	addl $-4,%ebp
	jmp _CoreziWorldziInternal_zdwa4_info
LcSfv:
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_interpret1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_interpret1_info - _CoreziWorldziInternal_interpret1_info_dsp
.text
	.align 2
_cSfr_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cSfr_info:
LcSfr:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcSfz
LcSfy:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcSfz:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSfr_info - _cSfr_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_interpret_closure
_CoreziWorldziInternal_interpret_closure:
	.long	_CoreziWorldziInternal_interpret_info
.text
	.align 2
_CoreziWorldziInternal_interpret_info_dsp:
.text
	.align 2
	.long	262168
	.long	0
	.long	15
.globl _CoreziWorldziInternal_interpret_info
_CoreziWorldziInternal_interpret_info:
LcSfQ:
	movl 32(%ebx),%eax
	movl %eax,32(%ebx)
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_interpret1_info
	.long  _CoreziWorldziInternal_interpret_info - _CoreziWorldziInternal_interpret_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_obtain_closure
_CoreziWorldziInternal_obtain_closure:
	.long	_CoreziWorldziInternal_obtain_info
.text
	.align 2
_CoreziWorldziInternal_obtain_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_obtain_info
_CoreziWorldziInternal_obtain_info:
LcSg5:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_obtain1_info
	.long  _CoreziWorldziInternal_obtain_info - _CoreziWorldziInternal_obtain_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_hole_closure
_CoreziWorldziInternal_hole_closure:
	.long	_CoreziWorldziInternal_hole_info
.text
	.align 2
_CoreziWorldziInternal_hole_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziWorldziInternal_hole_info
_CoreziWorldziInternal_hole_info:
LcSgj:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_hole1_info
	.long  _CoreziWorldziInternal_hole_info - _CoreziWorldziInternal_hole_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_consume_closure
_CoreziWorldziInternal_consume_closure:
	.long	_CoreziWorldziInternal_consume_info
.text
	.align 2
_CoreziWorldziInternal_consume_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_consume_info
_CoreziWorldziInternal_consume_info:
LcSgw:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_consume1_info
	.long  _CoreziWorldziInternal_consume_info - _CoreziWorldziInternal_consume_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_waitUntil2_closure
_CoreziWorldziInternal_waitUntil2_closure:
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Empty_static_info
	.long	_ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	1
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdwa6_closure
_CoreziWorldziInternal_zdwa6_closure:
	.long	_CoreziWorldziInternal_zdwa6_info
	.long	0
.text
	.align 2
_sRv7_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_sRv7_info:
LcShl:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcShm
LcShn:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcShp
LcSho:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	movl %eax,64(%esp)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
LcShp:
	movl $12,904(%ebx)
LcShm:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _sRv7_info - _sRv7_info_dsp
.text
	.align 2
_sRv9_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_sRv9_info:
LcShv:
	movl 3(%esi),%esi
	andl $-8,%esi
	jmp *(%esi)
	.long  _sRv9_info - _sRv9_info_dsp
.text
	.align 2
_sRve_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRve_info)+0
	.long	65541
	.long	1
	.long	65546
_sRve_info:
LcShG:
	call 1f
1:	popl	%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcShH
LcShI:
	movl %eax,%ecx
	addl $_cShD_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl 3(%esi),%ecx
	movl %ecx,16(%ebx)
	movl L_CoreziWorldziInternal_switch2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	addl $-4,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrent_zdwa_info
LcShH:
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRve_info - _sRve_info_dsp
.text
	.align 2
_cShD_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cShD_info:
LcShD:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcShL
LcShK:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcShL:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cShD_info - _cShD_info_dsp
.text
	.align 2
_sRvh_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRvh_info)+0
	.long	65541
	.long	2
	.long	65548
_sRvh_info:
LcShM:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcShQ
LcShR:
	addl $_cShb_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cShb_info
LcShc:
	jmp *(%esi)
LcShQ:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRvh_info - _sRvh_info_dsp
.text
	.align 2
_cShb_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cShb_info)+0
	.long	2
	.long	65568
_cShb_info:
LcShb:
	call 1f
1:	popl	%eax
	addl $36,%edi
	cmpl 856(%ebx),%edi
	ja LcShU
LcShT:
	movl 7(%esi),%ecx
	movl %eax,%edx
	addl $_sRv7_info-(1b)+0,%edx
	movl %edx,-32(%edi)
	movl 4(%ebp),%edx
	movl %edx,-20(%edi)
	movl %ecx,-16(%edi)
	movl %eax,%ecx
	addl $_sRv9_info-(1b)+0,%ecx
	movl %ecx,-12(%edi)
	leal -32(%edi),%ecx
	movl %ecx,-8(%edi)
	movl %eax,%ecx
	addl $_sRve_info-(1b)+0,%ecx
	movl %ecx,-4(%edi)
	leal -11(%edi),%ecx
	movl %ecx,(%edi)
	movl 8(%ebp),%ecx
	addl $_cShN_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	leal -3(%edi),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $8,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_zdwa2_info
LcShU:
	movl $36,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cShb_info - _cShb_info_dsp
.text
	.align 2
_cShN_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cShN_info:
LcShN:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcShX
LcShW:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcShX:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cShN_info - _cShN_info_dsp
.text
	.align 2
_sRuZ_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRuZ_info:
LcSia:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcSie
LcSid:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-8(%edi)
	movl %ecx,-4(%edi)
	movl 76(%esp),%ecx
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
LcSie:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRuZ_info - _sRuZ_info_dsp
.text
	.align 2
_sRv2_info_dsp:
.text
	.align 2
	.long	131087
	.long	1
	.long	10
_sRv2_info:
LcSii:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	movl %esi,%eax
	movl %edx,76(%esp)
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSij
LcSik:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcSim
LcSil:
	movl 2(%eax),%eax
	movl 64(%esp),%edx
	addl $_sRuZ_info-(1b)+0,%edx
	movl %edx,-8(%edi)
	movl 76(%esp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%ecx
	movl %ecx,%edx
	addl $_cSif_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	leal -7(%edi),%edx
	movl %edx,24(%ebx)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%ecx),%ecx
	incl %ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	addl $-4,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_zdwa1_info
LcSim:
	movl $12,904(%ebx)
LcSij:
	movl %ecx,16(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp *-8(%ebx)
	.long  _sRv2_info - _sRv2_info_dsp
.text
	.align 2
_cSif_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cSif_info:
LcSif:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcSip
LcSio:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcSip:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSif_info - _cSif_info_dsp
.text
	.align 2
_sRvi_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRvi_info)+0
	.long	4
	.long	65552
_sRvi_info:
LcSiq:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSir
LcSis:
	addl $28,%edi
	cmpl 856(%ebx),%edi
	ja LcSiu
LcSit:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl %eax,64(%esp)
	movl 16(%ecx),%eax
	movl %edx,76(%esp)
	movl 20(%ecx),%edx
	movl 24(%ecx),%ecx
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	movl L_base_GHCziSTRef_STRef_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-24(%edi)
	movl %ecx,-20(%edi)
	movl 64(%esp),%eax
	movl %eax,%ecx
	addl $_sRvh_info-(1b)+0,%ecx
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	leal -23(%edi),%ecx
	movl %ecx,-8(%edi)
	addl $_sRv2_info-(1b)+0,%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -15(%edi),%eax
	movl %eax,24(%ebx)
	movl 88(%esp),%eax
	movl %eax,16(%ebx)
	leal -2(%edi),%eax
	movl %eax,8(%ebx)
	movl 76(%esp),%eax
	movl %eax,%esi
	addl $-12,%ebp
	jmp _stg_ap_ppp_fast
LcSiu:
	movl $28,904(%ebx)
LcSir:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _sRvi_info - _sRvi_info_dsp
.text
	.align 2
_sRvj_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRvj_info)+0
	.long	65539
	.long	3
	.long	65545
_sRvj_info:
LcSiv:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcSiw
LcSix:
	movl %eax,%ecx
	addl $_cSgZ_info-(1b)+0,%ecx
	movl %ecx,-16(%ebp)
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_CoreziWorldziInternal_waitUntil2_closure$non_lazy_ptr-(1b)+0(%ecx),%ecx
	leal 2(%ecx),%esi
	movl 76(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-16,%ebp
	jmp _stg_newMutVarzh
LcSiw:
	jmp *-8(%ebx)
	.long  _sRvj_info - _sRvj_info_dsp
.text
	.align 2
_cSgZ_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cSgZ_info)+0
	.long	3
	.long	65568
_cSgZ_info:
LcSgZ:
	call 1f
1:	popl	%eax
	addl $28,%edi
	cmpl 856(%ebx),%edi
	ja LcSiA
LcSiz:
	addl $_sRvi_info-(1b)+0,%eax
	movl %eax,-24(%edi)
	movl 4(%ebp),%eax
	movl %eax,-12(%edi)
	movl 8(%ebp),%eax
	movl %eax,-8(%edi)
	movl 12(%ebp),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -24(%edi),%esi
	addl $16,%ebp
	jmp *(%ebp)
LcSiA:
	movl $28,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSgZ_info - _cSgZ_info_dsp
.text
	.align 2
_CoreziWorldziInternal_zdwa6_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_zdwa6_info)+0
	.long	196631
	.long	0
	.long	1114127
.globl _CoreziWorldziInternal_zdwa6_info
_CoreziWorldziInternal_zdwa6_info:
LcSiB:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcSiF
LcSiE:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_sRvj_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	jmp *(%ebp)
LcSiF:
	movl $16,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdwa6_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdwa6_info - _CoreziWorldziInternal_zdwa6_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_waitUntil1_closure
_CoreziWorldziInternal_waitUntil1_closure:
	.long	_CoreziWorldziInternal_waitUntil1_info
	.long	0
.text
	.align 2
_CoreziWorldziInternal_waitUntil1_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_waitUntil1_info)+16
	.long	196631
	.long	0
	.long	196623
.globl _CoreziWorldziInternal_waitUntil1_info
_CoreziWorldziInternal_waitUntil1_info:
LcSku:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -4(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcSkv
LcSkw:
	movl 64(%esp),%eax
	addl $_cSkr_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	addl $-4,%ebp
	jmp _CoreziWorldziInternal_zdwa6_info
LcSkv:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_waitUntil1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_waitUntil1_info - _CoreziWorldziInternal_waitUntil1_info_dsp
.text
	.align 2
_cSkr_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cSkr_info:
LcSkr:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcSkz
LcSky:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcSkz:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSkr_info - _cSkr_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_waitUntil_closure
_CoreziWorldziInternal_waitUntil_closure:
	.long	_CoreziWorldziInternal_waitUntil_info
	.long	0
.text
	.align 2
_CoreziWorldziInternal_waitUntil_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_waitUntil_info)+20
	.long	196631
	.long	0
	.long	65551
.globl _CoreziWorldziInternal_waitUntil_info
_CoreziWorldziInternal_waitUntil_info:
LcSkQ:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_waitUntil1_info
	.long  _CoreziWorldziInternal_waitUntil_info - _CoreziWorldziInternal_waitUntil_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_switch_closure
_CoreziWorldziInternal_switch_closure:
	.long	_CoreziWorldziInternal_switch_info
	.long	0
.text
	.align 2
_CoreziWorldziInternal_switch_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_switch_info)+4
	.long	131087
	.long	0
	.long	65551
.globl _CoreziWorldziInternal_switch_info
_CoreziWorldziInternal_switch_info:
LcSl4:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_switch1_info
	.long  _CoreziWorldziInternal_switch_info - _CoreziWorldziInternal_switch_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_emitting_closure
_CoreziWorldziInternal_emitting_closure:
	.long	_CoreziWorldziInternal_emitting_info
.text
	.align 2
_CoreziWorldziInternal_emitting_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziWorldziInternal_emitting_info
_CoreziWorldziInternal_emitting_info:
LcSlh:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _base_GHCziBase_const_info
	.long  _CoreziWorldziInternal_emitting_info - _CoreziWorldziInternal_emitting_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_liftW_closure
_CoreziWorldziInternal_liftW_closure:
	.long	_CoreziWorldziInternal_liftW_info
.text
	.align 2
_CoreziWorldziInternal_liftW_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_liftW_info
_CoreziWorldziInternal_liftW_info:
LcSlu:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_liftW1_info
	.long  _CoreziWorldziInternal_liftW_info - _CoreziWorldziInternal_liftW_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_viewManager_closure
_CoreziWorldziInternal_viewManager_closure:
	.long	_CoreziWorldziInternal_viewManager_info
.text
	.align 2
_sRvI_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_sRvI_info:
LcSlZ:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSm0
LcSm1:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja LcSm3
LcSm2:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	movl L_stg_sel_2_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
LcSm3:
	movl $16,904(%ebx)
LcSm0:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _sRvI_info - _sRvI_info_dsp
.text
	.align 2
_sRvB_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_sRvB_info:
LcSmc:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -16(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSml
LcSmm:
	addl $_cSm9_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 3(%esi),%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cSm9_info
LcSma:
	jmp *(%esi)
LcSml:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRvB_info - _sRvB_info_dsp
.text
	.align 2
_cSm9_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSm9_info:
LcSm9:
	call 1f
1:	popl	%eax
	addl $_cSmf_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl 15(%esi),%edx
	movl 4(%ebp),%esi
	movl %ecx,-4(%ebp)
	movl %edx,(%ebp)
	movl %eax,4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cSmf_info
LcSmg:
	jmp *(%esi)
	.long  _cSm9_info - _cSm9_info_dsp
.text
	.align 2
_cSmf_info_dsp:
.text
	.align 2
	.long	131
	.long	32
_cSmf_info:
LcSmf:
	call 1f
1:	popl	%eax
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja LcSmq
LcSmp:
	movl L_CoreziWorldziInternal_WorldState_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-16(%edi)
	movl 12(%ebp),%eax
	movl %eax,-12(%edi)
	movl 4(%ebp),%eax
	movl %eax,-8(%edi)
	movl %esi,-4(%edi)
	movl 8(%ebp),%eax
	movl %eax,(%edi)
	leal -15(%edi),%esi
	addl $16,%ebp
	jmp *(%ebp)
LcSmq:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSmf_info - _cSmf_info_dsp
.text
	.align 2
_CoreziWorldziInternal_viewManager_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_viewManager_info
_CoreziWorldziInternal_viewManager_info:
LcSmt:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcSmu
LcSmv:
	addl $28,%edi
	cmpl 856(%ebx),%edi
	ja LcSmx
LcSmw:
	movl 64(%esp),%eax
	addl $_sRvI_info-(1b)+0,%eax
	movl %eax,-24(%edi)
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl 64(%esp),%eax
	movl %eax,%edx
	addl $_sRvB_info-(1b)+0,%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl 76(%esp),%ecx
	movl %ecx,8(%ebx)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	leal -3(%edi),%eax
	movl %eax,-8(%ebp)
	leal -24(%edi),%eax
	movl %eax,-4(%ebp)
	addl $-12,%ebp
	jmp _base_GHCziBase_fmap_info
LcSmx:
	movl $28,904(%ebx)
LcSmu:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_viewManager_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_viewManager_info - _CoreziWorldziInternal_viewManager_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfEqFramedzuzdczeze_closure
_CoreziWorldziInternal_zdfEqFramedzuzdczeze_closure:
	.long	_CoreziWorldziInternal_zdfEqFramedzuzdczeze_info
.text
	.align 2
_CoreziWorldziInternal_zdfEqFramedzuzdczeze_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfEqFramedzuzdczeze_info
_CoreziWorldziInternal_zdfEqFramedzuzdczeze_info:
LcSnn:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcSnr
LcSns:
	movl 64(%esp),%eax
	addl $_cSnk_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cSnk_info
LcSnl:
	jmp *(%esi)
LcSnr:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfEqFramedzuzdczeze_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfEqFramedzuzdczeze_info - _CoreziWorldziInternal_zdfEqFramedzuzdczeze_info_dsp
.text
	.align 2
_cSnk_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSnk_info:
LcSnk:
	call 1f
1:	popl	%eax
	addl $_cSnq_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cSnq_info
LcSnu:
	jmp *(%esi)
	.long  _cSnk_info - _cSnk_info_dsp
.text
	.align 2
_cSnq_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSnq_info:
LcSnq:
	movl 3(%esi),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $8,%ebp
	jmp _ghczmprim_GHCziClasses_eqInt_info
	.long  _cSnq_info - _cSnq_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfEqFramedzuzdczsze_closure
_CoreziWorldziInternal_zdfEqFramedzuzdczsze_closure:
	.long	_CoreziWorldziInternal_zdfEqFramedzuzdczsze_info
.text
	.align 2
_CoreziWorldziInternal_zdfEqFramedzuzdczsze_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfEqFramedzuzdczsze_info
_CoreziWorldziInternal_zdfEqFramedzuzdczsze_info:
LcSoc:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcSod
LcSoe:
	movl 64(%esp),%eax
	addl $_cSo3_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfEqFramed_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-16(%ebp)
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziClasses_zeze_info
LcSod:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfEqFramedzuzdczsze_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfEqFramedzuzdczsze_info - _CoreziWorldziInternal_zdfEqFramedzuzdczsze_info_dsp
.text
	.align 2
_cSo3_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cSo3_info:
LcSo3:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae LcSoa
LcSob:
	movl L_ghczmprim_GHCziTypes_True_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 2(%eax),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcSoa:
	movl L_ghczmprim_GHCziTypes_False_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $4,%ebp
	jmp *(%ebp)
	.long  _cSo3_info - _cSo3_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfEqFramed_closure
_CoreziWorldziInternal_zdfEqFramed_closure:
	.long	_ghczmprim_GHCziClasses_DZCEq_static_info
	.long	_CoreziWorldziInternal_zdfEqFramedzuzdczeze_closure+2
	.long	_CoreziWorldziInternal_zdfEqFramedzuzdczsze_closure+2
	.long	1
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfOrdFramedzuzdczgze_closure
_CoreziWorldziInternal_zdfOrdFramedzuzdczgze_closure:
	.long	_CoreziWorldziInternal_zdfOrdFramedzuzdczgze_info
.text
	.align 2
_CoreziWorldziInternal_zdfOrdFramedzuzdczgze_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfOrdFramedzuzdczgze_info
_CoreziWorldziInternal_zdfOrdFramedzuzdczgze_info:
LcSp4:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcSpi
LcSpj:
	movl 64(%esp),%eax
	addl $_cSp1_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cSp1_info
LcSp2:
	jmp *(%esi)
LcSpi:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfOrdFramedzuzdczgze_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfOrdFramedzuzdczgze_info - _CoreziWorldziInternal_zdfOrdFramedzuzdczgze_info_dsp
.text
	.align 2
_cSp1_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSp1_info:
LcSp1:
	call 1f
1:	popl	%eax
	addl $_cSp7_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cSp7_info
LcSp8:
	jmp *(%esi)
	.long  _cSp1_info - _cSp1_info_dsp
.text
	.align 2
_cSp7_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSp7_info:
LcSp7:
	call 1f
1:	popl	%eax
	addl $_cSpc_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cSpc_info
LcSpd:
	jmp *(%esi)
	.long  _cSp7_info - _cSp7_info_dsp
.text
	.align 2
_cSpc_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSpc_info:
LcSpc:
	call 1f
1:	popl	%eax
	addl $_cSph_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cSph_info
LcSpn:
	jmp *(%esi)
	.long  _cSpc_info - _cSpc_info_dsp
.text
	.align 2
_cSph_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_cSph_info:
LcSph:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	cmpl 3(%esi),%ecx
	jl LcSpA
LcSpB:
	movl L_ghczmprim_GHCziTypes_True_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 2(%eax),%esi
	addl $8,%ebp
	jmp *(%ebp)
LcSpA:
	movl L_ghczmprim_GHCziTypes_False_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $8,%ebp
	jmp *(%ebp)
	.long  _cSph_info - _cSph_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfOrdFramedzuzdczg_closure
_CoreziWorldziInternal_zdfOrdFramedzuzdczg_closure:
	.long	_CoreziWorldziInternal_zdfOrdFramedzuzdczg_info
.text
	.align 2
_CoreziWorldziInternal_zdfOrdFramedzuzdczg_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfOrdFramedzuzdczg_info
_CoreziWorldziInternal_zdfOrdFramedzuzdczg_info:
LcSqH:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcSqV
LcSqW:
	movl 64(%esp),%eax
	addl $_cSqE_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cSqE_info
LcSqF:
	jmp *(%esi)
LcSqV:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfOrdFramedzuzdczg_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfOrdFramedzuzdczg_info - _CoreziWorldziInternal_zdfOrdFramedzuzdczg_info_dsp
.text
	.align 2
_cSqE_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSqE_info:
LcSqE:
	call 1f
1:	popl	%eax
	addl $_cSqK_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cSqK_info
LcSqL:
	jmp *(%esi)
	.long  _cSqE_info - _cSqE_info_dsp
.text
	.align 2
_cSqK_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSqK_info:
LcSqK:
	call 1f
1:	popl	%eax
	addl $_cSqP_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cSqP_info
LcSqQ:
	jmp *(%esi)
	.long  _cSqK_info - _cSqK_info_dsp
.text
	.align 2
_cSqP_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSqP_info:
LcSqP:
	call 1f
1:	popl	%eax
	addl $_cSqU_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cSqU_info
LcSr0:
	jmp *(%esi)
	.long  _cSqP_info - _cSqP_info_dsp
.text
	.align 2
_cSqU_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_cSqU_info:
LcSqU:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	movl 3(%esi),%edx
	cmpl %edx,%ecx
	jl LcSro
LcSrp:
	cmpl %edx,%ecx
	je LcSro
LcSrl:
	movl L_ghczmprim_GHCziTypes_True_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 2(%eax),%esi
	addl $8,%ebp
	jmp *(%ebp)
LcSro:
	movl L_ghczmprim_GHCziTypes_False_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $8,%ebp
	jmp *(%ebp)
	.long  _cSqU_info - _cSqU_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfOrdFramedzuzdczlze_closure
_CoreziWorldziInternal_zdfOrdFramedzuzdczlze_closure:
	.long	_CoreziWorldziInternal_zdfOrdFramedzuzdczlze_info
.text
	.align 2
_CoreziWorldziInternal_zdfOrdFramedzuzdczlze_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfOrdFramedzuzdczlze_info
_CoreziWorldziInternal_zdfOrdFramedzuzdczlze_info:
LcSsq:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcSsE
LcSsF:
	movl 64(%esp),%eax
	addl $_cSsn_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cSsn_info
LcSso:
	jmp *(%esi)
LcSsE:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfOrdFramedzuzdczlze_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfOrdFramedzuzdczlze_info - _CoreziWorldziInternal_zdfOrdFramedzuzdczlze_info_dsp
.text
	.align 2
_cSsn_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSsn_info:
LcSsn:
	call 1f
1:	popl	%eax
	addl $_cSst_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cSst_info
LcSsu:
	jmp *(%esi)
	.long  _cSsn_info - _cSsn_info_dsp
.text
	.align 2
_cSst_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSst_info:
LcSst:
	call 1f
1:	popl	%eax
	addl $_cSsy_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cSsy_info
LcSsz:
	jmp *(%esi)
	.long  _cSst_info - _cSst_info_dsp
.text
	.align 2
_cSsy_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSsy_info:
LcSsy:
	call 1f
1:	popl	%eax
	addl $_cSsD_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cSsD_info
LcSsJ:
	jmp *(%esi)
	.long  _cSsy_info - _cSsy_info_dsp
.text
	.align 2
_cSsD_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_cSsD_info:
LcSsD:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	movl 3(%esi),%edx
	cmpl %edx,%ecx
	jl LcSsW
LcSsX:
	cmpl %edx,%ecx
	sete %cl
	movzbl %cl,%ecx
	shll $2,%ecx
	movl L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr-(1b)+0(%eax),%eax
	movl (%ecx,%eax,1),%esi
	addl $8,%ebp
	jmp *(%ebp)
LcSsW:
	movl L_ghczmprim_GHCziTypes_True_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 2(%eax),%esi
	addl $8,%ebp
	jmp *(%ebp)
	.long  _cSsD_info - _cSsD_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfOrdFramedzuzdcmax_closure
_CoreziWorldziInternal_zdfOrdFramedzuzdcmax_closure:
	.long	_CoreziWorldziInternal_zdfOrdFramedzuzdcmax_info
.text
	.align 2
_CoreziWorldziInternal_zdfOrdFramedzuzdcmax_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfOrdFramedzuzdcmax_info
_CoreziWorldziInternal_zdfOrdFramedzuzdcmax_info:
LcSu6:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcSuk
LcSul:
	movl 64(%esp),%eax
	addl $_cSu3_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cSu3_info
LcSu4:
	jmp *(%esi)
LcSuk:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfOrdFramedzuzdcmax_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfOrdFramedzuzdcmax_info - _CoreziWorldziInternal_zdfOrdFramedzuzdcmax_info_dsp
.text
	.align 2
_cSu3_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSu3_info:
LcSu3:
	call 1f
1:	popl	%eax
	addl $_cSu9_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %esi,%eax
	movl 3(%esi),%ecx
	movl 4(%ebp),%esi
	movl %ecx,(%ebp)
	movl %eax,4(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _cSu9_info
LcSua:
	jmp *(%esi)
	.long  _cSu3_info - _cSu3_info_dsp
.text
	.align 2
_cSu9_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cSu9_info:
LcSu9:
	call 1f
1:	popl	%eax
	addl $_cSue_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %esi,%eax
	movl 3(%esi),%ecx
	movl 4(%ebp),%esi
	movl %ecx,(%ebp)
	movl %eax,4(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _cSue_info
LcSuf:
	jmp *(%esi)
	.long  _cSu9_info - _cSu9_info_dsp
.text
	.align 2
_cSue_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_cSue_info:
LcSue:
	call 1f
1:	popl	%eax
	addl $_cSuj_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cSuj_info
LcSup:
	jmp *(%esi)
	.long  _cSue_info - _cSue_info_dsp
.text
	.align 2
_cSuj_info_dsp:
.text
	.align 2
	.long	67
	.long	32
_cSuj_info:
LcSuj:
	movl 8(%ebp),%eax
	movl 4(%ebp),%ecx
	movl 3(%esi),%edx
	cmpl %edx,%ecx
	jl LcSuN
LcSuO:
	cmpl %edx,%ecx
	je LcSuN
LcSuK:
	movl 12(%ebp),%esi
	andl $-8,%esi
	addl $16,%ebp
	jmp *(%esi)
LcSuN:
	movl %eax,%esi
	andl $-8,%esi
	addl $16,%ebp
	jmp *(%esi)
	.long  _cSuj_info - _cSuj_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfOrdFramedzuzdcmin_closure
_CoreziWorldziInternal_zdfOrdFramedzuzdcmin_closure:
	.long	_CoreziWorldziInternal_zdfOrdFramedzuzdcmin_info
.text
	.align 2
_CoreziWorldziInternal_zdfOrdFramedzuzdcmin_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfOrdFramedzuzdcmin_info
_CoreziWorldziInternal_zdfOrdFramedzuzdcmin_info:
LcSvS:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcSw6
LcSw7:
	movl 64(%esp),%eax
	addl $_cSvP_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cSvP_info
LcSvQ:
	jmp *(%esi)
LcSw6:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfOrdFramedzuzdcmin_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfOrdFramedzuzdcmin_info - _CoreziWorldziInternal_zdfOrdFramedzuzdcmin_info_dsp
.text
	.align 2
_cSvP_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSvP_info:
LcSvP:
	call 1f
1:	popl	%eax
	addl $_cSvV_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %esi,%eax
	movl 3(%esi),%ecx
	movl 4(%ebp),%esi
	movl %ecx,(%ebp)
	movl %eax,4(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _cSvV_info
LcSvW:
	jmp *(%esi)
	.long  _cSvP_info - _cSvP_info_dsp
.text
	.align 2
_cSvV_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cSvV_info:
LcSvV:
	call 1f
1:	popl	%eax
	addl $_cSw0_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %esi,%eax
	movl 3(%esi),%ecx
	movl 4(%ebp),%esi
	movl %ecx,(%ebp)
	movl %eax,4(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _cSw0_info
LcSw1:
	jmp *(%esi)
	.long  _cSvV_info - _cSvV_info_dsp
.text
	.align 2
_cSw0_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_cSw0_info:
LcSw0:
	call 1f
1:	popl	%eax
	addl $_cSw5_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cSw5_info
LcSwb:
	jmp *(%esi)
	.long  _cSw0_info - _cSw0_info_dsp
.text
	.align 2
_cSw5_info_dsp:
.text
	.align 2
	.long	67
	.long	32
_cSw5_info:
LcSw5:
	movl 12(%ebp),%eax
	movl 4(%ebp),%ecx
	movl 3(%esi),%edx
	cmpl %edx,%ecx
	jl LcSwz
LcSwA:
	cmpl %edx,%ecx
	je LcSwz
LcSww:
	movl 8(%ebp),%esi
	andl $-8,%esi
	addl $16,%ebp
	jmp *(%esi)
LcSwz:
	movl %eax,%esi
	andl $-8,%esi
	addl $16,%ebp
	jmp *(%esi)
	.long  _cSw5_info - _cSw5_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfOrdFramedzuzdczl_closure
_CoreziWorldziInternal_zdfOrdFramedzuzdczl_closure:
	.long	_CoreziWorldziInternal_zdfOrdFramedzuzdczl_info
.text
	.align 2
_CoreziWorldziInternal_zdfOrdFramedzuzdczl_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfOrdFramedzuzdczl_info
_CoreziWorldziInternal_zdfOrdFramedzuzdczl_info:
LcSxt:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcSxH
LcSxI:
	movl 64(%esp),%eax
	addl $_cSxq_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cSxq_info
LcSxr:
	jmp *(%esi)
LcSxH:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfOrdFramedzuzdczl_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfOrdFramedzuzdczl_info - _CoreziWorldziInternal_zdfOrdFramedzuzdczl_info_dsp
.text
	.align 2
_cSxq_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSxq_info:
LcSxq:
	call 1f
1:	popl	%eax
	addl $_cSxw_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cSxw_info
LcSxx:
	jmp *(%esi)
	.long  _cSxq_info - _cSxq_info_dsp
.text
	.align 2
_cSxw_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSxw_info:
LcSxw:
	call 1f
1:	popl	%eax
	addl $_cSxB_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cSxB_info
LcSxC:
	jmp *(%esi)
	.long  _cSxw_info - _cSxw_info_dsp
.text
	.align 2
_cSxB_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSxB_info:
LcSxB:
	call 1f
1:	popl	%eax
	addl $_cSxG_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cSxG_info
LcSxM:
	jmp *(%esi)
	.long  _cSxB_info - _cSxB_info_dsp
.text
	.align 2
_cSxG_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_cSxG_info:
LcSxG:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	cmpl 3(%esi),%ecx
	setl %cl
	movzbl %cl,%ecx
	shll $2,%ecx
	movl L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr-(1b)+0(%eax),%eax
	movl (%ecx,%eax,1),%esi
	addl $8,%ebp
	jmp *(%ebp)
	.long  _cSxG_info - _cSxG_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfOrdFramedzuzdccompare_closure
_CoreziWorldziInternal_zdfOrdFramedzuzdccompare_closure:
	.long	_CoreziWorldziInternal_zdfOrdFramedzuzdccompare_info
.text
	.align 2
_CoreziWorldziInternal_zdfOrdFramedzuzdccompare_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfOrdFramedzuzdccompare_info
_CoreziWorldziInternal_zdfOrdFramedzuzdccompare_info:
LcSyE:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcSyI
LcSyJ:
	movl 64(%esp),%eax
	addl $_cSyB_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cSyB_info
LcSyC:
	jmp *(%esi)
LcSyI:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfOrdFramedzuzdccompare_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfOrdFramedzuzdccompare_info - _CoreziWorldziInternal_zdfOrdFramedzuzdccompare_info_dsp
.text
	.align 2
_cSyB_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSyB_info:
LcSyB:
	call 1f
1:	popl	%eax
	addl $_cSyH_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cSyH_info
LcSyL:
	jmp *(%esi)
	.long  _cSyB_info - _cSyB_info_dsp
.text
	.align 2
_cSyH_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSyH_info:
LcSyH:
	movl 3(%esi),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $8,%ebp
	jmp _ghczmprim_GHCziClasses_compareInt_info
	.long  _cSyH_info - _cSyH_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfOrdFramed_closure
_CoreziWorldziInternal_zdfOrdFramed_closure:
	.long	_CoreziWorldziInternal_zdfOrdFramed_info
.text
	.align 2
_sRxI_info_dsp:
.text
	.align 2
	.long	131087
	.long	1
	.long	10
_sRxI_info:
LcSzj:
	movl 16(%ebx),%eax
	movl %eax,24(%ebx)
	movl 8(%ebx),%eax
	movl %eax,16(%ebx)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfOrdFramedzuzdcmin_info
	.long  _sRxI_info - _sRxI_info_dsp
.text
	.align 2
_sRxH_info_dsp:
.text
	.align 2
	.long	131087
	.long	1
	.long	10
_sRxH_info:
LcSzr:
	movl 16(%ebx),%eax
	movl %eax,24(%ebx)
	movl 8(%ebx),%eax
	movl %eax,16(%ebx)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfOrdFramedzuzdcmax_info
	.long  _sRxH_info - _sRxH_info_dsp
.text
	.align 2
_sRxG_info_dsp:
.text
	.align 2
	.long	131087
	.long	1
	.long	10
_sRxG_info:
LcSzz:
	movl 16(%ebx),%eax
	movl %eax,24(%ebx)
	movl 8(%ebx),%eax
	movl %eax,16(%ebx)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfOrdFramedzuzdczgze_info
	.long  _sRxG_info - _sRxG_info_dsp
.text
	.align 2
_sRxF_info_dsp:
.text
	.align 2
	.long	131087
	.long	1
	.long	10
_sRxF_info:
LcSzH:
	movl 16(%ebx),%eax
	movl %eax,24(%ebx)
	movl 8(%ebx),%eax
	movl %eax,16(%ebx)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfOrdFramedzuzdczg_info
	.long  _sRxF_info - _sRxF_info_dsp
.text
	.align 2
_sRxE_info_dsp:
.text
	.align 2
	.long	131087
	.long	1
	.long	10
_sRxE_info:
LcSzP:
	movl 16(%ebx),%eax
	movl %eax,24(%ebx)
	movl 8(%ebx),%eax
	movl %eax,16(%ebx)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfOrdFramedzuzdczlze_info
	.long  _sRxE_info - _sRxE_info_dsp
.text
	.align 2
_sRxD_info_dsp:
.text
	.align 2
	.long	131087
	.long	1
	.long	10
_sRxD_info:
LcSzX:
	movl 16(%ebx),%eax
	movl %eax,24(%ebx)
	movl 8(%ebx),%eax
	movl %eax,16(%ebx)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfOrdFramedzuzdczl_info
	.long  _sRxD_info - _sRxD_info_dsp
.text
	.align 2
_sRxC_info_dsp:
.text
	.align 2
	.long	131087
	.long	1
	.long	10
_sRxC_info:
LcSA5:
	movl 16(%ebx),%eax
	movl %eax,24(%ebx)
	movl 8(%ebx),%eax
	movl %eax,16(%ebx)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfOrdFramedzuzdccompare_info
	.long  _sRxC_info - _sRxC_info_dsp
.text
	.align 2
_CoreziWorldziInternal_zdfOrdFramed_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfOrdFramed_info
_CoreziWorldziInternal_zdfOrdFramed_info:
LcSA9:
	call 1f
1:	popl	%eax
	addl $92,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcSAd
LcSAc:
	movl %eax,%edx
	addl $_sRxI_info-(1b)+0,%edx
	movl %edx,-88(%edi)
	movl %ecx,-84(%edi)
	movl %eax,%edx
	addl $_sRxH_info-(1b)+0,%edx
	movl %edx,-80(%edi)
	movl %ecx,-76(%edi)
	movl %eax,%edx
	addl $_sRxG_info-(1b)+0,%edx
	movl %edx,-72(%edi)
	movl %ecx,-68(%edi)
	movl %eax,%edx
	addl $_sRxF_info-(1b)+0,%edx
	movl %edx,-64(%edi)
	movl %ecx,-60(%edi)
	movl %eax,%edx
	addl $_sRxE_info-(1b)+0,%edx
	movl %edx,-56(%edi)
	movl %ecx,-52(%edi)
	movl %eax,%edx
	addl $_sRxD_info-(1b)+0,%edx
	movl %edx,-48(%edi)
	movl %ecx,-44(%edi)
	movl %eax,%edx
	addl $_sRxC_info-(1b)+0,%edx
	movl %edx,-40(%edi)
	movl %ecx,-36(%edi)
	movl L_ghczmprim_GHCziClasses_DZCOrd_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-32(%edi)
	movl %ecx,-28(%edi)
	leal -38(%edi),%eax
	movl %eax,-24(%edi)
	leal -46(%edi),%eax
	movl %eax,-20(%edi)
	leal -54(%edi),%eax
	movl %eax,-16(%edi)
	leal -62(%edi),%eax
	movl %eax,-12(%edi)
	leal -70(%edi),%eax
	movl %eax,-8(%edi)
	leal -78(%edi),%eax
	movl %eax,-4(%edi)
	leal -86(%edi),%eax
	movl %eax,(%edi)
	leal -31(%edi),%esi
	jmp *(%ebp)
LcSAd:
	movl $92,904(%ebx)
	movl %ecx,8(%ebx)
	movl L_CoreziWorldziInternal_zdfOrdFramed_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfOrdFramed_info - _CoreziWorldziInternal_zdfOrdFramed_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadContCIOzuzdccallCC_closure
_CoreziWorldziInternal_zdfMonadContCIOzuzdccallCC_closure:
	.long	_CoreziWorldziInternal_zdfMonadContCIOzuzdccallCC_info
.text
	.align 2
_CoreziWorldziInternal_zdfMonadContCIOzuzdccallCC_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadContCIOzuzdccallCC_info
_CoreziWorldziInternal_zdfMonadContCIOzuzdccallCC_info:
LcSBi:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_zdfMonadContCIO1_info
	.long  _CoreziWorldziInternal_zdfMonadContCIOzuzdccallCC_info - _CoreziWorldziInternal_zdfMonadContCIOzuzdccallCC_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadContCIO_closure
_CoreziWorldziInternal_zdfMonadContCIO_closure:
	.long	_z34UQu9ZZXwLdG8LvFhY8OP0lQ_ControlziMonadziContziClass_DZCMonadCont_static_info
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_zdfMonadCIO_closure
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_zdfMonadContCIO1_closure+2
	.long	0
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadContWorld1_closure
_CoreziWorldziInternal_zdfMonadContWorld1_closure:
	.long	_CoreziWorldziInternal_zdfMonadContWorld1_info
.text
	.align 2
_sRxO_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_sRxO_info:
LcSBH:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSBI
LcSBJ:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcSBL
LcSBK:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl %eax,64(%esp)
	movl 16(%ecx),%eax
	movl 20(%ecx),%ecx
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 76(%esp),%eax
	movl %eax,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
LcSBL:
	movl $12,904(%ebx)
LcSBI:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _sRxO_info - _sRxO_info_dsp
.text
	.align 2
_sRxR_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_sRxR_info:
LcSBR:
	movl 3(%esi),%esi
	andl $-8,%esi
	jmp *(%esi)
	.long  _sRxR_info - _sRxR_info_dsp
.text
	.align 2
_sRxS_info_dsp:
.text
	.align 2
	.long	131087
	.long	1
	.long	10
_sRxS_info:
LcSBU:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja LcSBY
LcSBX:
	movl %eax,64(%esp)
	movl 2(%esi),%eax
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_sRxO_info-(1b)+0,%eax
	movl %eax,-28(%edi)
	movl 76(%esp),%eax
	movl %eax,-16(%edi)
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl 64(%esp),%eax
	addl $_sRxR_info-(1b)+0,%eax
	movl %eax,-4(%edi)
	leal -28(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	jmp *(%ebp)
LcSBY:
	movl $32,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRxS_info - _sRxS_info_dsp
.text
	.align 2
_CoreziWorldziInternal_zdfMonadContWorld1_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadContWorld1_info
_CoreziWorldziInternal_zdfMonadContWorld1_info:
LcSBZ:
	call 1f
1:	popl	%eax
	addl $8,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcSC3
LcSC2:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_sRxS_info-(1b)+0,%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	leal -2(%edi),%eax
	movl %eax,8(%ebx)
	movl 76(%esp),%eax
	movl %eax,%esi
	jmp _stg_ap_ppp_fast
LcSC3:
	movl $8,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfMonadContWorld1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdfMonadContWorld1_info - _CoreziWorldziInternal_zdfMonadContWorld1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadConcWorldzuzdcfork_closure
_CoreziWorldziInternal_zdfMonadConcWorldzuzdcfork_closure:
	.long	_CoreziWorldziInternal_zdfMonadConcWorldzuzdcfork_info
.text
	.align 2
_CoreziWorldziInternal_zdfMonadConcWorldzuzdcfork_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadConcWorldzuzdcfork_info
_CoreziWorldziInternal_zdfMonadConcWorldzuzdcfork_info:
LcSCy:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfMonadConcWorld1_info
	.long  _CoreziWorldziInternal_zdfMonadConcWorldzuzdcfork_info - _CoreziWorldziInternal_zdfMonadConcWorldzuzdcfork_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadEventWorldzuzdcmkHandler_closure
_CoreziWorldziInternal_zdfMonadEventWorldzuzdcmkHandler_closure:
	.long	_CoreziWorldziInternal_zdfMonadEventWorldzuzdcmkHandler_info
.text
	.align 2
_CoreziWorldziInternal_zdfMonadEventWorldzuzdcmkHandler_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadEventWorldzuzdcmkHandler_info
_CoreziWorldziInternal_zdfMonadEventWorldzuzdcmkHandler_info:
LcSCM:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfMonadEventWorld1_info
	.long  _CoreziWorldziInternal_zdfMonadEventWorldzuzdcmkHandler_info - _CoreziWorldziInternal_zdfMonadEventWorldzuzdcmkHandler_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadStateWorldzuzdcstate_closure
_CoreziWorldziInternal_zdfMonadStateWorldzuzdcstate_closure:
	.long	_CoreziWorldziInternal_zdfMonadStateWorldzuzdcstate_info
.text
	.align 2
_CoreziWorldziInternal_zdfMonadStateWorldzuzdcstate_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadStateWorldzuzdcstate_info
_CoreziWorldziInternal_zdfMonadStateWorldzuzdcstate_info:
LcSD0:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfMonadStateWorld1_info
	.long  _CoreziWorldziInternal_zdfMonadStateWorldzuzdcstate_info - _CoreziWorldziInternal_zdfMonadStateWorldzuzdcstate_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadStateWorldzuzdcput_closure
_CoreziWorldziInternal_zdfMonadStateWorldzuzdcput_closure:
	.long	_CoreziWorldziInternal_zdfMonadStateWorldzuzdcput_info
.text
	.align 2
_CoreziWorldziInternal_zdfMonadStateWorldzuzdcput_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadStateWorldzuzdcput_info
_CoreziWorldziInternal_zdfMonadStateWorldzuzdcput_info:
LcSDd:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfMonadStateWorld2_info
	.long  _CoreziWorldziInternal_zdfMonadStateWorldzuzdcput_info - _CoreziWorldziInternal_zdfMonadStateWorldzuzdcput_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadStateWorldzuzdcget_closure
_CoreziWorldziInternal_zdfMonadStateWorldzuzdcget_closure:
	.long	_CoreziWorldziInternal_zdfMonadStateWorldzuzdcget_info
.text
	.align 2
_CoreziWorldziInternal_zdfMonadStateWorldzuzdcget_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadStateWorldzuzdcget_info
_CoreziWorldziInternal_zdfMonadStateWorldzuzdcget_info:
LcSDr:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfMonadStateWorld3_info
	.long  _CoreziWorldziInternal_zdfMonadStateWorldzuzdcget_info - _CoreziWorldziInternal_zdfMonadStateWorldzuzdcget_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadContWorldzuzdccallCC_closure
_CoreziWorldziInternal_zdfMonadContWorldzuzdccallCC_closure:
	.long	_CoreziWorldziInternal_zdfMonadContWorldzuzdccallCC_info
.text
	.align 2
_CoreziWorldziInternal_zdfMonadContWorldzuzdccallCC_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadContWorldzuzdccallCC_info
_CoreziWorldziInternal_zdfMonadContWorldzuzdccallCC_info:
LcSDE:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfMonadContWorld1_info
	.long  _CoreziWorldziInternal_zdfMonadContWorldzuzdccallCC_info - _CoreziWorldziInternal_zdfMonadContWorldzuzdccallCC_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadIOWorldzuzdcliftIO_closure
_CoreziWorldziInternal_zdfMonadIOWorldzuzdcliftIO_closure:
	.long	_CoreziWorldziInternal_zdfMonadIOWorldzuzdcliftIO_info
.text
	.align 2
_CoreziWorldziInternal_zdfMonadIOWorldzuzdcliftIO_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadIOWorldzuzdcliftIO_info
_CoreziWorldziInternal_zdfMonadIOWorldzuzdcliftIO_info:
LcSDS:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfMonadIOWorld1_info
	.long  _CoreziWorldziInternal_zdfMonadIOWorldzuzdcliftIO_info - _CoreziWorldziInternal_zdfMonadIOWorldzuzdcliftIO_info_dsp
.data
	.align 2
.align 0
_rQTG_closure:
	.long	_rQTG_info
	.long	0
.text
	.align 2
_rQTG_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_rQTG_info)+8
	.long	131087
	.long	0
	.long	65551
_rQTG_info:
LcSE6:
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _base_GHCziErr_error_info
	.long  _rQTG_info - _rQTG_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadWorldzuzdcfail_closure
_CoreziWorldziInternal_zdfMonadWorldzuzdcfail_closure:
	.long	_CoreziWorldziInternal_zdfMonadWorldzuzdcfail_info
	.long	0
.text
	.align 2
_CoreziWorldziInternal_zdfMonadWorldzuzdcfail_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_zdfMonadWorldzuzdcfail_info)+24
	.long	131087
	.long	0
	.long	65551
.globl _CoreziWorldziInternal_zdfMonadWorldzuzdcfail_info
_CoreziWorldziInternal_zdfMonadWorldzuzdcfail_info:
LcSEi:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _rQTG_info
	.long  _CoreziWorldziInternal_zdfMonadWorldzuzdcfail_info - _CoreziWorldziInternal_zdfMonadWorldzuzdcfail_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadWorldzuzdcreturn_closure
_CoreziWorldziInternal_zdfMonadWorldzuzdcreturn_closure:
	.long	_CoreziWorldziInternal_zdfMonadWorldzuzdcreturn_info
.text
	.align 2
_CoreziWorldziInternal_zdfMonadWorldzuzdcreturn_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadWorldzuzdcreturn_info
_CoreziWorldziInternal_zdfMonadWorldzuzdcreturn_info:
LcSEv:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfMonadWorldzuzdszdfApplicativeStateTzuzdcpure_info
	.long  _CoreziWorldziInternal_zdfMonadWorldzuzdcreturn_info - _CoreziWorldziInternal_zdfMonadWorldzuzdcreturn_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadWorldzuzdczgzg_closure
_CoreziWorldziInternal_zdfMonadWorldzuzdczgzg_closure:
	.long	_CoreziWorldziInternal_zdfMonadWorldzuzdczgzg_info
.text
	.align 2
_CoreziWorldziInternal_zdfMonadWorldzuzdczgzg_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadWorldzuzdczgzg_info
_CoreziWorldziInternal_zdfMonadWorldzuzdczgzg_info:
LcSEJ:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzg_info
	.long  _CoreziWorldziInternal_zdfMonadWorldzuzdczgzg_info - _CoreziWorldziInternal_zdfMonadWorldzuzdczgzg_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadWorldzuzdczgzgze_closure
_CoreziWorldziInternal_zdfMonadWorldzuzdczgzgze_closure:
	.long	_CoreziWorldziInternal_zdfMonadWorldzuzdczgzgze_info
.text
	.align 2
_CoreziWorldziInternal_zdfMonadWorldzuzdczgzgze_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfMonadWorldzuzdczgzgze_info
_CoreziWorldziInternal_zdfMonadWorldzuzdczgzgze_info:
LcSEX:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzgze_info
	.long  _CoreziWorldziInternal_zdfMonadWorldzuzdczgzgze_info - _CoreziWorldziInternal_zdfMonadWorldzuzdczgzgze_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfApplicativeWorldzuzdczlzt_closure
_CoreziWorldziInternal_zdfApplicativeWorldzuzdczlzt_closure:
	.long	_CoreziWorldziInternal_zdfApplicativeWorldzuzdczlzt_info
.text
	.align 2
_CoreziWorldziInternal_zdfApplicativeWorldzuzdczlzt_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfApplicativeWorldzuzdczlzt_info
_CoreziWorldziInternal_zdfApplicativeWorldzuzdczlzt_info:
LcSFb:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfApplicativeWorld1_info
	.long  _CoreziWorldziInternal_zdfApplicativeWorldzuzdczlzt_info - _CoreziWorldziInternal_zdfApplicativeWorldzuzdczlzt_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfApplicativeWorldzuzdcztzg_closure
_CoreziWorldziInternal_zdfApplicativeWorldzuzdcztzg_closure:
	.long	_CoreziWorldziInternal_zdfApplicativeWorldzuzdcztzg_info
.text
	.align 2
_CoreziWorldziInternal_zdfApplicativeWorldzuzdcztzg_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfApplicativeWorldzuzdcztzg_info
_CoreziWorldziInternal_zdfApplicativeWorldzuzdcztzg_info:
LcSFp:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfApplicativeWorld2_info
	.long  _CoreziWorldziInternal_zdfApplicativeWorldzuzdcztzg_info - _CoreziWorldziInternal_zdfApplicativeWorldzuzdcztzg_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfApplicativeWorldzuzdczlztzg_closure
_CoreziWorldziInternal_zdfApplicativeWorldzuzdczlztzg_closure:
	.long	_CoreziWorldziInternal_zdfApplicativeWorldzuzdczlztzg_info
.text
	.align 2
_CoreziWorldziInternal_zdfApplicativeWorldzuzdczlztzg_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfApplicativeWorldzuzdczlztzg_info
_CoreziWorldziInternal_zdfApplicativeWorldzuzdczlztzg_info:
LcSFD:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfApplicativeWorldzuzdszdfApplicativeStateTzuzdczlztzg_info
	.long  _CoreziWorldziInternal_zdfApplicativeWorldzuzdczlztzg_info - _CoreziWorldziInternal_zdfApplicativeWorldzuzdczlztzg_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfFunctorWorldzuzdczlzd_closure
_CoreziWorldziInternal_zdfFunctorWorldzuzdczlzd_closure:
	.long	_CoreziWorldziInternal_zdfFunctorWorldzuzdczlzd_info
.text
	.align 2
_CoreziWorldziInternal_zdfFunctorWorldzuzdczlzd_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfFunctorWorldzuzdczlzd_info
_CoreziWorldziInternal_zdfFunctorWorldzuzdczlzd_info:
LcSFR:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfFunctorWorld1_info
	.long  _CoreziWorldziInternal_zdfFunctorWorldzuzdczlzd_info - _CoreziWorldziInternal_zdfFunctorWorldzuzdczlzd_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfFunctorWorldzuzdcfmap_closure
_CoreziWorldziInternal_zdfFunctorWorldzuzdcfmap_closure:
	.long	_CoreziWorldziInternal_zdfFunctorWorldzuzdcfmap_info
.text
	.align 2
_CoreziWorldziInternal_zdfFunctorWorldzuzdcfmap_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziWorldziInternal_zdfFunctorWorldzuzdcfmap_info
_CoreziWorldziInternal_zdfFunctorWorldzuzdcfmap_info:
LcSG5:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_zdfFunctorWorldzuzdszdfFunctorStateTzuzdcfmap_info
	.long  _CoreziWorldziInternal_zdfFunctorWorldzuzdcfmap_info - _CoreziWorldziInternal_zdfFunctorWorldzuzdcfmap_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfFunctorWorld_closure
_CoreziWorldziInternal_zdfFunctorWorld_closure:
	.long	_base_GHCziBase_DZCFunctor_static_info
	.long	_CoreziWorldziInternal_zdfFunctorWorldzuzdszdfFunctorStateTzuzdcfmap_closure+3
	.long	_CoreziWorldziInternal_zdfFunctorWorld1_closure+3
	.long	1
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfApplicativeWorld_closure
_CoreziWorldziInternal_zdfApplicativeWorld_closure:
	.long	_base_GHCziBase_DZCApplicative_static_info
	.long	_CoreziWorldziInternal_zdfFunctorWorld_closure+1
	.long	_CoreziWorldziInternal_zdfMonadWorldzuzdszdfApplicativeStateTzuzdcpure_closure+3
	.long	_CoreziWorldziInternal_zdfApplicativeWorldzuzdszdfApplicativeStateTzuzdczlztzg_closure+3
	.long	_CoreziWorldziInternal_zdfApplicativeWorld2_closure+3
	.long	_CoreziWorldziInternal_zdfApplicativeWorld1_closure+3
	.long	1
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadWorld_closure
_CoreziWorldziInternal_zdfMonadWorld_closure:
	.long	_base_GHCziBase_DZCMonad_static_info
	.long	_CoreziWorldziInternal_zdfApplicativeWorld_closure+1
	.long	_CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzgze_closure+3
	.long	_CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdczgzg_closure+3
	.long	_CoreziWorldziInternal_zdfMonadWorldzuzdszdfApplicativeStateTzuzdcpure_closure+3
	.long	_CoreziWorldziInternal_zdfMonadWorldzuzdszdfMonadStateTzuzdcfail_closure+2
	.long	0
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadConcWorld_closure
_CoreziWorldziInternal_zdfMonadConcWorld_closure:
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_DZCMonadConc_static_info
	.long	_CoreziWorldziInternal_zdfMonadWorld_closure+1
	.long	_CoreziWorldziInternal_liftW1_closure+3
	.long	_CoreziWorldziInternal_zdfMonadConcWorld1_closure+3
	.long	0
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_distribute2_closure
_CoreziWorldziInternal_distribute2_closure:
	.long	_CoreziWorldziInternal_distribute2_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_cSGt_str:
	.byte	119
	.byte	95
	.byte	115
	.byte	80
	.byte	79
	.byte	116
	.byte	32
	.byte	40
	.byte	40
	.byte	41
	.byte	44
	.byte	32
	.byte	77
	.byte	86
	.byte	97
	.byte	114
	.byte	32
	.byte	87
	.byte	111
	.byte	114
	.byte	108
	.byte	100
	.byte	83
	.byte	116
	.byte	97
	.byte	116
	.byte	101
	.byte	41
	.byte	32
	.byte	45
	.byte	62
	.byte	32
	.byte	65
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	0
.text
	.align 2
_CoreziWorldziInternal_distribute2_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_distribute2_info)+28
	.long	0
	.long	65558
.globl _CoreziWorldziInternal_distribute2_info
_CoreziWorldziInternal_distribute2_info:
LcSGu:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcSGv
LcSGw:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je LcSGs
LcSGr:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_cSGt_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_ControlziExceptionziBase_absentError_info
LcSGs:
	jmp *(%esi)
LcSGv:
	jmp *-16(%ebx)
	.long  _CoreziWorldziInternal_distribute2_info - _CoreziWorldziInternal_distribute2_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdwa2_closure
_CoreziWorldziInternal_zdwa2_closure:
	.long	_CoreziWorldziInternal_zdwa2_info
	.long	0
.text
	.align 2
_sRy0_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRy0_info)+32
	.long	65541
	.long	1
	.long	65546
_sRy0_info:
LcSH1:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -8(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSH2
LcSH3:
	addl $_cSGY_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 3(%esi),%eax
	movl %ecx,%esi
	movl %eax,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cSGY_info
LcSGZ:
	jmp *(%esi)
LcSH2:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRy0_info - _sRy0_info_dsp
.text
	.align 2
_cSGY_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cSGY_info)+32
	.long	1
	.long	65568
_cSGY_info:
LcSGY:
	movl 7(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $8,%ebp
	jmp _sRy1_info
	.long  _cSGY_info - _cSGY_info_dsp
.text
	.align 2
_sRyd_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRyd_info)+32
	.long	65541
	.long	4
	.long	65545
_sRyd_info:
LcSHw:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -20(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSHx
LcSHy:
	addl $_cSHm_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _cSHm_info
LcSHn:
	jmp *(%esi)
LcSHx:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRyd_info - _sRyd_info_dsp
.text
	.align 2
_cSHm_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cSHm_info)+32
	.long	4
	.long	65568
_cSHm_info:
LcSHm:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	movl 16(%ebp),%edx
	movl %eax,64(%esp)
	movl %esi,%eax
	andl $7,%eax
	cmpl $2,%eax
	jae LcSHu
LcSHv:
	movl 3(%esi),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,8(%ebp)
	movl %edx,12(%ebp)
	movl %ecx,16(%ebp)
	addl $8,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrent_zn_info
LcSHu:
	movl 2(%esi),%eax
	movl %eax,24(%ebx)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,8(%ebp)
	movl %edx,12(%ebp)
	movl %ecx,16(%ebp)
	addl $8,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrent_zn_info
	.long  _cSHm_info - _cSHm_info_dsp
.text
	.align 2
_sRy1_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRy1_info)+32
	.long	65541
	.long	4
	.long	65545
_sRy1_info:
LcSHJ:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	movl %esi,%edx
	movl %eax,64(%esp)
	leal -4(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcSHK
LcSHL:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja LcSHN
LcSHM:
	movl 3(%edx),%eax
	movl %eax,76(%esp)
	movl 7(%edx),%eax
	movl %eax,88(%esp)
	movl 11(%edx),%eax
	movl 15(%edx),%edx
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	addl $_sRyd_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 88(%esp),%eax
	movl %eax,-12(%edi)
	movl 100(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	addl $_cSHG_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	leal -15(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	addl $-4,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_zdwa2_info
LcSHN:
	movl $20,904(%ebx)
LcSHK:
	movl %ecx,8(%ebx)
	movl %edx,%esi
	jmp *-8(%ebx)
	.long  _sRy1_info - _sRy1_info_dsp
.text
	.align 2
_cSHG_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cSHG_info:
LcSHG:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcSHQ
LcSHP:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcSHQ:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSHG_info - _cSHG_info_dsp
.text
	.align 2
_CoreziWorldziInternal_zdwa2_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_zdwa2_info)+32
	.long	262168
	.long	0
	.long	196623
.globl _CoreziWorldziInternal_zdwa2_info
_CoreziWorldziInternal_zdwa2_info:
LcSHR:
	call 1f
1:	popl	%eax
	addl $28,%edi
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcSHV
LcSHU:
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_sRy0_info-(1b)+0,%eax
	movl %eax,-24(%edi)
	leal -15(%edi),%eax
	movl %eax,-20(%edi)
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	addl $_sRy1_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 88(%esp),%eax
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -23(%edi),%eax
	movl %eax,(%edi)
	movl %ecx,8(%ebx)
	movl 100(%esp),%eax
	movl %eax,%esi
	jmp _sRy1_info
LcSHV:
	movl $28,904(%ebx)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdwa2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdwa2_info - _CoreziWorldziInternal_zdwa2_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_distribute1_closure
_CoreziWorldziInternal_distribute1_closure:
	.long	_CoreziWorldziInternal_distribute1_info
	.long	0
.text
	.align 2
_CoreziWorldziInternal_distribute1_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_distribute1_info)+36
	.long	262168
	.long	0
	.long	196623
.globl _CoreziWorldziInternal_distribute1_info
_CoreziWorldziInternal_distribute1_info:
LcSIX:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcSIY
LcSIZ:
	movl 64(%esp),%eax
	addl $_cSIU_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl %edx,%esi
	movl 76(%esp),%eax
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cSIU_info
LcSIV:
	jmp *(%esi)
LcSIY:
	movl 32(%ebx),%eax
	movl %eax,32(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_distribute1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_distribute1_info - _CoreziWorldziInternal_distribute1_info_dsp
.text
	.align 2
_cSIU_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cSIU_info)+36
	.long	2
	.long	65568
_cSIU_info:
LcSIU:
	movl 8(%ebp),%eax
	movl %eax,32(%ebx)
	movl 7(%esi),%eax
	movl %eax,24(%ebx)
	movl 3(%esi),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $12,%ebp
	jmp _CoreziWorldziInternal_zdwa2_info
	.long  _cSIU_info - _cSIU_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_distribute_closure
_CoreziWorldziInternal_distribute_closure:
	.long	_CoreziWorldziInternal_distribute_info
	.long	0
.text
	.align 2
_CoreziWorldziInternal_distribute_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_distribute_info)+40
	.long	262168
	.long	0
	.long	65551
.globl _CoreziWorldziInternal_distribute_info
_CoreziWorldziInternal_distribute_info:
LcSJn:
	movl 32(%ebx),%eax
	movl %eax,32(%ebx)
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_distribute1_info
	.long  _CoreziWorldziInternal_distribute_info - _CoreziWorldziInternal_distribute_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_division2_closure
_CoreziWorldziInternal_division2_closure:
	.long	_CoreziWorldziInternal_division2_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_cSJE_str:
	.byte	119
	.byte	95
	.byte	115
	.byte	80
	.byte	79
	.byte	71
	.byte	32
	.byte	40
	.byte	40
	.byte	41
	.byte	44
	.byte	32
	.byte	77
	.byte	86
	.byte	97
	.byte	114
	.byte	32
	.byte	87
	.byte	111
	.byte	114
	.byte	108
	.byte	100
	.byte	83
	.byte	116
	.byte	97
	.byte	116
	.byte	101
	.byte	41
	.byte	32
	.byte	45
	.byte	62
	.byte	32
	.byte	65
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	0
.text
	.align 2
_CoreziWorldziInternal_division2_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_division2_info)+28
	.long	0
	.long	65558
.globl _CoreziWorldziInternal_division2_info
_CoreziWorldziInternal_division2_info:
LcSJF:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcSJG
LcSJH:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je LcSJD
LcSJC:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_cSJE_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_ControlziExceptionziBase_absentError_info
LcSJD:
	jmp *(%esi)
LcSJG:
	jmp *-16(%ebx)
	.long  _CoreziWorldziInternal_division2_info - _CoreziWorldziInternal_division2_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdwa3_closure
_CoreziWorldziInternal_zdwa3_closure:
	.long	_CoreziWorldziInternal_zdwa3_info
	.long	0
.text
	.align 2
_sRyt_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRyt_info)+32
	.long	65541
	.long	1
	.long	65546
_sRyt_info:
LcSKc:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -8(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSKd
LcSKe:
	addl $_cSK9_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 3(%esi),%eax
	movl %ecx,%esi
	movl %eax,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cSK9_info
LcSKa:
	jmp *(%esi)
LcSKd:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRyt_info - _sRyt_info_dsp
.text
	.align 2
_cSK9_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cSK9_info)+32
	.long	1
	.long	65568
_cSK9_info:
LcSK9:
	movl 7(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $8,%ebp
	jmp _sRyu_info
	.long  _cSK9_info - _cSK9_info_dsp
.text
	.align 2
_sRyE_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRyE_info)+32
	.long	65541
	.long	5
	.long	65545
_sRyE_info:
LcSKG:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -24(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSKH
LcSKI:
	addl $_cSKx_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl %ecx,8(%ebx)
	movl 7(%esi),%eax
	movl 11(%esi),%edx
	movl %eax,64(%esp)
	movl 15(%esi),%eax
	movl %edx,76(%esp)
	movl 19(%esi),%edx
	movl 3(%esi),%esi
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	movl %eax,-20(%ebp)
	movl 76(%esp),%eax
	movl %eax,-16(%ebp)
	movl 88(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-24,%ebp
	jmp _stg_ap_p_fast
LcSKH:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRyE_info - _sRyE_info_dsp
.text
	.align 2
_cSKx_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cSKx_info)+32
	.long	5
	.long	65568
_cSKx_info:
LcSKx:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	movl 20(%ebp),%edx
	movl %eax,64(%esp)
	movl %esi,%eax
	andl $7,%eax
	cmpl $2,%eax
	jae LcSKE
LcSKF:
	movl %edx,24(%ebx)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,8(%ebx)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,12(%ebp)
	movl %ecx,20(%ebp)
	addl $12,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrent_zn_info
LcSKE:
	movl %edx,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,8(%ebx)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,12(%ebp)
	movl %ecx,20(%ebp)
	addl $12,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrent_zn_info
	.long  _cSKx_info - _cSKx_info_dsp
.text
	.align 2
_sRyu_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRyu_info)+32
	.long	65541
	.long	5
	.long	65545
_sRyu_info:
LcSKS:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	movl %esi,%edx
	movl %eax,64(%esp)
	leal -4(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcSKT
LcSKU:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja LcSKW
LcSKV:
	movl 3(%edx),%eax
	movl %eax,76(%esp)
	movl 7(%edx),%eax
	movl %eax,88(%esp)
	movl 11(%edx),%eax
	movl %eax,100(%esp)
	movl 15(%edx),%eax
	movl 19(%edx),%edx
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_sRyE_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 88(%esp),%eax
	movl %eax,-16(%edi)
	movl 100(%esp),%eax
	movl %eax,-12(%edi)
	movl 112(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	addl $_cSKP_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	leal -19(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	addl $-4,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_zdwa2_info
LcSKW:
	movl $24,904(%ebx)
LcSKT:
	movl %ecx,8(%ebx)
	movl %edx,%esi
	jmp *-8(%ebx)
	.long  _sRyu_info - _sRyu_info_dsp
.text
	.align 2
_cSKP_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cSKP_info:
LcSKP:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcSKZ
LcSKY:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcSKZ:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSKP_info - _cSKP_info_dsp
.text
	.align 2
_CoreziWorldziInternal_zdwa3_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_zdwa3_info)+32
	.long	327705
	.long	0
	.long	589839
.globl _CoreziWorldziInternal_zdwa3_info
_CoreziWorldziInternal_zdwa3_info:
LcSL0:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 40(%ebx),%ecx
	movl 32(%ebx),%edx
	movl %eax,64(%esp)
	movl 24(%ebx),%eax
	movl %eax,76(%esp)
	movl 16(%ebx),%eax
	movl %eax,88(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcSL4
LcSL3:
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	addl $_sRyt_info-(1b)+0,%eax
	movl %eax,-28(%edi)
	leal -19(%edi),%eax
	movl %eax,-24(%edi)
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_sRyu_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 100(%esp),%eax
	movl %eax,-16(%edi)
	movl 88(%esp),%eax
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -27(%edi),%eax
	movl %eax,(%edi)
	movl %ecx,8(%ebx)
	movl 112(%esp),%eax
	movl %eax,%esi
	jmp _sRyu_info
LcSL4:
	movl $32,904(%ebx)
	movl %ecx,40(%ebx)
	movl %edx,32(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,24(%ebx)
	movl 88(%esp),%ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdwa3_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdwa3_info - _CoreziWorldziInternal_zdwa3_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_division1_closure
_CoreziWorldziInternal_division1_closure:
	.long	_CoreziWorldziInternal_division1_info
	.long	0
.text
	.align 2
_CoreziWorldziInternal_division1_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_division1_info)+44
	.long	327705
	.long	0
	.long	196623
.globl _CoreziWorldziInternal_division1_info
_CoreziWorldziInternal_division1_info:
LcSM4:
	call 1f
1:	popl	%eax
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	movl %eax,88(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcSM5
LcSM6:
	movl 64(%esp),%eax
	addl $_cSM1_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %edx,%esi
	movl 88(%esp),%eax
	movl %eax,-12(%ebp)
	movl 76(%esp),%eax
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _cSM1_info
LcSM2:
	jmp *(%esi)
LcSM5:
	movl 40(%ebx),%eax
	movl %eax,40(%ebx)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_division1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_division1_info - _CoreziWorldziInternal_division1_info_dsp
.text
	.align 2
_cSM1_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cSM1_info)+44
	.long	3
	.long	65568
_cSM1_info:
LcSM1:
	movl 12(%ebp),%eax
	movl %eax,40(%ebx)
	movl 7(%esi),%eax
	movl %eax,32(%ebx)
	movl 3(%esi),%eax
	movl %eax,24(%ebx)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $16,%ebp
	jmp _CoreziWorldziInternal_zdwa3_info
	.long  _cSM1_info - _cSM1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_division_closure
_CoreziWorldziInternal_division_closure:
	.long	_CoreziWorldziInternal_division_info
	.long	0
.text
	.align 2
_CoreziWorldziInternal_division_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_division_info)+48
	.long	327705
	.long	0
	.long	65551
.globl _CoreziWorldziInternal_division_info
_CoreziWorldziInternal_division_info:
LcSMv:
	movl 40(%ebx),%eax
	movl %eax,40(%ebx)
	movl 32(%ebx),%eax
	movl %eax,32(%ebx)
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_division1_info
	.long  _CoreziWorldziInternal_division_info - _CoreziWorldziInternal_division_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_incarnate_closure
_CoreziWorldziInternal_incarnate_closure:
	.long	_CoreziWorldziInternal_incarnate_info
	.long	0
.text
	.align 2
_sRyR_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRyR_info)+32
	.long	1
	.long	65553
_sRyR_info:
LcSMP:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcSMQ
LcSMR:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%ecx
	movl %ecx,16(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrent_spawn_info
LcSMQ:
	jmp *-16(%ebx)
	.long  _sRyR_info - _sRyR_info_dsp
.text
	.align 2
_sRz1_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_sRz1_info:
LcSNr:
	movl 3(%esi),%esi
	andl $-8,%esi
	jmp *(%esi)
	.long  _sRz1_info - _sRz1_info_dsp
.text
	.align 2
_sRz4_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRz4_info:
LcSNu:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSNy
LcSNz:
	addl $_cSNg_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cSNg_info
LcSNh:
	jmp *(%esi)
LcSNy:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRz4_info - _sRz4_info_dsp
.text
	.align 2
_cSNg_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cSNg_info:
LcSNg:
	call 1f
1:	popl	%eax
	addl $28,%edi
	cmpl 856(%ebx),%edi
	ja LcSNC
LcSNB:
	movl 3(%esi),%ecx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-24(%edi)
	movl 8(%ebp),%edx
	movl %edx,-12(%edi)
	movl %esi,-8(%edi)
	movl %eax,%edx
	addl $_sRz1_info-(1b)+0,%edx
	movl %edx,-4(%edi)
	leal -24(%edi),%edx
	movl %edx,(%edi)
	addl $_cSNv_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	leal -3(%edi),%eax
	movl %eax,24(%ebx)
	movl %ecx,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $8,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_zdwa1_info
LcSNC:
	movl $28,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSNg_info - _cSNg_info_dsp
.text
	.align 2
_cSNv_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cSNv_info:
LcSNv:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcSNF
LcSNE:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcSNF:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSNv_info - _cSNv_info_dsp
.text
	.align 2
_sRz5_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRz5_info:
LcSNH:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcSNL
LcSNK:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_sRz4_info-(1b)+0,%edx
	movl %edx,-8(%edi)
	movl 76(%esp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
LcSNL:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRz5_info - _sRz5_info_dsp
.text
	.align 2
_sRz6_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRz6_info:
LcSNM:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcSNQ
LcSNP:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-28(%edi)
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	addl $_sRz5_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl 76(%esp),%eax
	movl %eax,-4(%edi)
	leal -28(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
LcSNQ:
	movl $32,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRz6_info - _sRz6_info_dsp
.text
	.align 2
_CoreziWorldziInternal_incarnate_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_incarnate_info)+32
	.long	131087
	.long	0
	.long	2162703
.globl _CoreziWorldziInternal_incarnate_info
_CoreziWorldziInternal_incarnate_info:
LcSNR:
	call 1f
1:	popl	%eax
	addl $28,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja LcSNV
LcSNU:
	movl %eax,64(%esp)
	addl $_sRyR_info-(1b)+0,%eax
	movl %eax,-24(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	addl $_sRz6_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -24(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
LcSNV:
	movl $28,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziWorldziInternal_incarnate_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_incarnate_info - _CoreziWorldziInternal_incarnate_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_znzn_closure
_CoreziWorldziInternal_znzn_closure:
	.long	_CoreziWorldziInternal_znzn_info
	.long	0
.text
	.align 2
_sRzb_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_sRzb_info:
LcSOZ:
	movl 3(%esi),%esi
	jmp _stg_ap_0_fast
	.long  _sRzb_info - _sRzb_info_dsp
.text
	.align 2
_CoreziWorldziInternal_znzn_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_znzn_info)+32
	.long	196631
	.long	0
	.long	4259855
.globl _CoreziWorldziInternal_znzn_info
_CoreziWorldziInternal_znzn_info:
LcSP3:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcSP7
LcSP6:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_sRzb_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_Mail_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl %edx,-4(%edi)
	leal -15(%edi),%ecx
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,24(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,16(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrent_zn_info
LcSP7:
	movl $20,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_znzn_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_znzn_info - _CoreziWorldziInternal_znzn_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdwa_closure
_CoreziWorldziInternal_zdwa_closure:
	.long	_CoreziWorldziInternal_zdwa_info
	.long	0
.text
	.align 2
_sRzC_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRzC_info:
LcSQ0:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcSQ4
LcSQ3:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-8(%edi)
	movl %ecx,-4(%edi)
	movl %eax,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 76(%esp),%eax
	movl %eax,%esi
	jmp _stg_ap_p_fast
LcSQ4:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRzC_info - _sRzC_info_dsp
.text
	.align 2
_sRzF_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRzF_info:
LcSQ5:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSQ9
LcSQa:
	addl $_cSPP_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cSPP_info
LcSPQ:
	jmp *(%esi)
LcSQ9:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRzF_info - _sRzF_info_dsp
.text
	.align 2
_cSPP_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cSPP_info:
LcSPP:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcSQd
LcSQc:
	movl 7(%esi),%ecx
	movl %eax,%edx
	addl $_sRzC_info-(1b)+0,%edx
	movl %edx,-8(%edi)
	movl 4(%ebp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl 8(%ebp),%ecx
	addl $_cSQ6_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	leal -7(%edi),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $8,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_zdwa2_info
LcSQd:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSPP_info - _cSPP_info_dsp
.text
	.align 2
_cSQ6_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cSQ6_info:
LcSQ6:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcSQg
LcSQf:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcSQg:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSQ6_info - _cSQ6_info_dsp
.text
	.align 2
_sRzr_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRzr_info:
LcSQt:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcSQx
LcSQw:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-8(%edi)
	movl %ecx,-4(%edi)
	movl 76(%esp),%ecx
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
LcSQx:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRzr_info - _sRzr_info_dsp
.text
	.align 2
_sRzu_info_dsp:
.text
	.align 2
	.long	196631
	.long	1
	.long	10
_sRzu_info:
LcSQB:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	movl %esi,%eax
	movl %edx,88(%esp)
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSQC
LcSQD:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcSQF
LcSQE:
	movl 1(%eax),%eax
	movl 64(%esp),%edx
	addl $_sRzr_info-(1b)+0,%edx
	movl %edx,-8(%edi)
	movl 88(%esp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%ecx
	addl $_cSQy_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	leal -7(%edi),%ecx
	movl %ecx,24(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	addl $-4,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_zdwa1_info
LcSQF:
	movl $12,904(%ebx)
LcSQC:
	movl %ecx,24(%ebx)
	movl 88(%esp),%ecx
	movl %ecx,16(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp *-8(%ebx)
	.long  _sRzu_info - _sRzu_info_dsp
.text
	.align 2
_cSQy_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cSQy_info:
LcSQy:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcSQI
LcSQH:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcSQI:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSQy_info - _cSQy_info_dsp
.text
	.align 2
_sRzG_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRzG_info)+32
	.long	5
	.long	65552
_sRzG_info:
LcSQK:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -24(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSQL
LcSQM:
	addl $40,%edi
	cmpl 856(%ebx),%edi
	ja LcSQO
LcSQN:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl %eax,64(%esp)
	movl 16(%ecx),%eax
	movl %edx,76(%esp)
	movl 20(%ecx),%edx
	movl %eax,88(%esp)
	movl 24(%ecx),%eax
	movl 28(%ecx),%ecx
	movl %edx,100(%esp)
	movl 64(%esp),%edx
	movl L_base_GHCziSTRef_STRef_con_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-36(%edi)
	movl %ecx,-32(%edi)
	movl 64(%esp),%ecx
	movl %ecx,%edx
	addl $_sRzF_info-(1b)+0,%edx
	movl %edx,-28(%edi)
	movl %eax,-24(%edi)
	leal -35(%edi),%eax
	movl %eax,-20(%edi)
	movl %ecx,%edx
	addl $_sRzu_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	movl %eax,-12(%edi)
	movl L_CoreziWorldziInternal_Mail_con_info$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,-8(%edi)
	movl 88(%esp),%eax
	movl %eax,-4(%edi)
	leal -13(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%eax
	movl %eax,24(%ebx)
	movl 76(%esp),%eax
	movl %eax,16(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%ecx),%eax
	incl %eax
	movl %eax,8(%ebx)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,-24(%ebp)
	movl 100(%esp),%eax
	movl %eax,-20(%ebp)
	leal -27(%edi),%eax
	movl %eax,-16(%ebp)
	addl $-24,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrent_zn_info
LcSQO:
	movl $40,904(%ebx)
LcSQL:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _sRzG_info - _sRzG_info_dsp
.text
	.align 2
_sRzH_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRzH_info)+32
	.long	65539
	.long	4
	.long	65545
_sRzH_info:
LcSQP:
	call 1f
1:	popl	%eax
	leal -20(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcSQQ
LcSQR:
	movl %eax,%ecx
	addl $_cSPD_info-(1b)+0,%ecx
	movl %ecx,-20(%ebp)
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %ecx,76(%esp)
	movl 15(%esi),%ecx
	movl %edx,88(%esp)
	movl 64(%esp),%edx
	movl L_CoreziWorldziInternal_znz3fU2_closure$non_lazy_ptr-(1b)+0(%edx),%edx
	leal 2(%edx),%esi
	movl 76(%esp),%edx
	movl %edx,-16(%ebp)
	movl 88(%esp),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-20,%ebp
	jmp _stg_newMutVarzh
LcSQQ:
	jmp *-8(%ebx)
	.long  _sRzH_info - _sRzH_info_dsp
.text
	.align 2
_cSPD_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cSPD_info)+32
	.long	4
	.long	65568
_cSPD_info:
LcSPD:
	call 1f
1:	popl	%eax
	addl $32,%edi
	cmpl 856(%ebx),%edi
	ja LcSQU
LcSQT:
	addl $_sRzG_info-(1b)+0,%eax
	movl %eax,-28(%edi)
	movl 4(%ebp),%eax
	movl %eax,-16(%edi)
	movl 8(%ebp),%eax
	movl %eax,-12(%edi)
	movl 12(%ebp),%eax
	movl %eax,-8(%edi)
	movl 16(%ebp),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -28(%edi),%esi
	addl $20,%ebp
	jmp *(%ebp)
LcSQU:
	movl $32,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSPD_info - _cSPD_info_dsp
.text
	.align 2
_CoreziWorldziInternal_zdwa_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_zdwa_info)+32
	.long	262168
	.long	0
	.long	8454159
.globl _CoreziWorldziInternal_zdwa_info
_CoreziWorldziInternal_zdwa_info:
LcSQV:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcSQZ
LcSQY:
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_sRzH_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 88(%esp),%eax
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -15(%edi),%esi
	jmp *(%ebp)
LcSQZ:
	movl $20,904(%ebx)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdwa_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdwa_info - _CoreziWorldziInternal_zdwa_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_znz3fU1_closure
_CoreziWorldziInternal_znz3fU1_closure:
	.long	_CoreziWorldziInternal_znz3fU1_info
	.long	0
.text
	.align 2
_CoreziWorldziInternal_znz3fU1_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_znz3fU1_info)+60
	.long	262168
	.long	0
	.long	196623
.globl _CoreziWorldziInternal_znz3fU1_info
_CoreziWorldziInternal_znz3fU1_info:
LcSSr:
	call 1f
1:	popl	%eax
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	movl %eax,88(%esp)
	leal -4(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcSSs
LcSSt:
	movl 64(%esp),%eax
	addl $_cSSo_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	addl $-4,%ebp
	jmp _CoreziWorldziInternal_zdwa_info
LcSSs:
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_znz3fU1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_znz3fU1_info - _CoreziWorldziInternal_znz3fU1_info_dsp
.text
	.align 2
_cSSo_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cSSo_info:
LcSSo:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcSSw
LcSSv:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcSSw:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSSo_info - _cSSo_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_znz3fU_closure
_CoreziWorldziInternal_znz3fU_closure:
	.long	_CoreziWorldziInternal_znz3fU_info
	.long	0
.text
	.align 2
_CoreziWorldziInternal_znz3fU_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_znz3fU_info)+64
	.long	262168
	.long	0
	.long	65551
.globl _CoreziWorldziInternal_znz3fU_info
_CoreziWorldziInternal_znz3fU_info:
LcSSN:
	movl 32(%ebx),%eax
	movl %eax,32(%ebx)
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_znz3fU1_info
	.long  _CoreziWorldziInternal_znz3fU_info - _CoreziWorldziInternal_znz3fU_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadIOWorld_closure
_CoreziWorldziInternal_zdfMonadIOWorld_closure:
	.long	_z30UqEPBHMdsbP05EH96SVtGd_ControlziMonadziIOziClass_DZCMonadIO_static_info
	.long	_CoreziWorldziInternal_zdfMonadWorld_closure+1
	.long	_CoreziWorldziInternal_zdfMonadIOWorld1_closure+3
	.long	0
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadEventWorld_closure
_CoreziWorldziInternal_zdfMonadEventWorld_closure:
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziCore_DZCMonadEvent_static_info
	.long	_CoreziWorldziInternal_zdfMonadIOWorld_closure+1
	.long	_CoreziWorldziInternal_zdfMonadEventWorld1_closure+3
	.long	0
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_handle2_closure
_CoreziWorldziInternal_handle2_closure:
	.long	_CoreziWorldziInternal_handle2_info
	.long	0
.text
	.align 2
_sRzV_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRzV_info)+32
	.long	65541
	.long	2
	.long	65548
_sRzV_info:
LcSTg:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcSTk
LcSTj:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-16(%edi)
	movl 76(%esp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -16(%edi),%ecx
	movl %ecx,24(%ebx)
	movl %eax,16(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrent_zn_info
LcSTk:
	movl $20,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRzV_info - _sRzV_info_dsp
.text
	.align 2
_sRzS_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRzS_info)+32
	.long	4
	.long	234946576
_sRzS_info:
LcSTl:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -16(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSTm
LcSTn:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcSTp
LcSTo:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl %eax,64(%esp)
	movl 16(%ecx),%eax
	movl %edx,76(%esp)
	movl 20(%ecx),%edx
	movl 24(%ecx),%ecx
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_sRzV_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl 88(%esp),%eax
	movl %eax,40(%ebx)
	movl 64(%esp),%eax
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_document1_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,32(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,24(%ebx)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_zdfIsElemElem_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,16(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadEventWorld_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	leal -7(%edi),%eax
	movl %eax,-16(%ebp)
	addl $-16,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziCore_onEvent_info
LcSTp:
	movl $12,904(%ebx)
LcSTm:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _sRzS_info - _sRzS_info_dsp
.text
	.align 2
_sRA3_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_sRA3_info:
LcSTW:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcSU0
LcSU1:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_cSTT_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _cSTT_info
LcSTU:
	jmp *(%esi)
LcSU0:
	jmp *-16(%ebx)
	.long  _sRA3_info - _sRA3_info_dsp
.text
	.align 2
_cSTT_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cSTT_info:
LcSTT:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcSU4
LcSU3:
	movl 7(%esi),%ecx
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcSU4:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSTT_info - _cSTT_info_dsp
.text
	.align 2
_sRA4_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_sRA4_info:
LcSU6:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcSUa
LcSU9:
	movl 3(%esi),%edx
	addl $_sRA3_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	jmp _stg_ap_p_fast
LcSUa:
	movl $16,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRA4_info - _sRA4_info_dsp
.text
	.align 2
_sRA5_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_sRA5_info:
LcSUb:
	call 1f
1:	popl	%eax
	addl $8,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcSUf
LcSUe:
	movl 3(%esi),%edx
	addl $_sRA4_info-(1b)+0,%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -3(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	jmp _stg_ap_p_fast
LcSUf:
	movl $8,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRA5_info - _sRA5_info_dsp
.text
	.align 2
_sRA6_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_sRA6_info:
LcSUg:
	call 1f
1:	popl	%eax
	addl $28,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcSUk
LcSUj:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-24(%edi)
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl 64(%esp),%eax
	addl $_sRA5_info-(1b)+0,%eax
	movl %eax,-4(%edi)
	leal -24(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	jmp *(%ebp)
LcSUk:
	movl $28,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRA6_info - _sRA6_info_dsp
.text
	.align 2
_CoreziWorldziInternal_handle2_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_handle2_info)+32
	.long	262168
	.long	0
	.long	503382031
.globl _CoreziWorldziInternal_handle2_info
_CoreziWorldziInternal_handle2_info:
LcSUl:
	call 1f
1:	popl	%eax
	addl $36,%edi
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcSUp
LcSUo:
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_sRzS_info-(1b)+0,%eax
	movl %eax,-32(%edi)
	movl 88(%esp),%eax
	movl %eax,-20(%edi)
	movl 76(%esp),%eax
	movl %eax,-16(%edi)
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl 64(%esp),%eax
	addl $_sRA6_info-(1b)+0,%eax
	movl %eax,-4(%edi)
	leal -32(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	jmp *(%ebp)
LcSUp:
	movl $36,904(%ebx)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_handle2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_handle2_info - _CoreziWorldziInternal_handle2_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_handle_closure
_CoreziWorldziInternal_handle_closure:
	.long	_CoreziWorldziInternal_handle_info
	.long	0
.text
	.align 2
_CoreziWorldziInternal_handle_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_handle_info)+80
	.long	262168
	.long	0
	.long	65551
.globl _CoreziWorldziInternal_handle_info
_CoreziWorldziInternal_handle_info:
LcSVt:
	movl 32(%ebx),%eax
	movl %eax,32(%ebx)
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_handle2_info
	.long  _CoreziWorldziInternal_handle_info - _CoreziWorldziInternal_handle_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_withWorldState1_closure
_CoreziWorldziInternal_withWorldState1_closure:
	.long	_CoreziWorldziInternal_withWorldState1_info
	.long	0
.text
	.align 2
_CoreziWorldziInternal_withWorldState1_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_withWorldState1_info)+32
	.long	196631
	.long	0
	.long	536936463
.globl _CoreziWorldziInternal_withWorldState1_info
_CoreziWorldziInternal_withWorldState1_info:
LcSVI:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcSVJ
LcSVK:
	movl 76(%esp),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	jmp _CoreziUtil_zdwwithMVar_info
LcSVJ:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_withWorldState1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_withWorldState1_info - _CoreziWorldziInternal_withWorldState1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_withWorldState_closure
_CoreziWorldziInternal_withWorldState_closure:
	.long	_CoreziWorldziInternal_withWorldState_info
	.long	0
.text
	.align 2
_CoreziWorldziInternal_withWorldState_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_withWorldState_info)+84
	.long	196631
	.long	0
	.long	65551
.globl _CoreziWorldziInternal_withWorldState_info
_CoreziWorldziInternal_withWorldState_info:
LcSVY:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_withWorldState1_info
	.long  _CoreziWorldziInternal_withWorldState_info - _CoreziWorldziInternal_withWorldState_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_sleep1_closure
_CoreziWorldziInternal_sleep1_closure:
	.long	_CoreziWorldziInternal_sleep1_info
	.long	0
.text
	.align 2
_sRAh_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_sRAh_info:
LcSWH:
	call 1f
1:	popl	%eax
	leal -20(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcSWT
LcSWU:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_cSWE_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%esi
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _cSWE_info
LcSWF:
	jmp *(%esi)
LcSWT:
	jmp *-16(%ebx)
	.long  _sRAh_info - _sRAh_info_dsp
.text
	.align 2
_cSWE_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cSWE_info:
LcSWE:
	call 1f
1:	popl	%eax
	addl $_cSWK_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cSWK_info
LcSWL:
	jmp *(%esi)
	.long  _cSWE_info - _cSWE_info_dsp
.text
	.align 2
_cSWK_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_cSWK_info:
LcSWK:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcSWY
LcSWX:
	movl 4(%ebp),%ecx
	addl 3(%esi),%ecx
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -3(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
LcSWY:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSWK_info - _cSWK_info_dsp
.text
	.align 2
_sRBT_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_sRBT_info:
LcSXA:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSXB
LcSXC:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcSXE
LcSXD:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	movl %eax,64(%esp)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
LcSXE:
	movl $12,904(%ebx)
LcSXB:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _sRBT_info - _sRBT_info_dsp
.text
	.align 2
_sRBW_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_sRBW_info:
LcSXK:
	movl 3(%esi),%esi
	andl $-8,%esi
	jmp *(%esi)
	.long  _sRBW_info - _sRBW_info_dsp
.text
	.align 2
_sRBZ_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRBZ_info:
LcSXN:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcSXR
LcSXS:
	addl $_cSXq_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cSXq_info
LcSXr:
	jmp *(%esi)
LcSXR:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRBZ_info - _sRBZ_info_dsp
.text
	.align 2
_cSXq_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cSXq_info:
LcSXq:
	call 1f
1:	popl	%eax
	addl $28,%edi
	cmpl 856(%ebx),%edi
	ja LcSXV
LcSXU:
	movl 7(%esi),%ecx
	movl %eax,%edx
	addl $_sRBT_info-(1b)+0,%edx
	movl %edx,-24(%edi)
	movl 4(%ebp),%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl %eax,%ecx
	addl $_sRBW_info-(1b)+0,%ecx
	movl %ecx,-4(%edi)
	leal -24(%edi),%ecx
	movl %ecx,(%edi)
	movl 8(%ebp),%ecx
	addl $_cSXO_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	leal -3(%edi),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $8,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_zdwa2_info
LcSXV:
	movl $28,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSXq_info - _cSXq_info_dsp
.text
	.align 2
_cSXO_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cSXO_info:
LcSXO:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcSXY
LcSXX:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcSXY:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSXO_info - _cSXO_info_dsp
.text
	.align 2
_sRB5_info_dsp:
.text
	.align 2
	.long	131087
	.long	65536
	.long	11
_sRB5_info:
LcT0T:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcT17
LcT18:
	movl 64(%esp),%eax
	addl $_cT0Q_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cT0Q_info
LcT0R:
	jmp *(%esi)
LcT17:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRB5_info - _sRB5_info_dsp
.text
	.align 2
_cT0Q_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cT0Q_info:
LcT0Q:
	call 1f
1:	popl	%eax
	addl $_cT0W_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cT0W_info
LcT0X:
	jmp *(%esi)
	.long  _cT0Q_info - _cT0Q_info_dsp
.text
	.align 2
_cT0W_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cT0W_info:
LcT0W:
	call 1f
1:	popl	%eax
	addl $_cT11_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cT11_info
LcT12:
	jmp *(%esi)
	.long  _cT0W_info - _cT0W_info_dsp
.text
	.align 2
_cT11_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cT11_info:
LcT11:
	call 1f
1:	popl	%eax
	addl $_cT16_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cT16_info
LcT1c:
	jmp *(%esi)
	.long  _cT11_info - _cT11_info_dsp
.text
	.align 2
_cT16_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_cT16_info:
LcT16:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	movl 3(%esi),%edx
	cmpl %edx,%ecx
	jl LcT1p
LcT1q:
	cmpl %edx,%ecx
	sete %cl
	movzbl %cl,%ecx
	shll $2,%ecx
	movl L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr-(1b)+0(%eax),%eax
	movl (%ecx,%eax,1),%esi
	addl $8,%ebp
	jmp *(%ebp)
LcT1p:
	movl L_ghczmprim_GHCziTypes_True_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 2(%eax),%esi
	addl $8,%ebp
	jmp *(%ebp)
	.long  _cT16_info - _cT16_info_dsp
.text
	.align 2
_sRBn_info_dsp:
.text
	.align 2
	.long	131087
	.long	65536
	.long	11
_sRBn_info:
LcT1G:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcT1U
LcT1V:
	movl 64(%esp),%eax
	addl $_cT1D_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cT1D_info
LcT1E:
	jmp *(%esi)
LcT1U:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRBn_info - _sRBn_info_dsp
.text
	.align 2
_cT1D_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cT1D_info:
LcT1D:
	call 1f
1:	popl	%eax
	addl $_cT1J_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cT1J_info
LcT1K:
	jmp *(%esi)
	.long  _cT1D_info - _cT1D_info_dsp
.text
	.align 2
_cT1J_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cT1J_info:
LcT1J:
	call 1f
1:	popl	%eax
	addl $_cT1O_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cT1O_info
LcT1P:
	jmp *(%esi)
	.long  _cT1J_info - _cT1J_info_dsp
.text
	.align 2
_cT1O_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cT1O_info:
LcT1O:
	call 1f
1:	popl	%eax
	addl $_cT1T_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cT1T_info
LcT1Z:
	jmp *(%esi)
	.long  _cT1O_info - _cT1O_info_dsp
.text
	.align 2
_cT1T_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_cT1T_info:
LcT1T:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	movl 3(%esi),%edx
	cmpl %edx,%ecx
	jl LcT2c
LcT2d:
	cmpl %edx,%ecx
	sete %cl
	movzbl %cl,%ecx
	shll $2,%ecx
	movl L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr-(1b)+0(%eax),%eax
	movl (%ecx,%eax,1),%esi
	addl $8,%ebp
	jmp *(%ebp)
LcT2c:
	movl L_ghczmprim_GHCziTypes_True_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 2(%eax),%esi
	addl $8,%ebp
	jmp *(%ebp)
	.long  _cT1T_info - _cT1T_info_dsp
.text
	.align 2
_sRBF_info_dsp:
.text
	.align 2
	.long	131087
	.long	65536
	.long	11
_sRBF_info:
LcT2t:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcT2H
LcT2I:
	movl 64(%esp),%eax
	addl $_cT2q_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cT2q_info
LcT2r:
	jmp *(%esi)
LcT2H:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRBF_info - _sRBF_info_dsp
.text
	.align 2
_cT2q_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cT2q_info:
LcT2q:
	call 1f
1:	popl	%eax
	addl $_cT2w_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cT2w_info
LcT2x:
	jmp *(%esi)
	.long  _cT2q_info - _cT2q_info_dsp
.text
	.align 2
_cT2w_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cT2w_info:
LcT2w:
	call 1f
1:	popl	%eax
	addl $_cT2B_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cT2B_info
LcT2C:
	jmp *(%esi)
	.long  _cT2w_info - _cT2w_info_dsp
.text
	.align 2
_cT2B_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cT2B_info:
LcT2B:
	call 1f
1:	popl	%eax
	addl $_cT2G_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cT2G_info
LcT2M:
	jmp *(%esi)
	.long  _cT2B_info - _cT2B_info_dsp
.text
	.align 2
_cT2G_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_cT2G_info:
LcT2G:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	movl 3(%esi),%edx
	cmpl %edx,%ecx
	jl LcT2Z
LcT30:
	cmpl %edx,%ecx
	sete %cl
	movzbl %cl,%ecx
	shll $2,%ecx
	movl L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr-(1b)+0(%eax),%eax
	movl (%ecx,%eax,1),%esi
	addl $8,%ebp
	jmp *(%ebp)
LcT2Z:
	movl L_ghczmprim_GHCziTypes_True_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 2(%eax),%esi
	addl $8,%ebp
	jmp *(%ebp)
	.long  _cT2G_info - _cT2G_info_dsp
.text
	.align 2
_sRAv_info_dsp:
.text
	.align 2
	.long	4
	.long	16
_sRAv_info:
LcT37:
	call 1f
1:	popl	%eax
	leal -48(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcT3l
LcT3m:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_cT0b_info-(1b)+0,%eax
	movl %eax,-28(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 20(%esi),%edx
	movl 24(%esi),%esi
	movl %eax,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl %edx,-16(%ebp)
	addl $-28,%ebp
	testw $7,%si
	jne _cT0b_info
LcT0c:
	jmp *(%esi)
LcT3l:
	jmp *-16(%ebx)
	.long  _sRAv_info - _sRAv_info_dsp
.text
	.align 2
_cT0b_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_cT0b_info:
LcT0b:
	call 1f
1:	popl	%eax
	addl $_cT0g_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 11(%esi),%ecx
	movl 15(%esi),%edx
	movl 7(%esi),%esi
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	movl %eax,(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cT0g_info
LcT0h:
	jmp *(%esi)
	.long  _cT0b_info - _cT0b_info_dsp
.text
	.align 2
_cT0g_info_dsp:
.text
	.align 2
	.long	70
	.long	32
_cT0g_info:
LcT0g:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae LcT3d
LcT3e:
	movl 24(%ebp),%eax
	movl %eax,24(%ebp)
	addl $4,%ebp
	jmp _cT3i_entry
LcT3d:
	addl $_cT0m_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 6(%esi),%eax
	movl 10(%esi),%ecx
	movl 2(%esi),%esi
	movl %eax,(%ebp)
	movl %ecx,24(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _cT0m_info
LcT0n:
	jmp *(%esi)
	.long  _cT0g_info - _cT0g_info_dsp
.text
	.align 2
_cT0m_info_dsp:
.text
	.align 2
	.long	4231
	.long	32
_cT0m_info:
LcT0m:
	call 1f
1:	popl	%eax
	addl $_cT0r_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %esi,%eax
	movl 3(%esi),%ecx
	movl 20(%ebp),%esi
	movl %ecx,(%ebp)
	movl %eax,20(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _cT0r_info
LcT0s:
	jmp *(%esi)
	.long  _cT0m_info - _cT0m_info_dsp
.text
	.align 2
_cT0r_info_dsp:
.text
	.align 2
	.long	8456
	.long	32
_cT0r_info:
LcT0r:
	call 1f
1:	popl	%eax
	addl $_cT0w_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _cT0w_info
LcT0x:
	jmp *(%esi)
	.long  _cT0r_info - _cT0r_info_dsp
.text
	.align 2
_cT0w_info_dsp:
.text
	.align 2
	.long	8520
	.long	32
_cT0w_info:
LcT0w:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcT3v
LcT3u:
	movl 8(%ebp),%ecx
	movl 24(%ebp),%edx
	movl %eax,64(%esp)
	movl 4(%ebp),%eax
	movl %ecx,76(%esp)
	movl 3(%esi),%ecx
	cmpl %ecx,%eax
	jl LcT41
LcT42:
	cmpl %ecx,%eax
	je LcT3Q
LcT3R:
	movl 64(%esp),%eax
	movl %eax,%ecx
	addl $_sRB5_info-(1b)+0,%ecx
	movl %ecx,-4(%edi)
	movl %eax,%ecx
	addl $_cT3w_info-(1b)+0,%ecx
	movl %ecx,8(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,32(%ebx)
	movl L_EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_ZZero_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,24(%ebx)
	movl 28(%ebp),%eax
	movl %eax,16(%ebx)
	leal -2(%edi),%eax
	movl %eax,8(%ebx)
	addl $8,%ebp
	jmp _EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_zdwincr_info
LcT3v:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
LcT3Q:
	movl 64(%esp),%eax
	movl %eax,%ecx
	addl $_sRBn_info-(1b)+0,%ecx
	movl %ecx,-4(%edi)
	movl %eax,%ecx
	addl $_cT3F_info-(1b)+0,%ecx
	movl %ecx,8(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,32(%ebx)
	movl L_EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_ZZero_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	leal -2(%edi),%eax
	movl %eax,8(%ebx)
	addl $8,%ebp
	jmp _EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_zdwincr_info
LcT41:
	movl 64(%esp),%eax
	movl %eax,%ecx
	addl $_sRBF_info-(1b)+0,%ecx
	movl %ecx,-4(%edi)
	movl %eax,%ecx
	addl $_cT3S_info-(1b)+0,%ecx
	movl %ecx,8(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,32(%ebx)
	movl L_EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_ZZero_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	leal -2(%edi),%eax
	movl %eax,8(%ebx)
	addl $8,%ebp
	jmp _EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_zdwincr_info
	.long  _cT0w_info - _cT0w_info_dsp
.text
	.align 2
_cT3S_info_dsp:
.text
	.align 2
	.long	2630
	.long	32
_cT3S_info:
LcT3S:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja LcT3Z
LcT3Y:
	movl L_EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_MinQueue_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl 20(%ebp),%eax
	movl %eax,-8(%edi)
	movl %esi,-4(%edi)
	movl 24(%ebp),%eax
	incl %eax
	movl %eax,(%edi)
	leal -10(%edi),%eax
	movl %eax,24(%ebp)
	addl $4,%ebp
	jmp _cT3i_entry
LcT3Z:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cT3S_info - _cT3S_info_dsp
.text
	.align 2
_cT3F_info_dsp:
.text
	.align 2
	.long	2630
	.long	32
_cT3F_info:
LcT3F:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja LcT3M
LcT3L:
	movl L_EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_MinQueue_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl 20(%ebp),%eax
	movl %eax,-8(%edi)
	movl %esi,-4(%edi)
	movl 24(%ebp),%eax
	incl %eax
	movl %eax,(%edi)
	leal -10(%edi),%eax
	movl %eax,24(%ebp)
	addl $4,%ebp
	jmp _cT3i_entry
LcT3M:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cT3F_info - _cT3F_info_dsp
.text
	.align 2
_cT3w_info_dsp:
.text
	.align 2
	.long	3142
	.long	32
_cT3w_info:
LcT3w:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja LcT3E
LcT3D:
	movl L_EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_MinQueue_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl 16(%ebp),%eax
	movl %eax,-8(%edi)
	movl %esi,-4(%edi)
	movl 24(%ebp),%eax
	incl %eax
	movl %eax,(%edi)
	leal -10(%edi),%eax
	movl %eax,24(%ebp)
	addl $4,%ebp
	jmp _cT3i_entry
LcT3E:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cT3w_info - _cT3w_info_dsp
.text
	.align 2
_cT3i_entry:
LcT3i:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 20(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja LcT45
LcT44:
	movl L_CoreziWorldziInternal_WorldState_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-16(%edi)
	movl 8(%ebp),%eax
	movl %eax,-12(%edi)
	movl %ecx,-8(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl (%ebp),%eax
	movl %eax,(%edi)
	leal -15(%edi),%esi
	addl $24,%ebp
	jmp *(%ebp)
LcT45:
	movl $20,904(%ebx)
	movl %eax,%edx
	addl $_cT3h_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
.text
	.align 2
_cT3h_info_dsp:
.text
	.align 2
	.long	3654
	.long	32
_cT3h_info:
LcT3h:
	movl %esi,24(%ebp)
	addl $4,%ebp
	jmp _cT3i_entry
	.long  _cT3h_info - _cT3h_info_dsp
.text
	.align 2
_sRBN_info_dsp:
.text
	.align 2
	.long	131087
	.long	1
	.long	10
_sRBN_info:
LcT4E:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja LcT4I
LcT4H:
	movl %eax,64(%esp)
	movl 2(%esi),%eax
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 76(%esp),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_p_fast
LcT4I:
	movl $12,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRBN_info - _sRBN_info_dsp
.text
	.align 2
_sRBO_info_dsp:
.text
	.align 2
	.long	65541
	.long	3
	.long	9
_sRBO_info:
LcT4J:
	call 1f
1:	popl	%eax
	addl $48,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcT4N
LcT4M:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 11(%esi),%edx
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_sRAv_info-(1b)+0,%eax
	movl %eax,-44(%edi)
	movl 76(%esp),%eax
	movl %eax,-32(%edi)
	movl 88(%esp),%eax
	movl %eax,-28(%edi)
	movl %edx,-24(%edi)
	movl %ecx,-20(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-12(%edi)
	leal -44(%edi),%ecx
	movl %ecx,-8(%edi)
	addl $_sRBN_info-(1b)+0,%eax
	movl %eax,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	jmp *(%ebp)
LcT4N:
	movl $48,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRBO_info - _sRBO_info_dsp
.text
	.align 2
_sRC0_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRC0_info)+32
	.long	4
	.long	65552
_sRC0_info:
LcT4O:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -24(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcT4P
LcT4Q:
	addl $64,%edi
	cmpl 856(%ebx),%edi
	ja LcT4S
LcT4R:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl %eax,64(%esp)
	movl 16(%ecx),%eax
	movl %edx,76(%esp)
	movl 20(%ecx),%edx
	movl 24(%ecx),%ecx
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	movl L_base_GHCziSTRef_STRef_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-60(%edi)
	movl %ecx,-56(%edi)
	movl 64(%esp),%eax
	movl %eax,%ecx
	addl $_sRBZ_info-(1b)+0,%ecx
	movl %ecx,-52(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-48(%edi)
	leal -59(%edi),%ecx
	movl %ecx,-44(%edi)
	movl L_CoreziWorldziInternal_Framed_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-40(%edi)
	movl %edx,-36(%edi)
	movl %ecx,-32(%edi)
	movl 64(%esp),%eax
	movl L_EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_MinQueue_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	leal -39(%edi),%ecx
	movl %ecx,-24(%edi)
	movl L_EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_Nil_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-20(%edi)
	movl $1,-16(%edi)
	movl 64(%esp),%eax
	addl $_sRBO_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %edx,-8(%edi)
	movl %ecx,-4(%edi)
	leal -26(%edi),%eax
	movl %eax,(%edi)
	leal -11(%edi),%eax
	movl %eax,24(%ebx)
	movl 88(%esp),%eax
	movl %eax,16(%ebx)
	movl 64(%esp),%ecx
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%ecx),%edx
	incl %edx
	movl %edx,8(%ebx)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-24(%ebp)
	movl %eax,-20(%ebp)
	leal -51(%edi),%eax
	movl %eax,-16(%ebp)
	addl $-24,%ebp
	jmp _CoreziUtil_zdwwithMVar_info
LcT4S:
	movl $64,904(%ebx)
LcT4P:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _sRC0_info - _sRC0_info_dsp
.text
	.align 2
_sRC1_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRC1_info)+32
	.long	65539
	.long	3
	.long	65545
_sRC1_info:
LcT4T:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcT4U
LcT4V:
	movl %eax,%ecx
	addl $_cSXe_info-(1b)+0,%ecx
	movl %ecx,-16(%ebp)
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_CoreziWorldziInternal_waitUntil2_closure$non_lazy_ptr-(1b)+0(%ecx),%ecx
	leal 2(%ecx),%esi
	movl 76(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-16,%ebp
	jmp _stg_newMutVarzh
LcT4U:
	jmp *-8(%ebx)
	.long  _sRC1_info - _sRC1_info_dsp
.text
	.align 2
_cSXe_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cSXe_info)+32
	.long	3
	.long	65568
_cSXe_info:
LcSXe:
	call 1f
1:	popl	%eax
	addl $28,%edi
	cmpl 856(%ebx),%edi
	ja LcT4Y
LcT4X:
	addl $_sRC0_info-(1b)+0,%eax
	movl %eax,-24(%edi)
	movl 4(%ebp),%eax
	movl %eax,-12(%edi)
	movl 8(%ebp),%eax
	movl %eax,-8(%edi)
	movl 12(%ebp),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -24(%edi),%esi
	addl $16,%ebp
	jmp *(%ebp)
LcT4Y:
	movl $28,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSXe_info - _cSXe_info_dsp
.text
	.align 2
_sRC2_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRC2_info)+32
	.long	65541
	.long	2
	.long	65548
_sRC2_info:
LcT4Z:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcT51
LcT52:
	addl $_cSWv_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cSWv_info
LcSWw:
	jmp *(%esi)
LcT51:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRC2_info - _sRC2_info_dsp
.text
	.align 2
_cSWv_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cSWv_info)+32
	.long	2
	.long	65568
_cSWv_info:
LcSWv:
	call 1f
1:	popl	%eax
	addl $44,%edi
	cmpl 856(%ebx),%edi
	ja LcT55
LcT54:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_sRAh_info-(1b)+0,%eax
	movl %eax,-40(%edi)
	movl 4(%ebp),%eax
	movl %eax,-28(%edi)
	movl %ecx,-24(%edi)
	movl 64(%esp),%eax
	movl %eax,%ecx
	addl $_sRC1_info-(1b)+0,%ecx
	movl %ecx,-20(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-16(%edi)
	movl %edx,-12(%edi)
	leal -40(%edi),%ecx
	movl %ecx,-8(%edi)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -19(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
LcT55:
	movl $44,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cSWv_info - _cSWv_info_dsp
.text
	.align 2
_CoreziWorldziInternal_sleep1_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_sleep1_info)+32
	.long	196631
	.long	0
	.long	1073807375
.globl _CoreziWorldziInternal_sleep1_info
_CoreziWorldziInternal_sleep1_info:
LcT57:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcT58
LcT59:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcT5b
LcT5a:
	movl 64(%esp),%eax
	addl $_sRC2_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl 76(%esp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	movl %eax,%ecx
	addl $_rQT2_closure-(1b)+3,%ecx
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,8(%ebx)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	leal -7(%edi),%eax
	movl %eax,-4(%ebp)
	addl $-12,%ebp
	jmp _CoreziUtil_zdwwithMVar_info
LcT5b:
	movl $12,904(%ebx)
LcT58:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_sleep1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_sleep1_info - _CoreziWorldziInternal_sleep1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_sleep_closure
_CoreziWorldziInternal_sleep_closure:
	.long	_CoreziWorldziInternal_sleep_info
	.long	0
.text
	.align 2
_CoreziWorldziInternal_sleep_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_sleep_info)+88
	.long	196631
	.long	0
	.long	65551
.globl _CoreziWorldziInternal_sleep_info
_CoreziWorldziInternal_sleep_info:
LcTaf:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_sleep1_info
	.long  _CoreziWorldziInternal_sleep_info - _CoreziWorldziInternal_sleep_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_easeRegister1_closure
_CoreziWorldziInternal_easeRegister1_closure:
	.long	_CoreziWorldziInternal_easeRegister1_info
	.long	0
.text
	.align 2
_sRCh_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_sRCh_info:
LcTaM:
	call 1f
1:	popl	%eax
	leal -20(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcTaR
LcTaS:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_cTaJ_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%esi
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _cTaJ_info
LcTaK:
	jmp *(%esi)
LcTaR:
	jmp *-16(%ebx)
	.long  _sRCh_info - _sRCh_info_dsp
.text
	.align 2
_cTaJ_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cTaJ_info:
LcTaJ:
	call 1f
1:	popl	%eax
	addl $32,%edi
	cmpl 856(%ebx),%edi
	ja LcTaV
LcTaU:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %ecx,76(%esp)
	movl 15(%esi),%ecx
	movl %ecx,88(%esp)
	movl 64(%esp),%ecx
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-28(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-24(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-20(%edi)
	movl 64(%esp),%ecx
	movl L_CoreziWorldziInternal_WorldState_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-16(%edi)
	leal -26(%edi),%ecx
	movl %ecx,-12(%edi)
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl 88(%esp),%eax
	movl %eax,(%edi)
	leal -15(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
LcTaV:
	movl $32,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTaJ_info - _cTaJ_info_dsp
.text
	.align 2
_sRCk_info_dsp:
.text
	.align 2
	.long	196631
	.long	1
	.long	10
_sRCk_info:
LcTaZ:
	call 1f
1:	popl	%eax
	addl $44,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcTb3
LcTb2:
	movl %eax,76(%esp)
	movl 1(%esi),%eax
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_sRCh_info-(1b)+0,%eax
	movl %eax,-40(%edi)
	movl 88(%esp),%eax
	movl %eax,-28(%edi)
	movl 76(%esp),%eax
	movl %eax,-24(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-16(%edi)
	leal -40(%edi),%eax
	movl %eax,-12(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -19(%edi),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_p_fast
LcTb3:
	movl $44,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRCk_info - _sRCk_info_dsp
.text
	.align 2
_CoreziWorldziInternal_easeRegister1_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_easeRegister1_info)+32
	.long	262168
	.long	0
	.long	-2147418097
.globl _CoreziWorldziInternal_easeRegister1_info
_CoreziWorldziInternal_easeRegister1_info:
LcTb4:
	call 1f
1:	popl	%eax
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	movl %eax,88(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcTb5
LcTb6:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja LcTb8
LcTb7:
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-16(%edi)
	movl 88(%esp),%eax
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl %eax,-8(%edi)
	movl 64(%esp),%eax
	addl $_sRCk_info-(1b)+0,%eax
	movl %eax,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -1(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	jmp _CoreziUtil_zdwwithMVar_info
LcTb8:
	movl $20,904(%ebx)
LcTb5:
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_easeRegister1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_easeRegister1_info - _CoreziWorldziInternal_easeRegister1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_easeRegister_closure
_CoreziWorldziInternal_easeRegister_closure:
	.long	_CoreziWorldziInternal_easeRegister_info
	.long	0
.text
	.align 2
_CoreziWorldziInternal_easeRegister_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_easeRegister_info)+92
	.long	262168
	.long	0
	.long	65551
.globl _CoreziWorldziInternal_easeRegister_info
_CoreziWorldziInternal_easeRegister_info:
LcTbR:
	movl 32(%ebx),%eax
	movl %eax,32(%ebx)
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_easeRegister1_info
	.long  _CoreziWorldziInternal_easeRegister_info - _CoreziWorldziInternal_easeRegister_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadContWorld_closure
_CoreziWorldziInternal_zdfMonadContWorld_closure:
	.long	_z34UQu9ZZXwLdG8LvFhY8OP0lQ_ControlziMonadziContziClass_DZCMonadCont_static_info
	.long	_CoreziWorldziInternal_zdfMonadWorld_closure+1
	.long	_CoreziWorldziInternal_zdfMonadContWorld1_closure+3
	.long	0
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdfMonadStateWorld_closure
_CoreziWorldziInternal_zdfMonadStateWorld_closure:
	.long	_z34UQu9ZZXwLdG8LvFhY8OP0lQ_ControlziMonadziStateziClass_DZCMonadState_static_info
	.long	_CoreziWorldziInternal_zdfMonadWorld_closure+1
	.long	_CoreziWorldziInternal_zdfMonadStateWorld3_closure+2
	.long	_CoreziWorldziInternal_zdfMonadStateWorld2_closure+3
	.long	_CoreziWorldziInternal_zdfMonadStateWorld1_closure+2
	.long	0
.data
	.align 2
.align 0
_rQTM_closure:
	.long	_rQTM_info
.text
	.align 2
_rQTM_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_rQTM_info:
LcTch:
	call 1f
1:	popl	%eax
	addl $40,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcTcl
LcTck:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	movl L_stg_sel_0_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-36(%edi)
	movl 76(%esp),%eax
	movl %eax,-24(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	leal -36(%edi),%eax
	movl %eax,-16(%edi)
	movl 76(%esp),%eax
	movl %eax,-12(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -19(%edi),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_p_fast
LcTcl:
	movl $40,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl %eax,%esi
	addl $_rQTM_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQTM_info - _rQTM_info_dsp
.data
	.align 2
.align 0
_rQTN_closure:
	.long	_ghczmprim_GHCziTypes_Izh_static_info
	.long	16
.data
	.align 2
.align 0
_rQTO_closure:
	.long	_rQTO_info
.text
	.align 2
_sRCQ_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRCQ_info:
LcTdo:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTdt
LcTdu:
	addl $_cTdl_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cTdl_info
LcTdm:
	jmp *(%esi)
LcTdt:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRCQ_info - _sRCQ_info_dsp
.text
	.align 2
_cTdl_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cTdl_info:
LcTdl:
	call 1f
1:	popl	%eax
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja LcTdx
LcTdw:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl 8(%ebp),%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -18(%edi),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_p_fast
LcTdx:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTdl_info - _cTdl_info_dsp
.text
	.align 2
_sRCR_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRCR_info:
LcTdz:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTdA
LcTdB:
	addl $_cTdb_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cTdb_info
LcTdc:
	jmp *(%esi)
LcTdA:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRCR_info - _sRCR_info_dsp
.text
	.align 2
_cTdb_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cTdb_info:
LcTdb:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcTdE
LcTdD:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_sRCQ_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	addl $12,%ebp
	jmp _rQTO_info
LcTdE:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTdb_info - _cTdb_info_dsp
.text
	.align 2
_rQTO_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_rQTO_info:
LcTdN:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcTdO
LcTdP:
	movl 64(%esp),%eax
	addl $_cTcV_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 76(%esp),%eax
	movl %eax,%esi
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cTcV_info
LcTcW:
	jmp *(%esi)
LcTdO:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl %eax,%esi
	addl $_rQTO_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQTO_info - _rQTO_info_dsp
.text
	.align 2
_cTcV_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cTcV_info:
LcTcV:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae LcTdL
LcTdM:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcTdU
LcTdT:
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl 4(%ebp),%eax
	movl %eax,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 8(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_p_fast
LcTdL:
	addl $_cTd1_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 6(%esi),%eax
	movl 2(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _cTd1_info
LcTd2:
	jmp *(%esi)
LcTdU:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTcV_info - _cTcV_info_dsp
.text
	.align 2
_cTd1_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_cTd1_info:
LcTd1:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcTdY
LcTdX:
	movl 3(%esi),%ecx
	addl $_sRCR_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl 12(%ebp),%eax
	movl %eax,-4(%edi)
	movl 4(%ebp),%eax
	movl %eax,(%edi)
	leal -7(%edi),%eax
	movl %eax,16(%ebx)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $16,%ebp
	jmp _stg_ap_pp_fast
LcTdY:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTd1_info - _cTd1_info_dsp
.data
	.align 2
.align 0
_rQTP_closure:
	.long	_rQTP_info
.text
	.align 2
_sRDb_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_sRDb_info:
LcTg6:
	call 1f
1:	popl	%eax
	leal -24(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcTg7
LcTg8:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_cTfW_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 12(%esi),%eax
	movl 20(%esi),%ecx
	movl 16(%esi),%esi
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _cTfW_info
LcTfX:
	jmp *(%esi)
LcTg7:
	jmp *-16(%ebx)
	.long  _sRDb_info - _sRDb_info_dsp
.text
	.align 2
_cTfW_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cTfW_info:
LcTfW:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
	movl %esi,%edx
	andl $7,%edx
	cmpl $2,%edx
	jae LcTg4
LcTg5:
	movl %ecx,%esi
	andl $-8,%esi
	addl $12,%ebp
	jmp *(%esi)
LcTg4:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcTgh
LcTgg:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -6(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
LcTgh:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTfW_info - _cTfW_info_dsp
.text
	.align 2
_sRDd_info_dsp:
.text
	.align 2
	.long	65541
	.long	3
	.long	9
_sRDd_info:
LcTgj:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -16(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTgl
LcTgm:
	addl $_cTfN_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _cTfN_info
LcTfO:
	jmp *(%esi)
LcTgl:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRDd_info - _sRDd_info_dsp
.text
	.align 2
_cTfN_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_cTfN_info:
LcTfN:
	call 1f
1:	popl	%eax
	addl $36,%edi
	cmpl 856(%ebx),%edi
	ja LcTgp
LcTgo:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_sRDb_info-(1b)+0,%eax
	movl %eax,-32(%edi)
	movl 8(%ebp),%eax
	movl %eax,-20(%edi)
	movl 12(%ebp),%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -32(%edi),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $16,%ebp
	jmp _stg_ap_p_fast
LcTgp:
	movl $36,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTfN_info - _cTfN_info_dsp
.text
	.align 2
_sRDe_info_dsp:
.text
	.align 2
	.long	65541
	.long	3
	.long	9
_sRDe_info:
LcTgr:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -16(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTgs
LcTgt:
	addl $_cTfD_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _cTfD_info
LcTfE:
	jmp *(%esi)
LcTgs:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRDe_info - _sRDe_info_dsp
.text
	.align 2
_cTfD_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_cTfD_info:
LcTfD:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja LcTgw
LcTgv:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_sRDd_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 4(%ebp),%eax
	movl %eax,-8(%edi)
	movl 12(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	addl $16,%ebp
	jmp _rQTP_info
LcTgw:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTfD_info - _cTfD_info_dsp
.text
	.align 2
_rQTP_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_rQTP_info:
LcTgF:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcTgG
LcTgH:
	movl 64(%esp),%eax
	addl $_cTfn_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 76(%esp),%eax
	movl %eax,%esi
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cTfn_info
LcTfo:
	jmp *(%esi)
LcTgG:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl %eax,%esi
	addl $_rQTP_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQTP_info - _rQTP_info_dsp
.text
	.align 2
_cTfn_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cTfn_info:
LcTfn:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae LcTgD
LcTgE:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcTgM
LcTgL:
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl 4(%ebp),%eax
	movl %eax,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 8(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_p_fast
LcTgD:
	addl $_cTft_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 6(%esi),%eax
	movl 2(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _cTft_info
LcTfu:
	jmp *(%esi)
LcTgM:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTfn_info - _cTfn_info_dsp
.text
	.align 2
_cTft_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_cTft_info:
LcTft:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja LcTgQ
LcTgP:
	movl 7(%esi),%ecx
	addl $_sRDe_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 12(%ebp),%eax
	movl %eax,-8(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -11(%edi),%eax
	movl %eax,16(%ebx)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $16,%ebp
	jmp _stg_ap_pp_fast
LcTgQ:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTft_info - _cTft_info_dsp
.data
	.align 2
.align 0
_rQTQ_closure:
	.long	_rQTQ_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_cTid_str:
	.byte	119
	.byte	95
	.byte	115
	.byte	80
	.byte	80
	.byte	113
	.byte	32
	.byte	40
	.byte	40
	.byte	41
	.byte	44
	.byte	32
	.byte	77
	.byte	86
	.byte	97
	.byte	114
	.byte	32
	.byte	87
	.byte	111
	.byte	114
	.byte	108
	.byte	100
	.byte	83
	.byte	116
	.byte	97
	.byte	116
	.byte	101
	.byte	41
	.byte	32
	.byte	45
	.byte	62
	.byte	32
	.byte	65
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	0
.text
	.align 2
_rQTQ_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_rQTQ_info)+96
	.long	0
	.long	65558
_rQTQ_info:
LcTie:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcTif
LcTig:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je LcTic
LcTib:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_cTid_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_ControlziExceptionziBase_absentError_info
LcTic:
	jmp *(%esi)
LcTif:
	jmp *-16(%ebx)
	.long  _rQTQ_info - _rQTQ_info_dsp
.data
	.align 2
.align 0
_rQTR_closure:
	.long	_rQTR_info
	.long	0
.text
	.align 2
_rQTR_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_rQTR_info)+100
	.long	131087
	.long	0
	.long	196623
_rQTR_info:
LcTiZ:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTj0
LcTj1:
	addl $_cTiW_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	addl $-4,%ebp
	jmp _rQTY_info
LcTj0:
	movl 16(%ebx),%edx
	movl %edx,16(%ebx)
	movl %ecx,8(%ebx)
	movl %eax,%esi
	addl $_rQTR_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQTR_info - _rQTR_info_dsp
.text
	.align 2
_cTiW_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cTiW_info:
LcTiW:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcTj4
LcTj3:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcTj4:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTiW_info - _cTiW_info_dsp
.data
	.align 2
.align 0
_rQTS_closure:
	.long	_rQTS_info
	.long	0
.text
	.align 2
_rQTS_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_rQTS_info)+100
	.long	65541
	.long	0
	.long	851983
_rQTS_info:
LcTjc:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTjd
LcTje:
	addl $_cTj9_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _cTj9_info
LcTja:
	jmp *(%esi)
LcTjd:
	movl %ecx,8(%ebx)
	movl %eax,%esi
	addl $_rQTS_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQTS_info - _rQTS_info_dsp
.text
	.align 2
_cTj9_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cTj9_info)+100
	.long	0
	.long	327712
_cTj9_info:
LcTj9:
	call 1f
1:	popl	%eax
	addl $_rQTQ_closure-(1b)+0,%eax
	movl %eax,16(%ebx)
	movl 7(%esi),%eax
	movl %eax,8(%ebx)
	addl $4,%ebp
	jmp _rQTR_info
	.long  _cTj9_info - _cTj9_info_dsp
.data
	.align 2
.align 0
_rQTT_closure:
	.long	_rQTT_info
	.long	0
.const_data
	.align 2
.align 0
_uTol_srtd:
	.long	_SRNt_srt+32
	.long	22
	.long	3145729
.text
	.align 2
_rQTT_info_dsp:
.text
	.align 2
	.long	_uTol_srtd-(_rQTT_info)+0
	.long	65541
	.long	0
	.long	-65521
_rQTT_info:
LcTjq:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTjr
LcTjs:
	addl $_cTjn_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _cTjn_info
LcTjo:
	jmp *(%esi)
LcTjr:
	movl %ecx,8(%ebx)
	movl %eax,%esi
	addl $_rQTT_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQTT_info - _rQTT_info_dsp
.const_data
	.align 2
.align 0
_uTom_srtd:
	.long	_SRNt_srt+32
	.long	21
	.long	1048577
.text
	.align 2
_cTjn_info_dsp:
.text
	.align 2
	.long	_uTom_srtd-(_cTjn_info)+0
	.long	0
	.long	-65504
_cTjn_info:
LcTjn:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_rQT4_closure-(1b)+3,%ecx
	movl %ecx,24(%ebx)
	movl 7(%esi),%ecx
	movl %ecx,16(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,8(%ebx)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $_rQTS_closure-(1b)+1,%eax
	movl %eax,(%ebp)
	addl $-8,%ebp
	jmp _CoreziUtil_zdwwithMVar_info
	.long  _cTjn_info - _cTjn_info_dsp
.data
	.align 2
.align 0
_rQTU_closure:
	.long	_rQTU_info
	.long	0
.text
	.align 2
_sRDx_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_sRDx_info:
LcTkm:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -8(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTkq
LcTkr:
	addl $_cTkj_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 3(%esi),%eax
	movl %ecx,%esi
	movl %eax,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cTkj_info
LcTkk:
	jmp *(%esi)
LcTkq:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRDx_info - _sRDx_info_dsp
.text
	.align 2
_cTkj_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cTkj_info:
LcTkj:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcTku
LcTkt:
	movl 7(%esi),%ecx
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%edi)
	movl L_ghczmprim_GHCziTypes_True_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	addl $2,%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $8,%ebp
	jmp _stg_ap_p_fast
LcTku:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTkj_info - _cTkj_info_dsp
.text
	.align 2
_sRDT_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRDT_info)+120
	.long	2
	.long	65555
_sRDT_info:
LcTla:
	call 1f
1:	popl	%eax
	leal -24(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcTlb
LcTlc:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	movl %eax,%ecx
	addl $_rQTz_closure-(1b)+1,%ecx
	movl %ecx,24(%ebx)
	movl 16(%esi),%ecx
	movl %ecx,16(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,8(%ebx)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl 12(%esi),%eax
	movl %eax,-16(%ebp)
	addl $-24,%ebp
	jmp _CoreziUtil_zdwwithMVar_info
LcTlb:
	jmp *-16(%ebx)
	.long  _sRDT_info - _sRDT_info_dsp
.text
	.align 2
_sRDV_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_sRDV_info:
LcTli:
	movl 3(%esi),%esi
	andl $-8,%esi
	jmp *(%esi)
	.long  _sRDV_info - _sRDV_info_dsp
.text
	.align 2
_sRDZ_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRDZ_info)+120
	.long	65541
	.long	3
	.long	65545
_sRDZ_info:
LcTll:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -24(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTlm
LcTln:
	addl $_cTkB_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _cTkB_info
LcTkC:
	jmp *(%esi)
LcTlm:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRDZ_info - _sRDZ_info_dsp
.text
	.align 2
_cTkB_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cTkB_info)+120
	.long	3
	.long	65568
_cTkB_info:
LcTkB:
	call 1f
1:	popl	%eax
	addl $_cTkG_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 7(%esi),%eax
	movl 3(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _cTkG_info
LcTkH:
	jmp *(%esi)
	.long  _cTkB_info - _cTkB_info_dsp
.text
	.align 2
_cTkG_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cTkG_info)+120
	.long	4
	.long	65568
_cTkG_info:
LcTkG:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae LcTlT
LcTlU:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcTlv
LcTlu:
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_ghczmprim_GHCziTypes_False_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl 4(%ebp),%eax
	movl %eax,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 12(%ebp),%esi
	addl $20,%ebp
	jmp _stg_ap_p_fast
LcTlT:
	addl $_cTkM_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne _cTkM_info
LcTkN:
	jmp *(%esi)
LcTlv:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTkG_info - _cTkG_info_dsp
.text
	.align 2
_cTkM_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cTkM_info)+120
	.long	4
	.long	65568
_cTkM_info:
LcTkM:
	call 1f
1:	popl	%eax
	addl $_cTkR_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 7(%esi),%eax
	movl 3(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _cTkR_info
LcTkS:
	jmp *(%esi)
	.long  _cTkM_info - _cTkM_info_dsp
.text
	.align 2
_cTkR_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cTkR_info)+120
	.long	5
	.long	65568
_cTkR_info:
LcTkR:
	call 1f
1:	popl	%eax
	addl $_cTkW_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 12(%ebp),%esi
	movl %eax,12(%ebp)
	testw $7,%si
	jne _cTkW_info
LcTkX:
	jmp *(%esi)
	.long  _cTkR_info - _cTkR_info_dsp
.text
	.align 2
_cTkW_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cTkW_info)+120
	.long	261
	.long	65568
_cTkW_info:
LcTkW:
	call 1f
1:	popl	%eax
	addl $28,%edi
	cmpl 856(%ebx),%edi
	ja LcTlC
LcTlB:
	movl 8(%ebp),%ecx
	movl 12(%ebp),%edx
	cmpl 3(%esi),%edx
	jg LcTlP
LcTlQ:
	movl %eax,%edx
	addl $_sRDT_info-(1b)+0,%edx
	movl %edx,-24(%edi)
	movl 20(%ebp),%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl %eax,%ecx
	addl $_sRDV_info-(1b)+0,%ecx
	movl %ecx,-4(%edi)
	leal -24(%edi),%ecx
	movl %ecx,(%edi)
	movl %eax,%ecx
	addl $_cTlD_info-(1b)+0,%ecx
	movl %ecx,20(%ebp)
	leal -3(%edi),%ecx
	movl %ecx,24(%ebx)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $20,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_zdwa1_info
LcTlC:
	movl $28,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
LcTlP:
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-24(%edi)
	movl L_ghczmprim_GHCziTypes_False_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	leal -23(%edi),%eax
	addl $-16,%edi
	movl %eax,8(%ebx)
	movl 16(%ebp),%esi
	addl $24,%ebp
	jmp _stg_ap_p_fast
	.long  _cTkW_info - _cTkW_info_dsp
.text
	.align 2
_cTlD_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cTlD_info:
LcTlD:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcTlK
LcTlJ:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcTlK:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTlD_info - _cTlD_info_dsp
.text
	.align 2
_sRE0_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRE0_info)+120
	.long	131087
	.long	1
	.long	65546
_sRE0_info:
LcTm0:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	movl %esi,%eax
	movl %edx,76(%esp)
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTm1
LcTm2:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja LcTm4
LcTm3:
	movl 2(%eax),%eax
	movl 64(%esp),%edx
	addl $_sRDx_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl %ecx,-16(%edi)
	movl 64(%esp),%edx
	addl $_sRDZ_info-(1b)+0,%edx
	movl %edx,-12(%edi)
	movl %eax,-8(%edi)
	movl %ecx,-4(%edi)
	leal -19(%edi),%eax
	movl %eax,(%edi)
	movl 64(%esp),%eax
	movl %eax,%ecx
	addl $_rQT5_closure-(1b)+3,%ecx
	movl %ecx,24(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,16(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,8(%ebx)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %ecx,-8(%ebp)
	leal -11(%edi),%eax
	movl %eax,-4(%ebp)
	addl $-12,%ebp
	jmp _CoreziUtil_zdwwithMVar_info
LcTm4:
	movl $24,904(%ebx)
LcTm1:
	movl %ecx,16(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp *-8(%ebx)
	.long  _sRE0_info - _sRE0_info_dsp
.text
	.align 2
_rQTU_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_rQTU_info)+116
	.long	65541
	.long	0
	.long	983055
_rQTU_info:
LcTm5:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTm6
LcTm7:
	addl $_cTk4_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _cTk4_info
LcTk5:
	jmp *(%esi)
LcTm6:
	movl %ecx,8(%ebx)
	movl %eax,%esi
	addl $_rQTU_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQTU_info - _rQTU_info_dsp
.text
	.align 2
_cTk4_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cTk4_info)+116
	.long	0
	.long	458784
_cTk4_info:
LcTk4:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcTma
LcTm9:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_sRE0_info-(1b)+0,%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -2(%edi),%eax
	movl %eax,16(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfMonadWorld_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,8(%ebx)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $_rQTT_closure-(1b)+1,%eax
	movl %eax,(%ebp)
	addl $-8,%ebp
	jmp _CoreziUtil_while_info
LcTma:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTk4_info - _cTk4_info_dsp
.data
	.align 2
.align 0
_rQTV_closure:
	.long	_rQTV_info
	.long	0
.text
	.align 2
_rQTV_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_rQTV_info)+120
	.long	65541
	.long	0
	.long	851983
_rQTV_info:
LcTmj:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTmk
LcTml:
	addl $_cTmg_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _cTmg_info
LcTmh:
	jmp *(%esi)
LcTmk:
	movl %ecx,8(%ebx)
	movl %eax,%esi
	addl $_rQTV_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQTV_info - _rQTV_info_dsp
.text
	.align 2
_cTmg_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cTmg_info)+120
	.long	0
	.long	327712
_cTmg_info:
LcTmg:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_rQT2_closure-(1b)+3,%ecx
	movl %ecx,24(%ebx)
	movl 7(%esi),%ecx
	movl %ecx,16(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,8(%ebx)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $_rQTU_closure-(1b)+1,%eax
	movl %eax,(%ebp)
	addl $-8,%ebp
	jmp _CoreziUtil_zdwwithMVar_info
	.long  _cTmg_info - _cTmg_info_dsp
.data
	.align 2
.align 0
_rQTW_closure:
	.long	_rQTW_info
	.long	0
.text
	.align 2
_sREi_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_sREi_info:
LcTmT:
	call 1f
1:	popl	%eax
	leal -28(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcTn2
LcTn3:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_cTmQ_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%esi
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _cTmQ_info
LcTmR:
	jmp *(%esi)
LcTn2:
	jmp *-16(%ebx)
	.long  _sREi_info - _sREi_info_dsp
.text
	.align 2
_cTmQ_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cTmQ_info:
LcTmQ:
	call 1f
1:	popl	%eax
	addl $_cTmW_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 7(%esi),%eax
	movl 11(%esi),%ecx
	movl 15(%esi),%edx
	movl 4(%ebp),%esi
	movl %ecx,-4(%ebp)
	movl %eax,(%ebp)
	movl %edx,4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cTmW_info
LcTmX:
	jmp *(%esi)
	.long  _cTmQ_info - _cTmQ_info_dsp
.text
	.align 2
_cTmW_info_dsp:
.text
	.align 2
	.long	259
	.long	32
_cTmW_info:
LcTmW:
	call 1f
1:	popl	%eax
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja LcTn7
LcTn6:
	movl L_CoreziWorldziInternal_WorldState_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-16(%edi)
	movl %esi,-12(%edi)
	movl 8(%ebp),%eax
	movl %eax,-8(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl 12(%ebp),%eax
	movl %eax,(%edi)
	leal -15(%edi),%esi
	addl $16,%ebp
	jmp *(%ebp)
LcTn7:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTmW_info - _cTmW_info_dsp
.text
	.align 2
_sREl_info_dsp:
.text
	.align 2
	.long	196631
	.long	1
	.long	10
_sREl_info:
LcTnc:
	call 1f
1:	popl	%eax
	addl $44,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja LcTng
LcTnf:
	movl %eax,76(%esp)
	movl 1(%esi),%eax
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_sREi_info-(1b)+0,%eax
	movl %eax,-40(%edi)
	movl 88(%esp),%eax
	movl %eax,-28(%edi)
	movl 76(%esp),%eax
	movl %eax,-24(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-16(%edi)
	leal -40(%edi),%eax
	movl %eax,-12(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -19(%edi),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp _stg_ap_p_fast
LcTng:
	movl $44,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _sREl_info - _sREl_info_dsp
.text
	.align 2
_rQTW_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_rQTW_info)+120
	.long	65541
	.long	0
	.long	1638415
_rQTW_info:
LcTnh:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTni
LcTnj:
	addl $_cTmC_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _cTmC_info
LcTmD:
	jmp *(%esi)
LcTni:
	movl %ecx,8(%ebx)
	movl %eax,%esi
	addl $_rQTW_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQTW_info - _rQTW_info_dsp
.text
	.align 2
_cTmC_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cTmC_info)+120
	.long	0
	.long	589856
_cTmC_info:
LcTmC:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcTnm
LcTnl:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_sREl_info-(1b)+0,%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -1(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,8(%ebx)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $_rQTV_closure-(1b)+1,%eax
	movl %eax,(%ebp)
	addl $-8,%ebp
	jmp _CoreziUtil_zdwwithMVar_info
LcTnm:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTmC_info - _cTmC_info_dsp
.data
	.align 2
.align 0
_rQTX_closure:
	.long	_rQTX_info
	.long	0
.text
	.align 2
_sREu_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sREu_info)+136
	.long	65541
	.long	1
	.long	65546
_sREu_info:
LcTnJ:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -8(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTnK
LcTnL:
	addl $_cTnG_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 3(%esi),%eax
	movl %ecx,%esi
	movl %eax,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cTnG_info
LcTnH:
	jmp *(%esi)
LcTnK:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sREu_info - _sREu_info_dsp
.text
	.align 2
_cTnG_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cTnG_info)+136
	.long	1
	.long	65568
_cTnG_info:
LcTnG:
	call 1f
1:	popl	%eax
	addl $_rQTW_closure-(1b)+1,%eax
	movl %eax,24(%ebx)
	movl 7(%esi),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $8,%ebp
	jmp _rQTP_info
	.long  _cTnG_info - _cTnG_info_dsp
.text
	.align 2
_rQTX_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_rQTX_info)+136
	.long	65541
	.long	0
	.long	196623
_rQTX_info:
LcTnQ:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTnR
LcTnS:
	addl $_cTnw_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _cTnw_info
LcTnx:
	jmp *(%esi)
LcTnR:
	movl %ecx,8(%ebx)
	movl %eax,%esi
	addl $_rQTX_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQTX_info - _rQTX_info_dsp
.text
	.align 2
_cTnw_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cTnw_info)+136
	.long	0
	.long	65568
_cTnw_info:
LcTnw:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcTnV
LcTnU:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_sREu_info-(1b)+0,%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -3(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl %ecx,8(%ebx)
	addl $4,%ebp
	jmp _rQTO_info
LcTnV:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTnw_info - _cTnw_info_dsp
.data
	.align 2
.align 0
_rQTY_closure:
	.long	_rQTY_info
	.long	0
.text
	.align 2
_sREw_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sREw_info)+120
	.long	1
	.long	2162705
_sREw_info:
LcTo5:
	call 1f
1:	popl	%eax
	leal -24(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcTo6
LcTo7:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	movl %eax,%ecx
	addl $_rQTM_closure-(1b)+3,%ecx
	movl %ecx,24(%ebx)
	movl 12(%esi),%ecx
	movl %ecx,16(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,8(%ebx)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-24(%ebp)
	movl %ecx,-20(%ebp)
	addl $_rQTX_closure-(1b)+1,%eax
	movl %eax,-16(%ebp)
	addl $-24,%ebp
	jmp _CoreziUtil_zdwwithMVar_info
LcTo6:
	jmp *-16(%ebx)
	.long  _sREw_info - _sREw_info_dsp
.text
	.align 2
_sREy_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_sREy_info:
LcTod:
	movl 3(%esi),%esi
	andl $-8,%esi
	jmp *(%esi)
	.long  _sREy_info - _sREy_info_dsp
.const_data
	.align 2
.align 0
_uTon_srtd:
	.long	_SRNt_srt
	.long	36
	.long	1140850689
	.long	8
.text
	.align 2
_rQTY_info_dsp:
.text
	.align 2
	.long	_uTon_srtd-(_rQTY_info)+0
	.long	65541
	.long	0
	.long	-65521
_rQTY_info:
LcTog:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcTok
LcToj:
	movl %eax,%edx
	addl $_sREw_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl %ecx,-8(%edi)
	movl %eax,%ecx
	addl $_sREy_info-(1b)+0,%ecx
	movl %ecx,-4(%edi)
	leal -20(%edi),%ecx
	movl %ecx,(%edi)
	leal -3(%edi),%ecx
	movl %ecx,16(%ebx)
	addl $_rQTN_closure-(1b)+1,%eax
	movl %eax,8(%ebx)
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrent_zdwa_info
LcTok:
	movl $24,904(%ebx)
	movl %ecx,8(%ebx)
	movl %eax,%esi
	addl $_rQTY_closure-(1b)+0,%esi
	jmp *-8(%ebx)
	.long  _rQTY_info - _rQTY_info_dsp
.data
	.align 2
.align 0
_rQTZ_closure:
	.long	_rQTZ_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_cTt9_str:
	.byte	119
	.byte	95
	.byte	115
	.byte	80
	.byte	80
	.byte	65
	.byte	32
	.byte	40
	.byte	40
	.byte	41
	.byte	44
	.byte	32
	.byte	77
	.byte	86
	.byte	97
	.byte	114
	.byte	32
	.byte	87
	.byte	111
	.byte	114
	.byte	108
	.byte	100
	.byte	83
	.byte	116
	.byte	97
	.byte	116
	.byte	101
	.byte	41
	.byte	32
	.byte	45
	.byte	62
	.byte	32
	.byte	65
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	0
.text
	.align 2
_rQTZ_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_rQTZ_info)+96
	.long	0
	.long	65558
_rQTZ_info:
LcTta:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcTtb
LcTtc:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je LcTt8
LcTt7:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_cTt9_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_ControlziExceptionziBase_absentError_info
LcTt8:
	jmp *(%esi)
LcTtb:
	jmp *-16(%ebx)
	.long  _rQTZ_info - _rQTZ_info_dsp
.data
	.align 2
.align 0
_rQU0_closure:
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Empty_static_info
	.long	_ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	1
.data
	.align 2
.align 0
_rQU1_closure:
	.long	_ghczmprim_GHCziTuple_Z2T_static_info
	.long	_CoreziWorldziInternal_switch2_closure+1
	.long	_CE9g8Rzz7fPNBD6QBJeXfBh_DataziIntMapziBase_Nil_closure+3
	.long	1
.data
	.align 2
.align 0
_rQU2_closure:
	.long	_CoreziWorldziInternal_WorldState_static_info
	.long	_ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	_EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_Empty_closure+1
	.long	_rQU1_closure+1
	.long	0
	.long	1
.data
	.align 2
.align 0
_rQU3_closure:
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Full_static_info
	.long	_rQU2_closure+1
	.long	_ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	1
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_zdwa5_closure
_CoreziWorldziInternal_zdwa5_closure:
	.long	_CoreziWorldziInternal_zdwa5_info
	.long	0
.text
	.align 2
_sREG_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_sREG_info:
LcTu0:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -8(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTu1
LcTu2:
	addl $_cTtX_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 3(%esi),%eax
	movl %ecx,%esi
	movl %eax,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cTtX_info
LcTtY:
	jmp *(%esi)
LcTu1:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sREG_info - _sREG_info_dsp
.text
	.align 2
_cTtX_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_cTtX_info:
LcTtX:
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $8,%ebp
	jmp _stg_ap_p_fast
	.long  _cTtX_info - _cTtX_info_dsp
.text
	.align 2
_sREL_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sREL_info:
LcTuf:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTug
LcTuh:
	addl $_cTuc_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cTuc_info
LcTud:
	jmp *(%esi)
LcTug:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sREL_info - _sREL_info_dsp
.text
	.align 2
_cTuc_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cTuc_info:
LcTuc:
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 7(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_pp_fast
	.long  _cTuc_info - _cTuc_info_dsp
.text
	.align 2
_sRGG_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRGG_info)+104
	.long	1
	.long	65553
_sRGG_info:
LcTut:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcTuu
LcTuv:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_cTuq_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _rQTY_info
LcTuu:
	jmp *-16(%ebx)
	.long  _sRGG_info - _sRGG_info_dsp
.text
	.align 2
_cTuq_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cTuq_info:
LcTuq:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcTuy
LcTux:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcTuy:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTuq_info - _cTuq_info_dsp
.text
	.align 2
_sRFi_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRFi_info)+120
	.long	65541
	.long	1
	.long	65546
_sRFi_info:
LcTv8:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -8(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTv9
LcTva:
	addl $_cTv5_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 3(%esi),%eax
	movl %ecx,%esi
	movl %eax,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _cTv5_info
LcTv6:
	jmp *(%esi)
LcTv9:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRFi_info - _sRFi_info_dsp
.text
	.align 2
_cTv5_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cTv5_info)+120
	.long	1
	.long	65568
_cTv5_info:
LcTv5:
	movl 7(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $8,%ebp
	jmp _sRFj_info
	.long  _cTv5_info - _cTv5_info_dsp
.text
	.align 2
_sRFO_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRFO_info)+120
	.long	2
	.long	65555
_sRFO_info:
LcTxa:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcTxb
LcTxc:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%ecx
	movl %ecx,24(%ebx)
	movl 16(%esi),%ecx
	movl %ecx,16(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrent_zn_info
LcTxb:
	jmp *-16(%ebx)
	.long  _sRFO_info - _sRFO_info_dsp
.text
	.align 2
_sRFW_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRFW_info:
LcTxE:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTxF
LcTxG:
	addl $_cTxB_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cTxB_info
LcTxC:
	jmp *(%esi)
LcTxF:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRFW_info - _sRFW_info_dsp
.text
	.align 2
_cTxB_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cTxB_info:
LcTxB:
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 7(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_pp_fast
	.long  _cTxB_info - _cTxB_info_dsp
.text
	.align 2
_sRFX_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRFX_info:
LcTxL:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcTxP
LcTxO:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_sRFW_info-(1b)+0,%edx
	movl %edx,-8(%edi)
	movl 76(%esp),%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%ecx
	movl %ecx,8(%ebx)
	movl %eax,%esi
	jmp _stg_ap_p_fast
LcTxP:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRFX_info - _sRFX_info_dsp
.text
	.align 2
_sRFY_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRFY_info:
LcTxQ:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcTxU
LcTxT:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-28(%edi)
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	addl $_sRFX_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl 76(%esp),%eax
	movl %eax,-4(%edi)
	leal -28(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
LcTxU:
	movl $32,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRFY_info - _sRFY_info_dsp
.text
	.align 2
_sRFD_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRFD_info)+120
	.long	131087
	.long	1
	.long	65546
_sRFD_info:
LcTy6:
	movl 16(%ebx),%eax
	movl 8(%ebx),%ecx
	leal -16(%ebp),%edx
	cmpl 840(%ebx),%edx
	jae LuTyi
LcTy7:
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
LuTyi:
	movl %esi,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-12,%ebp
	jmp _cTwG_entry
	.long  _sRFD_info - _sRFD_info_dsp
.text
	.align 2
_cTwG_entry:
LcTwG:
	call 1f
1:	popl	%eax
	movl (%ebp),%ecx
	movl 2(%ecx),%ecx
	addl $_cTwJ_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 8(%ebp),%esi
	movl %ecx,8(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _cTwJ_info
LcTwK:
	jmp *(%esi)
.text
	.align 2
_cTwJ_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cTwJ_info)+120
	.long	3
	.long	65568
_cTwJ_info:
LcTwJ:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
	movl %esi,%edx
	andl $7,%edx
	cmpl $2,%edx
	jae LcTy4
LcTy5:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja LcTyb
LcTya:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_stg_ap_3_upd_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-20(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-8(%edi)
	movl 76(%esp),%ecx
	movl %ecx,-4(%edi)
	movl %eax,(%edi)
	leal -20(%edi),%eax
	movl %eax,8(%ebp)
	movl %edx,12(%ebp)
	addl $4,%ebp
	jmp _cTwG_entry
LcTy1:
	movl %ecx,%esi
	addl $16,%ebp
	jmp _stg_ap_0_fast
LcTy4:
	cmpl $3,%edx
	jae LcTy1
LcTy2:
	addl $32,%edi
	cmpl 856(%ebx),%edi
	ja LcTye
LcTyd:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	addl $_sRFO_info-(1b)+0,%eax
	movl %eax,-28(%edi)
	movl 12(%ebp),%eax
	movl %eax,-16(%edi)
	movl %edx,-12(%edi)
	movl 64(%esp),%eax
	addl $_sRFY_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl %ecx,-4(%edi)
	leal -28(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%esi
	addl $16,%ebp
	jmp *(%ebp)
LcTyb:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
LcTye:
	movl $32,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTwJ_info - _cTwJ_info_dsp
.text
	.align 2
_sRG6_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRG6_info)+120
	.long	2
	.long	65555
_sRG6_info:
LcTyC:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcTyD
LcTyE:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 16(%esi),%ecx
	movl %ecx,16(%ebx)
	movl L_CoreziWorldziInternal_oneway2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	addl $2,%eax
	movl %eax,8(%ebx)
	movl 12(%esi),%esi
	addl $-12,%ebp
	jmp _sRFD_info
LcTyD:
	jmp *-16(%ebx)
	.long  _sRG6_info - _sRG6_info_dsp
.text
	.align 2
_sRG7_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRG7_info)+120
	.long	2
	.long	65555
_sRG7_info:
LcTyK:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcTyL
LcTyM:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 16(%esi),%ecx
	movl %ecx,16(%ebx)
	movl L_CoreziWorldziInternal_oneway2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	addl $2,%eax
	movl %eax,8(%ebx)
	movl 12(%esi),%esi
	addl $-12,%ebp
	jmp _sRFD_info
LcTyL:
	jmp *-16(%ebx)
	.long  _sRG7_info - _sRG7_info_dsp
.text
	.align 2
_sRGr_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_sRGr_info:
LcTyS:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcTz4
LcTz5:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_cTyP_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _cTyP_info
LcTyQ:
	jmp *(%esi)
LcTz4:
	jmp *-16(%ebx)
	.long  _sRGr_info - _sRGr_info_dsp
.text
	.align 2
_cTyP_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cTyP_info:
LcTyP:
	call 1f
1:	popl	%eax
	addl $_cTyV_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 7(%esi),%esi
	testw $7,%si
	jne _cTyV_info
LcTyW:
	jmp *(%esi)
	.long  _cTyP_info - _cTyP_info_dsp
.text
	.align 2
_cTyV_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cTyV_info:
LcTyV:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcTz9
LcTz8:
	movl 3(%esi),%ecx
#	gitodlsd %ecx,%fake0
	pushl %ecx ; fildl (%esp) ; fstp %st(1) ; addl $4,%esp
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
LcTz9:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTyV_info - _cTyV_info_dsp
.text
	.align 2
_sRGk_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_sRGk_info:
LcTzh:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcTzt
LcTzu:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_cTze_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _cTze_info
LcTzf:
	jmp *(%esi)
LcTzt:
	jmp *-16(%ebx)
	.long  _sRGk_info - _sRGk_info_dsp
.text
	.align 2
_cTze_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cTze_info:
LcTze:
	call 1f
1:	popl	%eax
	addl $_cTzk_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _cTzk_info
LcTzl:
	jmp *(%esi)
	.long  _cTze_info - _cTze_info_dsp
.text
	.align 2
_cTzk_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cTzk_info:
LcTzk:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja LcTzy
LcTzx:
	movl 3(%esi),%ecx
#	gitodlsd %ecx,%fake0
	pushl %ecx ; fildl (%esp) ; fstp %st(1) ; addl $4,%esp
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
LcTzy:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTzk_info - _cTzk_info_dsp
.text
	.align 2
_sRGu_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRGu_info)+120
	.long	65541
	.long	3
	.long	65545
_sRGu_info:
LcTzB:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -24(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTzC
LcTzD:
	addl $_cTvR_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _cTvR_info
LcTvS:
	jmp *(%esi)
LcTzC:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRGu_info - _sRGu_info_dsp
.text
	.align 2
_cTvR_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cTvR_info)+120
	.long	3
	.long	65568
_cTvR_info:
LcTvR:
	call 1f
1:	popl	%eax
	addl $_cTvW_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl 12(%ebp),%esi
	movl %ecx,(%ebp)
	movl %eax,12(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _cTvW_info
LcTvX:
	jmp *(%esi)
	.long  _cTvR_info - _cTvR_info_dsp
.text
	.align 2
_cTvW_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cTvW_info)+120
	.long	4
	.long	65568
_cTvW_info:
LcTvW:
	call 1f
1:	popl	%eax
	addl $_cTw3_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 7(%esi),%eax
	movl 3(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _cTw3_info
LcTw4:
	jmp *(%esi)
	.long  _cTvW_info - _cTvW_info_dsp
.text
	.align 2
_cTw3_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cTw3_info)+120
	.long	5
	.long	65568
_cTw3_info:
LcTw3:
	call 1f
1:	popl	%eax
	movl 16(%ebp),%ecx
	movl 8(%ebp),%edx
	movl %eax,64(%esp)
	movl -1(%esi),%eax
	movzwl -2(%eax),%eax
	cmpl $4,%eax
	ja LcTA0
LcTAk:
	movl %eax,76(%esp)
	movl 12(%ebp),%eax
	movl %eax,88(%esp)
	movl 76(%esp),%eax
	cmpl $3,%eax
	jae LcTAg
LcTAh:
	cmpl $2,%eax
	jne LcTA0
LcTA3:
	movl 64(%esp),%eax
	addl $_rQTl_closure-(1b)+1,%eax
	movl %eax,16(%ebp)
	movl %edx,12(%ebp)
	movl 88(%esp),%eax
	movl %eax,8(%ebp)
	addl $8,%ebp
	jmp _cTwC_entry
LcTA0:
	movl %edx,8(%ebx)
	movl %ecx,%esi
	addl $24,%ebp
	jmp _sRFj_info
LcTAd:
	addl $68,%edi
	cmpl 856(%ebx),%edi
	ja LcTAa
LcTA9:
	movl 64(%esp),%eax
	movl L_stg_sel_0_upd_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-64(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-52(%edi)
	movl %eax,%ecx
	addl $_sRGr_info-(1b)+0,%ecx
	movl %ecx,-48(%edi)
	leal -64(%edi),%ecx
	movl %ecx,-36(%edi)
	addl $_sRGk_info-(1b)+0,%eax
	movl %eax,-32(%edi)
	movl %ecx,-20(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -32(%edi),%ecx
	movl %ecx,-12(%edi)
	leal -48(%edi),%ecx
	movl %ecx,-8(%edi)
	movl L_base_DataziEither_Right_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	movl 88(%esp),%eax
	movl %eax,8(%ebp)
	movl %edx,12(%ebp)
	leal -2(%edi),%eax
	movl %eax,16(%ebp)
	addl $8,%ebp
	jmp _cTwC_entry
LcTAa:
	movl $68,904(%ebx)
	movl 64(%esp),%eax
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
LcTAg:
	cmpl $4,%eax
	jae LcTAd
LcTAe:
	movl 64(%esp),%eax
	addl $_rQTk_closure-(1b)+1,%eax
	movl %eax,16(%ebp)
	movl %edx,12(%ebp)
	movl 88(%esp),%eax
	movl %eax,8(%ebp)
	addl $8,%ebp
	jmp _cTwC_entry
	.long  _cTw3_info - _cTw3_info_dsp
.text
	.align 2
_cTwC_entry:
LcTwC:
	call 1f
1:	popl	%eax
	addl $8,%edi
	movl 8(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja LcTzI
LcTzH:
	movl %eax,%edx
	addl $_sRFD_info-(1b)+0,%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	addl $_cTyn_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 12(%ebp),%esi
	leal -2(%edi),%eax
	movl %eax,12(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _cTyn_info
LcTyo:
	jmp *(%esi)
LcTzI:
	movl $8,904(%ebx)
	movl %eax,%edx
	addl $_cTwB_info-(1b)+0,%edx
	movl %edx,8(%ebp)
	movl (%ebp),%edx
	movl %edx,16(%ebx)
	movl 4(%ebp),%edx
	movl %edx,8(%ebx)
	movl %ecx,%esi
	addl $8,%ebp
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
.text
	.align 2
_cTwB_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cTwB_info)+120
	.long	1
	.long	65568
_cTwB_info:
LcTwB:
	movl %esi,(%ebp)
	movl 8(%ebx),%eax
	movl %eax,-4(%ebp)
	movl 16(%ebx),%eax
	movl %eax,-8(%ebp)
	addl $-8,%ebp
	jmp _cTwC_entry
	.long  _cTwB_info - _cTwB_info_dsp
.text
	.align 2
_cTyn_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_cTyn_info)+120
	.long	260
	.long	65568
_cTyn_info:
LcTyn:
	call 1f
1:	popl	%eax
	movl 16(%ebp),%ecx
	movl 8(%ebp),%edx
	movl %ecx,64(%esp)
	movl 4(%ebp),%ecx
	movl %eax,76(%esp)
	movl %esi,%eax
	andl $7,%eax
	cmpl $1,%eax
	jne LcTzM
LcTzN:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja LcTzQ
LcTzP:
	movl 3(%esi),%eax
	movl %edx,88(%esp)
	movl 7(%esi),%edx
	cmpl $0,15(%esi)
	jl LcTzV
LcTzW:
	movl %ecx,100(%esp)
	movl 76(%esp),%ecx
	addl $_sRG6_info-(1b)+0,%ecx
	movl %ecx,-16(%edi)
	movl 64(%esp),%ecx
	movl %ecx,-4(%edi)
	movl %edx,(%edi)
	movl %eax,16(%ebx)
	leal -16(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	movl 76(%esp),%eax
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,8(%ebp)
	movl 88(%esp),%eax
	movl %eax,12(%ebp)
	movl 100(%esp),%eax
	movl %eax,16(%ebp)
	addl $8,%ebp
	jmp _sRFD_info
LcTzM:
	movl %esi,16(%ebx)
	movl 76(%esp),%eax
	movl L_CoreziWorldziInternal_oneway2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	addl $2,%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl %eax,%esi
	movl 76(%esp),%eax
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,8(%ebp)
	movl %edx,12(%ebp)
	movl %ecx,16(%ebp)
	addl $8,%ebp
	jmp _sRFD_info
LcTzQ:
	movl $20,904(%ebx)
	movl 76(%esp),%eax
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
LcTzV:
	movl %ecx,100(%esp)
	movl 76(%esp),%ecx
	addl $_sRG7_info-(1b)+0,%ecx
	movl %ecx,-16(%edi)
	movl 64(%esp),%ecx
	movl %ecx,-4(%edi)
	movl %eax,(%edi)
	movl %edx,16(%ebx)
	leal -16(%edi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	movl 76(%esp),%eax
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,8(%ebp)
	movl 88(%esp),%eax
	movl %eax,12(%ebp)
	movl 100(%esp),%eax
	movl %eax,16(%ebp)
	addl $8,%ebp
	jmp _sRFD_info
	.long  _cTyn_info - _cTyn_info_dsp
.text
	.align 2
_sRGv_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRGv_info)+120
	.long	65541
	.long	3
	.long	65545
_sRGv_info:
LcTAy:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	movl %esi,%edx
	movl %eax,64(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcTAz
LcTAA:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja LcTAC
LcTAB:
	movl 3(%edx),%eax
	movl %eax,76(%esp)
	movl 7(%edx),%eax
	movl 11(%edx),%edx
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_sRGu_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl %eax,-8(%edi)
	movl 88(%esp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	movl %eax,%ecx
	addl $_rQT3_closure-(1b)+3,%ecx
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,8(%ebx)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	leal -11(%edi),%eax
	movl %eax,-4(%ebp)
	addl $-12,%ebp
	jmp _CoreziUtil_zdwwithMVar_info
LcTAC:
	movl $16,904(%ebx)
LcTAz:
	movl %ecx,8(%ebx)
	movl %edx,%esi
	jmp *-8(%ebx)
	.long  _sRGv_info - _sRGv_info_dsp
.text
	.align 2
_sRFj_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRFj_info)+120
	.long	65541
	.long	2
	.long	65548
_sRFj_info:
LcTAG:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	movl %esi,%edx
	movl %eax,64(%esp)
	leal -4(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcTAH
LcTAI:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja LcTAK
LcTAJ:
	movl 3(%edx),%eax
	movl %eax,76(%esp)
	movl 7(%edx),%eax
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_sRGv_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 88(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	addl $_cTAD_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	leal -11(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	addl $-4,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_zdwa2_info
LcTAK:
	movl $16,904(%ebx)
LcTAH:
	movl %ecx,8(%ebx)
	movl %edx,%esi
	jmp *-8(%ebx)
	.long  _sRFj_info - _sRFj_info_dsp
.text
	.align 2
_cTAD_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cTAD_info:
LcTAD:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcTAN
LcTAM:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcTAN:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTAD_info - _cTAD_info_dsp
.text
	.align 2
_sRGy_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRGy_info)+120
	.long	2
	.long	65555
_sRGy_info:
LcTAO:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTAP
LcTAQ:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja LcTAS
LcTAR:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_sRFi_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	leal -7(%edi),%eax
	movl %eax,-12(%edi)
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_sRFj_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl %ecx,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	movl %edx,8(%ebx)
	movl 76(%esp),%eax
	movl %eax,%esi
	addl $-12,%ebp
	jmp _sRFj_info
LcTAS:
	movl $20,904(%ebx)
LcTAP:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _sRGy_info - _sRGy_info_dsp
.text
	.align 2
_sREY_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sREY_info)+120
	.long	65541
	.long	1
	.long	65546
_sREY_info:
LcTBk:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcTBo
LcTBn:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 64(%esp),%eax
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_MouseMove_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrent_zn_info
LcTBo:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sREY_info - _sREY_info_dsp
.const_data
	.align 2
.align 0
_uTCU_srtd:
	.long	_SRNt_srt+68
	.long	20
	.long	532487
.text
	.align 2
_sREV_info_dsp:
.text
	.align 2
	.long	_uTCU_srtd-(_sREV_info)+0
	.long	1
	.long	-65519
_sREV_info:
LcTBp:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -16(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTBq
LcTBr:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcTBt
LcTBs:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%ecx
	movl %eax,%edx
	addl $_sREY_info-(1b)+0,%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_MouseMove_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,40(%ebx)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_document1_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,32(%ebx)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_zdfEventMouseEvent_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,24(%ebx)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_zdfIsElemElem_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,16(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadEventWorld_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	leal -3(%edi),%eax
	movl %eax,-16(%ebp)
	addl $-16,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziCore_onEvent_info
LcTBt:
	movl $8,904(%ebx)
LcTBq:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _sREV_info - _sREV_info_dsp
.text
	.align 2
_sRF2_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRF2_info)+120
	.long	65541
	.long	1
	.long	65546
_sRF2_info:
LcTBE:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcTBI
LcTBH:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 64(%esp),%eax
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_MouseUp_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrent_zn_info
LcTBI:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRF2_info - _sRF2_info_dsp
.const_data
	.align 2
.align 0
_uTCV_srtd:
	.long	_SRNt_srt+68
	.long	20
	.long	532487
.text
	.align 2
_sREZ_info_dsp:
.text
	.align 2
	.long	_uTCV_srtd-(_sREZ_info)+0
	.long	1
	.long	-65519
_sREZ_info:
LcTBJ:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -16(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTBK
LcTBL:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcTBN
LcTBM:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%ecx
	movl %eax,%edx
	addl $_sRF2_info-(1b)+0,%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_MouseUp_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,40(%ebx)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_document1_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,32(%ebx)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_zdfEventMouseEvent_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,24(%ebx)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_zdfIsElemElem_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,16(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadEventWorld_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	leal -3(%edi),%eax
	movl %eax,-16(%ebp)
	addl $-16,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziCore_onEvent_info
LcTBN:
	movl $8,904(%ebx)
LcTBK:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _sREZ_info - _sREZ_info_dsp
.text
	.align 2
_sRF3_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRF3_info:
LcTBW:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTBX
LcTBY:
	addl $_cTBT_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cTBT_info
LcTBU:
	jmp *(%esi)
LcTBX:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRF3_info - _sRF3_info_dsp
.text
	.align 2
_cTBT_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cTBT_info:
LcTBT:
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl 7(%esi),%eax
	movl %eax,8(%ebx)
	movl 8(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_pp_fast
	.long  _cTBT_info - _cTBT_info_dsp
.text
	.align 2
_sRFf_info_dsp:
.text
	.align 2
	.long	65541
	.long	2
	.long	12
_sRFf_info:
LcTCb:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTCc
LcTCd:
	addl $_cTC8_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _cTC8_info
LcTC9:
	jmp *(%esi)
LcTCc:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRFf_info - _sRFf_info_dsp
.text
	.align 2
_cTC8_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_cTC8_info:
LcTC8:
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 7(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_pp_fast
	.long  _cTC8_info - _cTC8_info_dsp
.text
	.align 2
_sRFa_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_sRFa_info)+120
	.long	65541
	.long	1
	.long	65546
_sRFa_info:
LcTCo:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja LcTCs
LcTCr:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 64(%esp),%eax
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_MouseDown_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrent_zn_info
LcTCs:
	movl $12,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _sRFa_info - _sRFa_info_dsp
.const_data
	.align 2
.align 0
_uTCW_srtd:
	.long	_SRNt_srt+68
	.long	20
	.long	532487
.text
	.align 2
_sRFg_info_dsp:
.text
	.align 2
	.long	_uTCW_srtd-(_sRFg_info)+0
	.long	3
	.long	-65520
_sRFg_info:
LcTCt:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -28(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb LcTCu
LcTCv:
	addl $64,%edi
	cmpl 856(%ebx),%edi
	ja LcTCx
LcTCw:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl %eax,64(%esp)
	movl 16(%ecx),%eax
	movl 20(%ecx),%ecx
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_sREV_info-(1b)+0,%edx
	movl %edx,-60(%edi)
	movl %ecx,-48(%edi)
	movl 64(%esp),%edx
	addl $_sREZ_info-(1b)+0,%edx
	movl %edx,-44(%edi)
	movl %ecx,-32(%edi)
	movl 64(%esp),%edx
	addl $_sRF3_info-(1b)+0,%edx
	movl %edx,-28(%edi)
	movl %eax,-24(%edi)
	leal -44(%edi),%eax
	movl %eax,-20(%edi)
	movl 64(%esp),%eax
	movl %eax,%edx
	addl $_sRFf_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	leal -60(%edi),%edx
	movl %edx,-12(%edi)
	leal -27(%edi),%edx
	movl %edx,-8(%edi)
	movl %eax,%edx
	addl $_sRFa_info-(1b)+0,%edx
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_MouseDown_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,40(%ebx)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_document1_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,32(%ebx)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_zdfEventMouseEvent_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,24(%ebx)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_zdfIsElemElem_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,16(%ebx)
	movl L_CoreziWorldziInternal_zdfMonadEventWorld_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,8(%ebx)
	leal -3(%edi),%ecx
	movl %ecx,-28(%ebp)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-24(%ebp)
	movl 76(%esp),%eax
	movl %eax,-20(%ebp)
	leal -15(%edi),%eax
	movl %eax,-16(%ebp)
	addl $-28,%ebp
	jmp _LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziCore_onEvent_info
LcTCx:
	movl $64,904(%ebx)
LcTCu:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _sRFg_info - _sRFg_info_dsp
.const_data
	.align 2
.align 0
_uTCX_srtd:
	.long	_SRNt_srt+68
	.long	20
	.long	532487
.text
	.align 2
_sRGC_info_dsp:
.text
	.align 2
	.long	_uTCX_srtd-(_sRGC_info)+0
	.long	65539
	.long	2
	.long	-65524
_sRGC_info:
LcTCA:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcTCB
LcTCC:
	movl %eax,%ecx
	addl $_cTuS_info-(1b)+0,%ecx
	movl %ecx,-12(%ebp)
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,%esi
	addl $_rQU0_closure-(1b)+2,%esi
	movl %ecx,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	jmp _stg_newMutVarzh
LcTCB:
	jmp *-8(%ebx)
	.long  _sRGC_info - _sRGC_info_dsp
.const_data
	.align 2
.align 0
_uTCY_srtd:
	.long	_SRNt_srt+68
	.long	20
	.long	532487
.text
	.align 2
_cTuS_info_dsp:
.text
	.align 2
	.long	_uTCY_srtd-(_cTuS_info)+0
	.long	2
	.long	-65504
_cTuS_info:
LcTuS:
	call 1f
1:	popl	%eax
	addl $84,%edi
	cmpl 856(%ebx),%edi
	ja LcTCF
LcTCE:
	movl L_base_GHCziSTRef_STRef_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-80(%edi)
	movl %esi,-76(%edi)
	movl %eax,%ecx
	addl $_sRGy_info-(1b)+0,%ecx
	movl %ecx,-72(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-60(%edi)
	leal -79(%edi),%edx
	movl %edx,-56(%edi)
	movl %edx,64(%esp)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-52(%edi)
	leal -72(%edi),%edx
	movl %edx,-48(%edi)
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,-44(%edi)
	movl %eax,%edx
	addl $_sRFg_info-(1b)+0,%edx
	movl %edx,-40(%edi)
	movl %ecx,-28(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-24(%edi)
	movl 64(%esp),%ecx
	movl %ecx,-20(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -40(%edi),%ecx
	movl %ecx,-12(%edi)
	leal -50(%edi),%ecx
	movl %ecx,-8(%edi)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Fork_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
LcTCF:
	movl $84,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTuS_info - _cTuS_info_dsp
.const_data
	.align 2
.align 0
_uTCZ_srtd:
	.long	_SRNt_srt+68
	.long	20
	.long	532999
.text
	.align 2
_sRGK_info_dsp:
.text
	.align 2
	.long	_uTCZ_srtd-(_sRGK_info)+0
	.long	65539
	.long	2
	.long	-65524
_sRGK_info:
LcTCJ:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb LcTCK
LcTCL:
	movl %eax,%ecx
	addl $_cTtP_info-(1b)+0,%ecx
	movl %ecx,-12(%ebp)
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,%esi
	addl $_rQU3_closure-(1b)+1,%esi
	movl %ecx,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	jmp _stg_newMutVarzh
LcTCK:
	jmp *-8(%ebx)
	.long  _sRGK_info - _sRGK_info_dsp
.const_data
	.align 2
.align 0
_uTD0_srtd:
	.long	_SRNt_srt+68
	.long	20
	.long	532999
.text
	.align 2
_cTtP_info_dsp:
.text
	.align 2
	.long	_uTD0_srtd-(_cTtP_info)+0
	.long	2
	.long	-65504
_cTtP_info:
LcTtP:
	call 1f
1:	popl	%eax
	addl $96,%edi
	cmpl 856(%ebx),%edi
	ja LcTCO
LcTCN:
	movl L_base_GHCziSTRef_STRef_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-92(%edi)
	movl %esi,-88(%edi)
	movl %eax,%ecx
	addl $_sREG_info-(1b)+0,%ecx
	movl %ecx,-84(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-80(%edi)
	movl %eax,%ecx
	addl $_sREL_info-(1b)+0,%ecx
	movl %ecx,-76(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-72(%edi)
	leal -83(%edi),%ecx
	movl %ecx,-68(%edi)
	movl %eax,%ecx
	addl $_sRGG_info-(1b)+0,%ecx
	movl %ecx,-64(%edi)
	leal -91(%edi),%ecx
	movl %ecx,-52(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-48(%edi)
	leal -64(%edi),%edx
	movl %edx,-44(%edi)
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,-40(%edi)
	movl %eax,%edx
	addl $_sRGC_info-(1b)+0,%edx
	movl %edx,-36(%edi)
	movl %ecx,-32(%edi)
	leal -75(%edi),%ecx
	movl %ecx,-28(%edi)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-24(%edi)
	leal -35(%edi),%ecx
	movl %ecx,-20(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -23(%edi),%ecx
	movl %ecx,-12(%edi)
	leal -46(%edi),%ecx
	movl %ecx,-8(%edi)
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Fork_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
LcTCO:
	movl $96,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTtP_info - _cTtP_info_dsp
.const_data
	.align 2
.align 0
_uTD1_srtd:
	.long	_SRNt_srt+68
	.long	21
	.long	1581575
.text
	.align 2
_CoreziWorldziInternal_zdwa5_info_dsp:
.text
	.align 2
	.long	_uTD1_srtd-(_CoreziWorldziInternal_zdwa5_info)+0
	.long	131087
	.long	0
	.long	-65521
.globl _CoreziWorldziInternal_zdwa5_info
_CoreziWorldziInternal_zdwa5_info:
LcTCP:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja LcTCT
LcTCS:
	addl $_sRGK_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
LcTCT:
	movl $12,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziWorldziInternal_zdwa5_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_zdwa5_info - _CoreziWorldziInternal_zdwa5_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_runWorld1_closure
_CoreziWorldziInternal_runWorld1_closure:
	.long	_CoreziWorldziInternal_runWorld1_info
	.long	0
.text
	.align 2
_CoreziWorldziInternal_runWorld1_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_runWorld1_info)+148
	.long	131087
	.long	0
	.long	196623
.globl _CoreziWorldziInternal_runWorld1_info
_CoreziWorldziInternal_runWorld1_info:
LcTK1:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -4(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb LcTK2
LcTK3:
	movl 64(%esp),%eax
	addl $_cTJY_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	addl $-4,%ebp
	jmp _CoreziWorldziInternal_zdwa5_info
LcTK2:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziWorldziInternal_runWorld1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_runWorld1_info - _CoreziWorldziInternal_runWorld1_info_dsp
.text
	.align 2
_cTJY_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_cTJY_info:
LcTJY:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja LcTK6
LcTK5:
	movl L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
LcTK6:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _cTJY_info - _cTJY_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_runWorld_closure
_CoreziWorldziInternal_runWorld_closure:
	.long	_CoreziWorldziInternal_runWorld_info
	.long	0
.text
	.align 2
_CoreziWorldziInternal_runWorld_info_dsp:
.text
	.align 2
	.long	_SRNt_srt-(_CoreziWorldziInternal_runWorld_info)+152
	.long	131087
	.long	0
	.long	65551
.globl _CoreziWorldziInternal_runWorld_info
_CoreziWorldziInternal_runWorld_info:
LcTKn:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziWorldziInternal_runWorld1_info
	.long  _CoreziWorldziInternal_runWorld_info - _CoreziWorldziInternal_runWorld_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_Mail_closure
_CoreziWorldziInternal_Mail_closure:
	.long	_CoreziWorldziInternal_Mail_info
.text
	.align 2
_CoreziWorldziInternal_Mail_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
_CoreziWorldziInternal_Mail_info:
LcTKB:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja LcTKF
LcTKE:
	movl L_CoreziWorldziInternal_Mail_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
LcTKF:
	movl $12,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziWorldziInternal_Mail_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_Mail_info - _CoreziWorldziInternal_Mail_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_WorldState_closure
_CoreziWorldziInternal_WorldState_closure:
	.long	_CoreziWorldziInternal_WorldState_info
.text
	.align 2
.globl _CoreziWorldziInternal_WorldState_slow
_CoreziWorldziInternal_WorldState_slow:
LcTKN:
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl (%ebp),%eax
	movl %eax,8(%ebx)
	addl $16,%ebp
	jmp _CoreziWorldziInternal_WorldState_info
.text
	.align 2
_CoreziWorldziInternal_WorldState_info_dsp:
.text
	.align 2
	.long	_CoreziWorldziInternal_WorldState_slow-(_CoreziWorldziInternal_WorldState_info)+0
	.long	132
	.long	0
	.long	262144
	.long	0
	.long	15
_CoreziWorldziInternal_WorldState_info:
LcTKS:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %ecx,64(%esp)
	movl 16(%ebx),%ecx
	movl %edx,76(%esp)
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja LcTKW
LcTKV:
	movl L_CoreziWorldziInternal_WorldState_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-16(%edi)
	movl %edx,-12(%edi)
	movl 76(%esp),%eax
	movl %eax,-8(%edi)
	movl 64(%esp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -15(%edi),%esi
	jmp *(%ebp)
LcTKW:
	movl $20,904(%ebx)
	movl L_CoreziWorldziInternal_WorldState_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %edx,-16(%ebp)
	movl %ecx,-12(%ebp)
	movl 76(%esp),%eax
	movl %eax,-8(%ebp)
	movl 64(%esp),%eax
	movl %eax,-4(%ebp)
	addl $-16,%ebp
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_WorldState_info - _CoreziWorldziInternal_WorldState_info_dsp
.data
	.align 2
.align 0
.globl _CoreziWorldziInternal_Framed_closure
_CoreziWorldziInternal_Framed_closure:
	.long	_CoreziWorldziInternal_Framed_info
.text
	.align 2
_CoreziWorldziInternal_Framed_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
_CoreziWorldziInternal_Framed_info:
LcTLe:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja LcTLi
LcTLh:
	movl L_CoreziWorldziInternal_Framed_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	jmp *(%ebp)
LcTLi:
	movl $12,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziWorldziInternal_Framed_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziWorldziInternal_Framed_info - _CoreziWorldziInternal_Framed_info_dsp
.const
	.align 2
.align 0
_iTLr_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	87
	.byte	111
	.byte	114
	.byte	108
	.byte	100
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	77
	.byte	97
	.byte	105
	.byte	108
	.byte	0
.text
	.align 2
_CoreziWorldziInternal_Mail_con_info_dsp:
.text
	.align 2
	.long	_iTLr_str-(_CoreziWorldziInternal_Mail_con_info)+0
	.long	2
	.long	4
.globl _CoreziWorldziInternal_Mail_con_info
_CoreziWorldziInternal_Mail_con_info:
LcTLp:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziWorldziInternal_Mail_con_info - _CoreziWorldziInternal_Mail_con_info_dsp
.const
	.align 2
.align 0
_iTLs_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	87
	.byte	111
	.byte	114
	.byte	108
	.byte	100
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	77
	.byte	97
	.byte	105
	.byte	108
	.byte	0
.text
	.align 2
_CoreziWorldziInternal_Mail_static_info_dsp:
.text
	.align 2
	.long	_iTLs_str-(_CoreziWorldziInternal_Mail_static_info)+0
	.long	2
	.long	7
.globl _CoreziWorldziInternal_Mail_static_info
_CoreziWorldziInternal_Mail_static_info:
LcTLq:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziWorldziInternal_Mail_static_info - _CoreziWorldziInternal_Mail_static_info_dsp
.const
	.align 2
.align 0
_iTLB_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	87
	.byte	111
	.byte	114
	.byte	108
	.byte	100
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	87
	.byte	111
	.byte	114
	.byte	108
	.byte	100
	.byte	83
	.byte	116
	.byte	97
	.byte	116
	.byte	101
	.byte	0
.text
	.align 2
_CoreziWorldziInternal_WorldState_con_info_dsp:
.text
	.align 2
	.long	_iTLB_str-(_CoreziWorldziInternal_WorldState_con_info)+0
	.long	65539
	.long	1
.globl _CoreziWorldziInternal_WorldState_con_info
_CoreziWorldziInternal_WorldState_con_info:
LcTLz:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziWorldziInternal_WorldState_con_info - _CoreziWorldziInternal_WorldState_con_info_dsp
.const
	.align 2
.align 0
_iTLC_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	87
	.byte	111
	.byte	114
	.byte	108
	.byte	100
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	87
	.byte	111
	.byte	114
	.byte	108
	.byte	100
	.byte	83
	.byte	116
	.byte	97
	.byte	116
	.byte	101
	.byte	0
.text
	.align 2
_CoreziWorldziInternal_WorldState_static_info_dsp:
.text
	.align 2
	.long	_iTLC_str-(_CoreziWorldziInternal_WorldState_static_info)+0
	.long	65539
	.long	7
.globl _CoreziWorldziInternal_WorldState_static_info
_CoreziWorldziInternal_WorldState_static_info:
LcTLA:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziWorldziInternal_WorldState_static_info - _CoreziWorldziInternal_WorldState_static_info_dsp
.const
	.align 2
.align 0
_iTLL_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	87
	.byte	111
	.byte	114
	.byte	108
	.byte	100
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	70
	.byte	114
	.byte	97
	.byte	109
	.byte	101
	.byte	100
	.byte	0
.text
	.align 2
_CoreziWorldziInternal_Framed_con_info_dsp:
.text
	.align 2
	.long	_iTLL_str-(_CoreziWorldziInternal_Framed_con_info)+0
	.long	2
	.long	4
.globl _CoreziWorldziInternal_Framed_con_info
_CoreziWorldziInternal_Framed_con_info:
LcTLJ:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziWorldziInternal_Framed_con_info - _CoreziWorldziInternal_Framed_con_info_dsp
.const
	.align 2
.align 0
_iTLM_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	87
	.byte	111
	.byte	114
	.byte	108
	.byte	100
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	70
	.byte	114
	.byte	97
	.byte	109
	.byte	101
	.byte	100
	.byte	0
.text
	.align 2
_CoreziWorldziInternal_Framed_static_info_dsp:
.text
	.align 2
	.long	_iTLM_str-(_CoreziWorldziInternal_Framed_static_info)+0
	.long	2
	.long	7
.globl _CoreziWorldziInternal_Framed_static_info
_CoreziWorldziInternal_Framed_static_info:
LcTLK:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziWorldziInternal_Framed_static_info - _CoreziWorldziInternal_Framed_static_info_dsp
.const_data
	.align 2
.align 0
_SRNt_srt:
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrent_zdwa_closure
	.long	_CoreziWorldziInternal_switch1_closure
	.long	_base_GHCziErr_error_closure
	.long	_rQTo_closure
	.long	_CoreziWorldziInternal_zdwa6_closure
	.long	_CoreziWorldziInternal_waitUntil1_closure
	.long	_rQTG_closure
	.long	_base_ControlziExceptionziBase_absentError_closure
	.long	_CoreziWorldziInternal_zdfMonadConcWorld_closure
	.long	_CoreziWorldziInternal_zdwa2_closure
	.long	_CoreziWorldziInternal_distribute1_closure
	.long	_CoreziWorldziInternal_zdwa3_closure
	.long	_CoreziWorldziInternal_division1_closure
	.long	_CoreziWorldziInternal_incarnate_closure
	.long	_CoreziWorldziInternal_znzn_closure
	.long	_CoreziWorldziInternal_zdwa_closure
	.long	_CoreziWorldziInternal_znz3fU1_closure
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziCore_onEvent_closure
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_document1_closure
	.long	_CoreziWorldziInternal_zdfMonadEventWorld_closure
	.long	_CoreziWorldziInternal_handle2_closure
	.long	_CoreziWorldziInternal_withWorldState1_closure
	.long	_CoreziWorldziInternal_sleep1_closure
	.long	_CoreziWorldziInternal_easeRegister1_closure
	.long	_base_ControlziExceptionziBase_absentError_closure
	.long	_rQTR_closure
	.long	_rQTY_closure
	.long	_rQTQ_closure
	.long	_rQTS_closure
	.long	_rQTT_closure
	.long	_CoreziWorldziInternal_zdfMonadConcWorld_closure
	.long	_CoreziWorldziInternal_zdfMonadWorld_closure
	.long	_rQTU_closure
	.long	_rQTV_closure
	.long	_rQTW_closure
	.long	_rQTX_closure
	.long	_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_zdfEventMouseEvent_closure
	.long	_CoreziWorldziInternal_zdwa5_closure
	.long	_CoreziWorldziInternal_runWorld1_closure
.section __TEXT,__textcoal_nt,coalesced,no_toc
.weak_definition ___i686.get_pc_thunk.ax
.private_extern ___i686.get_pc_thunk.ax
___i686.get_pc_thunk.ax:
	movl (%esp), %eax
	ret
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_Framed_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_Framed_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_Framed_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_Framed_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_Mail_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_Mail_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_Mail_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_Mail_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_WorldState_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_WorldState_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_WorldState_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_WorldState_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_consume1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_consume1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_distribute1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_distribute1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_division1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_division1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_easeRegister1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_easeRegister1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_handle2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_handle2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_hole1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_hole1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_incarnate_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_incarnate_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_interpret1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_interpret1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_liftW1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_liftW1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_obtain1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_obtain1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_oneway1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_oneway1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_oneway2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_oneway2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_oneway_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_oneway_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_runWorld1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_runWorld1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_sleep1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_sleep1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_switch1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_switch1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_switch2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_switch2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_viewManager_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_viewManager_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_waitUntil1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_waitUntil1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_waitUntil2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_waitUntil2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_withWorldState1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_withWorldState1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdWWorldState_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdWWorldState_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfApplicativeWorld1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfApplicativeWorld1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfApplicativeWorld2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfApplicativeWorld2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfEqFramed_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfEqFramed_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfEqFramedzuzdczeze_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfEqFramedzuzdczeze_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfEqFramedzuzdczsze_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfEqFramedzuzdczsze_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfFunctorWorld1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfFunctorWorld1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfMonadConcWorld1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfMonadConcWorld1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfMonadConcWorld_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfMonadConcWorld_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfMonadContWorld1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfMonadContWorld1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfMonadEventWorld1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfMonadEventWorld1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfMonadEventWorld2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfMonadEventWorld2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfMonadEventWorld_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfMonadEventWorld_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfMonadIOWorld1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfMonadIOWorld1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfMonadStateWorld1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfMonadStateWorld1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfMonadStateWorld2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfMonadStateWorld2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfMonadStateWorld3_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfMonadStateWorld3_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfMonadWorld_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfMonadWorld_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfOrdFramed_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfOrdFramed_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfOrdFramedzuzdccompare_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfOrdFramedzuzdccompare_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfOrdFramedzuzdcmax_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfOrdFramedzuzdcmax_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfOrdFramedzuzdcmin_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfOrdFramedzuzdcmin_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfOrdFramedzuzdczg_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfOrdFramedzuzdczg_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfOrdFramedzuzdczgze_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfOrdFramedzuzdczgze_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfOrdFramedzuzdczl_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfOrdFramedzuzdczl_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdfOrdFramedzuzdczlze_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdfOrdFramedzuzdczlze_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdwa1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdwa1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdwa2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdwa2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdwa3_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdwa3_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdwa4_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdwa4_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdwa5_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdwa5_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdwa6_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdwa6_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_zdwa_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_zdwa_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_znz3fU1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_znz3fU1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_znz3fU2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_znz3fU2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziWorldziInternal_znzn_closure$non_lazy_ptr:
	.indirect_symbol _CoreziWorldziInternal_znzn_closure
	.long	0
.non_lazy_symbol_pointer
L_EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_Empty_closure$non_lazy_ptr:
	.indirect_symbol _EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_Empty_closure
	.long	0
.non_lazy_symbol_pointer
L_EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_MinQueue_con_info$non_lazy_ptr:
	.indirect_symbol _EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_MinQueue_con_info
	.long	0
.non_lazy_symbol_pointer
L_EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_Nil_closure$non_lazy_ptr:
	.indirect_symbol _EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_Nil_closure
	.long	0
.non_lazy_symbol_pointer
L_EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_ZZero_closure$non_lazy_ptr:
	.indirect_symbol _EX5qiNIISAT3VL8xwMRfcE_DataziPQueueziInternals_ZZero_closure
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Atom_con_info
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Fork_con_info$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Fork_con_info
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Stop_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziConcurrentziMonad_Stop_closure
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_document1_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_document1_closure
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_zdfIsElemElem_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziDOMziCore_zdfIsElemElem_closure
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_MouseDown_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_MouseDown_closure
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_MouseMove_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_MouseMove_closure
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_MouseUp_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_MouseUp_closure
	.long	0
.non_lazy_symbol_pointer
L_LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_zdfEventMouseEvent_closure$non_lazy_ptr:
	.indirect_symbol _LApUZZuWlHYm7n1MKPK7mnS_HasteziEventsziMouseEvents_zdfEventMouseEvent_closure
	.long	0
.non_lazy_symbol_pointer
L_base_DataziEither_Right_con_info$non_lazy_ptr:
	.indirect_symbol _base_DataziEither_Right_con_info
	.long	0
.non_lazy_symbol_pointer
L_base_GHCziBase_Just_con_info$non_lazy_ptr:
	.indirect_symbol _base_GHCziBase_Just_con_info
	.long	0
.non_lazy_symbol_pointer
L_base_GHCziBase_Nothing_closure$non_lazy_ptr:
	.indirect_symbol _base_GHCziBase_Nothing_closure
	.long	0
.non_lazy_symbol_pointer
L_base_GHCziSTRef_STRef_con_info$non_lazy_ptr:
	.indirect_symbol _base_GHCziSTRef_STRef_con_info
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziClasses_DZCOrd_con_info$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziClasses_DZCOrd_con_info
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTuple_Z0T_closure
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTuple_Z2T_con_info
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_Bool_closure_tbl
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_Dzh_con_info
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_False_closure$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_False_closure
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_Izh_con_info
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_True_closure$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_True_closure
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_ZC_con_info
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_ZMZN_closure
	.long	0
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L_newCAF$stub:
	.indirect_symbol _newCAF
	call ___i686.get_pc_thunk.ax
1:
	movl L_newCAF$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L_newCAF$stub_binder:
	lea L_newCAF$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L_newCAF$lazy_ptr:
	.indirect_symbol _newCAF
	.long L_newCAF$stub_binder
.non_lazy_symbol_pointer
L_stg_ap_2_upd_info$non_lazy_ptr:
	.indirect_symbol _stg_ap_2_upd_info
	.long	0
.non_lazy_symbol_pointer
L_stg_ap_3_upd_info$non_lazy_ptr:
	.indirect_symbol _stg_ap_3_upd_info
	.long	0
.non_lazy_symbol_pointer
L_stg_ap_pp_info$non_lazy_ptr:
	.indirect_symbol _stg_ap_pp_info
	.long	0
.non_lazy_symbol_pointer
L_stg_bh_upd_frame_info$non_lazy_ptr:
	.indirect_symbol _stg_bh_upd_frame_info
	.long	0
.non_lazy_symbol_pointer
L_stg_gc_ppp$non_lazy_ptr:
	.indirect_symbol _stg_gc_ppp
	.long	0
.non_lazy_symbol_pointer
L_stg_gc_unpt_r1$non_lazy_ptr:
	.indirect_symbol _stg_gc_unpt_r1
	.long	0
.non_lazy_symbol_pointer
L_stg_sel_0_upd_info$non_lazy_ptr:
	.indirect_symbol _stg_sel_0_upd_info
	.long	0
.non_lazy_symbol_pointer
L_stg_sel_2_upd_info$non_lazy_ptr:
	.indirect_symbol _stg_sel_2_upd_info
	.long	0
.non_lazy_symbol_pointer
L_stg_upd_frame_info$non_lazy_ptr:
	.indirect_symbol _stg_upd_frame_info
	.long	0
.subsections_via_symbols
.ident "GHC 7.10.3"

