{-# LINE 1 "/var/folders/vf/3ps995857210wmpgxv8lrnbh0000gn/T/ghc4970_0/ghc_30.s" #-}
.data
	.align 2
.align 0
.globl ___stginit_CoreziShapeziInternal
___stginit_CoreziShapeziInternal:
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_affine_closure
_CoreziShapeziInternal_affine_closure:
	.long	_CoreziShapeziInternal_affine_info
.text
	.align 2
_CoreziShapeziInternal_affine_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziShapeziInternal_affine_info
_CoreziShapeziInternal_affine_info:
Lc1bq6:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1bq7
Lc1bq8:
	addl $_c1bq3_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1bq3_info
Lc1bq4:
	jmp *(%esi)
Lc1bq7:
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_affine_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_affine_info - _CoreziShapeziInternal_affine_info_dsp
.text
	.align 2
_c1bq3_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bq3_info:
Lc1bq3:
	movl 3(%esi),%esi
	addl $4,%ebp
	jmp _stg_ap_0_fast
	.long  _c1bq3_info - _c1bq3_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_translate_closure
_CoreziShapeziInternal_translate_closure:
	.long	_CoreziShapeziInternal_translate_info
.text
	.align 2
_CoreziShapeziInternal_translate_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziShapeziInternal_translate_info
_CoreziShapeziInternal_translate_info:
Lc1bqx:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1bqy
Lc1bqz:
	addl $_c1bqu_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1bqu_info
Lc1bqv:
	jmp *(%esi)
Lc1bqy:
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_translate_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_translate_info - _CoreziShapeziInternal_translate_info_dsp
.text
	.align 2
_c1bqu_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bqu_info:
Lc1bqu:
	movl 7(%esi),%esi
	addl $4,%ebp
	jmp _stg_ap_0_fast
	.long  _c1bqu_info - _c1bqu_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_rotate_closure
_CoreziShapeziInternal_rotate_closure:
	.long	_CoreziShapeziInternal_rotate_info
.text
	.align 2
_CoreziShapeziInternal_rotate_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziShapeziInternal_rotate_info
_CoreziShapeziInternal_rotate_info:
Lc1bqY:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1bqZ
Lc1br0:
	addl $_c1bqV_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1bqV_info
Lc1bqW:
	jmp *(%esi)
Lc1bqZ:
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_rotate_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_rotate_info - _CoreziShapeziInternal_rotate_info_dsp
.text
	.align 2
_c1bqV_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bqV_info:
Lc1bqV:
	movl 11(%esi),%esi
	addl $4,%ebp
	jmp _stg_ap_0_fast
	.long  _c1bqV_info - _c1bqV_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_scale_closure
_CoreziShapeziInternal_scale_closure:
	.long	_CoreziShapeziInternal_scale_info
.text
	.align 2
_CoreziShapeziInternal_scale_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziShapeziInternal_scale_info
_CoreziShapeziInternal_scale_info:
Lc1brp:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1brq
Lc1brr:
	addl $_c1brm_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1brm_info
Lc1brn:
	jmp *(%esi)
Lc1brq:
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_scale_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_scale_info - _CoreziShapeziInternal_scale_info_dsp
.text
	.align 2
_c1brm_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1brm_info:
Lc1brm:
	movl 15(%esi),%esi
	addl $4,%ebp
	jmp _stg_ap_0_fast
	.long  _c1brm_info - _c1brm_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_rotateAt_closure
_CoreziShapeziInternal_rotateAt_closure:
	.long	_CoreziShapeziInternal_rotateAt_info
.text
	.align 2
_CoreziShapeziInternal_rotateAt_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziShapeziInternal_rotateAt_info
_CoreziShapeziInternal_rotateAt_info:
Lc1brQ:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1brR
Lc1brS:
	addl $_c1brN_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1brN_info
Lc1brO:
	jmp *(%esi)
Lc1brR:
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_rotateAt_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_rotateAt_info - _CoreziShapeziInternal_rotateAt_info_dsp
.text
	.align 2
_c1brN_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1brN_info:
Lc1brN:
	movl 19(%esi),%esi
	addl $4,%ebp
	jmp _stg_ap_0_fast
	.long  _c1brN_info - _c1brN_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_scaleAt_closure
_CoreziShapeziInternal_scaleAt_closure:
	.long	_CoreziShapeziInternal_scaleAt_info
.text
	.align 2
_CoreziShapeziInternal_scaleAt_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziShapeziInternal_scaleAt_info
_CoreziShapeziInternal_scaleAt_info:
Lc1bsh:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1bsi
Lc1bsj:
	addl $_c1bse_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1bse_info
Lc1bsf:
	jmp *(%esi)
Lc1bsi:
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_scaleAt_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_scaleAt_info - _CoreziShapeziInternal_scaleAt_info_dsp
.text
	.align 2
_c1bse_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bse_info:
Lc1bse:
	movl 23(%esi),%esi
	addl $4,%ebp
	jmp _stg_ap_0_fast
	.long  _c1bse_info - _c1bse_info_dsp
.data
	.align 2
.align 0
_r19et_closure:
	.long	_ghczmprim_GHCziTypes_Dzh_static_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfApplicativeShape4_closure
_CoreziShapeziInternal_zdfApplicativeShape4_closure:
	.long	_CoreziShapeziInternal_zdfApplicativeShape4_info
.text
	.align 2
_CoreziShapeziInternal_zdfApplicativeShape4_info_dsp:
.text
	.align 2
	.long	65539
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zdfApplicativeShape4_info
_CoreziShapeziInternal_zdfApplicativeShape4_info:
Lc1bsE:
	call 1f
1:	popl	%eax
	movl L_ghczmprim_GHCziTypes_False_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	jmp *(%ebp)
	.long  _CoreziShapeziInternal_zdfApplicativeShape4_info - _CoreziShapeziInternal_zdfApplicativeShape4_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfApplicativeShape3_closure
_CoreziShapeziInternal_zdfApplicativeShape3_closure:
	.long	_CoreziShapeziInternal_zdfApplicativeShape3_info
.text
	.align 2
_CoreziShapeziInternal_zdfApplicativeShape3_info_dsp:
.text
	.align 2
	.long	131077
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zdfApplicativeShape3_info
_CoreziShapeziInternal_zdfApplicativeShape3_info:
Lc1bsR:
	jmp _CoreziShapeziInternal_zdfApplicativeShape4_info
	.long  _CoreziShapeziInternal_zdfApplicativeShape3_info - _CoreziShapeziInternal_zdfApplicativeShape3_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfApplicativeShape2_closure
_CoreziShapeziInternal_zdfApplicativeShape2_closure:
	.long	_CoreziShapeziInternal_zdfApplicativeShape2_info
.text
	.align 2
_CoreziShapeziInternal_zdfApplicativeShape2_info_dsp:
.text
	.align 2
	.long	65539
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zdfApplicativeShape2_info
_CoreziShapeziInternal_zdfApplicativeShape2_info:
Lc1bt2:
	call 1f
1:	popl	%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	jmp *(%ebp)
	.long  _CoreziShapeziInternal_zdfApplicativeShape2_info - _CoreziShapeziInternal_zdfApplicativeShape2_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfApplicativeShape1_closure
_CoreziShapeziInternal_zdfApplicativeShape1_closure:
	.long	_CoreziShapeziInternal_zdfApplicativeShape1_info
.text
	.align 2
_CoreziShapeziInternal_zdfApplicativeShape1_info_dsp:
.text
	.align 2
	.long	196623
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zdfApplicativeShape1_info
_CoreziShapeziInternal_zdfApplicativeShape1_info:
Lc1btf:
	jmp _CoreziShapeziInternal_zdfApplicativeShape2_info
	.long  _CoreziShapeziInternal_zdfApplicativeShape1_info - _CoreziShapeziInternal_zdfApplicativeShape1_info_dsp
.data
	.align 2
.align 0
_r19ex_closure:
	.long	_r19ex_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1bty_str:
	.byte	97
	.byte	108
	.byte	112
	.byte	104
	.byte	97
	.byte	98
	.byte	101
	.byte	116
	.byte	105
	.byte	99
	.byte	0
.text
	.align 2
_r19ex_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r19ex_info:
Lc1btB:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1btJ
Lc1btK:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1btx
Lc1btw:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1btz_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1bty_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1btx:
	jmp *(%esi)
Lc1btJ:
	jmp *-16(%ebx)
	.long  _r19ex_info - _r19ex_info_dsp
.text
	.align 2
_c1btz_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1btz_info:
Lc1btz:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1btE_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1btz_info - _c1btz_info_dsp
.text
	.align 2
_c1btE_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1btE_info:
Lc1btE:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1btO
Lc1btN:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1btO:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1btE_info - _c1btE_info_dsp
.data
	.align 2
.align 0
_r19ey_closure:
	.long	_r19ey_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1bum_str:
	.byte	109
	.byte	105
	.byte	100
	.byte	100
	.byte	108
	.byte	101
	.byte	0
.text
	.align 2
_r19ey_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r19ey_info:
Lc1bup:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bux
Lc1buy:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1bul
Lc1buk:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1bun_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1bum_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1bul:
	jmp *(%esi)
Lc1bux:
	jmp *-16(%ebx)
	.long  _r19ey_info - _r19ey_info_dsp
.text
	.align 2
_c1bun_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bun_info:
Lc1bun:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1bus_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bun_info - _c1bun_info_dsp
.text
	.align 2
_c1bus_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bus_info:
Lc1bus:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1buC
Lc1buB:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1buC:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bus_info - _c1bus_info_dsp
.data
	.align 2
.align 0
_r19ez_closure:
	.long	_r19ez_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1bva_str:
	.byte	104
	.byte	97
	.byte	110
	.byte	103
	.byte	105
	.byte	110
	.byte	103
	.byte	0
.text
	.align 2
_r19ez_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r19ez_info:
Lc1bvd:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bvl
Lc1bvm:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1bv9
Lc1bv8:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1bvb_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1bva_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1bv9:
	jmp *(%esi)
Lc1bvl:
	jmp *-16(%ebx)
	.long  _r19ez_info - _r19ez_info_dsp
.text
	.align 2
_c1bvb_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bvb_info:
Lc1bvb:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1bvg_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bvb_info - _c1bvb_info_dsp
.text
	.align 2
_c1bvg_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bvg_info:
Lc1bvg:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bvq
Lc1bvp:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1bvq:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bvg_info - _c1bvg_info_dsp
.data
	.align 2
.align 0
_r19eA_closure:
	.long	_r19eA_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1bvY_str:
	.byte	114
	.byte	105
	.byte	103
	.byte	104
	.byte	116
	.byte	0
.text
	.align 2
_r19eA_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r19eA_info:
Lc1bw1:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bw9
Lc1bwa:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1bvX
Lc1bvW:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1bvZ_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1bvY_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1bvX:
	jmp *(%esi)
Lc1bw9:
	jmp *-16(%ebx)
	.long  _r19eA_info - _r19eA_info_dsp
.text
	.align 2
_c1bvZ_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bvZ_info:
Lc1bvZ:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1bw4_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bvZ_info - _c1bvZ_info_dsp
.text
	.align 2
_c1bw4_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bw4_info:
Lc1bw4:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bwe
Lc1bwd:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1bwe:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bw4_info - _c1bw4_info_dsp
.data
	.align 2
.align 0
_r19eB_closure:
	.long	_r19eB_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1bwM_str:
	.byte	99
	.byte	101
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	0
.text
	.align 2
_r19eB_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r19eB_info:
Lc1bwP:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bwX
Lc1bwY:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1bwL
Lc1bwK:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1bwN_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1bwM_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1bwL:
	jmp *(%esi)
Lc1bwX:
	jmp *-16(%ebx)
	.long  _r19eB_info - _r19eB_info_dsp
.text
	.align 2
_c1bwN_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bwN_info:
Lc1bwN:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1bwS_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bwN_info - _c1bwN_info_dsp
.text
	.align 2
_c1bwS_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bwS_info:
Lc1bwS:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bx2
Lc1bx1:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1bx2:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bwS_info - _c1bwS_info_dsp
.data
	.align 2
.align 0
_r19eC_closure:
	.long	_r19eC_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1bxA_str:
	.byte	108
	.byte	101
	.byte	102
	.byte	116
	.byte	0
.text
	.align 2
_r19eC_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r19eC_info:
Lc1bxD:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bxL
Lc1bxM:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1bxz
Lc1bxy:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1bxB_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1bxA_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1bxz:
	jmp *(%esi)
Lc1bxL:
	jmp *-16(%ebx)
	.long  _r19eC_info - _r19eC_info_dsp
.text
	.align 2
_c1bxB_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bxB_info:
Lc1bxB:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1bxG_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bxB_info - _c1bxB_info_dsp
.text
	.align 2
_c1bxG_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bxG_info:
Lc1bxG:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bxQ
Lc1bxP:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1bxQ:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bxG_info - _c1bxG_info_dsp
.data
	.align 2
.align 0
_r19eD_closure:
	.long	_r19eD_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1byo_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	102
	.byte	110
	.byte	44
	.byte	97
	.byte	44
	.byte	98
	.byte	44
	.byte	99
	.byte	116
	.byte	120
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	102
	.byte	111
	.byte	110
	.byte	116
	.byte	61
	.byte	34
	.byte	49
	.byte	48
	.byte	112
	.byte	120
	.byte	32
	.byte	34
	.byte	43
	.byte	102
	.byte	110
	.byte	59
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	116
	.byte	101
	.byte	120
	.byte	116
	.byte	65
	.byte	108
	.byte	105
	.byte	103
	.byte	110
	.byte	61
	.byte	97
	.byte	59
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	116
	.byte	101
	.byte	120
	.byte	116
	.byte	66
	.byte	97
	.byte	115
	.byte	101
	.byte	108
	.byte	105
	.byte	110
	.byte	101
	.byte	61
	.byte	98
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_r19eD_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r19eD_info:
Lc1byr:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1byz
Lc1byA:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1byn
Lc1bym:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1byp_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1byo_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1byn:
	jmp *(%esi)
Lc1byz:
	jmp *-16(%ebx)
	.long  _r19eD_info - _r19eD_info_dsp
.text
	.align 2
_c1byp_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1byp_info:
Lc1byp:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1byu_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1byp_info - _c1byp_info_dsp
.text
	.align 2
_c1byu_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1byu_info:
Lc1byu:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1byE
Lc1byD:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1byE:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1byu_info - _c1byu_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_polygon1_closure
_CoreziShapeziInternal_polygon1_closure:
	.long	_CoreziShapeziInternal_polygon1_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1bz6_str:
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	47
	.byte	83
	.byte	104
	.byte	97
	.byte	112
	.byte	101
	.byte	47
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	104
	.byte	115
	.byte	58
	.byte	40
	.byte	50
	.byte	49
	.byte	56
	.byte	44
	.byte	53
	.byte	41
	.byte	45
	.byte	40
	.byte	50
	.byte	50
	.byte	51
	.byte	44
	.byte	50
	.byte	54
	.byte	41
	.byte	124
	.byte	99
	.byte	97
	.byte	115
	.byte	101
	.byte	0
.text
	.align 2
_CoreziShapeziInternal_polygon1_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_polygon1_info)+0
	.long	0
	.long	65558
.globl _CoreziShapeziInternal_polygon1_info
_CoreziShapeziInternal_polygon1_info:
Lc1bz7:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bz8
Lc1bz9:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1bz5
Lc1bz4:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1bz6_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_ControlziExceptionziBase_patError_info
Lc1bz5:
	jmp *(%esi)
Lc1bz8:
	jmp *-16(%ebx)
	.long  _CoreziShapeziInternal_polygon1_info - _CoreziShapeziInternal_polygon1_info_dsp
.data
	.align 2
.align 0
_r19eE_closure:
	.long	_CoreziEase_Exact_static_info
	.long	_r19et_closure+1
	.long	1
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zddmrotate1_closure
_CoreziShapeziInternal_zddmrotate1_closure:
	.long	_CoreziShapeziInternal_zddmrotate1_info
.text
	.align 2
_s1aFW_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aFW_info:
Lc1bzv:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bzw
Lc1bzx:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_zdfNumDoublezuzdcfromInteger_info
Lc1bzw:
	jmp *-16(%ebx)
	.long  _s1aFW_info - _s1aFW_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zddmrotate1_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zddmrotate1_info
_CoreziShapeziInternal_zddmrotate1_info:
Lc1bzz:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1bzD
Lc1bzC:
	movl %eax,%edx
	addl $_s1aFW_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	jmp *(%ebp)
Lc1bzD:
	movl $24,904(%ebx)
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_zddmrotate1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zddmrotate1_info - _CoreziShapeziInternal_zddmrotate1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zddmrotate2_closure
_CoreziShapeziInternal_zddmrotate2_closure:
	.long	_CoreziShapeziInternal_zddmrotate2_info
.text
	.align 2
_CoreziShapeziInternal_zddmrotate2_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zddmrotate2_info
_CoreziShapeziInternal_zddmrotate2_info:
Lc1bzX:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	movl %ecx,16(%ebx)
	movl L_base_GHCziFloat_negateDouble_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	jmp _CoreziEase_zdfFloatingValuezuzdcfmap_info
	.long  _CoreziShapeziInternal_zddmrotate2_info - _CoreziShapeziInternal_zddmrotate2_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfMonadShapezuzdszddmfail_closure
_CoreziShapeziInternal_zdfMonadShapezuzdszddmfail_closure:
	.long	_CoreziShapeziInternal_zdfMonadShapezuzdszddmfail_info
	.long	0
.text
	.align 2
_CoreziShapeziInternal_zdfMonadShapezuzdszddmfail_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdfMonadShapezuzdszddmfail_info)+4
	.long	65541
	.long	0
	.long	65551
.globl _CoreziShapeziInternal_zdfMonadShapezuzdszddmfail_info
_CoreziShapeziInternal_zdfMonadShapezuzdszddmfail_info:
Lc1bAc:
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _base_GHCziErr_error_info
	.long  _CoreziShapeziInternal_zdfMonadShapezuzdszddmfail_info - _CoreziShapeziInternal_zdfMonadShapezuzdszddmfail_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zddmrotatezuzdszdfFloatingValuezuzdccos_closure
_CoreziShapeziInternal_zddmrotatezuzdszdfFloatingValuezuzdccos_closure:
	.long	_CoreziShapeziInternal_zddmrotatezuzdszdfFloatingValuezuzdccos_info
.text
	.align 2
_CoreziShapeziInternal_zddmrotatezuzdszdfFloatingValuezuzdccos_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zddmrotatezuzdszdfFloatingValuezuzdccos_info
_CoreziShapeziInternal_zddmrotatezuzdszdfFloatingValuezuzdccos_info:
Lc1bAo:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	movl %ecx,16(%ebx)
	movl L_base_GHCziFloat_cosDouble_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	jmp _CoreziEase_zdfFloatingValuezuzdcfmap_info
	.long  _CoreziShapeziInternal_zddmrotatezuzdszdfFloatingValuezuzdccos_info - _CoreziShapeziInternal_zddmrotatezuzdszdfFloatingValuezuzdccos_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zddmrotatezuzdszdfFloatingValuezuzdcsin_closure
_CoreziShapeziInternal_zddmrotatezuzdszdfFloatingValuezuzdcsin_closure:
	.long	_CoreziShapeziInternal_zddmrotatezuzdszdfFloatingValuezuzdcsin_info
.text
	.align 2
_CoreziShapeziInternal_zddmrotatezuzdszdfFloatingValuezuzdcsin_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zddmrotatezuzdszdfFloatingValuezuzdcsin_info
_CoreziShapeziInternal_zddmrotatezuzdszdfFloatingValuezuzdcsin_info:
Lc1bAD:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	movl %ecx,16(%ebx)
	movl L_base_GHCziFloat_sinDouble_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,8(%ebx)
	jmp _CoreziEase_zdfFloatingValuezuzdcfmap_info
	.long  _CoreziShapeziInternal_zddmrotatezuzdszdfFloatingValuezuzdcsin_info - _CoreziShapeziInternal_zddmrotatezuzdszdfFloatingValuezuzdcsin_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwa1_closure
_CoreziShapeziInternal_zdwa1_closure:
	.long	_CoreziShapeziInternal_zdwa1_info
.text
	.align 2
_s1aGw_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aGw_info:
Lc1bCx:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bCy
Lc1bCz:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1bCy:
	jmp *-16(%ebx)
	.long  _s1aGw_info - _s1aGw_info_dsp
.text
	.align 2
_s1aGx_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1aGx_info:
Lc1bCA:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1bCB
Lc1bCC:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bCE
Lc1bCD:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	addl $_s1aGw_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1bCE:
	movl $16,904(%ebx)
Lc1bCB:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1aGx_info - _s1aGx_info_dsp
.text
	.align 2
_s1aHk_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1aHk_info:
Lc1bD6:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1bD7
Lc1bD8:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bDa
Lc1bD9:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	movl L_stg_sel_0_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1bDa:
	movl $16,904(%ebx)
Lc1bD7:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1aHk_info - _s1aHk_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdwa1_info_dsp:
.text
	.align 2
	.long	393241
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zdwa1_info
_CoreziShapeziInternal_zdwa1_info:
Lc1bDq:
	call 1f
1:	popl	%eax
	movl 40(%ebx),%ecx
	movl 32(%ebx),%edx
	movl %eax,64(%esp)
	movl 24(%ebx),%eax
	movl %eax,76(%esp)
	movl 16(%ebx),%eax
	movl %eax,88(%esp)
	movl 8(%ebx),%eax
	movl %eax,100(%esp)
	leal -24(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1bDr
Lc1bDs:
	movl 64(%esp),%eax
	addl $_c1bCF_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 100(%esp),%eax
	movl %eax,%esi
	movl 88(%esp),%eax
	movl %eax,-16(%ebp)
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _c1bCF_info
Lc1bCG:
	jmp *(%esi)
Lc1bDr:
	movl %ecx,40(%ebx)
	movl %edx,32(%ebx)
	movl 76(%esp),%eax
	movl %eax,24(%ebx)
	movl 88(%esp),%eax
	movl %eax,16(%ebx)
	movl 100(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdwa1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdwa1_info - _CoreziShapeziInternal_zdwa1_info_dsp
.text
	.align 2
_c1bCF_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1bCF_info:
Lc1bCF:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1bDo
Lc1bDp:
	cmpl $2,%ecx
	jae Lc1bDi
Lc1bDj:
	movl 3(%esi),%eax
	movl %eax,(%ebp)
	jmp _s1aG7_entry
Lc1bDo:
	cmpl $4,%ecx
	jae Lc1bDl
Lc1bDm:
	addl $_c1bCM_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1bCM_info
Lc1bCN:
	jmp *(%esi)
Lc1bDi:
	addl $_c1bEX_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
Lc1bDl:
	addl $_c1bFj_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1bFj_info
Lc1bFk:
	jmp *(%esi)
	.long  _c1bCF_info - _c1bCF_info_dsp
.text
	.align 2
_c1bFj_info_dsp:
.text
	.align 2
	.long	5
	.long	32
_c1bFj_info:
Lc1bFj:
	call 1f
1:	popl	%eax
	addl $_c1bFo_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1bFo_info
Lc1bFr:
	jmp *(%esi)
	.long  _c1bFj_info - _c1bFj_info_dsp
.text
	.align 2
_c1bFo_info_dsp:
.text
	.align 2
	.long	5
	.long	32
_c1bFo_info:
Lc1bFo:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1bFv_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1bFv_info
Lc1bFx:
	jmp *(%esi)
	.long  _c1bFo_info - _c1bFo_info_dsp
.text
	.align 2
_c1bFv_info_dsp:
.text
	.align 2
	.long	5
	.long	32
_c1bFv_info:
Lc1bFv:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1bFT
Lc1bFU:
	addl $_c1bFB_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1bFB_info
Lc1bFF:
	jmp *(%esi)
Lc1bFT:
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $24,%ebp
	jmp *(%ebp)
	.long  _c1bFv_info - _c1bFv_info_dsp
.text
	.align 2
_c1bFB_info_dsp:
.text
	.align 2
	.long	5
	.long	32
_c1bFB_info:
Lc1bFB:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1bFJ_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1bFB_info - _c1bFB_info_dsp
.text
	.align 2
_c1bFJ_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1bFJ_info:
Lc1bFJ:
	movl %esi,(%ebp)
	jmp _s1aG7_entry
	.long  _c1bFJ_info - _c1bFJ_info_dsp
.text
	.align 2
_c1bCM_info_dsp:
.text
	.align 2
	.long	5
	.long	32
_c1bCM_info:
Lc1bCM:
	call 1f
1:	popl	%eax
	addl $_c1bCR_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1bCR_info
Lc1bCS:
	jmp *(%esi)
	.long  _c1bCM_info - _c1bCM_info_dsp
.text
	.align 2
_c1bCR_info_dsp:
.text
	.align 2
	.long	5
	.long	32
_c1bCR_info:
Lc1bCR:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1bCW_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1bCW_info
Lc1bCX:
	jmp *(%esi)
	.long  _c1bCR_info - _c1bCR_info_dsp
.text
	.align 2
_c1bCW_info_dsp:
.text
	.align 2
	.long	5
	.long	32
_c1bCW_info:
Lc1bCW:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1bFf
Lc1bFg:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bF8
Lc1bF7:
	movl 3(%esi),%ecx
	addl $_s1aHk_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -16(%edi),%eax
	movl %eax,4(%ebp)
	addl $4,%ebp
	jmp _s1aG7_entry
Lc1bF8:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1bFf:
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $24,%ebp
	jmp *(%ebp)
	.long  _c1bCW_info - _c1bCW_info_dsp
.text
	.align 2
_c1bEX_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1bEX_info:
Lc1bEX:
	movl %esi,(%ebp)
	jmp _s1aG7_entry
	.long  _c1bEX_info - _c1bEX_info_dsp
.text
	.align 2
_s1aG7_entry:
Ls1aG7:
	call 1f
1:	popl	%eax
	addl $_c1bC3_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 4(%ebp),%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1bC3_info
Lc1bC4:
	jmp *(%esi)
.text
	.align 2
_c1bC3_info_dsp:
.text
	.align 2
	.long	133
	.long	32
_c1bC3_info:
Lc1bC3:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1bES
Lc1bET:
	cmpl $2,%ecx
	jae Lc1bEM
Lc1bEN:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bDA
Lc1bDz:
	movl 3(%esi),%ecx
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	movl 20(%ebp),%eax
	movl %eax,24(%ebx)
	movl 16(%ebp),%eax
	movl %eax,16(%ebx)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 12(%ebp),%esi
	addl $24,%ebp
	jmp _stg_ap_pppv_fast
Lc1bES:
	cmpl $4,%ecx
	jae Lc1bEP
Lc1bEQ:
	addl $_c1bCa_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,8(%ebp)
	testw $7,%si
	jne _c1bCa_info
Lc1bCb:
	jmp *(%esi)
Lc1bDA:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1bEP:
	addl $_c1bE4_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,8(%ebp)
	testw $7,%si
	jne _c1bE4_info
Lc1bE5:
	jmp *(%esi)
Lc1bEM:
	addl $_c1bDC_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
	.long  _c1bC3_info - _c1bC3_info_dsp
.text
	.align 2
_c1bE4_info_dsp:
.text
	.align 2
	.long	5
	.long	32
_c1bE4_info:
Lc1bE4:
	call 1f
1:	popl	%eax
	addl $_c1bE9_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1bE9_info
Lc1bEd:
	jmp *(%esi)
	.long  _c1bE4_info - _c1bE4_info_dsp
.text
	.align 2
_c1bE9_info_dsp:
.text
	.align 2
	.long	5
	.long	32
_c1bE9_info:
Lc1bE9:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1bEh_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1bEh_info
Lc1bEj:
	jmp *(%esi)
	.long  _c1bE9_info - _c1bE9_info_dsp
.text
	.align 2
_c1bEh_info_dsp:
.text
	.align 2
	.long	5
	.long	32
_c1bEh_info:
Lc1bEh:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1bEI
Lc1bEJ:
	addl $_c1bEn_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1bEn_info
Lc1bEo:
	jmp *(%esi)
Lc1bEI:
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $24,%ebp
	jmp *(%ebp)
	.long  _c1bEh_info - _c1bEh_info_dsp
.text
	.align 2
_c1bEn_info_dsp:
.text
	.align 2
	.long	5
	.long	32
_c1bEn_info:
Lc1bEn:
	call 1f
1:	popl	%eax
	addl $_c1bEs_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl 8(%ebp),%esi
	jmp _stg_ap_pv_fast
	.long  _c1bEn_info - _c1bEn_info_dsp
.text
	.align 2
_c1bEs_info_dsp:
.text
	.align 2
	.long	133
	.long	32
_c1bEs_info:
Lc1bEs:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bEB
Lc1bEA:
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	movl 20(%ebp),%eax
	movl %eax,24(%ebx)
	movl 16(%ebp),%eax
	movl %eax,16(%ebx)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 12(%ebp),%esi
	addl $24,%ebp
	jmp _stg_ap_pppv_fast
Lc1bEB:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bEs_info - _c1bEs_info_dsp
.text
	.align 2
_c1bCa_info_dsp:
.text
	.align 2
	.long	5
	.long	32
_c1bCa_info:
Lc1bCa:
	call 1f
1:	popl	%eax
	addl $_c1bCf_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1bCf_info
Lc1bCg:
	jmp *(%esi)
	.long  _c1bCa_info - _c1bCa_info_dsp
.text
	.align 2
_c1bCf_info_dsp:
.text
	.align 2
	.long	5
	.long	32
_c1bCf_info:
Lc1bCf:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1bCk_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1bCk_info
Lc1bCl:
	jmp *(%esi)
	.long  _c1bCf_info - _c1bCf_info_dsp
.text
	.align 2
_c1bCk_info_dsp:
.text
	.align 2
	.long	5
	.long	32
_c1bCk_info:
Lc1bCk:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1bE0
Lc1bE1:
	addl $32,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bDT
Lc1bDS:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1aGx_info-(1b)+0,%edx
	movl %edx,-28(%edi)
	movl 8(%ebp),%edx
	movl %edx,-16(%edi)
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	leal -28(%edi),%eax
	movl %eax,(%edi)
	movl 20(%ebp),%eax
	movl %eax,24(%ebx)
	movl 16(%ebp),%eax
	movl %eax,16(%ebx)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 12(%ebp),%esi
	addl $24,%ebp
	jmp _stg_ap_pppv_fast
Lc1bDT:
	movl $32,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1bE0:
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $24,%ebp
	jmp *(%ebp)
	.long  _c1bCk_info - _c1bCk_info_dsp
.text
	.align 2
_c1bDC_info_dsp:
.text
	.align 2
	.long	133
	.long	32
_c1bDC_info:
Lc1bDC:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bDJ
Lc1bDI:
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	movl 20(%ebp),%eax
	movl %eax,24(%ebx)
	movl 16(%ebp),%eax
	movl %eax,16(%ebx)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 12(%ebp),%esi
	addl $24,%ebp
	jmp _stg_ap_pppv_fast
Lc1bDJ:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bDC_info - _c1bDC_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfAffineShape2_closure
_CoreziShapeziInternal_zdfAffineShape2_closure:
	.long	_CoreziShapeziInternal_zdfAffineShape2_info
.text
	.align 2
_s1aI6_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aI6_info:
Lc1bKd:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bKe
Lc1bKf:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1bKe:
	jmp *-16(%ebx)
	.long  _s1aI6_info - _s1aI6_info_dsp
.text
	.align 2
_s1aI7_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1aI7_info:
Lc1bKg:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1bKh
Lc1bKi:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bKk
Lc1bKj:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	addl $_s1aI6_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1bKk:
	movl $16,904(%ebx)
Lc1bKh:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1aI7_info - _s1aI7_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdfAffineShape2_info_dsp:
.text
	.align 2
	.long	327704
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zdfAffineShape2_info
_CoreziShapeziInternal_zdfAffineShape2_info:
Lc1bKA:
	call 1f
1:	popl	%eax
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	movl %eax,88(%esp)
	leal -20(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1bKB
Lc1bKC:
	movl 64(%esp),%eax
	addl $_c1bJJ_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 88(%esp),%eax
	movl %eax,%esi
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _c1bJJ_info
Lc1bJK:
	jmp *(%esi)
Lc1bKB:
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdfAffineShape2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdfAffineShape2_info - _CoreziShapeziInternal_zdfAffineShape2_info_dsp
.text
	.align 2
_c1bJJ_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1bJJ_info:
Lc1bJJ:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1bKy
Lc1bKz:
	cmpl $2,%ecx
	jae Lc1bKs
Lc1bKt:
	movl 12(%ebp),%eax
	movl %eax,24(%ebx)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $16,%ebp
	jmp _stg_ap_pppv_fast
Lc1bKy:
	cmpl $4,%ecx
	jae Lc1bKv
Lc1bKw:
	addl $_c1bJQ_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1bJQ_info
Lc1bJR:
	jmp *(%esi)
Lc1bKs:
	addl $_c1bKG_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
Lc1bKv:
	addl $_c1bL2_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1bL2_info
Lc1bL3:
	jmp *(%esi)
	.long  _c1bJJ_info - _c1bJJ_info_dsp
.text
	.align 2
_c1bL2_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1bL2_info:
Lc1bL2:
	call 1f
1:	popl	%eax
	addl $_c1bL7_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1bL7_info
Lc1bLa:
	jmp *(%esi)
	.long  _c1bL2_info - _c1bL2_info_dsp
.text
	.align 2
_c1bL7_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1bL7_info:
Lc1bL7:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1bLe_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1bLe_info
Lc1bLg:
	jmp *(%esi)
	.long  _c1bL7_info - _c1bL7_info_dsp
.text
	.align 2
_c1bLe_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1bLe_info:
Lc1bLe:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1bLC
Lc1bLD:
	addl $_c1bLk_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1bLk_info
Lc1bLl:
	jmp *(%esi)
Lc1bLC:
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $20,%ebp
	jmp *(%ebp)
	.long  _c1bLe_info - _c1bLe_info_dsp
.text
	.align 2
_c1bLk_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1bLk_info:
Lc1bLk:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1bLp_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1bLk_info - _c1bLk_info_dsp
.text
	.align 2
_c1bLp_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1bLp_info:
Lc1bLp:
	movl 12(%ebp),%eax
	movl %eax,24(%ebx)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	movl 4(%ebp),%esi
	addl $16,%ebp
	jmp _stg_ap_pppv_fast
	.long  _c1bLp_info - _c1bLp_info_dsp
.text
	.align 2
_c1bJQ_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1bJQ_info:
Lc1bJQ:
	call 1f
1:	popl	%eax
	addl $_c1bJV_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1bJV_info
Lc1bJW:
	jmp *(%esi)
	.long  _c1bJQ_info - _c1bJQ_info_dsp
.text
	.align 2
_c1bJV_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1bJV_info:
Lc1bJV:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1bK0_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1bK0_info
Lc1bK1:
	jmp *(%esi)
	.long  _c1bJV_info - _c1bJV_info_dsp
.text
	.align 2
_c1bK0_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1bK0_info:
Lc1bK0:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1bKY
Lc1bKZ:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bKR
Lc1bKQ:
	movl 3(%esi),%ecx
	addl $_s1aI7_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	movl 16(%ebp),%eax
	movl %eax,24(%ebx)
	movl 12(%ebp),%eax
	movl %eax,16(%ebx)
	leal -16(%edi),%eax
	movl %eax,8(%ebx)
	movl 8(%ebp),%esi
	addl $20,%ebp
	jmp _stg_ap_pppv_fast
Lc1bKR:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1bKY:
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $20,%ebp
	jmp *(%ebp)
	.long  _c1bK0_info - _c1bK0_info_dsp
.text
	.align 2
_c1bKG_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1bKG_info:
Lc1bKG:
	movl 12(%ebp),%eax
	movl %eax,24(%ebx)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	movl 4(%ebp),%esi
	addl $16,%ebp
	jmp _stg_ap_pppv_fast
	.long  _c1bKG_info - _c1bKG_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfAffineShape3_closure
_CoreziShapeziInternal_zdfAffineShape3_closure:
	.long	_CoreziShapeziInternal_zdfAffineShape3_info
.text
	.align 2
_s1aIR_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aIR_info:
Lc1bOi:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bOj
Lc1bOk:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1bOj:
	jmp *-16(%ebx)
	.long  _s1aIR_info - _s1aIR_info_dsp
.text
	.align 2
_s1aIS_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1aIS_info:
Lc1bOl:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1bOm
Lc1bOn:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bOp
Lc1bOo:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	addl $_s1aIR_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1bOp:
	movl $16,904(%ebx)
Lc1bOm:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1aIS_info - _s1aIS_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdfAffineShape3_info_dsp:
.text
	.align 2
	.long	196623
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zdfAffineShape3_info
_CoreziShapeziInternal_zdfAffineShape3_info:
Lc1bOF:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1bOG
Lc1bOH:
	movl 64(%esp),%eax
	addl $_c1bNO_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1bNO_info
Lc1bNP:
	jmp *(%esi)
Lc1bOG:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdfAffineShape3_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdfAffineShape3_info - _CoreziShapeziInternal_zdfAffineShape3_info_dsp
.text
	.align 2
_c1bNO_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1bNO_info:
Lc1bNO:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1bOD
Lc1bOE:
	cmpl $2,%ecx
	jae Lc1bOx
Lc1bOy:
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $8,%ebp
	jmp _stg_ap_pv_fast
Lc1bOD:
	cmpl $4,%ecx
	jae Lc1bOA
Lc1bOB:
	addl $_c1bNV_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1bNV_info
Lc1bNW:
	jmp *(%esi)
Lc1bOx:
	addl $_c1bOL_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
Lc1bOA:
	addl $_c1bP7_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1bP7_info
Lc1bP8:
	jmp *(%esi)
	.long  _c1bNO_info - _c1bNO_info_dsp
.text
	.align 2
_c1bP7_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1bP7_info:
Lc1bP7:
	call 1f
1:	popl	%eax
	addl $_c1bPc_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1bPc_info
Lc1bPf:
	jmp *(%esi)
	.long  _c1bP7_info - _c1bP7_info_dsp
.text
	.align 2
_c1bPc_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1bPc_info:
Lc1bPc:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1bPj_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1bPj_info
Lc1bPl:
	jmp *(%esi)
	.long  _c1bPc_info - _c1bPc_info_dsp
.text
	.align 2
_c1bPj_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1bPj_info:
Lc1bPj:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1bPH
Lc1bPI:
	addl $_c1bPp_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1bPp_info
Lc1bPq:
	jmp *(%esi)
Lc1bPH:
	movl L_ghczmprim_GHCziTypes_False_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $12,%ebp
	jmp *(%ebp)
	.long  _c1bPj_info - _c1bPj_info_dsp
.text
	.align 2
_c1bPp_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1bPp_info:
Lc1bPp:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1bPu_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1bPp_info - _c1bPp_info_dsp
.text
	.align 2
_c1bPu_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1bPu_info:
Lc1bPu:
	movl %esi,8(%ebx)
	movl 4(%ebp),%esi
	addl $8,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1bPu_info - _c1bPu_info_dsp
.text
	.align 2
_c1bNV_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1bNV_info:
Lc1bNV:
	call 1f
1:	popl	%eax
	addl $_c1bO0_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1bO0_info
Lc1bO1:
	jmp *(%esi)
	.long  _c1bNV_info - _c1bNV_info_dsp
.text
	.align 2
_c1bO0_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1bO0_info:
Lc1bO0:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1bO5_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1bO5_info
Lc1bO6:
	jmp *(%esi)
	.long  _c1bO0_info - _c1bO0_info_dsp
.text
	.align 2
_c1bO5_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1bO5_info:
Lc1bO5:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1bP3
Lc1bP4:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bOW
Lc1bOV:
	movl 3(%esi),%ecx
	addl $_s1aIS_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -16(%edi),%eax
	movl %eax,8(%ebx)
	movl 8(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_pv_fast
Lc1bOW:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1bP3:
	movl L_ghczmprim_GHCziTypes_False_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $12,%ebp
	jmp *(%ebp)
	.long  _c1bO5_info - _c1bO5_info_dsp
.text
	.align 2
_c1bOL_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1bOL_info:
Lc1bOL:
	movl %esi,8(%ebx)
	movl 4(%ebp),%esi
	addl $8,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1bOL_info - _c1bOL_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zddmscaleAt_closure
_CoreziShapeziInternal_zddmscaleAt_closure:
	.long	_CoreziShapeziInternal_zddmscaleAt_info
.text
	.align 2
_s1aJl_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1aJl_info:
Lc1bRD:
	call 1f
1:	popl	%eax
	leal -20(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bRE
Lc1bRF:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%ecx
	movl %ecx,8(%ebx)
	movl L_stg_ap_p_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%ebp)
	movl 16(%esi),%eax
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	jmp _CoreziShapeziInternal_translate_info
Lc1bRE:
	jmp *-16(%ebx)
	.long  _s1aJl_info - _s1aJl_info_dsp
.text
	.align 2
_s1aJm_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1aJm_info:
Lc1bRK:
	call 1f
1:	popl	%eax
	leal -20(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bRL
Lc1bRM:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%ecx
	movl %ecx,8(%ebx)
	movl L_stg_ap_p_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%ebp)
	movl 16(%esi),%eax
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	jmp _CoreziShapeziInternal_scale_info
Lc1bRL:
	jmp *-16(%ebx)
	.long  _s1aJm_info - _s1aJm_info_dsp
.text
	.align 2
_s1aJX_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aJX_info:
Lc1bSv:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bSC
Lc1bSD:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1bSs_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1bSs_info
Lc1bSt:
	jmp *(%esi)
Lc1bSC:
	jmp *-16(%ebx)
	.long  _s1aJX_info - _s1aJX_info_dsp
.text
	.align 2
_c1bSs_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bSs_info:
Lc1bSs:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bSG
Lc1bSF:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1bSG:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bSs_info - _c1bSs_info_dsp
.text
	.align 2
_s1aK3_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aK3_info:
Lc1bSV:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bSW
Lc1bSX:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1bSW:
	jmp *-16(%ebx)
	.long  _s1aK3_info - _s1aK3_info_dsp
.text
	.align 2
_s1aK4_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1aK4_info:
Lc1bSY:
	call 1f
1:	popl	%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bSZ
Lc1bT0:
	addl $_c1bSP_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_v_fast
Lc1bSZ:
	jmp *-8(%ebx)
	.long  _s1aK4_info - _s1aK4_info_dsp
.text
	.align 2
_c1bSP_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bSP_info:
Lc1bSP:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bT3
Lc1bT2:
	addl $_s1aK3_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1bT3:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bSP_info - _c1bSP_info_dsp
.text
	.align 2
_s1aKb_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1aKb_info:
Lc1bTd:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1bTk
Lc1bTl:
	addl $_c1bTb_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_p_fast
Lc1bTk:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aKb_info - _s1aKb_info_dsp
.text
	.align 2
_c1bTb_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bTb_info:
Lc1bTb:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bTo
Lc1bTn:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1bTo:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bTb_info - _c1bTb_info_dsp
.text
	.align 2
_s1aKj_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aKj_info:
Lc1bTC:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bTD
Lc1bTE:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1bTD:
	jmp *-16(%ebx)
	.long  _s1aKj_info - _s1aKj_info_dsp
.text
	.align 2
_s1aKk_info_dsp:
.text
	.align 2
	.long	131077
	.long	1
	.long	10
_s1aKk_info:
Lc1bTF:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1bTG
Lc1bTH:
	addl $_c1bTw_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 2(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_pv_fast
Lc1bTG:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aKk_info - _s1aKk_info_dsp
.text
	.align 2
_c1bTw_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bTw_info:
Lc1bTw:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bTK
Lc1bTJ:
	addl $_s1aKj_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1bTK:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bTw_info - _c1bTw_info_dsp
.text
	.align 2
_s1aKl_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aKl_info:
Lc1bU0:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bU1
Lc1bU2:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1bSj_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1bSj_info
Lc1bSk:
	jmp *(%esi)
Lc1bU1:
	jmp *-16(%ebx)
	.long  _s1aKl_info - _s1aKl_info_dsp
.text
	.align 2
_c1bSj_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bSj_info:
Lc1bSj:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1bTY
Lc1bTZ:
	cmpl $2,%ecx
	jae Lc1bTS
Lc1bTT:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bU6
Lc1bU5:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1aJX_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1bTS:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bUa
Lc1bU9:
	movl 2(%esi),%ecx
	movl %eax,%edx
	addl $_s1aK4_info-(1b)+0,%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Action_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -11(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1bTV:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1bUi
Lc1bUh:
	movl (%ecx),%edx
	movl 4(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aKk_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_MorphAct_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -4(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1bTY:
	cmpl $4,%ecx
	jae Lc1bTV
Lc1bTW:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1bUi
Lc1bUd:
	movl 1(%ecx),%edx
	movl 5(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aKb_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_Morph_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -5(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1bU6:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1bUa:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1bUi:
	movl $20,904(%ebx)
	movl %ecx,%esi
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bSj_info - _c1bSj_info_dsp
.text
	.align 2
_s1aJt_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aJt_info:
Lc1bUK:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bUR
Lc1bUS:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1bUH_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1bUH_info
Lc1bUI:
	jmp *(%esi)
Lc1bUR:
	jmp *-16(%ebx)
	.long  _s1aJt_info - _s1aJt_info_dsp
.text
	.align 2
_c1bUH_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bUH_info:
Lc1bUH:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bUV
Lc1bUU:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1bUV:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bUH_info - _c1bUH_info_dsp
.text
	.align 2
_s1aJz_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aJz_info:
Lc1bVa:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bVb
Lc1bVc:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1bVb:
	jmp *-16(%ebx)
	.long  _s1aJz_info - _s1aJz_info_dsp
.text
	.align 2
_s1aJA_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1aJA_info:
Lc1bVd:
	call 1f
1:	popl	%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bVe
Lc1bVf:
	addl $_c1bV4_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_v_fast
Lc1bVe:
	jmp *-8(%ebx)
	.long  _s1aJA_info - _s1aJA_info_dsp
.text
	.align 2
_c1bV4_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bV4_info:
Lc1bV4:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bVi
Lc1bVh:
	addl $_s1aJz_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1bVi:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bV4_info - _c1bV4_info_dsp
.text
	.align 2
_s1aJH_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1aJH_info:
Lc1bVs:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1bVz
Lc1bVA:
	addl $_c1bVq_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_p_fast
Lc1bVz:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aJH_info - _s1aJH_info_dsp
.text
	.align 2
_c1bVq_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bVq_info:
Lc1bVq:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bVD
Lc1bVC:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1bVD:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bVq_info - _c1bVq_info_dsp
.text
	.align 2
_s1aJP_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aJP_info:
Lc1bVR:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bVS
Lc1bVT:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1bVS:
	jmp *-16(%ebx)
	.long  _s1aJP_info - _s1aJP_info_dsp
.text
	.align 2
_s1aJQ_info_dsp:
.text
	.align 2
	.long	131077
	.long	1
	.long	10
_s1aJQ_info:
Lc1bVU:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1bVV
Lc1bVW:
	addl $_c1bVL_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 2(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_pv_fast
Lc1bVV:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aJQ_info - _s1aJQ_info_dsp
.text
	.align 2
_c1bVL_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bVL_info:
Lc1bVL:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bVZ
Lc1bVY:
	addl $_s1aJP_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1bVZ:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bVL_info - _c1bVL_info_dsp
.text
	.align 2
_s1aJR_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aJR_info:
Lc1bWf:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1bWg
Lc1bWh:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1bUy_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1bUy_info
Lc1bUz:
	jmp *(%esi)
Lc1bWg:
	jmp *-16(%ebx)
	.long  _s1aJR_info - _s1aJR_info_dsp
.text
	.align 2
_c1bUy_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1bUy_info:
Lc1bUy:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1bWd
Lc1bWe:
	cmpl $2,%ecx
	jae Lc1bW7
Lc1bW8:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bWl
Lc1bWk:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1aJt_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1bW7:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bWp
Lc1bWo:
	movl 2(%esi),%ecx
	movl %eax,%edx
	addl $_s1aJA_info-(1b)+0,%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Action_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -11(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1bWa:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1bWx
Lc1bWw:
	movl (%ecx),%edx
	movl 4(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aJQ_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_MorphAct_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -4(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1bWd:
	cmpl $4,%ecx
	jae Lc1bWa
Lc1bWb:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1bWx
Lc1bWs:
	movl 1(%ecx),%edx
	movl 5(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aJH_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_Morph_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -5(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1bWl:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1bWp:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1bWx:
	movl $20,904(%ebx)
	movl %ecx,%esi
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bUy_info - _c1bUy_info_dsp
.text
	.align 2
_s1aJn_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1aJn_info:
Lc1bWA:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -20(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1bWB
Lc1bWC:
	addl $44,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bWE
Lc1bWD:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl %eax,64(%esp)
	movl 16(%ecx),%eax
	movl 20(%ecx),%ecx
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_s1aKl_info-(1b)+0,%edx
	movl %edx,-40(%edi)
	movl %ecx,-28(%edi)
	movl 64(%esp),%ecx
	movl %ecx,%edx
	addl $_s1aJR_info-(1b)+0,%edx
	movl %edx,-24(%edi)
	movl %eax,-12(%edi)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,-8(%edi)
	leal -24(%edi),%eax
	movl %eax,-4(%edi)
	leal -40(%edi),%eax
	movl %eax,(%edi)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl L_stg_ap_p_info$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,-20(%ebp)
	leal -7(%edi),%eax
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	jmp _CoreziShapeziInternal_translate_info
Lc1bWE:
	movl $44,904(%ebx)
Lc1bWB:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1aJn_info - _s1aJn_info_dsp
.text
	.align 2
_s1aKp_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1aKp_info:
Lc1bWP:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1bWQ
Lc1bWR:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bWT
Lc1bWS:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl %eax,64(%esp)
	movl 16(%ecx),%eax
	movl 20(%ecx),%ecx
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-16(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -16(%edi),%eax
	movl %eax,8(%ebx)
	movl 76(%esp),%eax
	movl %eax,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1bWT:
	movl $20,904(%ebx)
Lc1bWQ:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1aKp_info - _s1aKp_info_dsp
.text
	.align 2
_s1aKq_info_dsp:
.text
	.align 2
	.long	65541
	.long	3
	.long	9
_s1aKq_info:
Lc1bWU:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1bWY
Lc1bWX:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 11(%esi),%edx
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_s1aKp_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 88(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -20(%edi),%eax
	movl %eax,8(%ebx)
	movl 76(%esp),%eax
	movl %eax,%esi
	jmp _stg_ap_p_fast
Lc1bWY:
	movl $24,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aKq_info - _s1aKq_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zddmscaleAt_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zddmscaleAt_info
_CoreziShapeziInternal_zddmscaleAt_info:
Lc1bWZ:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1bX0
Lc1bX1:
	movl 64(%esp),%eax
	addl $_c1bRu_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl %ecx,%esi
	movl 76(%esp),%eax
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1bRu_info
Lc1bRv:
	jmp *(%esi)
Lc1bX0:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zddmscaleAt_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zddmscaleAt_info - _CoreziShapeziInternal_zddmscaleAt_info_dsp
.text
	.align 2
_c1bRu_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1bRu_info:
Lc1bRu:
	call 1f
1:	popl	%eax
	addl $80,%edi
	cmpl 856(%ebx),%edi
	ja Lc1bX4
Lc1bX3:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_s1aJl_info-(1b)+0,%eax
	movl %eax,-76(%edi)
	movl 4(%ebp),%eax
	movl %eax,-64(%edi)
	movl %esi,-60(%edi)
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_s1aJm_info-(1b)+0,%eax
	movl %eax,-56(%edi)
	movl 76(%esp),%eax
	movl %eax,-44(%edi)
	movl 8(%ebp),%eax
	movl %eax,-40(%edi)
	movl 64(%esp),%eax
	addl $_s1aJn_info-(1b)+0,%eax
	movl %eax,-36(%edi)
	movl 76(%esp),%eax
	movl %eax,-24(%edi)
	movl %ecx,-20(%edi)
	movl %edx,-16(%edi)
	movl 64(%esp),%eax
	addl $_s1aKq_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	leal -76(%edi),%eax
	movl %eax,-8(%edi)
	leal -56(%edi),%eax
	movl %eax,-4(%edi)
	leal -36(%edi),%eax
	movl %eax,(%edi)
	leal -11(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
Lc1bX4:
	movl $80,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1bRu_info - _c1bRu_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zddmrotateAt_closure
_CoreziShapeziInternal_zddmrotateAt_closure:
	.long	_CoreziShapeziInternal_zddmrotateAt_info
.text
	.align 2
_s1aKx_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1aKx_info:
Lc1c1j:
	call 1f
1:	popl	%eax
	leal -20(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1c1k
Lc1c1l:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%ecx
	movl %ecx,8(%ebx)
	movl L_stg_ap_p_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%ebp)
	movl 16(%esi),%eax
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	jmp _CoreziShapeziInternal_translate_info
Lc1c1k:
	jmp *-16(%ebx)
	.long  _s1aKx_info - _s1aKx_info_dsp
.text
	.align 2
_s1aKy_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1aKy_info:
Lc1c1q:
	call 1f
1:	popl	%eax
	leal -20(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1c1r
Lc1c1s:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%ecx
	movl %ecx,8(%ebx)
	movl L_stg_ap_p_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-20(%ebp)
	movl 16(%esi),%eax
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	jmp _CoreziShapeziInternal_rotate_info
Lc1c1r:
	jmp *-16(%ebx)
	.long  _s1aKy_info - _s1aKy_info_dsp
.text
	.align 2
_s1aL9_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aL9_info:
Lc1c2b:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1c2i
Lc1c2j:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1c28_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1c28_info
Lc1c29:
	jmp *(%esi)
Lc1c2i:
	jmp *-16(%ebx)
	.long  _s1aL9_info - _s1aL9_info_dsp
.text
	.align 2
_c1c28_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1c28_info:
Lc1c28:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1c2m
Lc1c2l:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1c2m:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1c28_info - _c1c28_info_dsp
.text
	.align 2
_s1aLf_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aLf_info:
Lc1c2B:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1c2C
Lc1c2D:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1c2C:
	jmp *-16(%ebx)
	.long  _s1aLf_info - _s1aLf_info_dsp
.text
	.align 2
_s1aLg_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1aLg_info:
Lc1c2E:
	call 1f
1:	popl	%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1c2F
Lc1c2G:
	addl $_c1c2v_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_v_fast
Lc1c2F:
	jmp *-8(%ebx)
	.long  _s1aLg_info - _s1aLg_info_dsp
.text
	.align 2
_c1c2v_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1c2v_info:
Lc1c2v:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1c2J
Lc1c2I:
	addl $_s1aLf_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1c2J:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1c2v_info - _c1c2v_info_dsp
.text
	.align 2
_s1aLn_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1aLn_info:
Lc1c2T:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1c30
Lc1c31:
	addl $_c1c2R_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_p_fast
Lc1c30:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aLn_info - _s1aLn_info_dsp
.text
	.align 2
_c1c2R_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1c2R_info:
Lc1c2R:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1c34
Lc1c33:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1c34:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1c2R_info - _c1c2R_info_dsp
.text
	.align 2
_s1aLv_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aLv_info:
Lc1c3i:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1c3j
Lc1c3k:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1c3j:
	jmp *-16(%ebx)
	.long  _s1aLv_info - _s1aLv_info_dsp
.text
	.align 2
_s1aLw_info_dsp:
.text
	.align 2
	.long	131077
	.long	1
	.long	10
_s1aLw_info:
Lc1c3l:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1c3m
Lc1c3n:
	addl $_c1c3c_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 2(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_pv_fast
Lc1c3m:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aLw_info - _s1aLw_info_dsp
.text
	.align 2
_c1c3c_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1c3c_info:
Lc1c3c:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1c3q
Lc1c3p:
	addl $_s1aLv_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1c3q:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1c3c_info - _c1c3c_info_dsp
.text
	.align 2
_s1aLx_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aLx_info:
Lc1c3G:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1c3H
Lc1c3I:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1c1Z_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1c1Z_info
Lc1c20:
	jmp *(%esi)
Lc1c3H:
	jmp *-16(%ebx)
	.long  _s1aLx_info - _s1aLx_info_dsp
.text
	.align 2
_c1c1Z_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1c1Z_info:
Lc1c1Z:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1c3E
Lc1c3F:
	cmpl $2,%ecx
	jae Lc1c3y
Lc1c3z:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1c3M
Lc1c3L:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1aL9_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1c3y:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1c3Q
Lc1c3P:
	movl 2(%esi),%ecx
	movl %eax,%edx
	addl $_s1aLg_info-(1b)+0,%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Action_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -11(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1c3B:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1c3Y
Lc1c3X:
	movl (%ecx),%edx
	movl 4(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aLw_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_MorphAct_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -4(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1c3E:
	cmpl $4,%ecx
	jae Lc1c3B
Lc1c3C:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1c3Y
Lc1c3T:
	movl 1(%ecx),%edx
	movl 5(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aLn_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_Morph_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -5(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1c3M:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1c3Q:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1c3Y:
	movl $20,904(%ebx)
	movl %ecx,%esi
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1c1Z_info - _c1c1Z_info_dsp
.text
	.align 2
_s1aKF_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aKF_info:
Lc1c4q:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1c4x
Lc1c4y:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1c4n_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1c4n_info
Lc1c4o:
	jmp *(%esi)
Lc1c4x:
	jmp *-16(%ebx)
	.long  _s1aKF_info - _s1aKF_info_dsp
.text
	.align 2
_c1c4n_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1c4n_info:
Lc1c4n:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1c4B
Lc1c4A:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1c4B:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1c4n_info - _c1c4n_info_dsp
.text
	.align 2
_s1aKL_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aKL_info:
Lc1c4Q:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1c4R
Lc1c4S:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1c4R:
	jmp *-16(%ebx)
	.long  _s1aKL_info - _s1aKL_info_dsp
.text
	.align 2
_s1aKM_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1aKM_info:
Lc1c4T:
	call 1f
1:	popl	%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1c4U
Lc1c4V:
	addl $_c1c4K_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_v_fast
Lc1c4U:
	jmp *-8(%ebx)
	.long  _s1aKM_info - _s1aKM_info_dsp
.text
	.align 2
_c1c4K_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1c4K_info:
Lc1c4K:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1c4Y
Lc1c4X:
	addl $_s1aKL_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1c4Y:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1c4K_info - _c1c4K_info_dsp
.text
	.align 2
_s1aKT_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1aKT_info:
Lc1c58:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1c5f
Lc1c5g:
	addl $_c1c56_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_p_fast
Lc1c5f:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aKT_info - _s1aKT_info_dsp
.text
	.align 2
_c1c56_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1c56_info:
Lc1c56:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1c5j
Lc1c5i:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1c5j:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1c56_info - _c1c56_info_dsp
.text
	.align 2
_s1aL1_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aL1_info:
Lc1c5x:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1c5y
Lc1c5z:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1c5y:
	jmp *-16(%ebx)
	.long  _s1aL1_info - _s1aL1_info_dsp
.text
	.align 2
_s1aL2_info_dsp:
.text
	.align 2
	.long	131077
	.long	1
	.long	10
_s1aL2_info:
Lc1c5A:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1c5B
Lc1c5C:
	addl $_c1c5r_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 2(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_pv_fast
Lc1c5B:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aL2_info - _s1aL2_info_dsp
.text
	.align 2
_c1c5r_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1c5r_info:
Lc1c5r:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1c5F
Lc1c5E:
	addl $_s1aL1_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1c5F:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1c5r_info - _c1c5r_info_dsp
.text
	.align 2
_s1aL3_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aL3_info:
Lc1c5V:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1c5W
Lc1c5X:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1c4e_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1c4e_info
Lc1c4f:
	jmp *(%esi)
Lc1c5W:
	jmp *-16(%ebx)
	.long  _s1aL3_info - _s1aL3_info_dsp
.text
	.align 2
_c1c4e_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1c4e_info:
Lc1c4e:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1c5T
Lc1c5U:
	cmpl $2,%ecx
	jae Lc1c5N
Lc1c5O:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1c61
Lc1c60:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1aKF_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1c5N:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1c65
Lc1c64:
	movl 2(%esi),%ecx
	movl %eax,%edx
	addl $_s1aKM_info-(1b)+0,%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Action_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -11(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1c5Q:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1c6d
Lc1c6c:
	movl (%ecx),%edx
	movl 4(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aL2_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_MorphAct_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -4(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1c5T:
	cmpl $4,%ecx
	jae Lc1c5Q
Lc1c5R:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1c6d
Lc1c68:
	movl 1(%ecx),%edx
	movl 5(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aKT_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_Morph_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -5(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1c61:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1c65:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1c6d:
	movl $20,904(%ebx)
	movl %ecx,%esi
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1c4e_info - _c1c4e_info_dsp
.text
	.align 2
_s1aKz_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1aKz_info:
Lc1c6g:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -20(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1c6h
Lc1c6i:
	addl $44,%edi
	cmpl 856(%ebx),%edi
	ja Lc1c6k
Lc1c6j:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl %eax,64(%esp)
	movl 16(%ecx),%eax
	movl 20(%ecx),%ecx
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	addl $_s1aLx_info-(1b)+0,%edx
	movl %edx,-40(%edi)
	movl %ecx,-28(%edi)
	movl 64(%esp),%ecx
	movl %ecx,%edx
	addl $_s1aL3_info-(1b)+0,%edx
	movl %edx,-24(%edi)
	movl %eax,-12(%edi)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,-8(%edi)
	leal -24(%edi),%eax
	movl %eax,-4(%edi)
	leal -40(%edi),%eax
	movl %eax,(%edi)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl L_stg_ap_p_info$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,-20(%ebp)
	leal -7(%edi),%eax
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	jmp _CoreziShapeziInternal_translate_info
Lc1c6k:
	movl $44,904(%ebx)
Lc1c6h:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1aKz_info - _s1aKz_info_dsp
.text
	.align 2
_s1aLB_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1aLB_info:
Lc1c6v:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1c6w
Lc1c6x:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1c6z
Lc1c6y:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl %eax,64(%esp)
	movl 16(%ecx),%eax
	movl 20(%ecx),%ecx
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%edx),%edx
	movl %edx,-16(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -16(%edi),%eax
	movl %eax,8(%ebx)
	movl 76(%esp),%eax
	movl %eax,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1c6z:
	movl $20,904(%ebx)
Lc1c6w:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1aLB_info - _s1aLB_info_dsp
.text
	.align 2
_s1aLC_info_dsp:
.text
	.align 2
	.long	65541
	.long	3
	.long	9
_s1aLC_info:
Lc1c6A:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1c6E
Lc1c6D:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 11(%esi),%edx
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_s1aLB_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 88(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -20(%edi),%eax
	movl %eax,8(%ebx)
	movl 76(%esp),%eax
	movl %eax,%esi
	jmp _stg_ap_p_fast
Lc1c6E:
	movl $24,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aLC_info - _s1aLC_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zddmrotateAt_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zddmrotateAt_info
_CoreziShapeziInternal_zddmrotateAt_info:
Lc1c6F:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1c6G
Lc1c6H:
	movl 64(%esp),%eax
	addl $_c1c1a_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl %ecx,%esi
	movl 76(%esp),%eax
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1c1a_info
Lc1c1b:
	jmp *(%esi)
Lc1c6G:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zddmrotateAt_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zddmrotateAt_info - _CoreziShapeziInternal_zddmrotateAt_info_dsp
.text
	.align 2
_c1c1a_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1c1a_info:
Lc1c1a:
	call 1f
1:	popl	%eax
	addl $80,%edi
	cmpl 856(%ebx),%edi
	ja Lc1c6K
Lc1c6J:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_s1aKx_info-(1b)+0,%eax
	movl %eax,-76(%edi)
	movl 4(%ebp),%eax
	movl %eax,-64(%edi)
	movl %esi,-60(%edi)
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_s1aKy_info-(1b)+0,%eax
	movl %eax,-56(%edi)
	movl 76(%esp),%eax
	movl %eax,-44(%edi)
	movl 8(%ebp),%eax
	movl %eax,-40(%edi)
	movl 64(%esp),%eax
	addl $_s1aKz_info-(1b)+0,%eax
	movl %eax,-36(%edi)
	movl 76(%esp),%eax
	movl %eax,-24(%edi)
	movl %ecx,-20(%edi)
	movl %edx,-16(%edi)
	movl 64(%esp),%eax
	addl $_s1aLC_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	leal -76(%edi),%eax
	movl %eax,-8(%edi)
	leal -56(%edi),%eax
	movl %eax,-4(%edi)
	leal -36(%edi),%eax
	movl %eax,(%edi)
	leal -11(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
Lc1c6K:
	movl $80,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1c1a_info - _c1c1a_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zddmscale_closure
_CoreziShapeziInternal_zddmscale_closure:
	.long	_CoreziShapeziInternal_zddmscale_info
.text
	.align 2
_CoreziShapeziInternal_zddmscale_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zddmscale_info
_CoreziShapeziInternal_zddmscale_info:
Lc1caI:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -36(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1caJ
Lc1caK:
	movl 64(%esp),%eax
	addl $_c1caF_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl %edx,%esi
	movl 76(%esp),%eax
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1caF_info
Lc1caG:
	jmp *(%esi)
Lc1caJ:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zddmscale_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zddmscale_info - _CoreziShapeziInternal_zddmscale_info_dsp
.text
	.align 2
_c1caF_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1caF_info:
Lc1caF:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	movl %ecx,8(%ebx)
	movl L_stg_ap_pppppp_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-24(%ebp)
	movl 3(%esi),%ecx
	movl %ecx,-20(%ebp)
	movl %eax,%ecx
	addl $_r19eE_closure-(1b)+1,%ecx
	movl %ecx,-16(%ebp)
	movl %eax,%ecx
	addl $_r19eE_closure-(1b)+1,%ecx
	movl %ecx,-12(%ebp)
	movl %eax,%ecx
	addl $_r19eE_closure-(1b)+1,%ecx
	movl %ecx,-8(%ebp)
	movl 7(%esi),%ecx
	movl %ecx,-4(%ebp)
	movl %eax,%ecx
	addl $_r19eE_closure-(1b)+1,%ecx
	movl %ecx,(%ebp)
	movl L_stg_ap_p_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,4(%ebp)
	addl $-24,%ebp
	jmp _CoreziShapeziInternal_affine_info
	.long  _c1caF_info - _c1caF_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zddmrotate_closure
_CoreziShapeziInternal_zddmrotate_closure:
	.long	_CoreziShapeziInternal_zddmrotate_info
.text
	.align 2
_s1aLP_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aLP_info:
Lc1cc0:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cc1
Lc1cc2:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_sinDouble_info
Lc1cc1:
	jmp *-16(%ebx)
	.long  _s1aLP_info - _s1aLP_info_dsp
.text
	.align 2
_s1aLV_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aLV_info:
Lc1ccg:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cch
Lc1cci:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_sinDouble_info
Lc1cch:
	jmp *-16(%ebx)
	.long  _s1aLV_info - _s1aLV_info_dsp
.text
	.align 2
_s1aLW_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1aLW_info:
Lc1ccj:
	call 1f
1:	popl	%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cck
Lc1ccl:
	addl $_c1cca_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_v_fast
Lc1cck:
	jmp *-8(%ebx)
	.long  _s1aLW_info - _s1aLW_info_dsp
.text
	.align 2
_c1cca_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cca_info:
Lc1cca:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cco
Lc1ccn:
	addl $_s1aLV_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cco:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cca_info - _c1cca_info_dsp
.text
	.align 2
_s1aM3_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1aM3_info:
Lc1ccy:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1ccG
Lc1ccH:
	addl $_c1ccw_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_p_fast
Lc1ccG:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aM3_info - _s1aM3_info_dsp
.text
	.align 2
_c1ccw_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1ccw_info:
Lc1ccw:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1ccK
Lc1ccJ:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gsinsd %fake0,%fake0
	pushl %eax;
fld %st(0); fsin
	fnstsw %ax
	test   $0x400,%eax
	je     Ln1civ
	ffree %st(7); fldpi
	fadd   %st(0),%st
	fxch   %st(1)
Ln1ciw:
	fprem1
	fnstsw %ax
	test   $0x400,%eax
	jne    Ln1ciw
	fstp   %st(1)
	fsin
Ln1civ:
	popl %eax;
	fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1ccK:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1ccw_info - _c1ccw_info_dsp
.text
	.align 2
_s1aMb_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aMb_info:
Lc1ccY:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1ccZ
Lc1cd0:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_sinDouble_info
Lc1ccZ:
	jmp *-16(%ebx)
	.long  _s1aMb_info - _s1aMb_info_dsp
.text
	.align 2
_s1aMc_info_dsp:
.text
	.align 2
	.long	131077
	.long	1
	.long	10
_s1aMc_info:
Lc1cd1:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1cd2
Lc1cd3:
	addl $_c1ccS_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 2(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_pv_fast
Lc1cd2:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aMc_info - _s1aMc_info_dsp
.text
	.align 2
_c1ccS_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1ccS_info:
Lc1ccS:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cd6
Lc1cd5:
	addl $_s1aMb_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cd6:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1ccS_info - _c1ccS_info_dsp
.text
	.align 2
_s1aLM_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aLM_info:
Lc1cdm:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cdn
Lc1cdo:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1cbR_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1cbR_info
Lc1cbS:
	jmp *(%esi)
Lc1cdn:
	jmp *-16(%ebx)
	.long  _s1aLM_info - _s1aLM_info_dsp
.text
	.align 2
_c1cbR_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cbR_info:
Lc1cbR:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1cdk
Lc1cdl:
	cmpl $2,%ecx
	jae Lc1cde
Lc1cdf:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cds
Lc1cdr:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1aLP_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cde:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cdw
Lc1cdv:
	movl 2(%esi),%ecx
	movl %eax,%edx
	addl $_s1aLW_info-(1b)+0,%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Action_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -11(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cdh:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1cdE
Lc1cdD:
	movl (%ecx),%edx
	movl 4(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aMc_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_MorphAct_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -4(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cdk:
	cmpl $4,%ecx
	jae Lc1cdh
Lc1cdi:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1cdE
Lc1cdz:
	movl 1(%ecx),%edx
	movl 5(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aM3_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_Morph_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -5(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cds:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1cdw:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1cdE:
	movl $20,904(%ebx)
	movl %ecx,%esi
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cbR_info - _c1cbR_info_dsp
.text
	.align 2
_s1aMg_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aMg_info:
Lc1ce0:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1ce1
Lc1ce2:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_cosDouble_info
Lc1ce1:
	jmp *-16(%ebx)
	.long  _s1aMg_info - _s1aMg_info_dsp
.text
	.align 2
_s1aMm_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aMm_info:
Lc1ceg:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1ceh
Lc1cei:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_cosDouble_info
Lc1ceh:
	jmp *-16(%ebx)
	.long  _s1aMm_info - _s1aMm_info_dsp
.text
	.align 2
_s1aMn_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1aMn_info:
Lc1cej:
	call 1f
1:	popl	%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cek
Lc1cel:
	addl $_c1cea_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_v_fast
Lc1cek:
	jmp *-8(%ebx)
	.long  _s1aMn_info - _s1aMn_info_dsp
.text
	.align 2
_c1cea_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cea_info:
Lc1cea:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1ceo
Lc1cen:
	addl $_s1aMm_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1ceo:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cea_info - _c1cea_info_dsp
.text
	.align 2
_s1aMu_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1aMu_info:
Lc1cey:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1ceG
Lc1ceH:
	addl $_c1cew_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_p_fast
Lc1ceG:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aMu_info - _s1aMu_info_dsp
.text
	.align 2
_c1cew_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cew_info:
Lc1cew:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1ceK
Lc1ceJ:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gcossd %fake0,%fake0
	pushl %eax;
fld %st(0); fcos
	fnstsw %ax
	test   $0x400,%eax
	je     Ln1cjN
	ffree %st(7); fldpi
	fadd   %st(0),%st
	fxch   %st(1)
Ln1cjO:
	fprem1
	fnstsw %ax
	test   $0x400,%eax
	jne    Ln1cjO
	fstp   %st(1)
	fcos
Ln1cjN:
	popl %eax;
	fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1ceK:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cew_info - _c1cew_info_dsp
.text
	.align 2
_s1aMC_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aMC_info:
Lc1ceY:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1ceZ
Lc1cf0:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_cosDouble_info
Lc1ceZ:
	jmp *-16(%ebx)
	.long  _s1aMC_info - _s1aMC_info_dsp
.text
	.align 2
_s1aMD_info_dsp:
.text
	.align 2
	.long	131077
	.long	1
	.long	10
_s1aMD_info:
Lc1cf1:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1cf2
Lc1cf3:
	addl $_c1ceS_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 2(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_pv_fast
Lc1cf2:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aMD_info - _s1aMD_info_dsp
.text
	.align 2
_c1ceS_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1ceS_info:
Lc1ceS:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cf6
Lc1cf5:
	addl $_s1aMC_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cf6:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1ceS_info - _c1ceS_info_dsp
.text
	.align 2
_s1aMd_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aMd_info:
Lc1cfm:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cfn
Lc1cfo:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1cdR_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1cdR_info
Lc1cdS:
	jmp *(%esi)
Lc1cfn:
	jmp *-16(%ebx)
	.long  _s1aMd_info - _s1aMd_info_dsp
.text
	.align 2
_c1cdR_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cdR_info:
Lc1cdR:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1cfk
Lc1cfl:
	cmpl $2,%ecx
	jae Lc1cfe
Lc1cff:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cfs
Lc1cfr:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1aMg_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cfe:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cfw
Lc1cfv:
	movl 2(%esi),%ecx
	movl %eax,%edx
	addl $_s1aMn_info-(1b)+0,%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Action_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -11(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cfh:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1cfE
Lc1cfD:
	movl (%ecx),%edx
	movl 4(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aMD_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_MorphAct_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -4(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cfk:
	cmpl $4,%ecx
	jae Lc1cfh
Lc1cfi:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1cfE
Lc1cfz:
	movl 1(%ecx),%edx
	movl 5(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aMu_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_Morph_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -5(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cfs:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1cfw:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1cfE:
	movl $20,904(%ebx)
	movl %ecx,%esi
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cdR_info - _c1cdR_info_dsp
.text
	.align 2
_s1aMJ_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aMJ_info:
Lc1cg6:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cgd
Lc1cge:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1cg3_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1cg3_info
Lc1cg4:
	jmp *(%esi)
Lc1cgd:
	jmp *-16(%ebx)
	.long  _s1aMJ_info - _s1aMJ_info_dsp
.text
	.align 2
_c1cg3_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cg3_info:
Lc1cg3:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cgh
Lc1cgg:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1cgh:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cg3_info - _c1cg3_info_dsp
.text
	.align 2
_s1aMP_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aMP_info:
Lc1cgw:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cgx
Lc1cgy:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1cgx:
	jmp *-16(%ebx)
	.long  _s1aMP_info - _s1aMP_info_dsp
.text
	.align 2
_s1aMQ_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1aMQ_info:
Lc1cgz:
	call 1f
1:	popl	%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cgA
Lc1cgB:
	addl $_c1cgq_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_v_fast
Lc1cgA:
	jmp *-8(%ebx)
	.long  _s1aMQ_info - _s1aMQ_info_dsp
.text
	.align 2
_c1cgq_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cgq_info:
Lc1cgq:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cgE
Lc1cgD:
	addl $_s1aMP_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cgE:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cgq_info - _c1cgq_info_dsp
.text
	.align 2
_s1aMX_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1aMX_info:
Lc1cgO:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1cgV
Lc1cgW:
	addl $_c1cgM_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_p_fast
Lc1cgV:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aMX_info - _s1aMX_info_dsp
.text
	.align 2
_c1cgM_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cgM_info:
Lc1cgM:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cgZ
Lc1cgY:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1cgZ:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cgM_info - _c1cgM_info_dsp
.text
	.align 2
_s1aN5_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aN5_info:
Lc1chd:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1che
Lc1chf:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1che:
	jmp *-16(%ebx)
	.long  _s1aN5_info - _s1aN5_info_dsp
.text
	.align 2
_s1aN6_info_dsp:
.text
	.align 2
	.long	131077
	.long	1
	.long	10
_s1aN6_info:
Lc1chg:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1chh
Lc1chi:
	addl $_c1ch7_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 2(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_pv_fast
Lc1chh:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aN6_info - _s1aN6_info_dsp
.text
	.align 2
_c1ch7_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1ch7_info:
Lc1ch7:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1chl
Lc1chk:
	addl $_s1aN5_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1chl:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1ch7_info - _c1ch7_info_dsp
.text
	.align 2
_s1aN7_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aN7_info:
Lc1chB:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1chC
Lc1chD:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1cfU_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1cfU_info
Lc1cfV:
	jmp *(%esi)
Lc1chC:
	jmp *-16(%ebx)
	.long  _s1aN7_info - _s1aN7_info_dsp
.text
	.align 2
_c1cfU_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cfU_info:
Lc1cfU:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1chz
Lc1chA:
	cmpl $2,%ecx
	jae Lc1cht
Lc1chu:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1chH
Lc1chG:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1aMJ_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cht:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1chL
Lc1chK:
	movl 2(%esi),%ecx
	movl %eax,%edx
	addl $_s1aMQ_info-(1b)+0,%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Action_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -11(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1chw:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1chT
Lc1chS:
	movl (%ecx),%edx
	movl 4(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aN6_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_MorphAct_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -4(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1chz:
	cmpl $4,%ecx
	jae Lc1chw
Lc1chx:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1chT
Lc1chO:
	movl 1(%ecx),%edx
	movl 5(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aMX_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_Morph_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -5(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1chH:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1chL:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1chT:
	movl $20,904(%ebx)
	movl %ecx,%esi
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cfU_info - _c1cfU_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zddmrotate_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zddmrotate_info
_CoreziShapeziInternal_zddmrotate_info:
Lc1chV:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -36(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1chW
Lc1chX:
	addl $48,%edi
	cmpl 856(%ebx),%edi
	ja Lc1chZ
Lc1chY:
	movl 64(%esp),%eax
	addl $_s1aLM_info-(1b)+0,%eax
	movl %eax,-44(%edi)
	movl %edx,-32(%edi)
	movl 64(%esp),%eax
	addl $_s1aMd_info-(1b)+0,%eax
	movl %eax,-28(%edi)
	movl %edx,-16(%edi)
	movl 64(%esp),%eax
	movl %eax,%edx
	addl $_s1aN7_info-(1b)+0,%edx
	movl %edx,-12(%edi)
	leal -44(%edi),%edx
	movl %edx,(%edi)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_stg_ap_pppppp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-36(%ebp)
	leal -28(%edi),%eax
	movl %eax,-32(%ebp)
	movl %edx,88(%esp)
	leal -12(%edi),%edx
	movl %edx,-28(%ebp)
	movl 64(%esp),%edx
	addl $_r19eE_closure-(1b)+1,%edx
	movl %edx,-24(%ebp)
	movl 88(%esp),%edx
	movl %edx,-20(%ebp)
	movl %eax,-16(%ebp)
	movl 64(%esp),%eax
	movl %eax,%edx
	addl $_r19eE_closure-(1b)+1,%edx
	movl %edx,-12(%ebp)
	movl L_stg_ap_p_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-36,%ebp
	jmp _CoreziShapeziInternal_affine_info
Lc1chZ:
	movl $48,904(%ebx)
Lc1chW:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zddmrotate_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zddmrotate_info - _CoreziShapeziInternal_zddmrotate_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zddmtranslate_closure
_CoreziShapeziInternal_zddmtranslate_closure:
	.long	_CoreziShapeziInternal_zddmtranslate_info
.text
	.align 2
_CoreziShapeziInternal_zddmtranslate_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zddmtranslate_info
_CoreziShapeziInternal_zddmtranslate_info:
Lc1cmp:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -36(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1cmq
Lc1cmr:
	movl 64(%esp),%eax
	addl $_c1cmm_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl %edx,%esi
	movl 76(%esp),%eax
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1cmm_info
Lc1cmn:
	jmp *(%esi)
Lc1cmq:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zddmtranslate_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zddmtranslate_info - _CoreziShapeziInternal_zddmtranslate_info_dsp
.text
	.align 2
_c1cmm_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1cmm_info:
Lc1cmm:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	movl %ecx,8(%ebx)
	movl L_stg_ap_pppppp_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-24(%ebp)
	movl %eax,%ecx
	addl $_r19eE_closure-(1b)+1,%ecx
	movl %ecx,-20(%ebp)
	movl %eax,%ecx
	addl $_r19eE_closure-(1b)+1,%ecx
	movl %ecx,-16(%ebp)
	movl 3(%esi),%ecx
	movl %ecx,-12(%ebp)
	movl %eax,%ecx
	addl $_r19eE_closure-(1b)+1,%ecx
	movl %ecx,-8(%ebp)
	movl %eax,%ecx
	addl $_r19eE_closure-(1b)+1,%ecx
	movl %ecx,-4(%ebp)
	movl 7(%esi),%ecx
	movl %ecx,(%ebp)
	movl L_stg_ap_p_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,4(%ebp)
	addl $-24,%ebp
	jmp _CoreziShapeziInternal_affine_info
	.long  _c1cmm_info - _c1cmm_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_inside_closure
_CoreziShapeziInternal_inside_closure:
	.long	_CoreziShapeziInternal_inside_info
.text
	.align 2
_CoreziShapeziInternal_inside_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziShapeziInternal_inside_info
_CoreziShapeziInternal_inside_info:
Lc1cn4:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1cn5
Lc1cn6:
	movl 64(%esp),%eax
	addl $_c1cn1_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %ecx,%esi
	movl %edx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1cn1_info
Lc1cn2:
	jmp *(%esi)
Lc1cn5:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_inside_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_inside_info - _CoreziShapeziInternal_inside_info_dsp
.text
	.align 2
_c1cn1_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1cn1_info:
Lc1cn1:
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	movl 3(%esi),%esi
	addl $8,%ebp
	jmp _stg_ap_p_fast
	.long  _c1cn1_info - _c1cn1_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_disable_closure
_CoreziShapeziInternal_disable_closure:
	.long	_CoreziShapeziInternal_disable_info
.text
	.align 2
_s1aNC_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1aNC_info:
Lc1cnX:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -8(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1cnY
Lc1cnZ:
	addl $_c1cnN_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 3(%esi),%eax
	movl %ecx,%esi
	movl %eax,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1cnN_info
Lc1cnO:
	jmp *(%esi)
Lc1cnY:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aNC_info - _s1aNC_info_dsp
.text
	.align 2
_c1cnN_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1cnN_info:
Lc1cnN:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1cnV
Lc1cnW:
	movl L_CoreziShapeziInternal_zdfApplicativeShape1_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 3(%eax),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1cnV:
	movl 4(%ebp),%esi
	addl $8,%ebp
	jmp _stg_ap_0_fast
	.long  _c1cnN_info - _c1cnN_info_dsp
.text
	.align 2
_s1aND_info_dsp:
.text
	.align 2
	.long	196623
	.long	2
	.long	12
_s1aND_info:
Lc1coc:
	movl 16(%ebx),%eax
	movl %eax,32(%ebx)
	movl 8(%ebx),%eax
	movl %eax,24(%ebx)
	movl 5(%esi),%eax
	movl %eax,16(%ebx)
	movl 1(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
	.long  _s1aND_info - _s1aND_info_dsp
.text
	.align 2
_s1aNy_info_dsp:
.text
	.align 2
	.long	131077
	.long	2
	.long	12
_s1aNy_info:
Lc1coJ:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1coK
Lc1coL:
	addl $_c1coz_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 2(%esi),%eax
	movl 6(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1coz_info
Lc1coA:
	jmp *(%esi)
Lc1coK:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aNy_info - _s1aNy_info_dsp
.text
	.align 2
_c1coz_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1coz_info:
Lc1coz:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1coH
Lc1coI:
	movl L_ghczmprim_GHCziTypes_False_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $12,%ebp
	jmp *(%ebp)
Lc1coH:
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $12,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1coz_info - _c1coz_info_dsp
.text
	.align 2
_s1aNz_info_dsp:
.text
	.align 2
	.long	131077
	.long	2
	.long	12
_s1aNz_info:
Lc1coT:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1coU
Lc1coV:
	addl $_c1cop_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 2(%esi),%eax
	movl 6(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1cop_info
Lc1coq:
	jmp *(%esi)
Lc1coU:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aNz_info - _s1aNz_info_dsp
.text
	.align 2
_c1cop_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1cop_info:
Lc1cop:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1coY
Lc1coX:
	addl $_s1aNy_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl 8(%ebp),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $12,%ebp
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1coY:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cop_info - _c1cop_info_dsp
.text
	.align 2
_CoreziShapeziInternal_disable_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziShapeziInternal_disable_info
_CoreziShapeziInternal_disable_info:
Lc1cp0:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1cp2
Lc1cp3:
	movl 64(%esp),%eax
	addl $_c1cnD_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %ecx,%esi
	movl %edx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1cnD_info
Lc1cnE:
	jmp *(%esi)
Lc1cp2:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_disable_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_disable_info - _CoreziShapeziInternal_disable_info_dsp
.text
	.align 2
_c1cnD_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1cnD_info:
Lc1cnD:
	call 1f
1:	popl	%eax
	addl $48,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cp6
Lc1cp5:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_s1aNC_info-(1b)+0,%eax
	movl %eax,-44(%edi)
	movl %edx,-40(%edi)
	movl 64(%esp),%eax
	movl %eax,%edx
	addl $_s1aND_info-(1b)+0,%edx
	movl %edx,-36(%edi)
	movl 4(%ebp),%edx
	movl %edx,-32(%edi)
	leal -43(%edi),%eax
	movl %eax,-28(%edi)
	movl 64(%esp),%eax
	addl $_s1aNz_info-(1b)+0,%eax
	movl %eax,-24(%edi)
	movl %edx,-20(%edi)
	movl %ecx,-16(%edi)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%edi)
	leal -22(%edi),%ecx
	movl %ecx,-8(%edi)
	leal -33(%edi),%ecx
	movl %ecx,-4(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,(%edi)
	leal -11(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1cp6:
	movl $48,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cnD_info - _c1cnD_info_dsp
.data
	.align 2
.align 0
_r13Gl_closure:
	.long	_r13Gl_info
	.long	0
	.long	0
	.long	0
.text
	.align 2
_r13Gl_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r13Gl_info:
Lc1cqz:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1cqL
Lc1cqM:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cqO
Lc1cqN:
	subl $4,%esp
	pushl %ecx
	pushl %ebx
	movl %eax,76(%esp)
	movl %ecx,88(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1cqv
Lc1cqu:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
#	gldsd Ln1cqW-(1b)+0(%ecx),%fake0
	fldl Ln1cqW-(1b)+0(%ecx) ; fstp %st(1)
#	gsqrtsd %fake0,%fake0
	fld %st(0) ; fsqrt
	fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,-8(%edi)
#	gld1sd %fake1
	fld1 ; fstp %st(2)
#	gsubt %fake0,%fake1,%fake0
	#GSUB-xxxcase1
	fld %st(1) ; fsubrp %st(0),%st(1)
#	gldsd Ln1cr1-(1b)+0(%ecx),%fake1
	fldl Ln1cr1-(1b)+0(%ecx) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd Ln1cr4-(1b)+0(%ecx),%fake1
	fldl Ln1cr4-(1b)+0(%ecx) ; fstp %st(2)
#	gdivt %fake0,%fake1,%fake0
	#GDIV-xxxcase1
	fld %st(1) ; fdivrp %st(0),%st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $-12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1cqv:
	movl 76(%esp),%eax
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%eax)
Lc1cqO:
	movl $12,904(%ebx)
Lc1cqL:
	movl %ecx,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
	.long  _r13Gl_info - _r13Gl_info_dsp
.const
	.align 2
.align 3
Ln1cqW:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.const
	.align 2
.align 3
Ln1cr1:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	16
	.byte	64
.const
	.align 2
.align 3
Ln1cr4:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.byte	64
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_execPath_closure
_CoreziShapeziInternal_execPath_closure:
	.long	_CoreziShapeziInternal_execPath_info
.text
	.align 2
_CoreziShapeziInternal_execPath_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziShapeziInternal_execPath_info
_CoreziShapeziInternal_execPath_info:
Lc1crj:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1crk
Lc1crl:
	addl $_c1crg_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1crg_info
Lc1crh:
	jmp *(%esi)
Lc1crk:
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_execPath_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_execPath_info - _CoreziShapeziInternal_execPath_info_dsp
.text
	.align 2
_c1crg_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1crg_info:
Lc1crg:
	movl 7(%esi),%esi
	addl $4,%ebp
	jmp _stg_ap_0_fast
	.long  _c1crg_info - _c1crg_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfFunctorShapezuzdczlzd_closure
_CoreziShapeziInternal_zdfFunctorShapezuzdczlzd_closure:
	.long	_CoreziShapeziInternal_zdfFunctorShapezuzdczlzd_info
.text
	.align 2
_CoreziShapeziInternal_zdfFunctorShapezuzdczlzd_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zdfFunctorShapezuzdczlzd_info
_CoreziShapeziInternal_zdfFunctorShapezuzdczlzd_info:
Lc1crK:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1crO
Lc1crP:
	movl 64(%esp),%eax
	addl $_c1crH_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %ecx,%esi
	movl %edx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1crH_info
Lc1crI:
	jmp *(%esi)
Lc1crO:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdfFunctorShapezuzdczlzd_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdfFunctorShapezuzdczlzd_info - _CoreziShapeziInternal_zdfFunctorShapezuzdczlzd_info_dsp
.text
	.align 2
_c1crH_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1crH_info:
Lc1crH:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1crS
Lc1crR:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %ecx,-8(%edi)
	movl %edx,-4(%edi)
	movl 4(%ebp),%eax
	movl %eax,(%edi)
	leal -11(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1crS:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1crH_info - _c1crH_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfFunctorShapezuzdcfmap_closure
_CoreziShapeziInternal_zdfFunctorShapezuzdcfmap_closure:
	.long	_CoreziShapeziInternal_zdfFunctorShapezuzdcfmap_info
.text
	.align 2
_CoreziShapeziInternal_zdfFunctorShapezuzdcfmap_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zdfFunctorShapezuzdcfmap_info
_CoreziShapeziInternal_zdfFunctorShapezuzdcfmap_info:
Lc1csh:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1csm
Lc1csn:
	movl 64(%esp),%eax
	addl $_c1cse_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %ecx,%esi
	movl %edx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1cse_info
Lc1csf:
	jmp *(%esi)
Lc1csm:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdfFunctorShapezuzdcfmap_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdfFunctorShapezuzdcfmap_info - _CoreziShapeziInternal_zdfFunctorShapezuzdcfmap_info_dsp
.text
	.align 2
_c1cse_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1cse_info:
Lc1cse:
	call 1f
1:	popl	%eax
	addl $36,%edi
	cmpl 856(%ebx),%edi
	ja Lc1csq
Lc1csp:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-32(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-20(%edi)
	movl %eax,-16(%edi)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -32(%edi),%eax
	movl %eax,(%edi)
	leal -11(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1csq:
	movl $36,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cse_info - _c1cse_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfFunctorShape_closure
_CoreziShapeziInternal_zdfFunctorShape_closure:
	.long	_base_GHCziBase_DZCFunctor_static_info
	.long	_CoreziShapeziInternal_zdfFunctorShapezuzdcfmap_closure+2
	.long	_CoreziShapeziInternal_zdfFunctorShapezuzdczlzd_closure+2
	.long	1
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwzdczlztzg_closure
_CoreziShapeziInternal_zdwzdczlztzg_closure:
	.long	_CoreziShapeziInternal_zdwzdczlztzg_info
.text
	.align 2
_s1aOm_info_dsp:
.text
	.align 2
	.long	196623
	.long	2
	.long	12
_s1aOm_info:
Lc1csV:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1csW
Lc1csX:
	movl 64(%esp),%eax
	addl $_c1csT_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-16,%ebp
	jmp _stg_ap_ppv_fast
Lc1csW:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aOm_info - _s1aOm_info_dsp
.text
	.align 2
_c1csT_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1csT_info:
Lc1csT:
	movl 12(%ebp),%eax
	movl %eax,16(%ebx)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $16,%ebp
	jmp _stg_ap_ppv_fast
	.long  _c1csT_info - _c1csT_info_dsp
.text
	.align 2
_s1aOe_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1aOe_info:
Lc1ctc:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1ctd
Lc1cte:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 16(%esi),%eax
	movl %eax,16(%ebx)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _ghczmprim_GHCziClasses_zaza_info
Lc1ctd:
	jmp *-16(%ebx)
	.long  _s1aOe_info - _s1aOe_info_dsp
.text
	.align 2
_s1aOf_info_dsp:
.text
	.align 2
	.long	131077
	.long	2
	.long	12
_s1aOf_info:
Lc1ctf:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1ctg
Lc1cth:
	addl $_c1ct4_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl %ecx,8(%ebx)
	movl 6(%esi),%eax
	movl 2(%esi),%esi
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	jmp _stg_ap_pv_fast
Lc1ctg:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aOf_info - _s1aOf_info_dsp
.text
	.align 2
_c1ct4_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1ct4_info:
Lc1ct4:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1ct6_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl %esi,%eax
	movl %ecx,%esi
	movl %eax,8(%ebp)
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1ct4_info - _c1ct4_info_dsp
.text
	.align 2
_c1ct6_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1ct6_info:
Lc1ct6:
	call 1f
1:	popl	%eax
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1ctl
Lc1ctk:
	addl $_s1aOe_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -16(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1ctl:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1ct6_info - _c1ct6_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdwzdczlztzg_info_dsp:
.text
	.align 2
	.long	393242
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zdwzdczlztzg_info
_CoreziShapeziInternal_zdwzdczlztzg_info:
Lc1ctm:
	call 1f
1:	popl	%eax
	addl $44,%edi
	movl 40(%ebx),%ecx
	movl 32(%ebx),%edx
	movl %eax,64(%esp)
	movl 24(%ebx),%eax
	movl %eax,76(%esp)
	movl 16(%ebx),%eax
	movl %eax,88(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1ctq
Lc1ctp:
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-40(%edi)
	movl 76(%esp),%eax
	movl %eax,-28(%edi)
	movl (%ebp),%eax
	movl %eax,-24(%edi)
	movl 64(%esp),%eax
	addl $_s1aOm_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 88(%esp),%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	addl $_s1aOf_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl 100(%esp),%eax
	movl %eax,-4(%edi)
	movl %edx,(%edi)
	leal -40(%edi),%eax
	movl %eax,16(%ebx)
	leal -17(%edi),%eax
	movl %eax,8(%ebx)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1ctq:
	movl $44,904(%ebx)
	movl %ecx,40(%ebx)
	movl %edx,32(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,24(%ebx)
	movl 88(%esp),%ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdwzdczlztzg_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdwzdczlztzg_info - _CoreziShapeziInternal_zdwzdczlztzg_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfApplicativeShapezuzdczlztzg_closure
_CoreziShapeziInternal_zdfApplicativeShapezuzdczlztzg_closure:
	.long	_CoreziShapeziInternal_zdfApplicativeShapezuzdczlztzg_info
.text
	.align 2
_CoreziShapeziInternal_zdfApplicativeShapezuzdczlztzg_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zdfApplicativeShapezuzdczlztzg_info
_CoreziShapeziInternal_zdfApplicativeShapezuzdczlztzg_info:
Lc1cuq:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1cuB
Lc1cuC:
	movl 64(%esp),%eax
	addl $_c1cun_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1cun_info
Lc1cuo:
	jmp *(%esi)
Lc1cuB:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdfApplicativeShapezuzdczlztzg_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdfApplicativeShapezuzdczlztzg_info - _CoreziShapeziInternal_zdfApplicativeShapezuzdczlztzg_info_dsp
.text
	.align 2
_c1cun_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1cun_info:
Lc1cun:
	call 1f
1:	popl	%eax
	addl $_c1cut_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl 11(%esi),%edx
	movl 4(%ebp),%esi
	movl %edx,-4(%ebp)
	movl %ecx,(%ebp)
	movl %eax,4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1cut_info
Lc1cuu:
	jmp *(%esi)
	.long  _c1cun_info - _c1cun_info_dsp
.text
	.align 2
_c1cut_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1cut_info:
Lc1cut:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c1cuy_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl 7(%esi),%eax
	movl %eax,40(%ebx)
	movl 3(%esi),%eax
	movl %eax,32(%ebx)
	movl 4(%ebp),%eax
	movl %eax,24(%ebx)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	movl 11(%esi),%eax
	movl %eax,8(%ebp)
	addl $8,%ebp
	jmp _CoreziShapeziInternal_zdwzdczlztzg_info
	.long  _c1cut_info - _c1cut_info_dsp
.text
	.align 2
_c1cuy_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cuy_info:
Lc1cuy:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1cuH
Lc1cuG:
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %esi,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cuH:
	movl $16,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cuy_info - _c1cuy_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfApplicativeShapezuzdcztzg_closure
_CoreziShapeziInternal_zdfApplicativeShapezuzdcztzg_closure:
	.long	_CoreziShapeziInternal_zdfApplicativeShapezuzdcztzg_info
.text
	.align 2
_s1aP2_info_dsp:
.text
	.align 2
	.long	196623
	.long	2
	.long	12
_s1aP2_info:
Lc1cvC:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1cvD
Lc1cvE:
	movl 64(%esp),%eax
	addl $_c1cvA_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-16,%ebp
	jmp _stg_ap_ppv_fast
Lc1cvD:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aP2_info - _s1aP2_info_dsp
.text
	.align 2
_c1cvA_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1cvA_info:
Lc1cvA:
	movl 12(%ebp),%eax
	movl %eax,16(%ebx)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $16,%ebp
	jmp _stg_ap_ppv_fast
	.long  _c1cvA_info - _c1cvA_info_dsp
.text
	.align 2
_s1aOU_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1aOU_info:
Lc1cvT:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cvU
Lc1cvV:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 16(%esi),%eax
	movl %eax,16(%ebx)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _ghczmprim_GHCziClasses_zaza_info
Lc1cvU:
	jmp *-16(%ebx)
	.long  _s1aOU_info - _s1aOU_info_dsp
.text
	.align 2
_s1aOV_info_dsp:
.text
	.align 2
	.long	131077
	.long	2
	.long	12
_s1aOV_info:
Lc1cvW:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1cvX
Lc1cvY:
	addl $_c1cvL_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl %ecx,8(%ebx)
	movl 6(%esi),%eax
	movl 2(%esi),%esi
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	jmp _stg_ap_pv_fast
Lc1cvX:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aOV_info - _s1aOV_info_dsp
.text
	.align 2
_c1cvL_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1cvL_info:
Lc1cvL:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1cvN_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl %esi,%eax
	movl %ecx,%esi
	movl %eax,8(%ebp)
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1cvL_info - _c1cvL_info_dsp
.text
	.align 2
_c1cvN_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1cvN_info:
Lc1cvN:
	call 1f
1:	popl	%eax
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cw2
Lc1cw1:
	addl $_s1aOU_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -16(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1cw2:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cvN_info - _c1cvN_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdfApplicativeShapezuzdcztzg_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zdfApplicativeShapezuzdcztzg_info
_CoreziShapeziInternal_zdfApplicativeShapezuzdcztzg_info:
Lc1cw3:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1cw5
Lc1cw6:
	movl 64(%esp),%eax
	addl $_c1cvl_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1cvl_info
Lc1cvm:
	jmp *(%esi)
Lc1cw5:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdfApplicativeShapezuzdcztzg_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdfApplicativeShapezuzdcztzg_info - _CoreziShapeziInternal_zdfApplicativeShapezuzdcztzg_info_dsp
.text
	.align 2
_c1cvl_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1cvl_info:
Lc1cvl:
	call 1f
1:	popl	%eax
	addl $_c1cvq_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl 4(%ebp),%esi
	movl %ecx,(%ebp)
	movl %eax,4(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1cvq_info
Lc1cvr:
	jmp *(%esi)
	.long  _c1cvl_info - _c1cvl_info_dsp
.text
	.align 2
_c1cvq_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1cvq_info:
Lc1cvq:
	call 1f
1:	popl	%eax
	addl $40,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cwa
Lc1cw9:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	addl $_s1aP2_info-(1b)+0,%ecx
	movl %ecx,-36(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-32(%edi)
	movl %edx,-28(%edi)
	movl 64(%esp),%ecx
	movl %ecx,%edx
	addl $_s1aOV_info-(1b)+0,%edx
	movl %edx,-24(%edi)
	movl 8(%ebp),%edx
	movl %edx,-20(%edi)
	movl 76(%esp),%edx
	movl %edx,-16(%edi)
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%ecx),%ecx
	movl %ecx,-12(%edi)
	leal -22(%edi),%ecx
	movl %ecx,-8(%edi)
	leal -33(%edi),%ecx
	movl %ecx,-4(%edi)
	movl %eax,(%edi)
	leal -11(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
Lc1cwa:
	movl $40,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cvq_info - _c1cvq_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfApplicativeShapezuzdczlzt_closure
_CoreziShapeziInternal_zdfApplicativeShapezuzdczlzt_closure:
	.long	_CoreziShapeziInternal_zdfApplicativeShapezuzdczlzt_info
.text
	.align 2
_s1aPt_info_dsp:
.text
	.align 2
	.long	196623
	.long	2
	.long	12
_s1aPt_info:
Lc1cxC:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1cxD
Lc1cxE:
	movl 64(%esp),%eax
	addl $_c1cxA_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-16,%ebp
	jmp _stg_ap_ppv_fast
Lc1cxD:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aPt_info - _s1aPt_info_dsp
.text
	.align 2
_c1cxA_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1cxA_info:
Lc1cxA:
	movl 12(%ebp),%eax
	movl %eax,16(%ebx)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl 4(%ebp),%esi
	addl $16,%ebp
	jmp _stg_ap_ppv_fast
	.long  _c1cxA_info - _c1cxA_info_dsp
.text
	.align 2
_s1aPl_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1aPl_info:
Lc1cxT:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cxU
Lc1cxV:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 16(%esi),%eax
	movl %eax,16(%ebx)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _ghczmprim_GHCziClasses_zaza_info
Lc1cxU:
	jmp *-16(%ebx)
	.long  _s1aPl_info - _s1aPl_info_dsp
.text
	.align 2
_s1aPm_info_dsp:
.text
	.align 2
	.long	131077
	.long	2
	.long	12
_s1aPm_info:
Lc1cxW:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1cxX
Lc1cxY:
	addl $_c1cxL_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl %ecx,8(%ebx)
	movl 6(%esi),%eax
	movl 2(%esi),%esi
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	jmp _stg_ap_pv_fast
Lc1cxX:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aPm_info - _s1aPm_info_dsp
.text
	.align 2
_c1cxL_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1cxL_info:
Lc1cxL:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1cxN_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl %esi,%eax
	movl %ecx,%esi
	movl %eax,8(%ebp)
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1cxL_info - _c1cxL_info_dsp
.text
	.align 2
_c1cxN_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1cxN_info:
Lc1cxN:
	call 1f
1:	popl	%eax
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cy2
Lc1cy1:
	addl $_s1aPl_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -16(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1cy2:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cxN_info - _c1cxN_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdfApplicativeShapezuzdczlzt_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zdfApplicativeShapezuzdczlzt_info
_CoreziShapeziInternal_zdfApplicativeShapezuzdczlzt_info:
Lc1cy3:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1cy5
Lc1cy6:
	movl 64(%esp),%eax
	addl $_c1cxl_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1cxl_info
Lc1cxm:
	jmp *(%esi)
Lc1cy5:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdfApplicativeShapezuzdczlzt_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdfApplicativeShapezuzdczlzt_info - _CoreziShapeziInternal_zdfApplicativeShapezuzdczlzt_info_dsp
.text
	.align 2
_c1cxl_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1cxl_info:
Lc1cxl:
	call 1f
1:	popl	%eax
	addl $_c1cxq_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl 11(%esi),%edx
	movl 4(%ebp),%esi
	movl %edx,-4(%ebp)
	movl %ecx,(%ebp)
	movl %eax,4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1cxq_info
Lc1cxr:
	jmp *(%esi)
	.long  _c1cxl_info - _c1cxl_info_dsp
.text
	.align 2
_c1cxq_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1cxq_info:
Lc1cxq:
	call 1f
1:	popl	%eax
	addl $40,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cya
Lc1cy9:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	addl $_s1aPt_info-(1b)+0,%eax
	movl %eax,-36(%edi)
	movl 8(%ebp),%eax
	movl %eax,-32(%edi)
	movl %edx,-28(%edi)
	movl 64(%esp),%eax
	movl %eax,%edx
	addl $_s1aPm_info-(1b)+0,%edx
	movl %edx,-24(%edi)
	movl 12(%ebp),%edx
	movl %edx,-20(%edi)
	movl %ecx,-16(%edi)
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	leal -22(%edi),%eax
	movl %eax,-8(%edi)
	leal -33(%edi),%eax
	movl %eax,-4(%edi)
	movl 4(%ebp),%eax
	movl %eax,(%edi)
	leal -11(%edi),%esi
	addl $16,%ebp
	jmp *(%ebp)
Lc1cya:
	movl $40,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cxq_info - _c1cxq_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfApplicativeShapezuzdcpure_closure
_CoreziShapeziInternal_zdfApplicativeShapezuzdcpure_closure:
	.long	_CoreziShapeziInternal_zdfApplicativeShapezuzdcpure_info
.text
	.align 2
_CoreziShapeziInternal_zdfApplicativeShapezuzdcpure_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zdfApplicativeShapezuzdcpure_info
_CoreziShapeziInternal_zdfApplicativeShapezuzdcpure_info:
Lc1czh:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1czl
Lc1czk:
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%edi)
	movl L_CoreziShapeziInternal_zdfApplicativeShape3_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	addl $2,%edx
	movl %edx,-8(%edi)
	movl L_CoreziShapeziInternal_zdfApplicativeShape1_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	addl $3,%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	jmp *(%ebp)
Lc1czl:
	movl $16,904(%ebx)
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_zdfApplicativeShapezuzdcpure_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdfApplicativeShapezuzdcpure_info - _CoreziShapeziInternal_zdfApplicativeShapezuzdcpure_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfApplicativeShape_closure
_CoreziShapeziInternal_zdfApplicativeShape_closure:
	.long	_base_GHCziBase_DZCApplicative_static_info
	.long	_CoreziShapeziInternal_zdfFunctorShape_closure+1
	.long	_CoreziShapeziInternal_zdfApplicativeShapezuzdcpure_closure+1
	.long	_CoreziShapeziInternal_zdfApplicativeShapezuzdczlztzg_closure+2
	.long	_CoreziShapeziInternal_zdfApplicativeShapezuzdcztzg_closure+2
	.long	_CoreziShapeziInternal_zdfApplicativeShapezuzdczlzt_closure+2
	.long	1
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfMonadShapezuzdszddmreturn_closure
_CoreziShapeziInternal_zdfMonadShapezuzdszddmreturn_closure:
	.long	_CoreziShapeziInternal_zdfMonadShapezuzdszddmreturn_info
.text
	.align 2
_CoreziShapeziInternal_zdfMonadShapezuzdszddmreturn_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zdfMonadShapezuzdszddmreturn_info
_CoreziShapeziInternal_zdfMonadShapezuzdszddmreturn_info:
Lc1czC:
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfApplicativeShapezuzdcpure_info
	.long  _CoreziShapeziInternal_zdfMonadShapezuzdszddmreturn_info - _CoreziShapeziInternal_zdfMonadShapezuzdszddmreturn_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwzdczgzgze_closure
_CoreziShapeziInternal_zdwzdczgzgze_closure:
	.long	_CoreziShapeziInternal_zdwzdczgzgze_info
.text
	.align 2
_s1aPY_info_dsp:
.text
	.align 2
	.long	196623
	.long	2
	.long	12
_s1aPY_info:
Lc1cAf:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1cAg
Lc1cAh:
	movl 64(%esp),%eax
	addl $_c1cAa_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-16,%ebp
	jmp _stg_ap_ppv_fast
Lc1cAg:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aPY_info - _s1aPY_info_dsp
.text
	.align 2
_c1cAa_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1cAa_info:
Lc1cAa:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1cAc_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %ecx,%esi
	addl $4,%ebp
	testw $7,%si
	jne _c1cAc_info
Lc1cAd:
	jmp *(%esi)
	.long  _c1cAa_info - _c1cAa_info_dsp
.text
	.align 2
_c1cAc_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1cAc_info:
Lc1cAc:
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	movl 7(%esi),%esi
	addl $12,%ebp
	jmp _stg_ap_ppv_fast
	.long  _c1cAc_info - _c1cAc_info_dsp
.text
	.align 2
_s1aPM_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1aPM_info:
Lc1cAF:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cAG
Lc1cAH:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 16(%esi),%eax
	movl %eax,16(%ebx)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _ghczmprim_GHCziClasses_zaza_info
Lc1cAG:
	jmp *-16(%ebx)
	.long  _s1aPM_info - _s1aPM_info_dsp
.text
	.align 2
_s1aPN_info_dsp:
.text
	.align 2
	.long	131077
	.long	2
	.long	12
_s1aPN_info:
Lc1cAI:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1cAJ
Lc1cAK:
	addl $_c1cAs_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl %ecx,8(%ebx)
	movl 6(%esi),%eax
	movl 2(%esi),%esi
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	jmp _stg_ap_pv_fast
Lc1cAJ:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aPN_info - _s1aPN_info_dsp
.text
	.align 2
_c1cAs_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1cAs_info:
Lc1cAs:
	call 1f
1:	popl	%eax
	addl $_c1cAu_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _c1cAu_info
Lc1cAv:
	jmp *(%esi)
	.long  _c1cAs_info - _c1cAs_info_dsp
.text
	.align 2
_c1cAu_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1cAu_info:
Lc1cAu:
	call 1f
1:	popl	%eax
	addl $_c1cAz_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl 3(%esi),%esi
	jmp _stg_ap_pv_fast
	.long  _c1cAu_info - _c1cAu_info_dsp
.text
	.align 2
_c1cAz_info_dsp:
.text
	.align 2
	.long	130
	.long	32
_c1cAz_info:
Lc1cAz:
	call 1f
1:	popl	%eax
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cAP
Lc1cAO:
	addl $_s1aPM_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -16(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
Lc1cAP:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cAz_info - _c1cAz_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdwzdczgzgze_info_dsp:
.text
	.align 2
	.long	262168
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zdwzdczgzgze_info
_CoreziShapeziInternal_zdwzdczgzgze_info:
Lc1cAR:
	call 1f
1:	popl	%eax
	addl $60,%edi
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1cAV
Lc1cAU:
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	movl L_stg_ap_2_upd_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-56(%edi)
	movl %ecx,-44(%edi)
	movl %edx,-40(%edi)
	movl 64(%esp),%eax
	movl L_stg_sel_2_upd_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-36(%edi)
	leal -56(%edi),%ecx
	movl %ecx,-24(%edi)
	movl %eax,%edx
	addl $_s1aPY_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl 76(%esp),%edx
	movl %edx,-16(%edi)
	movl %ecx,-12(%edi)
	addl $_s1aPN_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl 88(%esp),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -36(%edi),%eax
	movl %eax,16(%ebx)
	leal -17(%edi),%eax
	movl %eax,8(%ebx)
	leal -6(%edi),%esi
	jmp *(%ebp)
Lc1cAV:
	movl $60,904(%ebx)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdwzdczgzgze_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdwzdczgzgze_info - _CoreziShapeziInternal_zdwzdczgzgze_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfMonadShapezuzdczgzgze_closure
_CoreziShapeziInternal_zdfMonadShapezuzdczgzgze_closure:
	.long	_CoreziShapeziInternal_zdfMonadShapezuzdczgzgze_info
.text
	.align 2
_CoreziShapeziInternal_zdfMonadShapezuzdczgzgze_info_dsp:
.text
	.align 2
	.long	131087
	.long	0
	.long	15
.globl _CoreziShapeziInternal_zdfMonadShapezuzdczgzgze_info
_CoreziShapeziInternal_zdfMonadShapezuzdczgzgze_info:
Lc1cC2:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1cC8
Lc1cC9:
	movl 64(%esp),%eax
	addl $_c1cBZ_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1cBZ_info
Lc1cC0:
	jmp *(%esi)
Lc1cC8:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdfMonadShapezuzdczgzgze_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdfMonadShapezuzdczgzgze_info - _CoreziShapeziInternal_zdfMonadShapezuzdczgzgze_info_dsp
.text
	.align 2
_c1cBZ_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1cBZ_info:
Lc1cBZ:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1cC5_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %ecx,32(%ebx)
	movl 11(%esi),%eax
	movl %eax,24(%ebx)
	movl 7(%esi),%eax
	movl %eax,16(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	addl $4,%ebp
	jmp _CoreziShapeziInternal_zdwzdczgzgze_info
	.long  _c1cBZ_info - _c1cBZ_info_dsp
.text
	.align 2
_c1cC5_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cC5_info:
Lc1cC5:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1cCd
Lc1cCc:
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %esi,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cCd:
	movl $16,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cC5_info - _c1cC5_info_dsp
.data
	.align 2
.align 0
_r19eL_closure:
	.long	_r19eL_info
	.long	0
.text
	.align 2
_r19eL_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_r19eL_info)+4
	.long	65541
	.long	0
	.long	65551
_r19eL_info:
Lc1cCD:
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp _base_GHCziErr_error_info
	.long  _r19eL_info - _r19eL_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfMonadShapezuzdczgzg_closure
_CoreziShapeziInternal_zdfMonadShapezuzdczgzg_closure:
	.long	_CoreziShapeziInternal_zdfMonadShapezuzdczgzg_info
	.long	0
.text
	.align 2
_s1aQi_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1aQi_info:
Lc1cCX:
	movl 3(%esi),%esi
	andl $-8,%esi
	jmp *(%esi)
	.long  _s1aQi_info - _s1aQi_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdfMonadShapezuzdczgzg_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdfMonadShapezuzdczgzg_info)+8
	.long	131087
	.long	0
	.long	196623
.globl _CoreziShapeziInternal_zdfMonadShapezuzdczgzg_info
_CoreziShapeziInternal_zdfMonadShapezuzdczgzg_info:
Lc1cD0:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1cD1
Lc1cD2:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cD4
Lc1cD3:
	movl 64(%esp),%eax
	addl $_s1aQi_info-(1b)+0,%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdfMonadShape_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,8(%ebx)
	movl L_stg_ap_pp_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	leal -3(%edi),%eax
	movl %eax,-4(%ebp)
	addl $-12,%ebp
	jmp _base_GHCziBase_zgzgze_info
Lc1cD4:
	movl $8,904(%ebx)
Lc1cD1:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdfMonadShapezuzdczgzg_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdfMonadShapezuzdczgzg_info - _CoreziShapeziInternal_zdfMonadShapezuzdczgzg_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfMonadShape_closure
_CoreziShapeziInternal_zdfMonadShape_closure:
	.long	_base_GHCziBase_DZCMonad_static_info
	.long	_CoreziShapeziInternal_zdfApplicativeShape_closure+1
	.long	_CoreziShapeziInternal_zdfMonadShapezuzdczgzgze_closure+2
	.long	_CoreziShapeziInternal_zdfMonadShapezuzdczgzg_closure+2
	.long	_CoreziShapeziInternal_zdfApplicativeShapezuzdcpure_closure+1
	.long	_r19eL_closure+1
	.long	0
.data
	.align 2
.align 0
_r19eM_closure:
	.long	_r19eM_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1cDA_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	99
	.byte	116
	.byte	120
	.byte	44
	.byte	95
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	115
	.byte	97
	.byte	118
	.byte	101
	.byte	40
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_r19eM_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r19eM_info:
Lc1cDD:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cDV
Lc1cDW:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1cDz
Lc1cDy:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1cDB_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1cDA_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1cDz:
	jmp *(%esi)
Lc1cDV:
	jmp *-16(%ebx)
	.long  _r19eM_info - _r19eM_info_dsp
.text
	.align 2
_c1cDB_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cDB_info:
Lc1cDB:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1cDG_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cDB_info - _c1cDB_info_dsp
.text
	.align 2
_c1cDG_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cDG_info:
Lc1cDG:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cE0
Lc1cDZ:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1cDS_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1cE0:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cDG_info - _c1cDG_info_dsp
.text
	.align 2
_c1cDS_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cDS_info:
Lc1cDS:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cE4
Lc1cE3:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cE4:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cDS_info - _c1cDS_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfAffineShapezuf1_closure
_CoreziShapeziInternal_zdfAffineShapezuf1_closure:
	.long	_CoreziShapeziInternal_zdfAffineShapezuf1_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1cF8_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	99
	.byte	116
	.byte	120
	.byte	44
	.byte	95
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	114
	.byte	101
	.byte	115
	.byte	116
	.byte	111
	.byte	114
	.byte	101
	.byte	40
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_CoreziShapeziInternal_zdfAffineShapezuf1_info_dsp:
.text
	.align 2
	.long	0
	.long	22
.globl _CoreziShapeziInternal_zdfAffineShapezuf1_info
_CoreziShapeziInternal_zdfAffineShapezuf1_info:
Lc1cFb:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cFt
Lc1cFu:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1cF7
Lc1cF6:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1cF9_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1cF8_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1cF7:
	jmp *(%esi)
Lc1cFt:
	jmp *-16(%ebx)
	.long  _CoreziShapeziInternal_zdfAffineShapezuf1_info - _CoreziShapeziInternal_zdfAffineShapezuf1_info_dsp
.text
	.align 2
_c1cF9_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cF9_info:
Lc1cF9:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1cFe_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cF9_info - _c1cF9_info_dsp
.text
	.align 2
_c1cFe_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cFe_info:
Lc1cFe:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cFy
Lc1cFx:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1cFq_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1cFy:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cFe_info - _c1cFe_info_dsp
.text
	.align 2
_c1cFq_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cFq_info:
Lc1cFq:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cFC
Lc1cFB:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cFC:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cFq_info - _c1cFq_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfAffineShape1_closure
_CoreziShapeziInternal_zdfAffineShape1_closure:
	.long	_CoreziShapeziInternal_zdfAffineShape1_info
	.long	0
.text
	.align 2
_CoreziShapeziInternal_zdfAffineShape1_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdfAffineShape1_info)+16
	.long	262167
	.long	0
	.long	196623
.globl _CoreziShapeziInternal_zdfAffineShape1_info
_CoreziShapeziInternal_zdfAffineShape1_info:
Lc1cGH:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1cGQ
Lc1cGR:
	movl 64(%esp),%eax
	addl $_c1cGE_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1cGE_info
Lc1cGF:
	jmp *(%esi)
Lc1cGQ:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdfAffineShape1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdfAffineShape1_info - _CoreziShapeziInternal_zdfAffineShape1_info_dsp
.text
	.align 2
_c1cGE_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1cGE_info)+20
	.long	1
	.long	65568
_c1cGE_info:
Lc1cGE:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1cGK_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl 3(%esi),%ecx
	movl L_CoreziShapeziInternal_zdfAffineShapezuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %ecx,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1cGK_info
Lc1cGL:
	jmp *(%esi)
	.long  _c1cGE_info - _c1cGE_info_dsp
.text
	.align 2
_c1cGK_info_dsp:
.text
	.align 2
	.long	66
	.long	32
_c1cGK_info:
Lc1cGK:
	call 1f
1:	popl	%eax
	addl $_c1cGP_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 8(%ebp),%esi
	movl %eax,8(%ebp)
	testw $7,%si
	jne _c1cGP_info
Lc1cGU:
	jmp *(%esi)
	.long  _c1cGK_info - _c1cGK_info_dsp
.text
	.align 2
_c1cGP_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1cGP_info:
Lc1cGP:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
	addl $_c1cH3_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl 4(%ebp),%eax
	addl $8,%ebp
	movl 3(%esi),%edx
	movl %ecx,64(%esp)
	movl 872(%ebx),%ecx
	movl %eax,76(%esp)
	movl 20(%ecx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %edx,88(%esp)
	leal 4(%edi),%edx
	movl %edx,8(%eax)
	movl 100(%ecx),%edx
	movl %edx,100(%esp)
	movl 104(%ecx),%edx
	movl %edx,112(%esp)
	leal 4(%edi),%edx
	subl (%eax),%edx
	xorl %eax,%eax
	movl %eax,124(%esp)
	movl 100(%esp),%eax
	subl %edx,%eax
	movl 112(%esp),%edx
	movl %eax,136(%esp)
	movl 124(%esp),%eax
	sbbl %eax,%edx
	movl 136(%esp),%eax
	movl %eax,100(%ecx)
	movl %edx,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	movl 88(%esp),%ecx
	pushl %ecx
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L___app2$stub
	addl $12,%esp
	subl $8,%esp
	movl 156(%esp),%ecx
	pushl %ecx
	movl %eax,172(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,172(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,184(%esp)
	movl %eax,%ecx
	movl %edx,196(%esp)
	movl 184(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 172(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,208(%esp)
	movl 196(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 208(%esp),%ecx
	adcl %eax,%ecx
	movl 172(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 160(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1cGP_info - _c1cGP_info_dsp
.text
	.align 2
_c1cH3_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cH3_info:
Lc1cH3:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1cH3_info - _c1cH3_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwzdcaffine_closure
_CoreziShapeziInternal_zdwzdcaffine_closure:
	.long	_CoreziShapeziInternal_zdwzdcaffine_info
	.long	0
.text
	.align 2
.globl _CoreziShapeziInternal_zdwzdcaffine_slow
_CoreziShapeziInternal_zdwzdcaffine_slow:
Lc1cI3:
	movl 16(%ebp),%eax
	movl %eax,40(%ebx)
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl (%ebp),%eax
	movl %eax,8(%ebx)
	addl $20,%ebp
	jmp _CoreziShapeziInternal_zdwzdcaffine_info
.text
	.align 2
_s1aSB_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1aSB_info)+16
	.long	262167
	.long	1
	.long	65546
_s1aSB_info:
Lc1cIw:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl %ecx,32(%ebx)
	movl 16(%ebx),%ecx
	movl %ecx,24(%ebx)
	movl L_CoreziShapeziInternal_zdfAffineShape1_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	addl $4,%eax
	movl %eax,16(%ebx)
	movl (%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
	.long  _s1aSB_info - _s1aSB_info_dsp
.text
	.align 2
_s1aSC_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1aSC_info)+16
	.long	262167
	.long	2
	.long	65548
_s1aSC_info:
Lc1cIz:
	call 1f
1:	popl	%eax
	addl $8,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1cID
Lc1cIC:
	movl %eax,64(%esp)
	movl (%esi),%eax
	movl %eax,76(%esp)
	movl 4(%esi),%eax
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_s1aSB_info-(1b)+0,%eax
	movl %eax,-4(%edi)
	movl 88(%esp),%eax
	movl %eax,(%edi)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl %edi,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
Lc1cID:
	movl $8,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aSC_info - _s1aSC_info_dsp
.text
	.align 2
_s1aSD_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1aSD_info)+16
	.long	262167
	.long	3
	.long	65545
_s1aSD_info:
Lc1cIE:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1cII
Lc1cIH:
	movl %eax,64(%esp)
	movl (%esi),%eax
	movl %eax,76(%esp)
	movl 4(%esi),%eax
	movl %eax,88(%esp)
	movl 8(%esi),%eax
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	addl $_s1aSC_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl 88(%esp),%eax
	movl %eax,-4(%edi)
	movl 100(%esp),%eax
	movl %eax,(%edi)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	leal -4(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
Lc1cII:
	movl $12,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aSD_info - _s1aSD_info_dsp
.text
	.align 2
_s1aSE_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1aSE_info)+16
	.long	262167
	.long	4
	.long	65545
_s1aSE_info:
Lc1cIJ:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1cIN
Lc1cIM:
	movl %eax,64(%esp)
	movl (%esi),%eax
	movl %eax,76(%esp)
	movl 4(%esi),%eax
	movl %eax,88(%esp)
	movl 8(%esi),%eax
	movl %eax,100(%esp)
	movl 12(%esi),%eax
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1aSD_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 88(%esp),%eax
	movl %eax,-8(%edi)
	movl 100(%esp),%eax
	movl %eax,-4(%edi)
	movl 112(%esp),%eax
	movl %eax,(%edi)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	leal -8(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
Lc1cIN:
	movl $16,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aSE_info - _s1aSE_info_dsp
.text
	.align 2
_s1aSF_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1aSF_info)+16
	.long	262167
	.long	5
	.long	65545
_s1aSF_info:
Lc1cIO:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1cIS
Lc1cIR:
	movl %eax,64(%esp)
	movl (%esi),%eax
	movl %eax,76(%esp)
	movl 4(%esi),%eax
	movl %eax,88(%esp)
	movl 8(%esi),%eax
	movl %eax,100(%esp)
	movl 12(%esi),%eax
	movl %eax,112(%esp)
	movl 16(%esi),%eax
	movl %eax,124(%esp)
	movl 64(%esp),%eax
	addl $_s1aSE_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 88(%esp),%eax
	movl %eax,-12(%edi)
	movl 100(%esp),%eax
	movl %eax,-8(%edi)
	movl 112(%esp),%eax
	movl %eax,-4(%edi)
	movl 124(%esp),%eax
	movl %eax,(%edi)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	leal -12(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
Lc1cIS:
	movl $20,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aSF_info - _s1aSF_info_dsp
.text
	.align 2
_s1aSG_info_dsp:
.text
	.align 2
	.long	196623
	.long	2
	.long	12
_s1aSG_info:
Lc1cIY:
	movl 16(%ebx),%eax
	movl %eax,32(%ebx)
	movl 8(%ebx),%eax
	movl %eax,24(%ebx)
	movl 5(%esi),%eax
	movl %eax,16(%ebx)
	movl 1(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
	.long  _s1aSG_info - _s1aSG_info_dsp
.text
	.align 2
_s1aRc_info_dsp:
.text
	.align 2
	.long	4
	.long	16
_s1aRc_info:
Lc1cLL:
	call 1f
1:	popl	%eax
	leal -52(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cMd
Lc1cMe:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1cLI_info-(1b)+0,%eax
	movl %eax,-28(%ebp)
	movl 12(%esi),%eax
	movl 20(%esi),%ecx
	movl 24(%esi),%edx
	movl 16(%esi),%esi
	movl %eax,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl %edx,-16(%ebp)
	addl $-28,%ebp
	testw $7,%si
	jne _c1cLI_info
Lc1cLJ:
	jmp *(%esi)
Lc1cMd:
	jmp *-16(%ebx)
	.long  _s1aRc_info - _s1aRc_info_dsp
.text
	.align 2
_c1cLI_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1cLI_info:
Lc1cLI:
	call 1f
1:	popl	%eax
	addl $_c1cLO_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 8(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1cMl
Lc1cLP:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1cMl:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1cLO_info
	.long  _c1cLI_info - _c1cLI_info_dsp
.text
	.align 2
_c1cLO_info_dsp:
.text
	.align 2
	.long	1478
	.long	32
_c1cLO_info:
Lc1cLO:
	call 1f
1:	popl	%eax
	addl $_c1cLT_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 16(%ebp),%esi
#	gstsd %fake0,16(%ebp)
	fstl 16(%ebp)
	testw $7,%si
	jne Lu1cMn
Lc1cLU:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1cMn:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1cLT_info
	.long  _c1cLO_info - _c1cLO_info_dsp
.text
	.align 2
_c1cLT_info_dsp:
.text
	.align 2
	.long	1990
	.long	32
_c1cLT_info:
Lc1cLT:
	call 1f
1:	popl	%eax
	addl $_c1cLY_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 24(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1cMo
Lc1cLZ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1cMo:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1cLY_info
	.long  _c1cLT_info - _c1cLT_info_dsp
.text
	.align 2
_c1cLY_info_dsp:
.text
	.align 2
	.long	32713
	.long	32
_c1cLY_info:
Lc1cLY:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cMk
Lc1cMj:
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gldsd 28(%ebp),%fake1
	fldl 28(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gldsd 3(%esi),%fake2
	fldl 3(%esi) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gsubt %fake0,%fake1,%fake0
	#GSUB-xxxcase1
	fld %st(1) ; fsubrp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $40,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1cMk:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cLY_info - _c1cLY_info_dsp
.text
	.align 2
_s1aS8_info_dsp:
.text
	.align 2
	.long	7
	.long	16
_s1aS8_info:
Lc1cMw:
	call 1f
1:	popl	%eax
	leal -76(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cNs
Lc1cNt:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1cMt_info-(1b)+0,%eax
	movl %eax,-40(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 24(%esi),%edx
	movl %eax,64(%esp)
	movl 28(%esi),%eax
	movl %ecx,76(%esp)
	movl 32(%esi),%ecx
	movl %edx,88(%esp)
	movl 36(%esi),%edx
	movl 20(%esi),%esi
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	movl %eax,-36(%ebp)
	movl 76(%esp),%eax
	movl %eax,-32(%ebp)
	movl 88(%esp),%eax
	movl %eax,-28(%ebp)
	movl 100(%esp),%eax
	movl %eax,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl %edx,-16(%ebp)
	addl $-40,%ebp
	testw $7,%si
	jne _c1cMt_info
Lc1cMu:
	jmp *(%esi)
Lc1cNs:
	jmp *-16(%ebx)
	.long  _s1aS8_info - _s1aS8_info_dsp
.text
	.align 2
_c1cMt_info_dsp:
.text
	.align 2
	.long	6
	.long	32
_c1cMt_info:
Lc1cMt:
	call 1f
1:	popl	%eax
	addl $_c1cMz_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 20(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1cND
Lc1cMA:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1cND:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1cMz_info
	.long  _c1cMt_info - _c1cMt_info_dsp
.text
	.align 2
_c1cMz_info_dsp:
.text
	.align 2
	.long	8649
	.long	32
_c1cMz_info:
Lc1cMz:
	call 1f
1:	popl	%eax
	addl $_c1cME_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 20(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1cNF
Lc1cMF:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1cNF:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1cME_info
	.long  _c1cMz_info - _c1cMz_info_dsp
.text
	.align 2
_c1cME_info_dsp:
.text
	.align 2
	.long	77772
	.long	32
_c1cME_info:
Lc1cME:
	call 1f
1:	popl	%eax
	addl $_c1cMJ_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 40(%ebp),%esi
#	gstsd %fake0,40(%ebp)
	fstl 40(%ebp)
	testw $7,%si
	jne Lu1cNG
Lc1cMK:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1cNG:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1cMJ_info
	.long  _c1cME_info - _c1cME_info_dsp
.text
	.align 2
_c1cMJ_info_dsp:
.text
	.align 2
	.long	110540
	.long	32
_c1cMJ_info:
Lc1cMJ:
	call 1f
1:	popl	%eax
	addl $_c1cMO_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 36(%ebp),%esi
#	gstsd %fake0,32(%ebp)
	fstl 32(%ebp)
	testw $7,%si
	jne Lu1cNH
Lc1cMP:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1cNH:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1cMO_info
	.long  _c1cMJ_info - _c1cMJ_info_dsp
.text
	.align 2
_c1cMO_info_dsp:
.text
	.align 2
	.long	126924
	.long	32
_c1cMO_info:
Lc1cMO:
	call 1f
1:	popl	%eax
	addl $_c1cMT_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 28(%ebp),%esi
#	gstsd %fake0,24(%ebp)
	fstl 24(%ebp)
	testw $7,%si
	jne Lu1cNI
Lc1cMU:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1cNI:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1cMT_info
	.long  _c1cMO_info - _c1cMO_info_dsp
.text
	.align 2
_c1cMT_info_dsp:
.text
	.align 2
	.long	131020
	.long	32
_c1cMT_info:
Lc1cMT:
	call 1f
1:	popl	%eax
	addl $_c1cMY_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 48(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1cNJ
Lc1cMZ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1cNJ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1cMY_info
	.long  _c1cMT_info - _c1cMT_info_dsp
.text
	.align 2
_c1cMY_info_dsp:
.text
	.align 2
	.long	2097103
	.long	32
_c1cMY_info:
Lc1cMY:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cNC
Lc1cNB:
#	gldsd 28(%ebp),%fake0
	fldl 28(%ebp) ; fstp %st(1)
#	gldsd 44(%ebp),%fake1
	fldl 44(%ebp) ; fstp %st(2)
#	gldsd 16(%ebp),%fake2
	fldl 16(%ebp) ; fstp %st(3)
#	gmult %fake0,%fake2,%fake2
	#GMUL-xxxcase2
	fld %st(0) ; fmulp %st(0),%st(3)
#	gldsd 52(%ebp),%fake3
	fldl 52(%ebp) ; fstp %st(4)
#	gmult %fake0,%fake3,%fake0
	#GMUL-xxxcase1
	fld %st(3) ; fmulp %st(0),%st(1)
#	gsubt %fake2,%fake0,%fake0
	#GSUB-xxxcase2
	fld %st(2) ; fsubp %st(0),%st(1)
#	gldsd 36(%ebp),%fake2
	fldl 36(%ebp) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake2
	#GMUL-xxxcase2
	fld %st(1) ; fmulp %st(0),%st(3)
#	gsubt %fake0,%fake2,%fake0
	#GSUB-xxxcase1
	fld %st(2) ; fsubrp %st(0),%st(1)
#	gldsd 4(%ebp),%fake2
	fldl 4(%ebp) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gdivt %fake0,%fake1,%fake0
	#GDIV-xxxcase1
	fld %st(1) ; fdivrp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $64,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1cNC:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cMY_info - _c1cMY_info_dsp
.text
	.align 2
_s1aRL_info_dsp:
.text
	.align 2
	.long	7
	.long	16
_s1aRL_info:
Lc1cNR:
	call 1f
1:	popl	%eax
	leal -76(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cOQ
Lc1cOR:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1cNO_info-(1b)+0,%eax
	movl %eax,-40(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 24(%esi),%edx
	movl %eax,64(%esp)
	movl 28(%esi),%eax
	movl %ecx,76(%esp)
	movl 32(%esi),%ecx
	movl %edx,88(%esp)
	movl 36(%esi),%edx
	movl 20(%esi),%esi
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	movl %eax,-36(%ebp)
	movl 76(%esp),%eax
	movl %eax,-32(%ebp)
	movl 88(%esp),%eax
	movl %eax,-28(%ebp)
	movl 100(%esp),%eax
	movl %eax,-24(%ebp)
	movl %ecx,-20(%ebp)
	movl %edx,-16(%ebp)
	addl $-40,%ebp
	testw $7,%si
	jne _c1cNO_info
Lc1cNP:
	jmp *(%esi)
Lc1cOQ:
	jmp *-16(%ebx)
	.long  _s1aRL_info - _s1aRL_info_dsp
.text
	.align 2
_c1cNO_info_dsp:
.text
	.align 2
	.long	6
	.long	32
_c1cNO_info:
Lc1cNO:
	call 1f
1:	popl	%eax
	addl $_c1cNU_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 20(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1cP1
Lc1cNV:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1cP1:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1cNU_info
	.long  _c1cNO_info - _c1cNO_info_dsp
.text
	.align 2
_c1cNU_info_dsp:
.text
	.align 2
	.long	8649
	.long	32
_c1cNU_info:
Lc1cNU:
	call 1f
1:	popl	%eax
	addl $_c1cNZ_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 20(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1cP3
Lc1cO0:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1cP3:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1cNZ_info
	.long  _c1cNU_info - _c1cNU_info_dsp
.text
	.align 2
_c1cNZ_info_dsp:
.text
	.align 2
	.long	77772
	.long	32
_c1cNZ_info:
Lc1cNZ:
	call 1f
1:	popl	%eax
	addl $_c1cO4_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 40(%ebp),%esi
#	gstsd %fake0,40(%ebp)
	fstl 40(%ebp)
	testw $7,%si
	jne Lu1cP4
Lc1cO5:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1cP4:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1cO4_info
	.long  _c1cNZ_info - _c1cNZ_info_dsp
.text
	.align 2
_c1cO4_info_dsp:
.text
	.align 2
	.long	110540
	.long	32
_c1cO4_info:
Lc1cO4:
	call 1f
1:	popl	%eax
	addl $_c1cO9_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 36(%ebp),%esi
#	gstsd %fake0,32(%ebp)
	fstl 32(%ebp)
	testw $7,%si
	jne Lu1cP5
Lc1cOa:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1cP5:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1cO9_info
	.long  _c1cO4_info - _c1cO4_info_dsp
.text
	.align 2
_c1cO9_info_dsp:
.text
	.align 2
	.long	126924
	.long	32
_c1cO9_info:
Lc1cO9:
	call 1f
1:	popl	%eax
	addl $_c1cOe_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 28(%ebp),%esi
#	gstsd %fake0,24(%ebp)
	fstl 24(%ebp)
	testw $7,%si
	jne Lu1cP6
Lc1cOf:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1cP6:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1cOe_info
	.long  _c1cO9_info - _c1cO9_info_dsp
.text
	.align 2
_c1cOe_info_dsp:
.text
	.align 2
	.long	131020
	.long	32
_c1cOe_info:
Lc1cOe:
	call 1f
1:	popl	%eax
	addl $_c1cOj_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 48(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1cP7
Lc1cOk:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1cP7:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1cOj_info
	.long  _c1cOe_info - _c1cOe_info_dsp
.text
	.align 2
_c1cOj_info_dsp:
.text
	.align 2
	.long	2097103
	.long	32
_c1cOj_info:
Lc1cOj:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cP0
Lc1cOZ:
#	gldsd 28(%ebp),%fake0
	fldl 28(%ebp) ; fstp %st(1)
#	gldsd 44(%ebp),%fake1
	fldl 44(%ebp) ; fstp %st(2)
#	gldsd 16(%ebp),%fake2
	fldl 16(%ebp) ; fstp %st(3)
#	gmult %fake0,%fake2,%fake2
	#GMUL-xxxcase2
	fld %st(0) ; fmulp %st(0),%st(3)
#	gnegt %fake2,%fake2
	fld %st(2) ; fchs ; fstp %st(3)
#	gldsd 52(%ebp),%fake3
	fldl 52(%ebp) ; fstp %st(4)
#	gmult %fake0,%fake3,%fake0
	#GMUL-xxxcase1
	fld %st(3) ; fmulp %st(0),%st(1)
#	gaddt %fake2,%fake0,%fake0
	#GADD-xxxcase2
	fld %st(2) ; faddp %st(0),%st(1)
#	gldsd 36(%ebp),%fake2
	fldl 36(%ebp) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake2
	#GMUL-xxxcase2
	fld %st(1) ; fmulp %st(0),%st(3)
#	gaddt %fake0,%fake2,%fake0
	#GADD-xxxcase1
	fld %st(2) ; faddp %st(0),%st(1)
#	gldsd 4(%ebp),%fake2
	fldl 4(%ebp) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gsubt %fake0,%fake1,%fake0
	#GSUB-xxxcase1
	fld %st(1) ; fsubrp %st(0),%st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gdivt %fake0,%fake1,%fake0
	#GDIV-xxxcase1
	fld %st(1) ; fdivrp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $64,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1cP0:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cOj_info - _c1cOj_info_dsp
.text
	.align 2
_s1aSa_info_dsp:
.text
	.align 2
	.long	65541
	.long	8
	.long	9
_s1aSa_info:
Lc1cP9:
	call 1f
1:	popl	%eax
	addl $120,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1cPd
Lc1cPc:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 11(%esi),%edx
	movl %eax,88(%esp)
	movl 15(%esi),%eax
	movl %edx,100(%esp)
	movl 19(%esi),%edx
	movl %eax,112(%esp)
	movl 23(%esi),%eax
	movl %edx,124(%esp)
	movl 27(%esi),%edx
	movl %eax,136(%esp)
	movl 31(%esi),%eax
	movl %edx,148(%esp)
	movl 64(%esp),%edx
	addl $_s1aRc_info-(1b)+0,%edx
	movl %edx,-116(%edi)
	movl 112(%esp),%edx
	movl %edx,-104(%edi)
	movl 124(%esp),%edx
	movl %edx,-100(%edi)
	movl 148(%esp),%edx
	movl %edx,-96(%edi)
	movl %eax,-92(%edi)
	movl 64(%esp),%edx
	addl $_s1aS8_info-(1b)+0,%edx
	movl %edx,-88(%edi)
	movl 88(%esp),%edx
	movl %edx,-76(%edi)
	movl 100(%esp),%edx
	movl %edx,-72(%edi)
	movl 112(%esp),%edx
	movl %edx,-68(%edi)
	movl 136(%esp),%edx
	movl %edx,-64(%edi)
	movl 148(%esp),%edx
	movl %edx,-60(%edi)
	movl %ecx,-56(%edi)
	leal -116(%edi),%edx
	movl %edx,-52(%edi)
	movl %edx,160(%esp)
	movl 64(%esp),%edx
	addl $_s1aRL_info-(1b)+0,%edx
	movl %edx,-48(%edi)
	movl 88(%esp),%edx
	movl %edx,-36(%edi)
	movl 100(%esp),%edx
	movl %edx,-32(%edi)
	movl 124(%esp),%edx
	movl %edx,-28(%edi)
	movl 136(%esp),%edx
	movl %edx,-24(%edi)
	movl %eax,-20(%edi)
	movl %ecx,-16(%edi)
	movl 160(%esp),%eax
	movl %eax,-12(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -48(%edi),%eax
	movl %eax,-4(%edi)
	leal -88(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 76(%esp),%eax
	movl %eax,%esi
	jmp _stg_ap_p_fast
Lc1cPd:
	movl $120,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aSa_info - _s1aSa_info_dsp
.text
	.align 2
_s1aSb_info_dsp:
.text
	.align 2
	.long	131077
	.long	8
	.long	9
_s1aSb_info:
Lc1cPe:
	call 1f
1:	popl	%eax
	addl $36,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1cPi
Lc1cPh:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 22(%esi),%eax
	movl %edx,124(%esp)
	movl 26(%esi),%edx
	movl %eax,136(%esp)
	movl 30(%esi),%eax
	movl %edx,148(%esp)
	movl 64(%esp),%edx
	addl $_s1aSa_info-(1b)+0,%edx
	movl %edx,-32(%edi)
	movl 88(%esp),%edx
	movl %edx,-28(%edi)
	movl 100(%esp),%edx
	movl %edx,-24(%edi)
	movl 112(%esp),%edx
	movl %edx,-20(%edi)
	movl 124(%esp),%edx
	movl %edx,-16(%edi)
	movl 136(%esp),%edx
	movl %edx,-12(%edi)
	movl 148(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -31(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1cPi:
	movl $36,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aSb_info - _s1aSb_info_dsp
.text
	.align 2
_s1aSc_info_dsp:
.text
	.align 2
	.long	131077
	.long	8
	.long	9
_s1aSc_info:
Lc1cPj:
	call 1f
1:	popl	%eax
	addl $36,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1cPn
Lc1cPm:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 22(%esi),%eax
	movl %edx,124(%esp)
	movl 26(%esi),%edx
	movl %eax,136(%esp)
	movl 30(%esi),%eax
	movl %edx,148(%esp)
	movl 64(%esp),%edx
	addl $_s1aSb_info-(1b)+0,%edx
	movl %edx,-32(%edi)
	movl 88(%esp),%edx
	movl %edx,-28(%edi)
	movl 100(%esp),%edx
	movl %edx,-24(%edi)
	movl 112(%esp),%edx
	movl %edx,-20(%edi)
	movl 124(%esp),%edx
	movl %edx,-16(%edi)
	movl 136(%esp),%edx
	movl %edx,-12(%edi)
	movl 148(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -30(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1cPn:
	movl $36,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aSc_info - _s1aSc_info_dsp
.text
	.align 2
_s1aSd_info_dsp:
.text
	.align 2
	.long	131077
	.long	8
	.long	9
_s1aSd_info:
Lc1cPo:
	call 1f
1:	popl	%eax
	addl $36,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1cPs
Lc1cPr:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 22(%esi),%eax
	movl %edx,124(%esp)
	movl 26(%esi),%edx
	movl %eax,136(%esp)
	movl 30(%esi),%eax
	movl %edx,148(%esp)
	movl 64(%esp),%edx
	addl $_s1aSc_info-(1b)+0,%edx
	movl %edx,-32(%edi)
	movl 88(%esp),%edx
	movl %edx,-28(%edi)
	movl 100(%esp),%edx
	movl %edx,-24(%edi)
	movl 112(%esp),%edx
	movl %edx,-20(%edi)
	movl 124(%esp),%edx
	movl %edx,-16(%edi)
	movl 136(%esp),%edx
	movl %edx,-12(%edi)
	movl 148(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -30(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1cPs:
	movl $36,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aSd_info - _s1aSd_info_dsp
.text
	.align 2
_s1aSe_info_dsp:
.text
	.align 2
	.long	131077
	.long	8
	.long	9
_s1aSe_info:
Lc1cPt:
	call 1f
1:	popl	%eax
	addl $36,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1cPx
Lc1cPw:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 22(%esi),%eax
	movl %edx,124(%esp)
	movl 26(%esi),%edx
	movl %eax,136(%esp)
	movl 30(%esi),%eax
	movl %edx,148(%esp)
	movl 64(%esp),%edx
	addl $_s1aSd_info-(1b)+0,%edx
	movl %edx,-32(%edi)
	movl 88(%esp),%edx
	movl %edx,-28(%edi)
	movl 100(%esp),%edx
	movl %edx,-24(%edi)
	movl 112(%esp),%edx
	movl %edx,-20(%edi)
	movl 124(%esp),%edx
	movl %edx,-16(%edi)
	movl 136(%esp),%edx
	movl %edx,-12(%edi)
	movl 148(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -30(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1cPx:
	movl $36,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aSe_info - _s1aSe_info_dsp
.text
	.align 2
_s1aSf_info_dsp:
.text
	.align 2
	.long	131077
	.long	8
	.long	9
_s1aSf_info:
Lc1cPy:
	call 1f
1:	popl	%eax
	addl $36,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1cPC
Lc1cPB:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 22(%esi),%eax
	movl %edx,124(%esp)
	movl 26(%esi),%edx
	movl %eax,136(%esp)
	movl 30(%esi),%eax
	movl %edx,148(%esp)
	movl 64(%esp),%edx
	addl $_s1aSe_info-(1b)+0,%edx
	movl %edx,-32(%edi)
	movl 88(%esp),%edx
	movl %edx,-28(%edi)
	movl 100(%esp),%edx
	movl %edx,-24(%edi)
	movl 112(%esp),%edx
	movl %edx,-20(%edi)
	movl 124(%esp),%edx
	movl %edx,-16(%edi)
	movl 136(%esp),%edx
	movl %edx,-12(%edi)
	movl 148(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -30(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1cPC:
	movl $36,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aSf_info - _s1aSf_info_dsp
.text
	.align 2
_s1aSg_info_dsp:
.text
	.align 2
	.long	131077
	.long	7
	.long	9
_s1aSg_info:
Lc1cPD:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -32(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1cPE
Lc1cPF:
	addl $_c1cL5_info-(1b)+0,%eax
	movl %eax,-32(%ebp)
	movl 2(%esi),%eax
	movl 6(%esi),%edx
	movl %eax,64(%esp)
	movl 10(%esi),%eax
	movl %edx,76(%esp)
	movl 14(%esi),%edx
	movl %eax,88(%esp)
	movl 18(%esi),%eax
	movl %edx,100(%esp)
	movl 22(%esi),%edx
	movl %eax,112(%esp)
	movl 26(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 100(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 112(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-32,%ebp
	testw $7,%si
	jne _c1cL5_info
Lc1cL6:
	jmp *(%esi)
Lc1cPE:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aSg_info - _s1aSg_info_dsp
.text
	.align 2
_c1cL5_info_dsp:
.text
	.align 2
	.long	7
	.long	32
_c1cL5_info:
Lc1cL5:
	call 1f
1:	popl	%eax
	addl $36,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cPI
Lc1cPH:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_s1aSf_info-(1b)+0,%eax
	movl %eax,-32(%edi)
	movl 8(%ebp),%eax
	movl %eax,-28(%edi)
	movl 12(%ebp),%eax
	movl %eax,-24(%edi)
	movl 16(%ebp),%eax
	movl %eax,-20(%edi)
	movl 20(%ebp),%eax
	movl %eax,-16(%edi)
	movl 24(%ebp),%eax
	movl %eax,-12(%edi)
	movl 28(%ebp),%eax
	movl %eax,-8(%edi)
	movl %ecx,-4(%edi)
	movl %edx,(%edi)
	leal -30(%edi),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $32,%ebp
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1cPI:
	movl $36,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cL5_info - _c1cL5_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdwzdcaffine_info_dsp:
.text
	.align 2
	.long	_CoreziShapeziInternal_zdwzdcaffine_slow-(_CoreziShapeziInternal_zdwzdcaffine_info)+0
	.long	7
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdwzdcaffine_info)+16
	.long	458752
	.long	0
	.long	327695
.globl _CoreziShapeziInternal_zdwzdcaffine_info
_CoreziShapeziInternal_zdwzdcaffine_info:
Lc1cPK:
	call 1f
1:	popl	%eax
	addl $68,%edi
	movl 40(%ebx),%ecx
	movl 32(%ebx),%edx
	movl %eax,64(%esp)
	movl 24(%ebx),%eax
	movl %eax,76(%esp)
	movl 16(%ebx),%eax
	movl %eax,88(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1cPO
Lc1cPN:
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	addl $_s1aSF_info-(1b)+0,%eax
	movl %eax,-64(%edi)
	movl 88(%esp),%eax
	movl %eax,-60(%edi)
	movl 76(%esp),%eax
	movl %eax,-56(%edi)
	movl %edx,-52(%edi)
	movl %ecx,-48(%edi)
	movl (%ebp),%eax
	movl %eax,-44(%edi)
	movl %edx,112(%esp)
	movl 64(%esp),%edx
	addl $_s1aSG_info-(1b)+0,%edx
	movl %edx,-40(%edi)
	movl 100(%esp),%edx
	movl %edx,-36(%edi)
	leal -60(%edi),%edx
	movl %edx,-32(%edi)
	movl 64(%esp),%edx
	addl $_s1aSg_info-(1b)+0,%edx
	movl %edx,-28(%edi)
	movl 100(%esp),%edx
	movl %edx,-24(%edi)
	movl 88(%esp),%edx
	movl %edx,-20(%edi)
	movl 76(%esp),%edx
	movl %edx,-16(%edi)
	movl 112(%esp),%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl %eax,-4(%edi)
	movl 4(%ebp),%eax
	movl %eax,(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,16(%ebx)
	leal -37(%edi),%eax
	movl %eax,8(%ebx)
	leal -26(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1cPO:
	movl $68,904(%ebx)
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdwzdcaffine_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl 100(%esp),%eax
	movl %eax,-20(%ebp)
	movl 88(%esp),%eax
	movl %eax,-16(%ebp)
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-20,%ebp
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdwzdcaffine_info - _CoreziShapeziInternal_zdwzdcaffine_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfAffineShapezuzdcaffine_closure
_CoreziShapeziInternal_zdfAffineShapezuzdcaffine_closure:
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdcaffine_info
	.long	0
.text
	.align 2
.globl _CoreziShapeziInternal_zdfAffineShapezuzdcaffine_slow
_CoreziShapeziInternal_zdfAffineShapezuzdcaffine_slow:
Lc1cUa:
	movl 16(%ebp),%eax
	movl %eax,40(%ebx)
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl (%ebp),%eax
	movl %eax,8(%ebx)
	addl $20,%ebp
	jmp _CoreziShapeziInternal_zdfAffineShapezuzdcaffine_info
.text
	.align 2
_CoreziShapeziInternal_zdfAffineShapezuzdcaffine_info_dsp:
.text
	.align 2
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdcaffine_slow-(_CoreziShapeziInternal_zdfAffineShapezuzdcaffine_info)+0
	.long	7
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdfAffineShapezuzdcaffine_info)+24
	.long	458752
	.long	0
	.long	196623
.globl _CoreziShapeziInternal_zdfAffineShapezuzdcaffine_info
_CoreziShapeziInternal_zdfAffineShapezuzdcaffine_info:
Lc1cUh:
	call 1f
1:	popl	%eax
	movl 40(%ebx),%ecx
	movl 32(%ebx),%edx
	movl %eax,64(%esp)
	movl 24(%ebx),%eax
	movl %eax,76(%esp)
	movl 16(%ebx),%eax
	movl %eax,88(%esp)
	movl 8(%ebx),%eax
	movl %eax,100(%esp)
	leal -20(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1cUn
Lc1cUo:
	movl 64(%esp),%eax
	addl $_c1cUe_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 4(%ebp),%esi
	movl 88(%esp),%eax
	movl %eax,-16(%ebp)
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	movl 100(%esp),%eax
	movl %eax,4(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _c1cUe_info
Lc1cUf:
	jmp *(%esi)
Lc1cUn:
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdfAffineShapezuzdcaffine_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl 100(%esp),%eax
	movl %eax,-20(%ebp)
	movl 88(%esp),%eax
	movl %eax,-16(%ebp)
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-20,%ebp
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdfAffineShapezuzdcaffine_info - _CoreziShapeziInternal_zdfAffineShapezuzdcaffine_info_dsp
.text
	.align 2
_c1cUe_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1cUe_info)+24
	.long	6
	.long	65568
_c1cUe_info:
Lc1cUe:
	call 1f
1:	popl	%eax
	movl 24(%ebp),%ecx
	addl $_c1cUk_info-(1b)+0,%eax
	movl %eax,24(%ebp)
	movl 16(%ebp),%eax
	movl %eax,40(%ebx)
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	movl 20(%ebp),%eax
	movl %eax,16(%ebp)
	movl 3(%esi),%eax
	movl %eax,20(%ebp)
	addl $16,%ebp
	jmp _CoreziShapeziInternal_zdwzdcaffine_info
	.long  _c1cUe_info - _c1cUe_info_dsp
.text
	.align 2
_c1cUk_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cUk_info:
Lc1cUk:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1cUs
Lc1cUr:
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %esi,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cUs:
	movl $16,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cUk_info - _c1cUk_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwzdctranslate_closure
_CoreziShapeziInternal_zdwzdctranslate_closure:
	.long	_CoreziShapeziInternal_zdwzdctranslate_info
	.long	0
.text
	.align 2
_s1aTm_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1aTm_info)+16
	.long	262167
	.long	1
	.long	65546
_s1aTm_info:
Lc1cVd:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl %ecx,32(%ebx)
	movl 16(%ebx),%ecx
	movl %ecx,24(%ebx)
	movl L_CoreziShapeziInternal_zdfAffineShape1_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	addl $4,%eax
	movl %eax,16(%ebx)
	movl (%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
	.long  _s1aTm_info - _s1aTm_info_dsp
.text
	.align 2
_s1aTn_info_dsp:
.text
	.align 2
	.long	196623
	.long	2
	.long	12
_s1aTn_info:
Lc1cVl:
	movl 16(%ebx),%eax
	movl %eax,32(%ebx)
	movl 8(%ebx),%eax
	movl %eax,24(%ebx)
	movl 5(%esi),%eax
	movl %eax,16(%ebx)
	movl 1(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
	.long  _s1aTn_info - _s1aTn_info_dsp
.text
	.align 2
_s1aTd_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1aTd_info:
Lc1cVZ:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cW0
Lc1cW1:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 16(%esi),%eax
	movl %eax,16(%ebx)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_minusDouble_info
Lc1cW0:
	jmp *-16(%ebx)
	.long  _s1aTd_info - _s1aTd_info_dsp
.text
	.align 2
_s1aTc_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1aTc_info:
Lc1cW9:
	call 1f
1:	popl	%eax
	leal -24(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1cWl
Lc1cWm:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1cW6_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 16(%esi),%eax
	movl 12(%esi),%esi
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _c1cW6_info
Lc1cW7:
	jmp *(%esi)
Lc1cWl:
	jmp *-16(%ebx)
	.long  _s1aTc_info - _s1aTc_info_dsp
.text
	.align 2
_c1cW6_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1cW6_info:
Lc1cW6:
	call 1f
1:	popl	%eax
	addl $_c1cWc_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1cWr
Lc1cWd:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1cWr:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1cWc_info
	.long  _c1cW6_info - _c1cW6_info_dsp
.text
	.align 2
_c1cWc_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1cWc_info:
Lc1cWc:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cWq
Lc1cWp:
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gsubt %fake0,%fake1,%fake0
	#GSUB-xxxcase1
	fld %st(1) ; fsubrp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1cWq:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cWc_info - _c1cWc_info_dsp
.text
	.align 2
_s1aTf_info_dsp:
.text
	.align 2
	.long	65541
	.long	4
	.long	9
_s1aTf_info:
Lc1cWu:
	call 1f
1:	popl	%eax
	addl $52,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1cWy
Lc1cWx:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 11(%esi),%edx
	movl %eax,88(%esp)
	movl 15(%esi),%eax
	movl %edx,100(%esp)
	movl 64(%esp),%edx
	addl $_s1aTd_info-(1b)+0,%edx
	movl %edx,-48(%edi)
	movl 100(%esp),%edx
	movl %edx,-36(%edi)
	movl %ecx,-32(%edi)
	movl 64(%esp),%ecx
	movl %ecx,%edx
	addl $_s1aTc_info-(1b)+0,%edx
	movl %edx,-28(%edi)
	movl 88(%esp),%edx
	movl %edx,-16(%edi)
	movl %eax,-12(%edi)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,-8(%edi)
	leal -28(%edi),%eax
	movl %eax,-4(%edi)
	leal -48(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 76(%esp),%eax
	movl %eax,%esi
	jmp _stg_ap_p_fast
Lc1cWy:
	movl $52,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aTf_info - _s1aTf_info_dsp
.text
	.align 2
_s1aTg_info_dsp:
.text
	.align 2
	.long	131077
	.long	4
	.long	9
_s1aTg_info:
Lc1cWz:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1cWD
Lc1cWC:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 64(%esp),%edx
	addl $_s1aTf_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	movl 88(%esp),%edx
	movl %edx,-12(%edi)
	movl 100(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -15(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1cWD:
	movl $20,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aTg_info - _s1aTg_info_dsp
.text
	.align 2
_s1aTh_info_dsp:
.text
	.align 2
	.long	131077
	.long	3
	.long	9
_s1aTh_info:
Lc1cWE:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -16(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1cWF
Lc1cWG:
	addl $_c1cVG_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 2(%esi),%eax
	movl 6(%esi),%edx
	movl %eax,64(%esp)
	movl 10(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _c1cVG_info
Lc1cVH:
	jmp *(%esi)
Lc1cWF:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aTh_info - _s1aTh_info_dsp
.text
	.align 2
_c1cVG_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1cVG_info:
Lc1cVG:
	call 1f
1:	popl	%eax
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1cWJ
Lc1cWI:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_s1aTg_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 8(%ebp),%eax
	movl %eax,-12(%edi)
	movl 12(%ebp),%eax
	movl %eax,-8(%edi)
	movl %ecx,-4(%edi)
	movl %edx,(%edi)
	leal -14(%edi),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $16,%ebp
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1cWJ:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cVG_info - _c1cVG_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdwzdctranslate_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdwzdctranslate_info)+16
	.long	196631
	.long	0
	.long	1114127
.globl _CoreziShapeziInternal_zdwzdctranslate_info
_CoreziShapeziInternal_zdwzdctranslate_info:
Lc1cWL:
	call 1f
1:	popl	%eax
	addl $36,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1cWP
Lc1cWO:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_s1aTm_info-(1b)+0,%eax
	movl %eax,-32(%edi)
	movl %edx,-28(%edi)
	movl 64(%esp),%eax
	addl $_s1aTn_info-(1b)+0,%eax
	movl %eax,-24(%edi)
	movl 76(%esp),%eax
	movl %eax,-20(%edi)
	leal -28(%edi),%eax
	movl %eax,-16(%edi)
	movl 64(%esp),%eax
	addl $_s1aTh_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,16(%ebx)
	leal -21(%edi),%eax
	movl %eax,8(%ebx)
	leal -10(%edi),%esi
	jmp *(%ebp)
Lc1cWP:
	movl $36,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdwzdctranslate_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdwzdctranslate_info - _CoreziShapeziInternal_zdwzdctranslate_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfAffineShapezuzdctranslate_closure
_CoreziShapeziInternal_zdfAffineShapezuzdctranslate_closure:
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdctranslate_info
	.long	0
.text
	.align 2
_CoreziShapeziInternal_zdfAffineShapezuzdctranslate_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdfAffineShapezuzdctranslate_info)+32
	.long	131087
	.long	0
	.long	196623
.globl _CoreziShapeziInternal_zdfAffineShapezuzdctranslate_info
_CoreziShapeziInternal_zdfAffineShapezuzdctranslate_info:
Lc1cYr:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1cYC
Lc1cYD:
	movl 64(%esp),%eax
	addl $_c1cYo_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1cYo_info
Lc1cYp:
	jmp *(%esi)
Lc1cYC:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdfAffineShapezuzdctranslate_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdfAffineShapezuzdctranslate_info - _CoreziShapeziInternal_zdfAffineShapezuzdctranslate_info_dsp
.text
	.align 2
_c1cYo_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1cYo_info)+32
	.long	1
	.long	65568
_c1cYo_info:
Lc1cYo:
	call 1f
1:	popl	%eax
	addl $_c1cYu_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl 4(%ebp),%esi
	movl %ecx,(%ebp)
	movl %eax,4(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1cYu_info
Lc1cYv:
	jmp *(%esi)
	.long  _c1cYo_info - _c1cYo_info_dsp
.text
	.align 2
_c1cYu_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1cYu_info)+32
	.long	2
	.long	65568
_c1cYu_info:
Lc1cYu:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
	addl $_c1cYz_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl 3(%esi),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $8,%ebp
	jmp _CoreziShapeziInternal_zdwzdctranslate_info
	.long  _c1cYu_info - _c1cYu_info_dsp
.text
	.align 2
_c1cYz_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1cYz_info:
Lc1cYz:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1cYI
Lc1cYH:
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %esi,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1cYI:
	movl $16,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1cYz_info - _c1cYz_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwzdcrotate_closure
_CoreziShapeziInternal_zdwzdcrotate_closure:
	.long	_CoreziShapeziInternal_zdwzdcrotate_info
	.long	0
.text
	.align 2
_s1aUb_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1aUb_info)+16
	.long	196623
	.long	1
	.long	65546
_s1aUb_info:
Lc1cZn:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl %ecx,32(%ebx)
	movl 8(%ebx),%ecx
	movl %ecx,24(%ebx)
	movl L_CoreziShapeziInternal_zdfAffineShape1_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	addl $4,%eax
	movl %eax,16(%ebx)
	movl 1(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
	.long  _s1aUb_info - _s1aUb_info_dsp
.text
	.align 2
_s1aU7_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1aU7_info:
Lc1d0E:
	call 1f
1:	popl	%eax
	leal -36(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1d1c
Lc1d1d:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1d0B_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 12(%esi),%esi
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1d0B_info
Lc1d0C:
	jmp *(%esi)
Lc1d1c:
	jmp *-16(%ebx)
	.long  _s1aU7_info - _s1aU7_info_dsp
.text
	.align 2
_c1d0B_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1d0B_info:
Lc1d0B:
	call 1f
1:	popl	%eax
	addl $_c1d0H_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 8(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1d1j
Lc1d0I:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1d1j:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1d0H_info
	.long  _c1d0B_info - _c1d0B_info_dsp
.text
	.align 2
_c1d0H_info_dsp:
.text
	.align 2
	.long	1477
	.long	32
_c1d0H_info:
Lc1d0H:
	call 1f
1:	popl	%eax
	addl $_c1d0M_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 16(%ebp),%esi
#	gstsd %fake0,16(%ebp)
	fstl 16(%ebp)
	testw $7,%si
	jne Lu1d1l
Lc1d0N:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1d1l:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1d0M_info
	.long  _c1d0H_info - _c1d0H_info_dsp
.text
	.align 2
_c1d0M_info_dsp:
.text
	.align 2
	.long	1989
	.long	32
_c1d0M_info:
Lc1d0M:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1d1i
Lc1d1h:
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gldsd 16(%ebp),%fake1
	fldl 16(%ebp) ; fstp %st(2)
#	gldsd 3(%esi),%fake2
	fldl 3(%esi) ; fstp %st(3)
#	gcossd %fake1,%fake3
	pushl %eax;
fld %st(1); fcos
	fnstsw %ax
	test   $0x400,%eax
	je     Ln1d2R
	ffree %st(7); fldpi
	fadd   %st(0),%st
	fxch   %st(1)
Ln1d2S:
	fprem1
	fnstsw %ax
	test   $0x400,%eax
	jne    Ln1d2S
	fstp   %st(1)
	fcos
Ln1d2R:
	popl %eax;
	fstp %st(4)
#	gsinsd %fake1,%fake1
	pushl %eax;
fld %st(1); fsin
	fnstsw %ax
	test   $0x400,%eax
	je     Ln1d2T
	ffree %st(7); fldpi
	fadd   %st(0),%st
	fxch   %st(1)
Ln1d2U:
	fprem1
	fnstsw %ax
	test   $0x400,%eax
	jne    Ln1d2U
	fstp   %st(1)
	fsin
Ln1d2T:
	popl %eax;
	fstp %st(2)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
#	gmult %fake2,%fake3,%fake1
	fld %st(2) ; fmul %st(4),%st(0) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $24,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1d1i:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1d0M_info - _c1d0M_info_dsp
.text
	.align 2
_s1aTU_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1aTU_info:
Lc1d1t:
	call 1f
1:	popl	%eax
	leal -36(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1d1Y
Lc1d1Z:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1d1q_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 12(%esi),%esi
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1d1q_info
Lc1d1r:
	jmp *(%esi)
Lc1d1Y:
	jmp *-16(%ebx)
	.long  _s1aTU_info - _s1aTU_info_dsp
.text
	.align 2
_c1d1q_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1d1q_info:
Lc1d1q:
	call 1f
1:	popl	%eax
	addl $_c1d1w_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 8(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1d25
Lc1d1x:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1d25:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1d1w_info
	.long  _c1d1q_info - _c1d1q_info_dsp
.text
	.align 2
_c1d1w_info_dsp:
.text
	.align 2
	.long	1477
	.long	32
_c1d1w_info:
Lc1d1w:
	call 1f
1:	popl	%eax
	addl $_c1d1B_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 16(%ebp),%esi
#	gstsd %fake0,16(%ebp)
	fstl 16(%ebp)
	testw $7,%si
	jne Lu1d27
Lc1d1C:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1d27:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1d1B_info
	.long  _c1d1w_info - _c1d1w_info_dsp
.text
	.align 2
_c1d1B_info_dsp:
.text
	.align 2
	.long	1989
	.long	32
_c1d1B_info:
Lc1d1B:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1d24
Lc1d23:
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gldsd 16(%ebp),%fake1
	fldl 16(%ebp) ; fstp %st(2)
#	gldsd 3(%esi),%fake2
	fldl 3(%esi) ; fstp %st(3)
#	gsinsd %fake1,%fake3
	pushl %eax;
fld %st(1); fsin
	fnstsw %ax
	test   $0x400,%eax
	je     Ln1d3k
	ffree %st(7); fldpi
	fadd   %st(0),%st
	fxch   %st(1)
Ln1d3l:
	fprem1
	fnstsw %ax
	test   $0x400,%eax
	jne    Ln1d3l
	fstp   %st(1)
	fsin
Ln1d3k:
	popl %eax;
	fstp %st(4)
#	gcossd %fake1,%fake1
	pushl %eax;
fld %st(1); fcos
	fnstsw %ax
	test   $0x400,%eax
	je     Ln1d3m
	ffree %st(7); fldpi
	fadd   %st(0),%st
	fxch   %st(1)
Ln1d3n:
	fprem1
	fnstsw %ax
	test   $0x400,%eax
	jne    Ln1d3n
	fstp   %st(1)
	fcos
Ln1d3m:
	popl %eax;
	fstp %st(2)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gmult %fake2,%fake3,%fake1
	fld %st(2) ; fmul %st(4),%st(0) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $24,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1d24:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1d1B_info - _c1d1B_info_dsp
.text
	.align 2
_s1aU9_info_dsp:
.text
	.align 2
	.long	65541
	.long	3
	.long	9
_s1aU9_info:
Lc1d29:
	call 1f
1:	popl	%eax
	addl $60,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1d2d
Lc1d2c:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 11(%esi),%edx
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_s1aU7_info-(1b)+0,%eax
	movl %eax,-56(%edi)
	movl 88(%esp),%eax
	movl %eax,-44(%edi)
	movl %edx,-40(%edi)
	movl %ecx,-36(%edi)
	movl 64(%esp),%eax
	addl $_s1aTU_info-(1b)+0,%eax
	movl %eax,-32(%edi)
	movl 88(%esp),%eax
	movl %eax,-20(%edi)
	movl %edx,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -32(%edi),%eax
	movl %eax,-4(%edi)
	leal -56(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 76(%esp),%eax
	movl %eax,%esi
	jmp _stg_ap_p_fast
Lc1d2d:
	movl $60,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aU9_info - _s1aU9_info_dsp
.text
	.align 2
_s1aUa_info_dsp:
.text
	.align 2
	.long	131077
	.long	2
	.long	12
_s1aUa_info:
Lc1d2e:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1d2f
Lc1d2g:
	addl $_c1d0n_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 2(%esi),%eax
	movl 6(%esi),%edx
	movl %ecx,%esi
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1d0n_info
Lc1d0o:
	jmp *(%esi)
Lc1d2f:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aUa_info - _s1aUa_info_dsp
.text
	.align 2
_c1d0n_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1d0n_info:
Lc1d0n:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1d2j
Lc1d2i:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_s1aU9_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 8(%ebp),%eax
	movl %eax,-8(%edi)
	movl %ecx,-4(%edi)
	movl %edx,(%edi)
	leal -11(%edi),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $12,%ebp
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1d2j:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1d0n_info - _c1d0n_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdwzdcrotate_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdwzdcrotate_info)+16
	.long	131087
	.long	0
	.long	4259855
.globl _CoreziShapeziInternal_zdwzdcrotate_info
_CoreziShapeziInternal_zdwzdcrotate_info:
Lc1d2l:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1d2p
Lc1d2o:
	movl %eax,64(%esp)
	addl $_s1aUb_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %edx,-12(%edi)
	movl 64(%esp),%eax
	addl $_s1aUa_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,16(%ebx)
	leal -13(%edi),%eax
	movl %eax,8(%ebx)
	leal -6(%edi),%esi
	jmp *(%ebp)
Lc1d2p:
	movl $20,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziShapeziInternal_zdwzdcrotate_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdwzdcrotate_info - _CoreziShapeziInternal_zdwzdcrotate_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfAffineShapezuzdcrotate_closure
_CoreziShapeziInternal_zdfAffineShapezuzdcrotate_closure:
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdcrotate_info
	.long	0
.text
	.align 2
_CoreziShapeziInternal_zdfAffineShapezuzdcrotate_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdfAffineShapezuzdcrotate_info)+40
	.long	131087
	.long	0
	.long	196623
.globl _CoreziShapeziInternal_zdfAffineShapezuzdcrotate_info
_CoreziShapeziInternal_zdfAffineShapezuzdcrotate_info:
Lc1d4e:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1d4k
Lc1d4l:
	movl 64(%esp),%eax
	addl $_c1d4b_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %ecx,%esi
	movl %edx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1d4b_info
Lc1d4c:
	jmp *(%esi)
Lc1d4k:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdfAffineShapezuzdcrotate_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdfAffineShapezuzdcrotate_info - _CoreziShapeziInternal_zdfAffineShapezuzdcrotate_info_dsp
.text
	.align 2
_c1d4b_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1d4b_info)+40
	.long	1
	.long	65568
_c1d4b_info:
Lc1d4b:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1d4h_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $4,%ebp
	jmp _CoreziShapeziInternal_zdwzdcrotate_info
	.long  _c1d4b_info - _c1d4b_info_dsp
.text
	.align 2
_c1d4h_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1d4h_info:
Lc1d4h:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1d4p
Lc1d4o:
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %esi,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1d4p:
	movl $16,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1d4h_info - _c1d4h_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwzdcrotateAt_closure
_CoreziShapeziInternal_zdwzdcrotateAt_closure:
	.long	_CoreziShapeziInternal_zdwzdcrotateAt_info
	.long	0
.text
	.align 2
_s1aUs_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aUs_info:
Lc1d5p:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1d5q
Lc1d5r:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1d5q:
	jmp *-16(%ebx)
	.long  _s1aUs_info - _s1aUs_info_dsp
.text
	.align 2
_s1aUy_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aUy_info:
Lc1d5F:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1d5G
Lc1d5H:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1d5G:
	jmp *-16(%ebx)
	.long  _s1aUy_info - _s1aUy_info_dsp
.text
	.align 2
_s1aUz_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1aUz_info:
Lc1d5I:
	call 1f
1:	popl	%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1d5J
Lc1d5K:
	addl $_c1d5z_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_v_fast
Lc1d5J:
	jmp *-8(%ebx)
	.long  _s1aUz_info - _s1aUz_info_dsp
.text
	.align 2
_c1d5z_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1d5z_info:
Lc1d5z:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1d5N
Lc1d5M:
	addl $_s1aUy_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1d5N:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1d5z_info - _c1d5z_info_dsp
.text
	.align 2
_s1aUG_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1aUG_info:
Lc1d5X:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1d64
Lc1d65:
	addl $_c1d5V_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_p_fast
Lc1d64:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aUG_info - _s1aUG_info_dsp
.text
	.align 2
_c1d5V_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1d5V_info:
Lc1d5V:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1d68
Lc1d67:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1d68:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1d5V_info - _c1d5V_info_dsp
.text
	.align 2
_s1aUO_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aUO_info:
Lc1d6m:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1d6n
Lc1d6o:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1d6n:
	jmp *-16(%ebx)
	.long  _s1aUO_info - _s1aUO_info_dsp
.text
	.align 2
_s1aUP_info_dsp:
.text
	.align 2
	.long	131077
	.long	1
	.long	10
_s1aUP_info:
Lc1d6p:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1d6q
Lc1d6r:
	addl $_c1d6g_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 2(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_pv_fast
Lc1d6q:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aUP_info - _s1aUP_info_dsp
.text
	.align 2
_c1d6g_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1d6g_info:
Lc1d6g:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1d6u
Lc1d6t:
	addl $_s1aUO_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1d6u:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1d6g_info - _c1d6g_info_dsp
.text
	.align 2
_s1aUp_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aUp_info:
Lc1d6K:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1d6L
Lc1d6M:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1d5g_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1d5g_info
Lc1d5h:
	jmp *(%esi)
Lc1d6L:
	jmp *-16(%ebx)
	.long  _s1aUp_info - _s1aUp_info_dsp
.text
	.align 2
_c1d5g_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1d5g_info:
Lc1d5g:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1d6I
Lc1d6J:
	cmpl $2,%ecx
	jae Lc1d6C
Lc1d6D:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1d6Q
Lc1d6P:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1aUs_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1d6C:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1d6U
Lc1d6T:
	movl 2(%esi),%ecx
	movl %eax,%edx
	addl $_s1aUz_info-(1b)+0,%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Action_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -11(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1d6F:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1d72
Lc1d71:
	movl (%ecx),%edx
	movl 4(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aUP_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_MorphAct_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -4(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1d6I:
	cmpl $4,%ecx
	jae Lc1d6F
Lc1d6G:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1d72
Lc1d6X:
	movl 1(%ecx),%edx
	movl 5(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aUG_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_Morph_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -5(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1d6Q:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1d6U:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1d72:
	movl $20,904(%ebx)
	movl %ecx,%esi
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1d5g_info - _c1d5g_info_dsp
.text
	.align 2
_s1aUT_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aUT_info:
Lc1d7o:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1d7p
Lc1d7q:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1d7p:
	jmp *-16(%ebx)
	.long  _s1aUT_info - _s1aUT_info_dsp
.text
	.align 2
_s1aUZ_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aUZ_info:
Lc1d7E:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1d7F
Lc1d7G:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1d7F:
	jmp *-16(%ebx)
	.long  _s1aUZ_info - _s1aUZ_info_dsp
.text
	.align 2
_s1aV0_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1aV0_info:
Lc1d7H:
	call 1f
1:	popl	%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1d7I
Lc1d7J:
	addl $_c1d7y_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_v_fast
Lc1d7I:
	jmp *-8(%ebx)
	.long  _s1aV0_info - _s1aV0_info_dsp
.text
	.align 2
_c1d7y_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1d7y_info:
Lc1d7y:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1d7M
Lc1d7L:
	addl $_s1aUZ_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1d7M:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1d7y_info - _c1d7y_info_dsp
.text
	.align 2
_s1aV7_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1aV7_info:
Lc1d7W:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1d83
Lc1d84:
	addl $_c1d7U_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_p_fast
Lc1d83:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aV7_info - _s1aV7_info_dsp
.text
	.align 2
_c1d7U_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1d7U_info:
Lc1d7U:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1d87
Lc1d86:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1d87:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1d7U_info - _c1d7U_info_dsp
.text
	.align 2
_s1aVf_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aVf_info:
Lc1d8l:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1d8m
Lc1d8n:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1d8m:
	jmp *-16(%ebx)
	.long  _s1aVf_info - _s1aVf_info_dsp
.text
	.align 2
_s1aVg_info_dsp:
.text
	.align 2
	.long	131077
	.long	1
	.long	10
_s1aVg_info:
Lc1d8o:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1d8p
Lc1d8q:
	addl $_c1d8f_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 2(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_pv_fast
Lc1d8p:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aVg_info - _s1aVg_info_dsp
.text
	.align 2
_c1d8f_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1d8f_info:
Lc1d8f:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1d8t
Lc1d8s:
	addl $_s1aVf_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1d8t:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1d8f_info - _c1d8f_info_dsp
.text
	.align 2
_s1aUQ_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aUQ_info:
Lc1d8J:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1d8K
Lc1d8L:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1d7f_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1d7f_info
Lc1d7g:
	jmp *(%esi)
Lc1d8K:
	jmp *-16(%ebx)
	.long  _s1aUQ_info - _s1aUQ_info_dsp
.text
	.align 2
_c1d7f_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1d7f_info:
Lc1d7f:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1d8H
Lc1d8I:
	cmpl $2,%ecx
	jae Lc1d8B
Lc1d8C:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1d8P
Lc1d8O:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1aUT_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1d8B:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1d8T
Lc1d8S:
	movl 2(%esi),%ecx
	movl %eax,%edx
	addl $_s1aV0_info-(1b)+0,%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Action_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -11(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1d8E:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1d91
Lc1d90:
	movl (%ecx),%edx
	movl 4(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aVg_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_MorphAct_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -4(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1d8H:
	cmpl $4,%ecx
	jae Lc1d8E
Lc1d8F:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1d91
Lc1d8W:
	movl 1(%ecx),%edx
	movl 5(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aV7_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_Morph_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -5(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1d8P:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1d8T:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1d91:
	movl $20,904(%ebx)
	movl %ecx,%esi
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1d7f_info - _c1d7f_info_dsp
.text
	.align 2
_s1aVy_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1aVy_info)+32
	.long	65541
	.long	5
	.long	327689
_s1aVy_info:
Lc1d9b:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -24(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1d9l
Lc1d9m:
	addl $_c1d98_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%edx
	movl %eax,64(%esp)
	movl 11(%esi),%eax
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl %eax,88(%esp)
	movl 19(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1d98_info
Lc1d99:
	jmp *(%esi)
Lc1d9l:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aVy_info - _s1aVy_info_dsp
.text
	.align 2
_c1d98_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1d98_info)+32
	.long	5
	.long	327712
_c1d98_info:
Lc1d98:
	call 1f
1:	popl	%eax
	addl $_c1d9e_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl %eax,24(%ebx)
	movl 20(%ebp),%eax
	movl %eax,16(%ebx)
	movl 16(%ebp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdwzdctranslate_info
	.long  _c1d98_info - _c1d98_info_dsp
.text
	.align 2
_c1d9e_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1d9e_info)+32
	.long	1541
	.long	327712
_c1d9e_info:
Lc1d9e:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1d9g_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %esi,16(%ebx)
	movl %ecx,8(%ebx)
	addl $4,%ebp
	jmp _CoreziShapeziInternal_zdwzdcrotate_info
	.long  _c1d9e_info - _c1d9e_info_dsp
.text
	.align 2
_c1d9g_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1d9g_info)+32
	.long	772
	.long	65568
_c1d9g_info:
Lc1d9g:
	call 1f
1:	popl	%eax
	addl $_c1d9i_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl %esi,24(%ebx)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $16,%ebp
	jmp _CoreziShapeziInternal_zdwzdctranslate_info
	.long  _c1d9g_info - _c1d9g_info_dsp
.text
	.align 2
_c1d9i_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1d9i_info:
Lc1d9i:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1d9s
Lc1d9r:
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %esi,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1d9s:
	movl $16,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1d9i_info - _c1d9i_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdwzdcrotateAt_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdwzdcrotateAt_info)+32
	.long	196631
	.long	0
	.long	1376271
.globl _CoreziShapeziInternal_zdwzdcrotateAt_info
_CoreziShapeziInternal_zdwzdcrotateAt_info:
Lc1d9u:
	call 1f
1:	popl	%eax
	addl $56,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1d9y
Lc1d9x:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_s1aUp_info-(1b)+0,%eax
	movl %eax,-52(%edi)
	movl %edx,-40(%edi)
	movl 64(%esp),%eax
	addl $_s1aUQ_info-(1b)+0,%eax
	movl %eax,-36(%edi)
	movl %ecx,-24(%edi)
	movl 64(%esp),%eax
	addl $_s1aVy_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 76(%esp),%eax
	movl %eax,-16(%edi)
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	leal -52(%edi),%eax
	movl %eax,-4(%edi)
	leal -36(%edi),%eax
	movl %eax,(%edi)
	leal -19(%edi),%esi
	jmp *(%ebp)
Lc1d9y:
	movl $56,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdwzdcrotateAt_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdwzdcrotateAt_info - _CoreziShapeziInternal_zdwzdcrotateAt_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfAffineShapezuzdcrotateAt_closure
_CoreziShapeziInternal_zdfAffineShapezuzdcrotateAt_closure:
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdcrotateAt_info
	.long	0
.text
	.align 2
_CoreziShapeziInternal_zdfAffineShapezuzdcrotateAt_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdfAffineShapezuzdcrotateAt_info)+48
	.long	131087
	.long	0
	.long	196623
.globl _CoreziShapeziInternal_zdfAffineShapezuzdcrotateAt_info
_CoreziShapeziInternal_zdfAffineShapezuzdcrotateAt_info:
Lc1dcW:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1dcX
Lc1dcY:
	movl 64(%esp),%eax
	addl $_c1dcT_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %ecx,%esi
	movl %edx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1dcT_info
Lc1dcU:
	jmp *(%esi)
Lc1dcX:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdfAffineShapezuzdcrotateAt_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdfAffineShapezuzdcrotateAt_info - _CoreziShapeziInternal_zdfAffineShapezuzdcrotateAt_info_dsp
.text
	.align 2
_c1dcT_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dcT_info)+48
	.long	1
	.long	65568
_c1dcT_info:
Lc1dcT:
	movl 7(%esi),%eax
	movl %eax,24(%ebx)
	movl 3(%esi),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $8,%ebp
	jmp _CoreziShapeziInternal_zdwzdcrotateAt_info
	.long  _c1dcT_info - _c1dcT_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwzdcscale_closure
_CoreziShapeziInternal_zdwzdcscale_closure:
	.long	_CoreziShapeziInternal_zdwzdcscale_info
	.long	0
.text
	.align 2
_s1aW4_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1aW4_info)+16
	.long	262167
	.long	1
	.long	65546
_s1aW4_info:
Lc1ddv:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl %ecx,32(%ebx)
	movl 16(%ebx),%ecx
	movl %ecx,24(%ebx)
	movl L_CoreziShapeziInternal_zdfAffineShape1_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	addl $4,%eax
	movl %eax,16(%ebx)
	movl (%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
	.long  _s1aW4_info - _s1aW4_info_dsp
.text
	.align 2
_s1aW5_info_dsp:
.text
	.align 2
	.long	196623
	.long	2
	.long	12
_s1aW5_info:
Lc1ddD:
	movl 16(%ebx),%eax
	movl %eax,32(%ebx)
	movl 8(%ebx),%eax
	movl %eax,24(%ebx)
	movl 5(%esi),%eax
	movl %eax,16(%ebx)
	movl 1(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
	.long  _s1aW5_info - _s1aW5_info_dsp
.text
	.align 2
_s1aVV_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1aVV_info:
Lc1deh:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1dei
Lc1dej:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 16(%esi),%eax
	movl %eax,16(%ebx)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_divideDouble_info
Lc1dei:
	jmp *-16(%ebx)
	.long  _s1aVV_info - _s1aVV_info_dsp
.text
	.align 2
_s1aVU_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1aVU_info:
Lc1der:
	call 1f
1:	popl	%eax
	leal -24(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1deD
Lc1deE:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1deo_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 16(%esi),%eax
	movl 12(%esi),%esi
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _c1deo_info
Lc1dep:
	jmp *(%esi)
Lc1deD:
	jmp *-16(%ebx)
	.long  _s1aVU_info - _s1aVU_info_dsp
.text
	.align 2
_c1deo_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1deo_info:
Lc1deo:
	call 1f
1:	popl	%eax
	addl $_c1deu_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1deJ
Lc1dev:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1deJ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1deu_info
	.long  _c1deo_info - _c1deo_info_dsp
.text
	.align 2
_c1deu_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1deu_info:
Lc1deu:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1deI
Lc1deH:
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gdivt %fake0,%fake1,%fake0
	#GDIV-xxxcase1
	fld %st(1) ; fdivrp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1deI:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1deu_info - _c1deu_info_dsp
.text
	.align 2
_s1aVX_info_dsp:
.text
	.align 2
	.long	65541
	.long	4
	.long	9
_s1aVX_info:
Lc1deM:
	call 1f
1:	popl	%eax
	addl $52,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1deQ
Lc1deP:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 11(%esi),%edx
	movl %eax,88(%esp)
	movl 15(%esi),%eax
	movl %edx,100(%esp)
	movl 64(%esp),%edx
	addl $_s1aVV_info-(1b)+0,%edx
	movl %edx,-48(%edi)
	movl 100(%esp),%edx
	movl %edx,-36(%edi)
	movl %ecx,-32(%edi)
	movl 64(%esp),%ecx
	movl %ecx,%edx
	addl $_s1aVU_info-(1b)+0,%edx
	movl %edx,-28(%edi)
	movl 88(%esp),%edx
	movl %edx,-16(%edi)
	movl %eax,-12(%edi)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%ecx),%eax
	movl %eax,-8(%edi)
	leal -28(%edi),%eax
	movl %eax,-4(%edi)
	leal -48(%edi),%eax
	movl %eax,(%edi)
	leal -7(%edi),%eax
	movl %eax,8(%ebx)
	movl 76(%esp),%eax
	movl %eax,%esi
	jmp _stg_ap_p_fast
Lc1deQ:
	movl $52,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aVX_info - _s1aVX_info_dsp
.text
	.align 2
_s1aVY_info_dsp:
.text
	.align 2
	.long	131077
	.long	4
	.long	9
_s1aVY_info:
Lc1deR:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1deV
Lc1deU:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 64(%esp),%edx
	addl $_s1aVX_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	movl 88(%esp),%edx
	movl %edx,-12(%edi)
	movl 100(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -15(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1deV:
	movl $20,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aVY_info - _s1aVY_info_dsp
.text
	.align 2
_s1aVZ_info_dsp:
.text
	.align 2
	.long	131077
	.long	3
	.long	9
_s1aVZ_info:
Lc1deW:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -16(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1deX
Lc1deY:
	addl $_c1ddY_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 2(%esi),%eax
	movl 6(%esi),%edx
	movl %eax,64(%esp)
	movl 10(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _c1ddY_info
Lc1ddZ:
	jmp *(%esi)
Lc1deX:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aVZ_info - _s1aVZ_info_dsp
.text
	.align 2
_c1ddY_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1ddY_info:
Lc1ddY:
	call 1f
1:	popl	%eax
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1df1
Lc1df0:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_s1aVY_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 8(%ebp),%eax
	movl %eax,-12(%edi)
	movl 12(%ebp),%eax
	movl %eax,-8(%edi)
	movl %ecx,-4(%edi)
	movl %edx,(%edi)
	leal -14(%edi),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $16,%ebp
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1df1:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1ddY_info - _c1ddY_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdwzdcscale_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdwzdcscale_info)+16
	.long	196631
	.long	0
	.long	67174415
.globl _CoreziShapeziInternal_zdwzdcscale_info
_CoreziShapeziInternal_zdwzdcscale_info:
Lc1df3:
	call 1f
1:	popl	%eax
	addl $36,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1df7
Lc1df6:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_s1aW4_info-(1b)+0,%eax
	movl %eax,-32(%edi)
	movl %edx,-28(%edi)
	movl 64(%esp),%eax
	addl $_s1aW5_info-(1b)+0,%eax
	movl %eax,-24(%edi)
	movl 76(%esp),%eax
	movl %eax,-20(%edi)
	leal -28(%edi),%eax
	movl %eax,-16(%edi)
	movl 64(%esp),%eax
	addl $_s1aVZ_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,16(%ebx)
	leal -21(%edi),%eax
	movl %eax,8(%ebx)
	leal -10(%edi),%esi
	jmp *(%ebp)
Lc1df7:
	movl $36,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdwzdcscale_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdwzdcscale_info - _CoreziShapeziInternal_zdwzdcscale_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfAffineShapezuzdcscale_closure
_CoreziShapeziInternal_zdfAffineShapezuzdcscale_closure:
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdcscale_info
	.long	0
.text
	.align 2
_CoreziShapeziInternal_zdfAffineShapezuzdcscale_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdfAffineShapezuzdcscale_info)+56
	.long	131087
	.long	0
	.long	196623
.globl _CoreziShapeziInternal_zdfAffineShapezuzdcscale_info
_CoreziShapeziInternal_zdfAffineShapezuzdcscale_info:
Lc1dgJ:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1dgU
Lc1dgV:
	movl 64(%esp),%eax
	addl $_c1dgG_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1dgG_info
Lc1dgH:
	jmp *(%esi)
Lc1dgU:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdfAffineShapezuzdcscale_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdfAffineShapezuzdcscale_info - _CoreziShapeziInternal_zdfAffineShapezuzdcscale_info_dsp
.text
	.align 2
_c1dgG_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dgG_info)+56
	.long	1
	.long	65568
_c1dgG_info:
Lc1dgG:
	call 1f
1:	popl	%eax
	addl $_c1dgM_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl 4(%ebp),%esi
	movl %ecx,(%ebp)
	movl %eax,4(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1dgM_info
Lc1dgN:
	jmp *(%esi)
	.long  _c1dgG_info - _c1dgG_info_dsp
.text
	.align 2
_c1dgM_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dgM_info)+56
	.long	2
	.long	65568
_c1dgM_info:
Lc1dgM:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
	addl $_c1dgR_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl 3(%esi),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $8,%ebp
	jmp _CoreziShapeziInternal_zdwzdcscale_info
	.long  _c1dgM_info - _c1dgM_info_dsp
.text
	.align 2
_c1dgR_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dgR_info:
Lc1dgR:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1dh0
Lc1dgZ:
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %esi,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1dh0:
	movl $16,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dgR_info - _c1dgR_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwzdcscaleAt_closure
_CoreziShapeziInternal_zdwzdcscaleAt_closure:
	.long	_CoreziShapeziInternal_zdwzdcscaleAt_info
	.long	0
.text
	.align 2
_s1aWp_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aWp_info:
Lc1dia:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1dib
Lc1dic:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1dib:
	jmp *-16(%ebx)
	.long  _s1aWp_info - _s1aWp_info_dsp
.text
	.align 2
_s1aWv_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aWv_info:
Lc1diq:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1dir
Lc1dis:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1dir:
	jmp *-16(%ebx)
	.long  _s1aWv_info - _s1aWv_info_dsp
.text
	.align 2
_s1aWw_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1aWw_info:
Lc1dit:
	call 1f
1:	popl	%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1diu
Lc1div:
	addl $_c1dik_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_v_fast
Lc1diu:
	jmp *-8(%ebx)
	.long  _s1aWw_info - _s1aWw_info_dsp
.text
	.align 2
_c1dik_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dik_info:
Lc1dik:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1diy
Lc1dix:
	addl $_s1aWv_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1diy:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dik_info - _c1dik_info_dsp
.text
	.align 2
_s1aWD_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1aWD_info:
Lc1diI:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1diP
Lc1diQ:
	addl $_c1diG_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_p_fast
Lc1diP:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aWD_info - _s1aWD_info_dsp
.text
	.align 2
_c1diG_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1diG_info:
Lc1diG:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1diT
Lc1diS:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1diT:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1diG_info - _c1diG_info_dsp
.text
	.align 2
_s1aWL_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aWL_info:
Lc1dj7:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1dj8
Lc1dj9:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1dj8:
	jmp *-16(%ebx)
	.long  _s1aWL_info - _s1aWL_info_dsp
.text
	.align 2
_s1aWM_info_dsp:
.text
	.align 2
	.long	131077
	.long	1
	.long	10
_s1aWM_info:
Lc1dja:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1djb
Lc1djc:
	addl $_c1dj1_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 2(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_pv_fast
Lc1djb:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aWM_info - _s1aWM_info_dsp
.text
	.align 2
_c1dj1_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dj1_info:
Lc1dj1:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1djf
Lc1dje:
	addl $_s1aWL_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1djf:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dj1_info - _c1dj1_info_dsp
.text
	.align 2
_s1aWm_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aWm_info:
Lc1djv:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1djw
Lc1djx:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1di1_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1di1_info
Lc1di2:
	jmp *(%esi)
Lc1djw:
	jmp *-16(%ebx)
	.long  _s1aWm_info - _s1aWm_info_dsp
.text
	.align 2
_c1di1_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1di1_info:
Lc1di1:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1djt
Lc1dju:
	cmpl $2,%ecx
	jae Lc1djn
Lc1djo:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1djB
Lc1djA:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1aWp_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1djn:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1djF
Lc1djE:
	movl 2(%esi),%ecx
	movl %eax,%edx
	addl $_s1aWw_info-(1b)+0,%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Action_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -11(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1djq:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1djN
Lc1djM:
	movl (%ecx),%edx
	movl 4(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aWM_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_MorphAct_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -4(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1djt:
	cmpl $4,%ecx
	jae Lc1djq
Lc1djr:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1djN
Lc1djI:
	movl 1(%ecx),%edx
	movl 5(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aWD_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_Morph_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -5(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1djB:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1djF:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1djN:
	movl $20,904(%ebx)
	movl %ecx,%esi
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1di1_info - _c1di1_info_dsp
.text
	.align 2
_s1aWQ_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aWQ_info:
Lc1dk9:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1dka
Lc1dkb:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1dka:
	jmp *-16(%ebx)
	.long  _s1aWQ_info - _s1aWQ_info_dsp
.text
	.align 2
_s1aWW_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aWW_info:
Lc1dkp:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1dkq
Lc1dkr:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1dkq:
	jmp *-16(%ebx)
	.long  _s1aWW_info - _s1aWW_info_dsp
.text
	.align 2
_s1aWX_info_dsp:
.text
	.align 2
	.long	65539
	.long	1
	.long	10
_s1aWX_info:
Lc1dks:
	call 1f
1:	popl	%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1dkt
Lc1dku:
	addl $_c1dkj_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_v_fast
Lc1dkt:
	jmp *-8(%ebx)
	.long  _s1aWX_info - _s1aWX_info_dsp
.text
	.align 2
_c1dkj_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dkj_info:
Lc1dkj:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dkx
Lc1dkw:
	addl $_s1aWW_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1dkx:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dkj_info - _c1dkj_info_dsp
.text
	.align 2
_s1aX4_info_dsp:
.text
	.align 2
	.long	65541
	.long	1
	.long	10
_s1aX4_info:
Lc1dkH:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1dkO
Lc1dkP:
	addl $_c1dkF_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_p_fast
Lc1dkO:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aX4_info - _s1aX4_info_dsp
.text
	.align 2
_c1dkF_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dkF_info:
Lc1dkF:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dkS
Lc1dkR:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1dkS:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dkF_info - _c1dkF_info_dsp
.text
	.align 2
_s1aXc_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aXc_info:
Lc1dl6:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1dl7
Lc1dl8:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_GHCziFloat_negateDouble_info
Lc1dl7:
	jmp *-16(%ebx)
	.long  _s1aXc_info - _s1aXc_info_dsp
.text
	.align 2
_s1aXd_info_dsp:
.text
	.align 2
	.long	131077
	.long	1
	.long	10
_s1aXd_info:
Lc1dl9:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1dla
Lc1dlb:
	addl $_c1dl0_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	movl 2(%esi),%esi
	addl $-4,%ebp
	jmp _stg_ap_pv_fast
Lc1dla:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aXd_info - _s1aXd_info_dsp
.text
	.align 2
_c1dl0_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dl0_info:
Lc1dl0:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dle
Lc1dld:
	addl $_s1aXc_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1dle:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dl0_info - _c1dl0_info_dsp
.text
	.align 2
_s1aWN_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1aWN_info:
Lc1dlu:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1dlv
Lc1dlw:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1dk0_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1dk0_info
Lc1dk1:
	jmp *(%esi)
Lc1dlv:
	jmp *-16(%ebx)
	.long  _s1aWN_info - _s1aWN_info_dsp
.text
	.align 2
_c1dk0_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dk0_info:
Lc1dk0:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1dls
Lc1dlt:
	cmpl $2,%ecx
	jae Lc1dlm
Lc1dln:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dlA
Lc1dlz:
	movl 3(%esi),%ecx
	movl %eax,%edx
	addl $_s1aWQ_info-(1b)+0,%edx
	movl %edx,-20(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Exact_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1dlm:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dlE
Lc1dlD:
	movl 2(%esi),%ecx
	movl %eax,%edx
	addl $_s1aWX_info-(1b)+0,%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_CoreziEase_Action_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -11(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1dlp:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1dlM
Lc1dlL:
	movl (%ecx),%edx
	movl 4(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aXd_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_MorphAct_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -4(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1dls:
	cmpl $4,%ecx
	jae Lc1dlp
Lc1dlq:
	addl $20,%edi
	movl %esi,%ecx
	cmpl 856(%ebx),%edi
	ja Lc1dlM
Lc1dlH:
	movl 1(%ecx),%edx
	movl 5(%ecx),%ecx
	movl %eax,64(%esp)
	addl $_s1aX4_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl L_CoreziEase_Morph_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	leal -15(%edi),%eax
	movl %eax,(%edi)
	leal -5(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1dlA:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1dlE:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1dlM:
	movl $20,904(%ebx)
	movl %ecx,%esi
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dk0_info - _c1dk0_info_dsp
.text
	.align 2
_s1aXy_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1aXy_info)+32
	.long	65541
	.long	5
	.long	4259849
_s1aXy_info:
Lc1dlW:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -28(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1dmb
Lc1dmc:
	addl $_c1dlT_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 7(%esi),%eax
	movl 11(%esi),%edx
	movl %eax,64(%esp)
	movl 15(%esi),%eax
	movl %edx,76(%esp)
	movl 19(%esi),%edx
	movl 3(%esi),%esi
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	movl %eax,-20(%ebp)
	movl 76(%esp),%eax
	movl %eax,-16(%ebp)
	movl 88(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1dlT_info
Lc1dlU:
	jmp *(%esi)
Lc1dmb:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aXy_info - _s1aXy_info_dsp
.text
	.align 2
_c1dlT_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dlT_info)+32
	.long	5
	.long	4259872
_c1dlT_info:
Lc1dlT:
	call 1f
1:	popl	%eax
	addl $_c1dlZ_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl 20(%ebp),%esi
	movl %ecx,(%ebp)
	movl %eax,20(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1dlZ_info
Lc1dm0:
	jmp *(%esi)
	.long  _c1dlT_info - _c1dlT_info_dsp
.text
	.align 2
_c1dlZ_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dlZ_info)+32
	.long	6
	.long	4259872
_c1dlZ_info:
Lc1dlZ:
	call 1f
1:	popl	%eax
	addl $_c1dm4_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl %eax,24(%ebx)
	movl 20(%ebp),%eax
	movl %eax,16(%ebx)
	movl 16(%ebp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdwzdctranslate_info
	.long  _c1dlZ_info - _c1dlZ_info_dsp
.text
	.align 2
_c1dm4_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dm4_info)+32
	.long	1542
	.long	4259872
_c1dm4_info:
Lc1dm4:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1dm6_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %esi,24(%ebx)
	movl %ecx,16(%ebx)
	movl 24(%ebp),%eax
	movl %eax,8(%ebx)
	addl $4,%ebp
	jmp _CoreziShapeziInternal_zdwzdcscale_info
	.long  _c1dm4_info - _c1dm4_info_dsp
.text
	.align 2
_c1dm6_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dm6_info)+32
	.long	1797
	.long	65568
_c1dm6_info:
Lc1dm6:
	call 1f
1:	popl	%eax
	addl $_c1dm8_info-(1b)+0,%eax
	movl %eax,20(%ebp)
	movl %esi,24(%ebx)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $20,%ebp
	jmp _CoreziShapeziInternal_zdwzdctranslate_info
	.long  _c1dm6_info - _c1dm6_info_dsp
.text
	.align 2
_c1dm8_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dm8_info:
Lc1dm8:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1dmj
Lc1dmi:
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %esi,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1dmj:
	movl $16,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dm8_info - _c1dm8_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdwzdcscaleAt_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdwzdcscaleAt_info)+32
	.long	196631
	.long	0
	.long	21037071
.globl _CoreziShapeziInternal_zdwzdcscaleAt_info
_CoreziShapeziInternal_zdwzdcscaleAt_info:
Lc1dmm:
	call 1f
1:	popl	%eax
	addl $56,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1dmq
Lc1dmp:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_s1aWm_info-(1b)+0,%eax
	movl %eax,-52(%edi)
	movl %edx,-40(%edi)
	movl 64(%esp),%eax
	addl $_s1aWN_info-(1b)+0,%eax
	movl %eax,-36(%edi)
	movl %ecx,-24(%edi)
	movl 64(%esp),%eax
	addl $_s1aXy_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 76(%esp),%eax
	movl %eax,-16(%edi)
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	leal -52(%edi),%eax
	movl %eax,-4(%edi)
	leal -36(%edi),%eax
	movl %eax,(%edi)
	leal -19(%edi),%esi
	jmp *(%ebp)
Lc1dmq:
	movl $56,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdwzdcscaleAt_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdwzdcscaleAt_info - _CoreziShapeziInternal_zdwzdcscaleAt_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfAffineShapezuzdcscaleAt_closure
_CoreziShapeziInternal_zdfAffineShapezuzdcscaleAt_closure:
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdcscaleAt_info
	.long	0
.text
	.align 2
_CoreziShapeziInternal_zdfAffineShapezuzdcscaleAt_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdfAffineShapezuzdcscaleAt_info)+64
	.long	131087
	.long	0
	.long	196623
.globl _CoreziShapeziInternal_zdfAffineShapezuzdcscaleAt_info
_CoreziShapeziInternal_zdfAffineShapezuzdcscaleAt_info:
Lc1dpU:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1dpV
Lc1dpW:
	movl 64(%esp),%eax
	addl $_c1dpR_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %ecx,%esi
	movl %edx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1dpR_info
Lc1dpS:
	jmp *(%esi)
Lc1dpV:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdfAffineShapezuzdcscaleAt_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdfAffineShapezuzdcscaleAt_info - _CoreziShapeziInternal_zdfAffineShapezuzdcscaleAt_info_dsp
.text
	.align 2
_c1dpR_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dpR_info)+64
	.long	1
	.long	65568
_c1dpR_info:
Lc1dpR:
	movl 7(%esi),%eax
	movl %eax,24(%ebx)
	movl 3(%esi),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $8,%ebp
	jmp _CoreziShapeziInternal_zdwzdcscaleAt_info
	.long  _c1dpR_info - _c1dpR_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdfAffineShape_closure
_CoreziShapeziInternal_zdfAffineShape_closure:
	.long	_CoreziShapeziInternal_DZCAffine_static_info
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdcaffine_closure+7
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdctranslate_closure+2
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdcrotate_closure+2
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdcscale_closure+2
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdcrotateAt_closure+2
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdcscaleAt_closure+2
	.long	0
.data
	.align 2
.align 0
_r19eN_closure:
	.long	_r19eN_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1dqv_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	120
	.byte	44
	.byte	121
	.byte	44
	.byte	99
	.byte	116
	.byte	120
	.byte	44
	.byte	95
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	115
	.byte	99
	.byte	97
	.byte	108
	.byte	101
	.byte	40
	.byte	120
	.byte	44
	.byte	121
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_r19eN_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r19eN_info:
Lc1dqy:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1dqQ
Lc1dqR:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1dqu
Lc1dqt:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1dqw_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1dqv_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1dqu:
	jmp *(%esi)
Lc1dqQ:
	jmp *-16(%ebx)
	.long  _r19eN_info - _r19eN_info_dsp
.text
	.align 2
_c1dqw_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dqw_info:
Lc1dqw:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1dqB_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dqw_info - _c1dqw_info_dsp
.text
	.align 2
_c1dqB_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dqB_info:
Lc1dqB:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dqV
Lc1dqU:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1dqN_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1dqV:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dqB_info - _c1dqB_info_dsp
.text
	.align 2
_c1dqN_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dqN_info:
Lc1dqN:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dqZ
Lc1dqY:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1dqZ:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dqN_info - _c1dqN_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_bezzierzuf1_closure
_CoreziShapeziInternal_bezzierzuf1_closure:
	.long	_CoreziShapeziInternal_bezzierzuf1_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1ds3_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	120
	.byte	49
	.byte	44
	.byte	121
	.byte	49
	.byte	44
	.byte	120
	.byte	50
	.byte	44
	.byte	121
	.byte	50
	.byte	44
	.byte	120
	.byte	44
	.byte	121
	.byte	44
	.byte	99
	.byte	116
	.byte	120
	.byte	44
	.byte	95
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	98
	.byte	101
	.byte	122
	.byte	105
	.byte	101
	.byte	114
	.byte	67
	.byte	117
	.byte	114
	.byte	118
	.byte	101
	.byte	84
	.byte	111
	.byte	40
	.byte	120
	.byte	49
	.byte	44
	.byte	121
	.byte	49
	.byte	44
	.byte	120
	.byte	50
	.byte	44
	.byte	121
	.byte	50
	.byte	44
	.byte	120
	.byte	44
	.byte	121
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_CoreziShapeziInternal_bezzierzuf1_info_dsp:
.text
	.align 2
	.long	0
	.long	22
.globl _CoreziShapeziInternal_bezzierzuf1_info
_CoreziShapeziInternal_bezzierzuf1_info:
Lc1ds6:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1dso
Lc1dsp:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1ds2
Lc1ds1:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1ds4_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1ds3_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1ds2:
	jmp *(%esi)
Lc1dso:
	jmp *-16(%ebx)
	.long  _CoreziShapeziInternal_bezzierzuf1_info - _CoreziShapeziInternal_bezzierzuf1_info_dsp
.text
	.align 2
_c1ds4_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1ds4_info:
Lc1ds4:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1ds9_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1ds4_info - _c1ds4_info_dsp
.text
	.align 2
_c1ds9_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1ds9_info:
Lc1ds9:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dst
Lc1dss:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1dsl_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1dst:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1ds9_info - _c1ds9_info_dsp
.text
	.align 2
_c1dsl_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dsl_info:
Lc1dsl:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dsx
Lc1dsw:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1dsx:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dsl_info - _c1dsl_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwa_closure
_CoreziShapeziInternal_zdwa_closure:
	.long	_CoreziShapeziInternal_zdwa_info
	.long	0
.text
	.align 2
.globl _CoreziShapeziInternal_zdwa_slow
_CoreziShapeziInternal_zdwa_slow:
Lc1dtK:
	movl 52(%ebp),%eax
	movl %eax,16(%ebx)
	movl 48(%ebp),%eax
	movl %eax,8(%ebx)
#	gldsd 40(%ebp),%fake0
	fldl 40(%ebp) ; fstp %st(1)
#	gstsd %fake0,144(%ebx)
	fstl 144(%ebx)
#	gldsd 32(%ebp),%fake0
	fldl 32(%ebp) ; fstp %st(1)
#	gstsd %fake0,136(%ebx)
	fstl 136(%ebx)
#	gldsd 24(%ebp),%fake0
	fldl 24(%ebp) ; fstp %st(1)
#	gstsd %fake0,128(%ebx)
	fstl 128(%ebx)
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gstsd %fake0,120(%ebx)
	fstl 120(%ebx)
#	gldsd 8(%ebp),%fake0
	fldl 8(%ebp) ; fstp %st(1)
#	gstsd %fake0,112(%ebx)
	fstl 112(%ebx)
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gstsd %fake0,104(%ebx)
	fstl 104(%ebx)
	addl $56,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _CoreziShapeziInternal_zdwa_info
.text
	.align 2
_CoreziShapeziInternal_zdwa_info_dsp:
.text
	.align 2
	.long	_CoreziShapeziInternal_zdwa_slow-(_CoreziShapeziInternal_zdwa_info)+0
	.long	524238
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdwa_info)+72
	.long	589824
	.long	0
	.long	196623
.globl _CoreziShapeziInternal_zdwa_info
_CoreziShapeziInternal_zdwa_info:
Lc1du4:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
#	gldsd 144(%ebx),%fake0
	fldl 144(%ebx) ; fstp %st(1)
#	gldsd 136(%ebx),%fake1
	fldl 136(%ebx) ; fstp %st(2)
#	gldsd 128(%ebx),%fake2
	fldl 128(%ebx) ; fstp %st(3)
#	gldsd 120(%ebx),%fake3
	fldl 120(%ebx) ; fstp %st(4)
#	gldsd 112(%ebx),%fake4
	fldl 112(%ebx) ; fstp %st(5)
#	gldsd 104(%ebx),%fake5
	fldl 104(%ebx) ; fstp %st(6)
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1duf
Lc1dug:
	addl $176,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dui
Lc1duh:
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-172(%edi)
#	gstsd %fake5,-168(%edi)
	fld %st(5) ; fstpl -168(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-160(%edi)
	leal -171(%edi),%eax
	movl %eax,-156(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-152(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-148(%edi)
#	gstsd %fake4,-144(%edi)
	fld %st(4) ; fstpl -144(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-136(%edi)
	leal -147(%edi),%eax
	movl %eax,-132(%edi)
	leal -158(%edi),%eax
	movl %eax,-128(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-124(%edi)
#	gstsd %fake3,-120(%edi)
	fld %st(3) ; fstpl -120(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-112(%edi)
	leal -123(%edi),%eax
	movl %eax,-108(%edi)
	leal -134(%edi),%eax
	movl %eax,-104(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-100(%edi)
#	gstsd %fake2,-96(%edi)
	fld %st(2) ; fstpl -96(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-88(%edi)
	leal -99(%edi),%eax
	movl %eax,-84(%edi)
	leal -110(%edi),%eax
	movl %eax,-80(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-76(%edi)
#	gstsd %fake1,-72(%edi)
	fld %st(1) ; fstpl -72(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-64(%edi)
	leal -75(%edi),%eax
	movl %eax,-60(%edi)
	leal -86(%edi),%eax
	movl %eax,-56(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-52(%edi)
#	gstsd %fake0,-48(%edi)
	fstl -48(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-40(%edi)
	leal -51(%edi),%eax
	movl %eax,-36(%edi)
	leal -62(%edi),%eax
	movl %eax,-32(%edi)
	movl 64(%esp),%eax
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-28(%edi)
	movl %edx,-24(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-20(%edi)
	leal -27(%edi),%edx
	movl %edx,-16(%edi)
	leal -38(%edi),%edx
	movl %edx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%edi)
	movl %ecx,-4(%edi)
	leal -18(%edi),%edx
	movl %edx,(%edi)
	addl $_c1du9_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %ecx,%esi
	movl -3(%edi),%eax
	movl %eax,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne Lu1duE
Lc1dua:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1dui:
	movl $176,904(%ebx)
Lc1duf:
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdwa_closure$non_lazy_ptr-(1b)+0(%eax),%esi
#	gstsd %fake5,-56(%ebp)
	fld %st(5) ; fstpl -56(%ebp)
#	gstsd %fake4,-48(%ebp)
	fld %st(4) ; fstpl -48(%ebp)
#	gstsd %fake3,-40(%ebp)
	fld %st(3) ; fstpl -40(%ebp)
#	gstsd %fake2,-32(%ebp)
	fld %st(2) ; fstpl -32(%ebp)
#	gstsd %fake1,-24(%ebp)
	fld %st(1) ; fstpl -24(%ebp)
#	gstsd %fake0,-16(%ebp)
	fstl -16(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-56,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-8(%ebx)
Lu1duE:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1du9_info
	.long  _CoreziShapeziInternal_zdwa_info - _CoreziShapeziInternal_zdwa_info_dsp
.text
	.align 2
_c1du9_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1du9_info)+76
	.long	65
	.long	65568
_c1du9_info:
Lc1du9:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1due_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_CoreziShapeziInternal_bezzierzuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	testw $7,%si
	jne _c1due_info
Lc1dul:
	jmp *(%esi)
	.long  _c1du9_info - _c1du9_info_dsp
.text
	.align 2
_c1due_info_dsp:
.text
	.align 2
	.long	65
	.long	32
_c1due_info:
Lc1due:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1dut_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	addl $4,%ebp
	movl 3(%esi),%eax
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___apply$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1due_info - _c1due_info_dsp
.text
	.align 2
_c1dut_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dut_info:
Lc1dut:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1dut_info - _c1dut_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_bezzierzuf2_closure
_CoreziShapeziInternal_bezzierzuf2_closure:
	.long	_CoreziShapeziInternal_bezzierzuf2_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1dwa_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	120
	.byte	44
	.byte	121
	.byte	44
	.byte	99
	.byte	116
	.byte	120
	.byte	44
	.byte	95
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	109
	.byte	111
	.byte	118
	.byte	101
	.byte	84
	.byte	111
	.byte	40
	.byte	120
	.byte	44
	.byte	121
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_CoreziShapeziInternal_bezzierzuf2_info_dsp:
.text
	.align 2
	.long	0
	.long	22
.globl _CoreziShapeziInternal_bezzierzuf2_info
_CoreziShapeziInternal_bezzierzuf2_info:
Lc1dwd:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1dwv
Lc1dww:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1dw9
Lc1dw8:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1dwb_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1dwa_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1dw9:
	jmp *(%esi)
Lc1dwv:
	jmp *-16(%ebx)
	.long  _CoreziShapeziInternal_bezzierzuf2_info - _CoreziShapeziInternal_bezzierzuf2_info_dsp
.text
	.align 2
_c1dwb_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dwb_info:
Lc1dwb:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1dwg_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dwb_info - _c1dwb_info_dsp
.text
	.align 2
_c1dwg_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dwg_info:
Lc1dwg:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dwA
Lc1dwz:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1dws_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1dwA:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dwg_info - _c1dwg_info_dsp
.text
	.align 2
_c1dws_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dws_info:
Lc1dws:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dwE
Lc1dwD:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1dwE:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dws_info - _c1dws_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwbezzier_closure
_CoreziShapeziInternal_zdwbezzier_closure:
	.long	_CoreziShapeziInternal_zdwbezzier_info
	.long	0
.text
	.align 2
_s1aZL_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1aZL_info)+72
	.long	262167
	.long	3
	.long	327689
_s1aZL_info:
Lc1dzg:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -68(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1dAH
Lc1dAI:
	movl 64(%esp),%eax
	addl $_c1dzd_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 4(%esi),%eax
	movl %eax,88(%esp)
	movl 8(%esi),%eax
	movl (%esi),%esi
	movl %eax,100(%esp)
	movl 88(%esp),%eax
	movl %eax,-20(%ebp)
	movl 100(%esp),%eax
	movl %eax,-16(%ebp)
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1dzd_info
Lc1dze:
	jmp *(%esi)
Lc1dAH:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aZL_info - _s1aZL_info_dsp
.text
	.align 2
_c1dzd_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dzd_info)+72
	.long	5
	.long	327712
_c1dzd_info:
Lc1dzd:
	call 1f
1:	popl	%eax
	addl $_c1dzj_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 7(%esi),%eax
	movl 3(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1dzj_info
Lc1dzk:
	jmp *(%esi)
	.long  _c1dzd_info - _c1dzd_info_dsp
.text
	.align 2
_c1dzj_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dzj_info)+72
	.long	6
	.long	327712
_c1dzj_info:
Lc1dzj:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dAM
Lc1dAL:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1dzu_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 4(%ebp),%esi
	movl -4(%edi),%eax
	movl %eax,4(%ebp)
	testw $7,%si
	jne Lu1dBj
Lc1dzv:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1dAM:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1dBj:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dzu_info
	.long  _c1dzj_info - _c1dzj_info_dsp
.text
	.align 2
_c1dzu_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dzu_info)+72
	.long	70
	.long	327712
_c1dzu_info:
Lc1dzu:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dAQ
Lc1dAP:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1dzF_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 20(%ebp),%esi
	movl -4(%edi),%eax
	movl %eax,20(%ebp)
	testw $7,%si
	jne Lu1dBk
Lc1dzG:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1dAQ:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1dBk:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dzF_info
	.long  _c1dzu_info - _c1dzu_info_dsp
.text
	.align 2
_c1dzF_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dzF_info)+72
	.long	1094
	.long	327712
_c1dzF_info:
Lc1dzF:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1dzK_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl 3(%esi),%ecx
	movl L_CoreziShapeziInternal_bezzierzuf2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %ecx,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1dzK_info
Lc1dzL:
	jmp *(%esi)
	.long  _c1dzF_info - _c1dzF_info_dsp
.text
	.align 2
_c1dzK_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dzK_info)+72
	.long	2247
	.long	65568
_c1dzK_info:
Lc1dzK:
	call 1f
1:	popl	%eax
	addl $_c1dzP_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 28(%ebp),%esi
	movl %eax,28(%ebp)
	testw $7,%si
	jne _c1dzP_info
Lc1dzQ:
	jmp *(%esi)
	.long  _c1dzK_info - _c1dzK_info_dsp
.text
	.align 2
_c1dzP_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dzP_info)+72
	.long	6343
	.long	65568
_c1dzP_info:
Lc1dzP:
	call 1f
1:	popl	%eax
	addl $_c1dA0_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 28(%ebp),%eax
	movl %esi,28(%ebp)
	movl 8(%ebp),%ecx
	movl 24(%ebp),%edx
	movl %eax,64(%esp)
	movl 4(%ebp),%eax
	movl %ecx,76(%esp)
	movl 3(%esi),%ecx
	movl %edx,88(%esp)
	movl 872(%ebx),%edx
	movl %eax,100(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,124(%esp)
	movl 104(%edx),%ecx
	movl %ecx,136(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,148(%esp)
	movl 124(%esp),%eax
	subl %ecx,%eax
	movl 136(%esp),%ecx
	movl %eax,160(%esp)
	movl 148(%esp),%eax
	sbbl %eax,%ecx
	movl 160(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1dzP_info - _c1dzP_info_dsp
.text
	.align 2
_c1dA0_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dA0_info)+72
	.long	2247
	.long	65568
_c1dA0_info:
Lc1dA0:
	call 1f
1:	popl	%eax
	addl $_c1dA2_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 12(%ebp),%esi
	testw $7,%si
	jne _c1dA2_info
Lc1dA3:
	jmp *(%esi)
	.long  _c1dA0_info - _c1dA0_info_dsp
.text
	.align 2
_c1dA2_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dA2_info)+72
	.long	2503
	.long	65568
_c1dA2_info:
Lc1dA2:
	call 1f
1:	popl	%eax
	addl $_c1dA7_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 7(%esi),%eax
	movl 3(%esi),%esi
	movl %eax,24(%ebp)
	testw $7,%si
	jne _c1dA7_info
Lc1dA8:
	jmp *(%esi)
	.long  _c1dA2_info - _c1dA2_info_dsp
.text
	.align 2
_c1dA7_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dA7_info)+72
	.long	455
	.long	65568
_c1dA7_info:
Lc1dA7:
	call 1f
1:	popl	%eax
	addl $_c1dAc_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 24(%ebp),%esi
#	gstsd %fake0,8(%ebp)
	fstl 8(%ebp)
	testw $7,%si
	jne Lu1dBp
Lc1dAd:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1dBp:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dAc_info
	.long  _c1dA7_info - _c1dA7_info_dsp
.text
	.align 2
_c1dAc_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dAc_info)+72
	.long	2503
	.long	65568
_c1dAc_info:
Lc1dAc:
	call 1f
1:	popl	%eax
	addl $_c1dAh_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 16(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1dBq
Lc1dAi:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1dBq:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dAh_info
	.long  _c1dAc_info - _c1dAc_info_dsp
.text
	.align 2
_c1dAh_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dAh_info)+72
	.long	24522
	.long	65568
_c1dAh_info:
Lc1dAh:
	call 1f
1:	popl	%eax
	addl $_c1dAm_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 7(%esi),%eax
	movl 3(%esi),%esi
	movl %eax,36(%ebp)
	testw $7,%si
	jne _c1dAm_info
Lc1dAn:
	jmp *(%esi)
	.long  _c1dAh_info - _c1dAh_info_dsp
.text
	.align 2
_c1dAm_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dAm_info)+72
	.long	8138
	.long	65568
_c1dAm_info:
Lc1dAm:
	call 1f
1:	popl	%eax
	addl $_c1dAr_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 36(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1dBs
Lc1dAs:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1dBs:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dAr_info
	.long  _c1dAm_info - _c1dAm_info_dsp
.text
	.align 2
_c1dAr_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dAr_info)+72
	.long	196557
	.long	65568
_c1dAr_info:
Lc1dAr:
	call 1f
1:	popl	%eax
	addl $_c1dAw_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 44(%ebp),%esi
#	gstsd %fake0,44(%ebp)
	fstl 44(%ebp)
	testw $7,%si
	jne Lu1dBt
Lc1dAx:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1dBt:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dAw_info
	.long  _c1dAr_info - _c1dAr_info_dsp
.text
	.align 2
_c1dAw_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dAw_info)+72
	.long	262093
	.long	65568
_c1dAw_info:
Lc1dAw:
	call 1f
1:	popl	%eax
	addl $_c1dAB_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 7(%esi),%eax
	movl 3(%esi),%esi
	movl %eax,40(%ebp)
	testw $7,%si
	jne _c1dAB_info
Lc1dAC:
	jmp *(%esi)
	.long  _c1dAw_info - _c1dAw_info_dsp
.text
	.align 2
_c1dAB_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dAB_info)+72
	.long	229325
	.long	65568
_c1dAB_info:
Lc1dAB:
	call 1f
1:	popl	%eax
	addl $_c1dAG_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 40(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1dBv
Lc1dB4:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1dBv:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dAG_info
	.long  _c1dAB_info - _c1dAB_info_dsp
.text
	.align 2
_c1dAG_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dAG_info)+72
	.long	2097104
	.long	65568
_c1dAG_info:
Lc1dAG:
	movl 64(%ebp),%eax
	movl %eax,16(%ebx)
	movl 40(%ebp),%eax
	movl %eax,8(%ebx)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,144(%ebx)
	fstl 144(%ebx)
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gstsd %fake0,136(%ebx)
	fstl 136(%ebx)
#	gldsd 56(%ebp),%fake0
	fldl 56(%ebp) ; fstp %st(1)
#	gstsd %fake0,128(%ebx)
	fstl 128(%ebx)
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gstsd %fake0,120(%ebx)
	fstl 120(%ebx)
#	gldsd 28(%ebp),%fake0
	fldl 28(%ebp) ; fstp %st(1)
#	gstsd %fake0,112(%ebx)
	fstl 112(%ebx)
#	gldsd 44(%ebp),%fake0
	fldl 44(%ebp) ; fstp %st(1)
#	gstsd %fake0,104(%ebx)
	fstl 104(%ebx)
	addl $68,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _CoreziShapeziInternal_zdwa_info
	.long  _c1dAG_info - _c1dAG_info_dsp
.text
	.align 2
_s1aZM_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1aZM_info)+72
	.long	262167
	.long	3
	.long	327689
_s1aZM_info:
Lc1dBw:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -24(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1dBx
Lc1dBy:
	movl 64(%esp),%eax
	addl $_c1dz3_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 4(%esi),%eax
	movl %eax,88(%esp)
	movl 8(%esi),%eax
	movl (%esi),%esi
	movl %eax,100(%esp)
	movl 88(%esp),%eax
	movl %eax,-20(%ebp)
	movl 100(%esp),%eax
	movl %eax,-16(%ebp)
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1dz3_info
Lc1dz4:
	jmp *(%esi)
Lc1dBx:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aZM_info - _s1aZM_info_dsp
.text
	.align 2
_c1dz3_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dz3_info)+72
	.long	5
	.long	327712
_c1dz3_info:
Lc1dz3:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dBB
Lc1dBA:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_s1aZL_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 4(%ebp),%eax
	movl %eax,-8(%edi)
	movl 8(%ebp),%eax
	movl %eax,-4(%edi)
	movl 12(%ebp),%eax
	movl %eax,(%edi)
	movl 20(%ebp),%eax
	movl %eax,40(%ebx)
	movl 16(%ebp),%eax
	movl %eax,32(%ebx)
	leal -8(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl %ecx,8(%ebx)
	addl $24,%ebp
	jmp _CoreziShapeziInternal_zdwa1_info
Lc1dBB:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dz3_info - _c1dz3_info_dsp
.text
	.align 2
_s1aZN_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1aZN_info)+72
	.long	262167
	.long	3
	.long	327689
_s1aZN_info:
Lc1dBD:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -24(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1dBE
Lc1dBF:
	movl 64(%esp),%eax
	addl $_c1dyT_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 4(%esi),%eax
	movl %eax,88(%esp)
	movl 8(%esi),%eax
	movl (%esi),%esi
	movl %eax,100(%esp)
	movl 88(%esp),%eax
	movl %eax,-20(%ebp)
	movl 100(%esp),%eax
	movl %eax,-16(%ebp)
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1dyT_info
Lc1dyU:
	jmp *(%esi)
Lc1dBE:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aZN_info - _s1aZN_info_dsp
.text
	.align 2
_c1dyT_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dyT_info)+72
	.long	5
	.long	327712
_c1dyT_info:
Lc1dyT:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dBI
Lc1dBH:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_s1aZM_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 4(%ebp),%eax
	movl %eax,-8(%edi)
	movl 8(%ebp),%eax
	movl %eax,-4(%edi)
	movl 12(%ebp),%eax
	movl %eax,(%edi)
	movl 20(%ebp),%eax
	movl %eax,40(%ebx)
	movl 16(%ebp),%eax
	movl %eax,32(%ebx)
	leal -8(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl %ecx,8(%ebx)
	addl $24,%ebp
	jmp _CoreziShapeziInternal_zdwa1_info
Lc1dBI:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dyT_info - _c1dyT_info_dsp
.text
	.align 2
_s1aYF_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1aYF_info)+72
	.long	262167
	.long	3
	.long	327689
_s1aYF_info:
Lc1dBK:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -24(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1dBL
Lc1dBM:
	movl 64(%esp),%eax
	addl $_c1dyJ_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 4(%esi),%eax
	movl %eax,88(%esp)
	movl 8(%esi),%eax
	movl (%esi),%esi
	movl %eax,100(%esp)
	movl 88(%esp),%eax
	movl %eax,-20(%ebp)
	movl 100(%esp),%eax
	movl %eax,-16(%ebp)
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1dyJ_info
Lc1dyK:
	jmp *(%esi)
Lc1dBL:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aYF_info - _s1aYF_info_dsp
.text
	.align 2
_c1dyJ_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dyJ_info)+72
	.long	5
	.long	327712
_c1dyJ_info:
Lc1dyJ:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dBP
Lc1dBO:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_s1aZN_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 4(%ebp),%eax
	movl %eax,-8(%edi)
	movl 8(%ebp),%eax
	movl %eax,-4(%edi)
	movl 12(%ebp),%eax
	movl %eax,(%edi)
	movl 20(%ebp),%eax
	movl %eax,40(%ebx)
	movl 16(%ebp),%eax
	movl %eax,32(%ebx)
	leal -8(%edi),%eax
	movl %eax,24(%ebx)
	movl %edx,16(%ebx)
	movl %ecx,8(%ebx)
	addl $24,%ebp
	jmp _CoreziShapeziInternal_zdwa1_info
Lc1dBP:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dyJ_info - _c1dyJ_info_dsp
.text
	.align 2
_s1aZU_info_dsp:
.text
	.align 2
	.long	196623
	.long	2
	.long	12
_s1aZU_info:
Lc1dBZ:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1dC0
Lc1dC1:
	movl 64(%esp),%eax
	addl $_c1dBW_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _c1dBW_info
Lc1dBX:
	jmp *(%esi)
Lc1dC0:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1aZU_info - _s1aZU_info_dsp
.text
	.align 2
_c1dBW_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1dBW_info:
Lc1dBW:
	movl 12(%ebp),%eax
	movl %eax,40(%ebx)
	movl 8(%ebp),%eax
	movl %eax,32(%ebx)
	movl 4(%ebp),%eax
	movl %eax,24(%ebx)
	movl 7(%esi),%eax
	movl %eax,16(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	addl $16,%ebp
	jmp _CoreziShapeziInternal_zdwa1_info
	.long  _c1dBW_info - _c1dBW_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdwbezzier_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdwbezzier_info)+72
	.long	262168
	.long	0
	.long	851983
.globl _CoreziShapeziInternal_zdwbezzier_info
_CoreziShapeziInternal_zdwbezzier_info:
Lc1dC6:
	call 1f
1:	popl	%eax
	addl $28,%edi
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1dCa
Lc1dC9:
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_s1aYF_info-(1b)+0,%eax
	movl %eax,-24(%edi)
	movl 76(%esp),%eax
	movl %eax,-20(%edi)
	movl %edx,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl %eax,%ecx
	addl $_s1aZU_info-(1b)+0,%ecx
	movl %ecx,-8(%edi)
	movl 88(%esp),%ecx
	movl %ecx,-4(%edi)
	leal -20(%edi),%ecx
	movl %ecx,(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,16(%ebx)
	leal -5(%edi),%ecx
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_zdfApplicativeShape3_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 2(%eax),%esi
	jmp *(%ebp)
Lc1dCa:
	movl $28,904(%ebx)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdwbezzier_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdwbezzier_info - _CoreziShapeziInternal_zdwbezzier_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_bezzier_closure
_CoreziShapeziInternal_bezzier_closure:
	.long	_CoreziShapeziInternal_bezzier_info
	.long	0
.text
	.align 2
_CoreziShapeziInternal_bezzier_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_bezzier_info)+84
	.long	262168
	.long	0
	.long	196623
.globl _CoreziShapeziInternal_bezzier_info
_CoreziShapeziInternal_bezzier_info:
Lc1dFk:
	call 1f
1:	popl	%eax
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	movl %eax,88(%esp)
	leal -4(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1dFl
Lc1dFm:
	movl 64(%esp),%eax
	addl $_c1dFh_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	addl $-4,%ebp
	jmp _CoreziShapeziInternal_zdwbezzier_info
Lc1dFl:
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_bezzier_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_bezzier_info - _CoreziShapeziInternal_bezzier_info_dsp
.text
	.align 2
_c1dFh_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dFh_info:
Lc1dFh:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1dFp
Lc1dFo:
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %esi,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1dFp:
	movl $16,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dFh_info - _c1dFh_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwcircle_closure
_CoreziShapeziInternal_zdwcircle_closure:
	.long	_CoreziShapeziInternal_zdwcircle_info
	.long	0
.text
	.align 2
_s1b2T_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1b2T_info)+76
	.long	262167
	.long	2
	.long	1245196
_s1b2T_info:
Lc1dIV:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -68(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1dMj
Lc1dMk:
	movl 64(%esp),%eax
	addl $_c1dIS_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,-16(%ebp)
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _c1dIS_info
Lc1dIT:
	jmp *(%esi)
Lc1dMj:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b2T_info - _s1b2T_info_dsp
.text
	.align 2
_c1dIS_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dIS_info)+76
	.long	4
	.long	1245216
_c1dIS_info:
Lc1dIS:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dMn
Lc1dMm:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1dJ4_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 4(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	movl -4(%edi),%eax
	movl %eax,4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1dNY
Lc1dJ5:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1dMn:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1dNY:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dJ4_info
	.long  _c1dIS_info - _c1dIS_info_dsp
.text
	.align 2
_c1dJ4_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dJ4_info)+76
	.long	967
	.long	1245216
_c1dJ4_info:
Lc1dJ4:
	call 1f
1:	popl	%eax
	addl $_c1dJ9_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 20(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1dO0
Lc1dJa:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1dO0:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dJ9_info
	.long  _c1dJ4_info - _c1dJ4_info_dsp
.text
	.align 2
_c1dJ9_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dJ9_info)+76
	.long	16330
	.long	1245216
_c1dJ9_info:
Lc1dJ9:
	call 1f
1:	popl	%eax
	addl $_c1dJe_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 36(%ebp),%esi
#	gstsd %fake0,32(%ebp)
	fstl 32(%ebp)
	testw $7,%si
	jne Lu1dO1
Lc1dJf:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1dO1:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dJe_info
	.long  _c1dJ9_info - _c1dJ9_info_dsp
.text
	.align 2
_c1dJe_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dJe_info)+76
	.long	32714
	.long	1245216
_c1dJe_info:
Lc1dJe:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1dJj_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %esi,%ecx
	movl 3(%esi),%edx
	movl L_CoreziShapeziInternal_bezzierzuf2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %edx,12(%ebp)
	movl %ecx,24(%ebp)
	testw $7,%si
	jne _c1dJj_info
Lc1dJk:
	jmp *(%esi)
	.long  _c1dJe_info - _c1dJe_info_dsp
.text
	.align 2
_c1dJj_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dJj_info)+76
	.long	30666
	.long	1114144
_c1dJj_info:
Lc1dJj:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dMu
Lc1dMt:
	movl 3(%esi),%ecx
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%edi)
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gldsd 32(%ebp),%fake1
	fldl 32(%ebp) ; fstp %st(2)
#	gsubt %fake0,%fake1,%fake0
	#GSUB-xxxcase1
	fld %st(1) ; fsubrp %st(0),%st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1dJx_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 40(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	movl -4(%edi),%eax
	movl %eax,(%ebp)
	movl %ecx,40(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1dO3
Lc1dJy:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1dMu:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1dO3:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dJx_info
	.long  _c1dJj_info - _c1dJj_info_dsp
.text
	.align 2
_c1dJx_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dJx_info)+76
	.long	507853
	.long	1114144
_c1dJx_info:
Lc1dJx:
	call 1f
1:	popl	%eax
	addl $_c1dJI_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 40(%ebp),%ecx
	movl %eax,40(%ebp)
	movl 52(%ebp),%edx
	movl %esi,52(%ebp)
	movl %edx,64(%esp)
	movl 12(%ebp),%edx
	movl %ecx,76(%esp)
	movl 24(%ebp),%ecx
	movl %edx,88(%esp)
	movl 872(%ebx),%edx
	movl %ecx,100(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,112(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,124(%esp)
	movl 104(%edx),%eax
	movl %eax,136(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,148(%esp)
	movl 124(%esp),%ecx
	subl %eax,%ecx
	movl 136(%esp),%eax
	movl %ecx,160(%esp)
	movl 148(%esp),%ecx
	sbbl %ecx,%eax
	movl 160(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1dJx_info - _c1dJx_info_dsp
.text
	.align 2
_c1dJI_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dJI_info)+76
	.long	245709
	.long	1114144
_c1dJI_info:
Lc1dJI:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1dJK_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r13Gl_closure-(1b)+0,%esi
	testw $7,%si
	jne _c1dJK_info
Lc1dJL:
	jmp *(%esi)
	.long  _c1dJI_info - _c1dJI_info_dsp
.text
	.align 2
_c1dJK_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dJK_info)+76
	.long	245709
	.long	65568
_c1dJK_info:
Lc1dJK:
	call 1f
1:	popl	%eax
	addl $168,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dMA
Lc1dMz:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-164(%edi)
#	gldsd 28(%ebp),%fake1
	fldl 28(%ebp) ; fstp %st(2)
#	gldsd 44(%ebp),%fake2
	fldl 44(%ebp) ; fstp %st(3)
#	gmult %fake2,%fake0,%fake3
	fld %st(2) ; fmul %st(1),%st(0) ; fstp %st(4)
#	gaddt %fake1,%fake3,%fake3
	#GADD-xxxcase2
	fld %st(1) ; faddp %st(0),%st(4)
#	gstsd %fake3,-160(%edi)
	fld %st(3) ; fstpl -160(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-152(%edi)
	leal -163(%edi),%ecx
	movl %ecx,-148(%edi)
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-144(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-140(%edi)
#	gldsd 4(%ebp),%fake3
	fldl 4(%ebp) ; fstp %st(4)
#	gstsd %fake3,-136(%edi)
	fld %st(3) ; fstpl -136(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-128(%edi)
	leal -139(%edi),%ecx
	movl %ecx,-124(%edi)
	leal -150(%edi),%ecx
	movl %ecx,-120(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-116(%edi)
#	gaddt %fake1,%fake2,%fake3
	fld %st(1) ; fadd %st(3),%st(0) ; fstp %st(4)
#	gstsd %fake3,-112(%edi)
	fld %st(3) ; fstpl -112(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-104(%edi)
	leal -115(%edi),%ecx
	movl %ecx,-100(%edi)
	leal -126(%edi),%ecx
	movl %ecx,-96(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-92(%edi)
#	gldsd 16(%ebp),%fake3
	fldl 16(%ebp) ; fstp %st(4)
#	gmult %fake2,%fake0,%fake4
	fld %st(2) ; fmul %st(1),%st(0) ; fstp %st(5)
#	gsubt %fake3,%fake4,%fake4
	#GSUB-xxxcase2
	fld %st(3) ; fsubp %st(0),%st(5)
#	gstsd %fake4,-88(%edi)
	fld %st(4) ; fstpl -88(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-80(%edi)
	leal -91(%edi),%ecx
	movl %ecx,-76(%edi)
	leal -102(%edi),%ecx
	movl %ecx,-72(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-68(%edi)
#	gaddt %fake1,%fake2,%fake1
	#GADD-xxxcase1
	fld %st(2) ; faddp %st(0),%st(2)
#	gstsd %fake1,-64(%edi)
	fld %st(1) ; fstpl -64(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-56(%edi)
	leal -67(%edi),%ecx
	movl %ecx,-52(%edi)
	leal -78(%edi),%ecx
	movl %ecx,-48(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-44(%edi)
#	gstsd %fake3,-40(%edi)
	fld %st(3) ; fstpl -40(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-32(%edi)
	leal -43(%edi),%ecx
	movl %ecx,-28(%edi)
	leal -54(%edi),%ecx
	movl %ecx,-24(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-20(%edi)
	movl 36(%ebp),%ecx
	movl %ecx,-16(%edi)
	leal -30(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 52(%ebp),%eax
	movl %eax,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	leal -6(%edi),%eax
	movl %eax,12(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dKo_entry
Lc1dMA:
	movl $168,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dJK_info - _c1dJK_info_dsp
.text
	.align 2
_c1dKo_entry:
Lc1dKo:
	call 1f
1:	popl	%eax
	addl $168,%edi
	movl 20(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1dMD
Lc1dMC:
	movl 3(%ecx),%ecx
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-164(%edi)
#	gldsd 36(%ebp),%fake0
	fldl 36(%ebp) ; fstp %st(1)
#	gldsd 52(%ebp),%fake1
	fldl 52(%ebp) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake2
	fld %st(0) ; fadd %st(2),%st(0) ; fstp %st(3)
#	gstsd %fake2,-160(%edi)
	fld %st(2) ; fstpl -160(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-152(%edi)
	leal -163(%edi),%edx
	movl %edx,-148(%edi)
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,-144(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-140(%edi)
#	gldsd 24(%ebp),%fake2
	fldl 24(%ebp) ; fstp %st(3)
#	gldsd (%ebp),%fake3
	fldl (%ebp) ; fstp %st(4)
#	gmult %fake1,%fake3,%fake4
	fld %st(1) ; fmul %st(4),%st(0) ; fstp %st(5)
#	gaddt %fake2,%fake4,%fake4
	#GADD-xxxcase2
	fld %st(2) ; faddp %st(0),%st(5)
#	gstsd %fake4,-136(%edi)
	fld %st(4) ; fstpl -136(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-128(%edi)
	leal -139(%edi),%edx
	movl %edx,-124(%edi)
	leal -150(%edi),%edx
	movl %edx,-120(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-116(%edi)
#	gmult %fake1,%fake3,%fake3
	#GMUL-xxxcase2
	fld %st(1) ; fmulp %st(0),%st(4)
#	gaddt %fake0,%fake3,%fake3
	#GADD-xxxcase2
	fld %st(0) ; faddp %st(0),%st(4)
#	gstsd %fake3,-112(%edi)
	fld %st(3) ; fstpl -112(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-104(%edi)
	leal -115(%edi),%edx
	movl %edx,-100(%edi)
	leal -126(%edi),%edx
	movl %edx,-96(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-92(%edi)
#	gaddt %fake2,%fake1,%fake3
	fld %st(2) ; fadd %st(2),%st(0) ; fstp %st(4)
#	gstsd %fake3,-88(%edi)
	fld %st(3) ; fstpl -88(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-80(%edi)
	leal -91(%edi),%edx
	movl %edx,-76(%edi)
	leal -102(%edi),%edx
	movl %edx,-72(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-68(%edi)
#	gstsd %fake0,-64(%edi)
	fstl -64(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-56(%edi)
	leal -67(%edi),%edx
	movl %edx,-52(%edi)
	leal -78(%edi),%edx
	movl %edx,-48(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-44(%edi)
#	gaddt %fake2,%fake1,%fake0
	fld %st(2) ; fadd %st(2),%st(0) ; fstp %st(1)
#	gstsd %fake0,-40(%edi)
	fstl -40(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-32(%edi)
	leal -43(%edi),%edx
	movl %edx,-28(%edi)
	leal -54(%edi),%edx
	movl %edx,-24(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-20(%edi)
	movl 44(%ebp),%edx
	movl %edx,-16(%edi)
	leal -30(%edi),%edx
	movl %edx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 60(%ebp),%eax
	movl %eax,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
	leal -6(%edi),%eax
	movl %eax,8(%ebp)
	movl %ecx,20(%ebp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dL2_entry
Lc1dMD:
	movl $168,904(%ebx)
	movl %eax,%edx
	addl $_c1dKn_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
.text
	.align 2
_c1dKn_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dKn_info)+76
	.long	1966032
	.long	65568
_c1dKn_info:
Lc1dKn:
	movl %esi,24(%ebp)
	addl $4,%ebp
	jmp _c1dKo_entry
	.long  _c1dKn_info - _c1dKn_info_dsp
.text
	.align 2
_c1dL2_entry:
Lc1dL2:
	call 1f
1:	popl	%eax
	addl $168,%edi
	movl 8(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1dMG
Lc1dMF:
	movl 3(%ecx),%ecx
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-164(%edi)
#	gldsd 36(%ebp),%fake0
	fldl 36(%ebp) ; fstp %st(1)
#	gldsd 52(%ebp),%fake1
	fldl 52(%ebp) ; fstp %st(2)
#	gldsd (%ebp),%fake2
	fldl (%ebp) ; fstp %st(3)
#	gmult %fake1,%fake2,%fake3
	fld %st(1) ; fmul %st(3),%st(0) ; fstp %st(4)
#	gsubt %fake0,%fake3,%fake3
	#GSUB-xxxcase2
	fld %st(0) ; fsubp %st(0),%st(4)
#	gstsd %fake3,-160(%edi)
	fld %st(3) ; fstpl -160(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-152(%edi)
	leal -163(%edi),%edx
	movl %edx,-148(%edi)
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,-144(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-140(%edi)
#	gldsd 24(%ebp),%fake3
	fldl 24(%ebp) ; fstp %st(4)
#	gaddt %fake3,%fake1,%fake4
	fld %st(3) ; fadd %st(2),%st(0) ; fstp %st(5)
#	gstsd %fake4,-136(%edi)
	fld %st(4) ; fstpl -136(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-128(%edi)
	leal -139(%edi),%edx
	movl %edx,-124(%edi)
	leal -150(%edi),%edx
	movl %edx,-120(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-116(%edi)
#	gsubt %fake0,%fake1,%fake4
	fld %st(0) ; fsub %st(2),%st(0) ; fstp %st(5)
#	gstsd %fake4,-112(%edi)
	fld %st(4) ; fstpl -112(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-104(%edi)
	leal -115(%edi),%edx
	movl %edx,-100(%edi)
	leal -126(%edi),%edx
	movl %edx,-96(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-92(%edi)
#	gmult %fake1,%fake2,%fake2
	#GMUL-xxxcase2
	fld %st(1) ; fmulp %st(0),%st(3)
#	gaddt %fake3,%fake2,%fake2
	#GADD-xxxcase2
	fld %st(3) ; faddp %st(0),%st(3)
#	gstsd %fake2,-88(%edi)
	fld %st(2) ; fstpl -88(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-80(%edi)
	leal -91(%edi),%edx
	movl %edx,-76(%edi)
	leal -102(%edi),%edx
	movl %edx,-72(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-68(%edi)
#	gsubt %fake0,%fake1,%fake0
	#GSUB-xxxcase1
	fld %st(1) ; fsubrp %st(0),%st(1)
#	gstsd %fake0,-64(%edi)
	fstl -64(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-56(%edi)
	leal -67(%edi),%edx
	movl %edx,-52(%edi)
	leal -78(%edi),%edx
	movl %edx,-48(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-44(%edi)
#	gstsd %fake3,-40(%edi)
	fld %st(3) ; fstpl -40(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-32(%edi)
	leal -43(%edi),%edx
	movl %edx,-28(%edi)
	leal -54(%edi),%edx
	movl %edx,-24(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-20(%edi)
	movl 44(%ebp),%edx
	movl %edx,-16(%edi)
	leal -30(%edi),%edx
	movl %edx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 60(%ebp),%eax
	movl %eax,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
	leal -6(%edi),%eax
	movl %eax,44(%ebp)
	movl %ecx,60(%ebp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dLG_entry
Lc1dMG:
	movl $168,904(%ebx)
	movl %eax,%edx
	addl $_c1dL1_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
.text
	.align 2
_c1dL1_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dL1_info)+76
	.long	1966032
	.long	65568
_c1dL1_info:
Lc1dL1:
	movl %esi,12(%ebp)
	addl $4,%ebp
	jmp _c1dL2_entry
	.long  _c1dL1_info - _c1dL1_info_dsp
.text
	.align 2
_c1dLG_entry:
Lc1dLG:
	call 1f
1:	popl	%eax
	addl $184,%edi
	movl 44(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1dMJ
Lc1dMI:
	movl 3(%ecx),%ecx
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-180(%edi)
#	gldsd 36(%ebp),%fake0
	fldl 36(%ebp) ; fstp %st(1)
#	gldsd 52(%ebp),%fake1
	fldl 52(%ebp) ; fstp %st(2)
#	gsubt %fake0,%fake1,%fake2
	fld %st(0) ; fsub %st(2),%st(0) ; fstp %st(3)
#	gstsd %fake2,-176(%edi)
	fld %st(2) ; fstpl -176(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-168(%edi)
	leal -179(%edi),%edx
	movl %edx,-164(%edi)
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,-160(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-156(%edi)
#	gldsd (%ebp),%fake2
	fldl (%ebp) ; fstp %st(3)
#	gldsd 24(%ebp),%fake3
	fldl 24(%ebp) ; fstp %st(4)
#	gmult %fake1,%fake2,%fake4
	fld %st(1) ; fmul %st(3),%st(0) ; fstp %st(5)
#	gsubt %fake3,%fake4,%fake3
	#GSUB-xxxcase1
	fld %st(4) ; fsubrp %st(0),%st(4)
#	gstsd %fake3,-152(%edi)
	fld %st(3) ; fstpl -152(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-144(%edi)
	leal -155(%edi),%edx
	movl %edx,-140(%edi)
	leal -166(%edi),%edx
	movl %edx,-136(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-132(%edi)
#	gmult %fake1,%fake2,%fake1
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(2)
#	gsubt %fake0,%fake1,%fake1
	#GSUB-xxxcase2
	fld %st(0) ; fsubp %st(0),%st(2)
#	gstsd %fake1,-128(%edi)
	fld %st(1) ; fstpl -128(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-120(%edi)
	leal -131(%edi),%edx
	movl %edx,-116(%edi)
	leal -142(%edi),%edx
	movl %edx,-112(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-108(%edi)
#	gldsd 12(%ebp),%fake1
	fldl 12(%ebp) ; fstp %st(2)
#	gstsd %fake1,-104(%edi)
	fld %st(1) ; fstpl -104(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-96(%edi)
	leal -107(%edi),%edx
	movl %edx,-92(%edi)
	leal -118(%edi),%edx
	movl %edx,-88(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-84(%edi)
#	gstsd %fake0,-80(%edi)
	fstl -80(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-72(%edi)
	leal -83(%edi),%edx
	movl %edx,-68(%edi)
	leal -94(%edi),%edx
	movl %edx,-64(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-60(%edi)
#	gstsd %fake1,-56(%edi)
	fld %st(1) ; fstpl -56(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-48(%edi)
	leal -59(%edi),%edx
	movl %edx,-44(%edi)
	leal -70(%edi),%edx
	movl %edx,-40(%edi)
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-36(%edi)
	movl 32(%ebp),%edx
	movl %edx,-32(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-28(%edi)
	leal -35(%edi),%edx
	movl %edx,-24(%edi)
	leal -46(%edi),%edx
	movl %edx,-20(%edi)
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-16(%edi)
	movl 48(%ebp),%edx
	movl %edx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%edi)
	leal -15(%edi),%edx
	movl %edx,-4(%edi)
	leal -26(%edi),%edx
	movl %edx,(%edi)
	movl %eax,%edx
	addl $_c1dMi_info-(1b)+0,%edx
	movl %edx,16(%ebp)
	movl L_CoreziShapeziInternal_bezzierzuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl -3(%edi),%eax
	movl %eax,52(%ebp)
	movl %ecx,56(%ebp)
	addl $16,%ebp
	testw $7,%si
	jne Lu1dOb
Lc1dML:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1dMJ:
	movl $184,904(%ebx)
	movl %eax,%edx
	addl $_c1dLF_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1dOb:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dMi_info
.text
	.align 2
_c1dLF_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dLF_info)+76
	.long	4194256
	.long	65568
_c1dLF_info:
Lc1dLF:
	movl %esi,48(%ebp)
	addl $4,%ebp
	jmp _c1dLG_entry
	.long  _c1dLF_info - _c1dLF_info_dsp
.text
	.align 2
_c1dMi_info_dsp:
.text
	.align 2
	.long	131019
	.long	32
_c1dMi_info:
Lc1dMi:
	call 1f
1:	popl	%eax
	addl $_c1dMT_info-(1b)+0,%eax
	movl %eax,28(%ebp)
	movl 3(%esi),%eax
	movl %eax,32(%ebp)
	movl 4(%ebp),%ecx
	addl $28,%ebp
	movl 872(%ebx),%edx
	movl %ecx,64(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,76(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,88(%esp)
	movl 104(%edx),%eax
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,112(%esp)
	movl 88(%esp),%ecx
	subl %eax,%ecx
	movl 100(%esp),%eax
	movl %ecx,124(%esp)
	movl 112(%esp),%ecx
	sbbl %ecx,%eax
	movl 124(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 68(%esp),%ecx
	pushl %ecx
	movl 84(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___apply$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1dMi_info - _c1dMi_info_dsp
.text
	.align 2
_c1dMT_info_dsp:
.text
	.align 2
	.long	964
	.long	32
_c1dMT_info:
Lc1dMT:
	call 1f
1:	popl	%eax
	addl $_c1dMZ_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 4(%ebp),%eax
	movl 16(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___apply$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1dMT_info - _c1dMT_info_dsp
.text
	.align 2
_c1dMZ_info_dsp:
.text
	.align 2
	.long	964
	.long	32
_c1dMZ_info:
Lc1dMZ:
	call 1f
1:	popl	%eax
	addl $_c1dN5_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 4(%ebp),%eax
	movl 12(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___apply$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1dMZ_info - _c1dMZ_info_dsp
.text
	.align 2
_c1dN5_info_dsp:
.text
	.align 2
	.long	964
	.long	32
_c1dN5_info:
Lc1dN5:
	call 1f
1:	popl	%eax
	addl $_c1dNb_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl 4(%ebp),%eax
	movl 8(%ebp),%ecx
	addl $16,%ebp
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___apply$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1dN5_info - _c1dN5_info_dsp
.text
	.align 2
_c1dNb_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dNb_info:
Lc1dNb:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1dNb_info - _c1dNb_info_dsp
.text
	.align 2
_s1b2U_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1b2U_info)+76
	.long	262167
	.long	2
	.long	1245196
_s1b2U_info:
Lc1dOc:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1dOg
Lc1dOf:
	movl %eax,76(%esp)
	movl (%esi),%eax
	movl %eax,88(%esp)
	movl 4(%esi),%eax
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	addl $_s1b2T_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl 100(%esp),%eax
	movl %eax,-4(%edi)
	movl 76(%esp),%eax
	movl %eax,(%edi)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	leal -4(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
Lc1dOg:
	movl $12,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b2U_info - _s1b2U_info_dsp
.text
	.align 2
_s1b2V_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1b2V_info)+76
	.long	262167
	.long	2
	.long	1245196
_s1b2V_info:
Lc1dOh:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1dOl
Lc1dOk:
	movl %eax,76(%esp)
	movl (%esi),%eax
	movl %eax,88(%esp)
	movl 4(%esi),%eax
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	addl $_s1b2U_info-(1b)+0,%eax
	movl %eax,-8(%edi)
	movl 100(%esp),%eax
	movl %eax,-4(%edi)
	movl 76(%esp),%eax
	movl %eax,(%edi)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	leal -4(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
Lc1dOl:
	movl $12,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b2V_info - _s1b2V_info_dsp
.text
	.align 2
_s1b2W_info_dsp:
.text
	.align 2
	.long	196623
	.long	2
	.long	12
_s1b2W_info:
Lc1dOr:
	movl 16(%ebx),%eax
	movl %eax,32(%ebx)
	movl 8(%ebx),%eax
	movl %eax,24(%ebx)
	movl 5(%esi),%eax
	movl %eax,16(%ebx)
	movl 1(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
	.long  _s1b2W_info - _s1b2W_info_dsp
.text
	.align 2
_s1b0y_info_dsp:
.text
	.align 2
	.long	5
	.long	16
_s1b0y_info:
Lc1dPE:
	call 1f
1:	popl	%eax
	leal -60(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1dPX
Lc1dPY:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1dPB_info-(1b)+0,%eax
	movl %eax,-32(%ebp)
	movl 12(%esi),%eax
	movl 16(%esi),%ecx
	movl 24(%esi),%edx
	movl %eax,64(%esp)
	movl 28(%esi),%eax
	movl 20(%esi),%esi
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl %edx,-20(%ebp)
	movl %eax,-16(%ebp)
	addl $-32,%ebp
	testw $7,%si
	jne _c1dPB_info
Lc1dPC:
	jmp *(%esi)
Lc1dPX:
	jmp *-16(%ebx)
	.long  _s1b0y_info - _s1b0y_info_dsp
.text
	.align 2
_c1dPB_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1dPB_info:
Lc1dPB:
	call 1f
1:	popl	%eax
	addl $_c1dPH_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1dQr
Lc1dPI:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1dQr:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dPH_info
	.long  _c1dPB_info - _c1dPB_info_dsp
.text
	.align 2
_c1dPH_info_dsp:
.text
	.align 2
	.long	197
	.long	32
_c1dPH_info:
Lc1dPH:
	call 1f
1:	popl	%eax
	addl $_c1dPM_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 16(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1dQt
Lc1dPN:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1dQt:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dPM_info
	.long  _c1dPH_info - _c1dPH_info_dsp
.text
	.align 2
_c1dPM_info_dsp:
.text
	.align 2
	.long	6088
	.long	32
_c1dPM_info:
Lc1dPM:
	call 1f
1:	popl	%eax
	addl $_c1dPR_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 24(%ebp),%esi
#	gstsd %fake0,24(%ebp)
	fstl 24(%ebp)
	testw $7,%si
	jne Lu1dQu
Lc1dPS:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1dQu:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dPR_info
	.long  _c1dPM_info - _c1dPM_info_dsp
.text
	.align 2
_c1dPR_info_dsp:
.text
	.align 2
	.long	8136
	.long	32
_c1dPR_info:
Lc1dPR:
	call 1f
1:	popl	%eax
	addl $_c1dPW_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 32(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1dQv
Lc1dQ3:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1dQv:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1dPW_info
	.long  _c1dPR_info - _c1dPR_info_dsp
.text
	.align 2
_c1dPW_info_dsp:
.text
	.align 2
	.long	131019
	.long	32
_c1dPW_info:
Lc1dPW:
	call 1f
1:	popl	%eax
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd 36(%ebp),%fake1
	fldl 36(%ebp) ; fstp %st(2)
#	gldsd 4(%ebp),%fake2
	fldl 4(%ebp) ; fstp %st(3)
#	gsubt %fake1,%fake2,%fake1
	#GSUB-xxxcase1
	fld %st(2) ; fsubrp %st(0),%st(2)
#	gldsd 28(%ebp),%fake2
	fldl 28(%ebp) ; fstp %st(3)
#	gldsd 16(%ebp),%fake3
	fldl 16(%ebp) ; fstp %st(4)
#	gsubt %fake2,%fake3,%fake2
	#GSUB-xxxcase1
	fld %st(3) ; fsubrp %st(0),%st(3)
#	gmult %fake2,%fake2,%fake2
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(3)
#	gmult %fake1,%fake1,%fake1
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(2)
#	gaddt %fake2,%fake1,%fake1
	#GADD-xxxcase2
	fld %st(2) ; faddp %st(0),%st(2)
#	gmult %fake0,%fake0,%fake0
	#GMUL-xxxcase1
	fld %st(0) ; fmulp %st(0),%st(1)
#	gcmp_le %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	sete %cl
	movzbl %cl,%ecx
	shll $2,%ecx
	movl L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr-(1b)+0(%eax),%eax
	movl (%ecx,%eax,1),%esi
	addl $48,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1dPW_info - _c1dPW_info_dsp
.text
	.align 2
_s1b0z_info_dsp:
.text
	.align 2
	.long	131077
	.long	4
	.long	9
_s1b0z_info:
Lc1dQw:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1dQA
Lc1dQz:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 64(%esp),%edx
	addl $_s1b0y_info-(1b)+0,%edx
	movl %edx,-28(%edi)
	movl 76(%esp),%edx
	movl %edx,-16(%edi)
	movl 88(%esp),%edx
	movl %edx,-12(%edi)
	movl 100(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -28(%edi),%esi
	jmp *(%ebp)
Lc1dQA:
	movl $32,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b0z_info - _s1b0z_info_dsp
.text
	.align 2
_s1b0A_info_dsp:
.text
	.align 2
	.long	131077
	.long	4
	.long	9
_s1b0A_info:
Lc1dQB:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1dQF
Lc1dQE:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 64(%esp),%edx
	addl $_s1b0z_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	movl 88(%esp),%edx
	movl %edx,-12(%edi)
	movl 100(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -14(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1dQF:
	movl $20,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b0A_info - _s1b0A_info_dsp
.text
	.align 2
_s1b0B_info_dsp:
.text
	.align 2
	.long	131077
	.long	4
	.long	9
_s1b0B_info:
Lc1dQG:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1dQK
Lc1dQJ:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 64(%esp),%edx
	addl $_s1b0A_info-(1b)+0,%edx
	movl %edx,-16(%edi)
	movl 88(%esp),%edx
	movl %edx,-12(%edi)
	movl 100(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -14(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1dQK:
	movl $20,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b0B_info - _s1b0B_info_dsp
.text
	.align 2
_s1b0C_info_dsp:
.text
	.align 2
	.long	131077
	.long	3
	.long	9
_s1b0C_info:
Lc1dQL:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -16(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1dQM
Lc1dQN:
	addl $_c1dPd_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 2(%esi),%eax
	movl 6(%esi),%edx
	movl %eax,64(%esp)
	movl 10(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _c1dPd_info
Lc1dPe:
	jmp *(%esi)
Lc1dQM:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b0C_info - _s1b0C_info_dsp
.text
	.align 2
_c1dPd_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1dPd_info:
Lc1dPd:
	call 1f
1:	popl	%eax
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dQQ
Lc1dQP:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_s1b0B_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 8(%ebp),%eax
	movl %eax,-12(%edi)
	movl 12(%ebp),%eax
	movl %eax,-8(%edi)
	movl %ecx,-4(%edi)
	movl %edx,(%edi)
	leal -14(%edi),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $16,%ebp
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1dQQ:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dPd_info - _c1dPd_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdwcircle_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdwcircle_info)+76
	.long	196631
	.long	0
	.long	3342351
.globl _CoreziShapeziInternal_zdwcircle_info
_CoreziShapeziInternal_zdwcircle_info:
Lc1dQS:
	call 1f
1:	popl	%eax
	addl $40,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1dQW
Lc1dQV:
	movl %eax,76(%esp)
	movl 64(%esp),%eax
	addl $_s1b2V_info-(1b)+0,%eax
	movl %eax,-36(%edi)
	movl %edx,-32(%edi)
	movl %ecx,-28(%edi)
	movl 64(%esp),%eax
	addl $_s1b2W_info-(1b)+0,%eax
	movl %eax,-24(%edi)
	movl 76(%esp),%eax
	movl %eax,-20(%edi)
	leal -32(%edi),%eax
	movl %eax,-16(%edi)
	movl 64(%esp),%eax
	addl $_s1b0C_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,16(%ebx)
	leal -21(%edi),%eax
	movl %eax,8(%ebx)
	leal -10(%edi),%esi
	jmp *(%ebp)
Lc1dQW:
	movl $40,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdwcircle_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdwcircle_info - _CoreziShapeziInternal_zdwcircle_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_circle_closure
_CoreziShapeziInternal_circle_closure:
	.long	_CoreziShapeziInternal_circle_info
	.long	0
.text
	.align 2
_CoreziShapeziInternal_circle_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_circle_info)+96
	.long	131087
	.long	0
	.long	196623
.globl _CoreziShapeziInternal_circle_info
_CoreziShapeziInternal_circle_info:
Lc1dY9:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1dYf
Lc1dYg:
	movl 64(%esp),%eax
	addl $_c1dY6_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1dY6_info
Lc1dY7:
	jmp *(%esi)
Lc1dYf:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_circle_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_circle_info - _CoreziShapeziInternal_circle_info_dsp
.text
	.align 2
_c1dY6_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1dY6_info)+96
	.long	1
	.long	65568
_c1dY6_info:
Lc1dY6:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1dYc_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %ecx,24(%ebx)
	movl 7(%esi),%eax
	movl %eax,16(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	addl $4,%ebp
	jmp _CoreziShapeziInternal_zdwcircle_info
	.long  _c1dY6_info - _c1dY6_info_dsp
.text
	.align 2
_c1dYc_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dYc_info:
Lc1dYc:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1dYk
Lc1dYj:
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %esi,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1dYk:
	movl $16,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dYc_info - _c1dYc_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_linezuf1_closure
_CoreziShapeziInternal_linezuf1_closure:
	.long	_CoreziShapeziInternal_linezuf1_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1dYU_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	120
	.byte	44
	.byte	121
	.byte	44
	.byte	99
	.byte	116
	.byte	120
	.byte	44
	.byte	95
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	108
	.byte	105
	.byte	110
	.byte	101
	.byte	84
	.byte	111
	.byte	40
	.byte	120
	.byte	44
	.byte	121
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_CoreziShapeziInternal_linezuf1_info_dsp:
.text
	.align 2
	.long	0
	.long	22
.globl _CoreziShapeziInternal_linezuf1_info
_CoreziShapeziInternal_linezuf1_info:
Lc1dYX:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1dZf
Lc1dZg:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1dYT
Lc1dYS:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1dYV_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1dYU_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1dYT:
	jmp *(%esi)
Lc1dZf:
	jmp *-16(%ebx)
	.long  _CoreziShapeziInternal_linezuf1_info - _CoreziShapeziInternal_linezuf1_info_dsp
.text
	.align 2
_c1dYV_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dYV_info:
Lc1dYV:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1dZ0_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dYV_info - _c1dYV_info_dsp
.text
	.align 2
_c1dZ0_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dZ0_info:
Lc1dZ0:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dZk
Lc1dZj:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1dZc_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1dZk:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dZ0_info - _c1dZ0_info_dsp
.text
	.align 2
_c1dZc_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1dZc_info:
Lc1dZc:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1dZo
Lc1dZn:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1dZo:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1dZc_info - _c1dZc_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwa2_closure
_CoreziShapeziInternal_zdwa2_closure:
	.long	_CoreziShapeziInternal_zdwa2_info
	.long	0
.text
	.align 2
.globl _CoreziShapeziInternal_zdwa2_slow
_CoreziShapeziInternal_zdwa2_slow:
Lc1e0q:
	movl 20(%ebp),%eax
	movl %eax,16(%ebx)
	movl 16(%ebp),%eax
	movl %eax,8(%ebx)
#	gldsd 8(%ebp),%fake0
	fldl 8(%ebp) ; fstp %st(1)
#	gstsd %fake0,112(%ebx)
	fstl 112(%ebx)
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gstsd %fake0,104(%ebx)
	fstl 104(%ebx)
	addl $24,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _CoreziShapeziInternal_zdwa2_info
.text
	.align 2
_CoreziShapeziInternal_zdwa2_info_dsp:
.text
	.align 2
	.long	_CoreziShapeziInternal_zdwa2_slow-(_CoreziShapeziInternal_zdwa2_info)+0
	.long	1990
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdwa2_info)+104
	.long	327680
	.long	0
	.long	196623
.globl _CoreziShapeziInternal_zdwa2_info
_CoreziShapeziInternal_zdwa2_info:
Lc1e0w:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
#	gldsd 112(%ebx),%fake0
	fldl 112(%ebx) ; fstp %st(1)
#	gldsd 104(%ebx),%fake1
	fldl 104(%ebx) ; fstp %st(2)
	movl %eax,64(%esp)
	leal -24(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1e0N
Lc1e0O:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1e0Q
Lc1e0P:
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake1,-4(%edi)
	fld %st(1) ; fstpl -4(%edi)
#	gstsd %fake0,-20(%ebp)
	fstl -20(%ebp)
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	leal -7(%edi),%eax
	movl %eax,-4(%ebp)
	addl $-20,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1e0z_entry
Lc1e0Q:
	movl $12,904(%ebx)
Lc1e0N:
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdwa2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
#	gstsd %fake1,-24(%ebp)
	fld %st(1) ; fstpl -24(%ebp)
#	gstsd %fake0,-16(%ebp)
	fstl -16(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-24,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdwa2_info - _CoreziShapeziInternal_zdwa2_info_dsp
.text
	.align 2
_c1e0z_entry:
Lc1e0z:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 16(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1e0T
Lc1e0S:
	movl 3(%ecx),%ecx
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%edi)
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	movl %eax,%edx
	addl $_c1e0H_info-(1b)+0,%edx
	movl %edx,(%ebp)
	movl L_CoreziShapeziInternal_linezuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl -4(%edi),%eax
	movl %eax,4(%ebp)
	movl %ecx,16(%ebp)
	testw $7,%si
	jne Lu1e1m
Lc1e0I:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1e0T:
	movl $12,904(%ebx)
	movl %eax,%edx
	addl $_c1e0y_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1e1m:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1e0H_info
.text
	.align 2
_c1e0y_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e0y_info)+108
	.long	1477
	.long	65568
_c1e0y_info:
Lc1e0y:
	movl %esi,20(%ebp)
	addl $4,%ebp
	jmp _c1e0z_entry
	.long  _c1e0y_info - _c1e0y_info_dsp
.text
	.align 2
_c1e0H_info_dsp:
.text
	.align 2
	.long	708
	.long	32
_c1e0H_info:
Lc1e0H:
	call 1f
1:	popl	%eax
	addl $_c1e0M_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 12(%ebp),%esi
	movl %eax,12(%ebp)
	testw $7,%si
	jne _c1e0M_info
Lc1e0W:
	jmp *(%esi)
	.long  _c1e0H_info - _c1e0H_info_dsp
.text
	.align 2
_c1e0M_info_dsp:
.text
	.align 2
	.long	964
	.long	32
_c1e0M_info:
Lc1e0M:
	call 1f
1:	popl	%eax
	movl 16(%ebp),%ecx
	addl $_c1e17_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl 12(%ebp),%eax
	movl 4(%ebp),%edx
	movl %eax,64(%esp)
	movl 8(%ebp),%eax
	addl $16,%ebp
	movl %ecx,76(%esp)
	movl 3(%esi),%ecx
	movl %edx,88(%esp)
	movl 872(%ebx),%edx
	movl %eax,100(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,124(%esp)
	movl 104(%edx),%ecx
	movl %ecx,136(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,148(%esp)
	movl 124(%esp),%eax
	subl %ecx,%eax
	movl 136(%esp),%ecx
	movl %eax,160(%esp)
	movl 148(%esp),%eax
	sbbl %eax,%ecx
	movl 160(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1e0M_info - _c1e0M_info_dsp
.text
	.align 2
_c1e17_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1e17_info:
Lc1e17:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1e17_info - _c1e17_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwline_closure
_CoreziShapeziInternal_zdwline_closure:
	.long	_CoreziShapeziInternal_zdwline_info
	.long	0
.text
	.align 2
_s1b4c_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1b4c_info)+80
	.long	262167
	.long	1
	.long	4259850
_s1b4c_info:
Lc1e3i:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -24(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1e4f
Lc1e4g:
	movl 64(%esp),%eax
	addl $_c1e3f_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl (%esi),%esi
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _c1e3f_info
Lc1e3g:
	jmp *(%esi)
Lc1e4f:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b4c_info - _s1b4c_info_dsp
.text
	.align 2
_c1e3f_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e3f_info)+80
	.long	3
	.long	4259872
_c1e3f_info:
Lc1e3f:
	call 1f
1:	popl	%eax
	addl $_c1e3l_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 7(%esi),%eax
	movl 3(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1e3l_info
Lc1e3m:
	jmp *(%esi)
	.long  _c1e3f_info - _c1e3f_info_dsp
.text
	.align 2
_c1e3l_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e3l_info)+80
	.long	4
	.long	4259872
_c1e3l_info:
Lc1e3l:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1e4k
Lc1e4j:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1e3w_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 4(%ebp),%esi
	movl -4(%edi),%eax
	movl %eax,4(%ebp)
	testw $7,%si
	jne Lu1e4L
Lc1e3x:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1e4k:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1e4L:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1e3w_info
	.long  _c1e3l_info - _c1e3l_info_dsp
.text
	.align 2
_c1e3w_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e3w_info)+80
	.long	68
	.long	4259872
_c1e3w_info:
Lc1e3w:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1e4o
Lc1e4n:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1e3H_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 12(%ebp),%esi
	movl -4(%edi),%eax
	movl %eax,12(%ebp)
	testw $7,%si
	jne Lu1e4M
Lc1e3I:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1e4o:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1e4M:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1e3H_info
	.long  _c1e3w_info - _c1e3w_info_dsp
.text
	.align 2
_c1e3H_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e3H_info)+80
	.long	324
	.long	4259872
_c1e3H_info:
Lc1e3H:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1e3M_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl 3(%esi),%ecx
	movl L_CoreziShapeziInternal_bezzierzuf2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %ecx,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1e3M_info
Lc1e3N:
	jmp *(%esi)
	.long  _c1e3H_info - _c1e3H_info_dsp
.text
	.align 2
_c1e3M_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e3M_info)+104
	.long	709
	.long	65568
_c1e3M_info:
Lc1e3M:
	call 1f
1:	popl	%eax
	addl $_c1e3R_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 20(%ebp),%esi
	movl %eax,20(%ebp)
	testw $7,%si
	jne _c1e3R_info
Lc1e3S:
	jmp *(%esi)
	.long  _c1e3M_info - _c1e3M_info_dsp
.text
	.align 2
_c1e3R_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e3R_info)+104
	.long	1733
	.long	65568
_c1e3R_info:
Lc1e3R:
	call 1f
1:	popl	%eax
	addl $_c1e42_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 20(%ebp),%eax
	movl %esi,20(%ebp)
	movl 8(%ebp),%ecx
	movl 16(%ebp),%edx
	movl %eax,64(%esp)
	movl 4(%ebp),%eax
	movl %ecx,76(%esp)
	movl 3(%esi),%ecx
	movl %edx,88(%esp)
	movl 872(%ebx),%edx
	movl %eax,100(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,124(%esp)
	movl 104(%edx),%ecx
	movl %ecx,136(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,148(%esp)
	movl 124(%esp),%eax
	subl %ecx,%eax
	movl 136(%esp),%ecx
	movl %eax,160(%esp)
	movl 148(%esp),%eax
	sbbl %eax,%ecx
	movl 160(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1e3R_info - _c1e3R_info_dsp
.text
	.align 2
_c1e42_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e42_info)+104
	.long	709
	.long	65568
_c1e42_info:
Lc1e42:
	call 1f
1:	popl	%eax
	addl $_c1e44_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 12(%ebp),%esi
	testw $7,%si
	jne _c1e44_info
Lc1e45:
	jmp *(%esi)
	.long  _c1e42_info - _c1e42_info_dsp
.text
	.align 2
_c1e44_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e44_info)+104
	.long	965
	.long	65568
_c1e44_info:
Lc1e44:
	call 1f
1:	popl	%eax
	addl $_c1e49_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 7(%esi),%eax
	movl 3(%esi),%esi
	movl %eax,16(%ebp)
	testw $7,%si
	jne _c1e49_info
Lc1e4a:
	jmp *(%esi)
	.long  _c1e44_info - _c1e44_info_dsp
.text
	.align 2
_c1e49_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e49_info)+104
	.long	453
	.long	65568
_c1e49_info:
Lc1e49:
	call 1f
1:	popl	%eax
	addl $_c1e4e_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 16(%ebp),%esi
#	gstsd %fake0,12(%ebp)
	fstl 12(%ebp)
	testw $7,%si
	jne Lu1e4R
Lc1e4w:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1e4R:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1e4e_info
	.long  _c1e49_info - _c1e49_info_dsp
.text
	.align 2
_c1e4e_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e4e_info)+104
	.long	965
	.long	65568
_c1e4e_info:
Lc1e4e:
	movl 20(%ebp),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gstsd %fake0,112(%ebx)
	fstl 112(%ebx)
#	gldsd 12(%ebp),%fake0
	fldl 12(%ebp) ; fstp %st(1)
#	gstsd %fake0,104(%ebx)
	fstl 104(%ebx)
	addl $24,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _CoreziShapeziInternal_zdwa2_info
	.long  _c1e4e_info - _c1e4e_info_dsp
.text
	.align 2
_s1b3y_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1b3y_info)+80
	.long	262167
	.long	1
	.long	4259850
_s1b3y_info:
Lc1e4S:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1e4T
Lc1e4U:
	movl 64(%esp),%eax
	addl $_c1e35_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl (%esi),%esi
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _c1e35_info
Lc1e36:
	jmp *(%esi)
Lc1e4T:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b3y_info - _s1b3y_info_dsp
.text
	.align 2
_c1e35_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e35_info)+80
	.long	3
	.long	4259872
_c1e35_info:
Lc1e35:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1e4X
Lc1e4W:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_s1b4c_info-(1b)+0,%eax
	movl %eax,-4(%edi)
	movl 4(%ebp),%eax
	movl %eax,(%edi)
	movl 12(%ebp),%eax
	movl %eax,40(%ebx)
	movl 8(%ebp),%eax
	movl %eax,32(%ebx)
	movl %edi,24(%ebx)
	movl %edx,16(%ebx)
	movl %ecx,8(%ebx)
	addl $16,%ebp
	jmp _CoreziShapeziInternal_zdwa1_info
Lc1e4X:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1e35_info - _c1e35_info_dsp
.text
	.align 2
_s1b4j_info_dsp:
.text
	.align 2
	.long	196623
	.long	2
	.long	12
_s1b4j_info:
Lc1e57:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1e58
Lc1e59:
	movl 64(%esp),%eax
	addl $_c1e54_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-16,%ebp
	testw $7,%si
	jne _c1e54_info
Lc1e55:
	jmp *(%esi)
Lc1e58:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b4j_info - _s1b4j_info_dsp
.text
	.align 2
_c1e54_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1e54_info:
Lc1e54:
	movl 12(%ebp),%eax
	movl %eax,40(%ebx)
	movl 8(%ebp),%eax
	movl %eax,32(%ebx)
	movl 4(%ebp),%eax
	movl %eax,24(%ebx)
	movl 7(%esi),%eax
	movl %eax,16(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	addl $16,%ebp
	jmp _CoreziShapeziInternal_zdwa1_info
	.long  _c1e54_info - _c1e54_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdwline_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdwline_info)+80
	.long	131087
	.long	0
	.long	21037071
.globl _CoreziShapeziInternal_zdwline_info
_CoreziShapeziInternal_zdwline_info:
Lc1e5e:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1e5i
Lc1e5h:
	movl %eax,64(%esp)
	addl $_s1b3y_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl %ecx,-12(%edi)
	movl 64(%esp),%eax
	movl %eax,%ecx
	addl $_s1b4j_info-(1b)+0,%ecx
	movl %ecx,-8(%edi)
	movl %edx,-4(%edi)
	leal -12(%edi),%ecx
	movl %ecx,(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,16(%ebx)
	leal -5(%edi),%ecx
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_zdfApplicativeShape3_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 2(%eax),%esi
	jmp *(%ebp)
Lc1e5i:
	movl $20,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl L_CoreziShapeziInternal_zdwline_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdwline_info - _CoreziShapeziInternal_zdwline_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_line_closure
_CoreziShapeziInternal_line_closure:
	.long	_CoreziShapeziInternal_line_info
	.long	0
.text
	.align 2
_CoreziShapeziInternal_line_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_line_info)+112
	.long	131087
	.long	0
	.long	196623
.globl _CoreziShapeziInternal_line_info
_CoreziShapeziInternal_line_info:
Lc1e7j:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -4(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1e7k
Lc1e7l:
	movl 64(%esp),%eax
	addl $_c1e7g_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	addl $-4,%ebp
	jmp _CoreziShapeziInternal_zdwline_info
Lc1e7k:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_line_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_line_info - _CoreziShapeziInternal_line_info_dsp
.text
	.align 2
_c1e7g_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1e7g_info:
Lc1e7g:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1e7o
Lc1e7n:
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %esi,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1e7o:
	movl $16,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1e7g_info - _c1e7g_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwrect_closure
_CoreziShapeziInternal_zdwrect_closure:
	.long	_CoreziShapeziInternal_zdwrect_info
	.long	0
.text
	.align 2
_s1b6w_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1b6w_info)+80
	.long	262167
	.long	3
	.long	8454153
_s1b6w_info:
Lc1e8T:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -48(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1ea2
Lc1ea3:
	movl 64(%esp),%eax
	addl $_c1e8Q_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 4(%esi),%eax
	movl %eax,88(%esp)
	movl 8(%esi),%eax
	movl (%esi),%esi
	movl %eax,100(%esp)
	movl 88(%esp),%eax
	movl %eax,-20(%ebp)
	movl 100(%esp),%eax
	movl %eax,-16(%ebp)
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1e8Q_info
Lc1e8R:
	jmp *(%esi)
Lc1ea2:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b6w_info - _s1b6w_info_dsp
.text
	.align 2
_c1e8Q_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e8Q_info)+80
	.long	5
	.long	8454176
_c1e8Q_info:
Lc1e8Q:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1ea6
Lc1ea5:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1e92_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 4(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	movl -4(%edi),%eax
	movl %eax,4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1ebI
Lc1e93:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1ea6:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1ebI:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1e92_info
	.long  _c1e8Q_info - _c1e8Q_info_dsp
.text
	.align 2
_c1e92_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e92_info)+80
	.long	968
	.long	8454176
_c1e92_info:
Lc1e92:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1eaa
Lc1ea9:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1e9d_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 28(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	movl -4(%edi),%eax
	movl %eax,28(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1ebK
Lc1e9e:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1eaa:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1ebK:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1e9d_info
	.long  _c1e92_info - _c1e92_info_dsp
.text
	.align 2
_c1e9d_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e9d_info)+80
	.long	40907
	.long	8454176
_c1e9d_info:
Lc1e9d:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1e9i_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl 3(%esi),%ecx
	movl L_CoreziShapeziInternal_bezzierzuf2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %ecx,24(%ebp)
	testw $7,%si
	jne _c1e9i_info
Lc1e9j:
	jmp *(%esi)
	.long  _c1e9d_info - _c1e9d_info_dsp
.text
	.align 2
_c1e9i_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e9i_info)+108
	.long	40907
	.long	65568
_c1e9i_info:
Lc1e9i:
	call 1f
1:	popl	%eax
	addl $_c1e9n_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 44(%ebp),%esi
	movl %eax,44(%ebp)
	testw $7,%si
	jne _c1e9n_info
Lc1e9o:
	jmp *(%esi)
	.long  _c1e9i_info - _c1e9i_info_dsp
.text
	.align 2
_c1e9n_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e9n_info)+108
	.long	106443
	.long	65568
_c1e9n_info:
Lc1e9n:
	call 1f
1:	popl	%eax
	addl $_c1e9y_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 44(%ebp),%ecx
	movl %eax,44(%ebp)
	movl 28(%ebp),%edx
	movl %ecx,64(%esp)
	movl 40(%ebp),%ecx
	movl %edx,76(%esp)
	movl 24(%ebp),%edx
	movl %ecx,88(%esp)
	movl 872(%ebx),%ecx
	movl %edx,100(%esp)
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,112(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,124(%esp)
	movl 104(%ecx),%eax
	movl %eax,136(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,148(%esp)
	movl 124(%esp),%edx
	subl %eax,%edx
	movl 136(%esp),%eax
	movl %edx,160(%esp)
	movl 148(%esp),%edx
	sbbl %edx,%eax
	movl 160(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1e9n_info - _c1e9n_info_dsp
.text
	.align 2
_c1e9y_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e9y_info)+108
	.long	106443
	.long	65568
_c1e9y_info:
Lc1e9y:
	call 1f
1:	popl	%eax
	addl $_c1e9A_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 32(%ebp),%esi
	testw $7,%si
	jne _c1e9A_info
Lc1e9B:
	jmp *(%esi)
	.long  _c1e9y_info - _c1e9y_info_dsp
.text
	.align 2
_c1e9A_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1e9A_info)+108
	.long	114635
	.long	65568
_c1e9A_info:
Lc1e9A:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1eai
Lc1eah:
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	movl %eax,%ecx
	addl $_c1e9O_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_CoreziShapeziInternal_linezuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl -4(%edi),%eax
	movl %eax,32(%ebp)
	testw $7,%si
	jne Lu1ebO
Lc1e9P:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1eai:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1ebO:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1e9O_info
	.long  _c1e9A_info - _c1e9A_info_dsp
.text
	.align 2
_c1e9O_info_dsp:
.text
	.align 2
	.long	114635
	.long	32
_c1e9O_info:
Lc1e9O:
	call 1f
1:	popl	%eax
	addl $_c1e9Z_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl %eax,20(%ebp)
	movl 32(%ebp),%ecx
	movl 40(%ebp),%edx
	movl %ecx,64(%esp)
	movl 24(%ebp),%ecx
	movl %edx,76(%esp)
	movl 44(%ebp),%edx
	movl %ecx,88(%esp)
	movl 872(%ebx),%ecx
	movl %edx,100(%esp)
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,112(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,124(%esp)
	movl 104(%ecx),%eax
	movl %eax,136(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,148(%esp)
	movl 124(%esp),%edx
	subl %eax,%edx
	movl 136(%esp),%eax
	movl %edx,160(%esp)
	movl 148(%esp),%edx
	sbbl %edx,%eax
	movl 160(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 108(%esp),%ecx
	pushl %ecx
	movl 100(%esp),%ecx
	pushl %ecx
	movl 92(%esp),%ecx
	pushl %ecx
	movl 84(%esp),%ecx
	pushl %ecx
	movl 136(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1e9O_info - _c1e9O_info_dsp
.text
	.align 2
_c1e9Z_info_dsp:
.text
	.align 2
	.long	114635
	.long	32
_c1e9Z_info:
Lc1e9Z:
	call 1f
1:	popl	%eax
	addl $_c1ea1_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 36(%ebp),%esi
	testw $7,%si
	jne _c1ea1_info
Lc1eam:
	jmp *(%esi)
	.long  _c1e9Z_info - _c1e9Z_info_dsp
.text
	.align 2
_c1ea1_info_dsp:
.text
	.align 2
	.long	131019
	.long	32
_c1ea1_info:
Lc1ea1:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1eas
Lc1ear:
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1eaJ_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl -4(%edi),%eax
	movl %eax,36(%ebp)
	movl 20(%ebp),%ecx
	movl 32(%ebp),%edx
	movl %ecx,64(%esp)
	movl 24(%ebp),%ecx
	movl %edx,76(%esp)
	movl 44(%ebp),%edx
	addl $16,%ebp
	movl %ecx,88(%esp)
	movl 872(%ebx),%ecx
	movl %edx,100(%esp)
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,112(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,124(%esp)
	movl 104(%ecx),%eax
	movl %eax,136(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,148(%esp)
	movl 124(%esp),%edx
	subl %eax,%edx
	movl 136(%esp),%eax
	movl %edx,160(%esp)
	movl 148(%esp),%edx
	sbbl %edx,%eax
	movl 160(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 108(%esp),%ecx
	pushl %ecx
	movl 100(%esp),%ecx
	pushl %ecx
	movl 128(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1eas:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1ea1_info - _c1ea1_info_dsp
.text
	.align 2
_c1eaJ_info_dsp:
.text
	.align 2
	.long	8135
	.long	32
_c1eaJ_info:
Lc1eaJ:
	call 1f
1:	popl	%eax
	addl $_c1eaS_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 4(%ebp),%eax
	movl 12(%ebp),%ecx
	movl 20(%ebp),%edx
	movl %eax,64(%esp)
	movl 8(%ebp),%eax
	movl %ecx,76(%esp)
	movl 28(%ebp),%ecx
	movl %edx,88(%esp)
	movl 872(%ebx),%edx
	movl %eax,100(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,124(%esp)
	movl 104(%edx),%ecx
	movl %ecx,136(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,148(%esp)
	movl 124(%esp),%eax
	subl %ecx,%eax
	movl 136(%esp),%ecx
	movl %eax,160(%esp)
	movl 148(%esp),%eax
	sbbl %eax,%ecx
	movl 160(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1eaJ_info - _c1eaJ_info_dsp
.text
	.align 2
_c1eaS_info_dsp:
.text
	.align 2
	.long	8135
	.long	32
_c1eaS_info:
Lc1eaS:
	call 1f
1:	popl	%eax
	movl 28(%ebp),%ecx
	addl $_c1eb1_info-(1b)+0,%eax
	movl %eax,28(%ebp)
	movl 4(%ebp),%eax
	movl 12(%ebp),%edx
	movl %eax,64(%esp)
	movl 24(%ebp),%eax
	movl %edx,76(%esp)
	movl 8(%ebp),%edx
	addl $28,%ebp
	movl %eax,88(%esp)
	movl 872(%ebx),%eax
	movl %edx,100(%esp)
	movl 20(%eax),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%edx)
	movl 100(%eax),%ecx
	movl %ecx,124(%esp)
	movl 104(%eax),%ecx
	movl %ecx,136(%esp)
	leal 4(%edi),%ecx
	subl (%edx),%ecx
	xorl %edx,%edx
	movl %edx,148(%esp)
	movl 124(%esp),%edx
	subl %ecx,%edx
	movl 136(%esp),%ecx
	movl %edx,160(%esp)
	movl 148(%esp),%edx
	sbbl %edx,%ecx
	movl 160(%esp),%edx
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1eaS_info - _c1eaS_info_dsp
.text
	.align 2
_c1eb1_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1eb1_info:
Lc1eb1:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1eb1_info - _c1eb1_info_dsp
.text
	.align 2
_s1b6x_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1b6x_info)+80
	.long	262167
	.long	3
	.long	8454153
_s1b6x_info:
Lc1ebQ:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1ebU
Lc1ebT:
	movl %eax,76(%esp)
	movl (%esi),%eax
	movl %eax,88(%esp)
	movl 4(%esi),%eax
	movl %eax,100(%esp)
	movl 8(%esi),%eax
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1b6w_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 100(%esp),%eax
	movl %eax,-8(%edi)
	movl 112(%esp),%eax
	movl %eax,-4(%edi)
	movl 76(%esp),%eax
	movl %eax,(%edi)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	leal -8(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
Lc1ebU:
	movl $16,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b6x_info - _s1b6x_info_dsp
.text
	.align 2
_s1b6y_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1b6y_info)+80
	.long	262167
	.long	3
	.long	8454153
_s1b6y_info:
Lc1ebV:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1ebZ
Lc1ebY:
	movl %eax,76(%esp)
	movl (%esi),%eax
	movl %eax,88(%esp)
	movl 4(%esi),%eax
	movl %eax,100(%esp)
	movl 8(%esi),%eax
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1b6x_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 100(%esp),%eax
	movl %eax,-8(%edi)
	movl 112(%esp),%eax
	movl %eax,-4(%edi)
	movl 76(%esp),%eax
	movl %eax,(%edi)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	leal -8(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
Lc1ebZ:
	movl $16,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b6y_info - _s1b6y_info_dsp
.text
	.align 2
_s1b6z_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1b6z_info)+80
	.long	262167
	.long	3
	.long	8454153
_s1b6z_info:
Lc1ec0:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1ec4
Lc1ec3:
	movl %eax,76(%esp)
	movl (%esi),%eax
	movl %eax,88(%esp)
	movl 4(%esi),%eax
	movl %eax,100(%esp)
	movl 8(%esi),%eax
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1b6y_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 100(%esp),%eax
	movl %eax,-8(%edi)
	movl 112(%esp),%eax
	movl %eax,-4(%edi)
	movl 76(%esp),%eax
	movl %eax,(%edi)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	leal -8(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
Lc1ec4:
	movl $16,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b6z_info - _s1b6z_info_dsp
.text
	.align 2
_s1b6A_info_dsp:
.text
	.align 2
	.long	196623
	.long	2
	.long	12
_s1b6A_info:
Lc1eca:
	movl 16(%ebx),%eax
	movl %eax,32(%ebx)
	movl 8(%ebx),%eax
	movl %eax,24(%ebx)
	movl 5(%esi),%eax
	movl %eax,16(%ebx)
	movl 1(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
	.long  _s1b6A_info - _s1b6A_info_dsp
.text
	.align 2
_s1b5q_info_dsp:
.text
	.align 2
	.long	6
	.long	16
_s1b5q_info:
Lc1eeO:
	call 1f
1:	popl	%eax
	leal -60(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1eeX
Lc1eeY:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1eeL_info-(1b)+0,%eax
	movl %eax,-36(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 24(%esi),%edx
	movl %eax,64(%esp)
	movl 28(%esi),%eax
	movl %ecx,76(%esp)
	movl 32(%esi),%ecx
	movl 12(%esi),%esi
	movl %edx,88(%esp)
	movl 64(%esp),%edx
	movl %edx,-32(%ebp)
	movl 76(%esp),%edx
	movl %edx,-28(%ebp)
	movl 88(%esp),%edx
	movl %edx,-24(%ebp)
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-36,%ebp
	testw $7,%si
	jne _c1eeL_info
Lc1eeM:
	jmp *(%esi)
Lc1eeX:
	jmp *-16(%ebx)
	.long  _s1b5q_info - _s1b5q_info_dsp
.text
	.align 2
_c1eeL_info_dsp:
.text
	.align 2
	.long	5
	.long	32
_c1eeL_info:
Lc1eeL:
	call 1f
1:	popl	%eax
	addl $_c1eeR_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 8(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1eht
Lc1eeS:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1eht:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eeR_info
	.long  _c1eeL_info - _c1eeL_info_dsp
.text
	.align 2
_c1eeR_info_dsp:
.text
	.align 2
	.long	1480
	.long	32
_c1eeR_info:
Lc1eeR:
	call 1f
1:	popl	%eax
	addl $_c1eeW_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 28(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1ehv
Lc1ef1:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1ehv:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eeW_info
	.long  _c1eeR_info - _c1eeR_info_dsp
.text
	.align 2
_c1eeW_info_dsp:
.text
	.align 2
	.long	45003
	.long	32
_c1eeW_info:
Lc1eeW:
	call 1f
1:	popl	%eax
	movl 28(%ebp),%ecx
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd 16(%ebp),%fake1
	fldl 16(%ebp) ; fstp %st(2)
#	gldsd 4(%ebp),%fake2
	fldl 4(%ebp) ; fstp %st(3)
#	gsubt %fake1,%fake2,%fake1
	#GSUB-xxxcase1
	fld %st(2) ; fsubrp %st(0),%st(2)
#	gldsd Ln1elj-(1b)+0(%eax),%fake2
	fldl Ln1elj-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake0,%fake2,%fake2
	#GDIV-xxxcase2
	fld %st(0) ; fdivp %st(0),%st(3)
#	gsubt %fake1,%fake2,%fake1
	#GSUB-xxxcase1
	fld %st(2) ; fsubrp %st(0),%st(2)
#	gldzsd %fake2
	fldz ; fstp %st(3)
#	gcmp_e %fake1,%fake2
	pushl %eax ; fld %st(1)
	fcomp %st(3); fstsw %ax ; sahf ;  setpo %ah
	sete %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1eh9
Lc1eha:
#	gldzsd %fake2
	fldz ; fstp %st(3)
#	gcmp_g %fake1,%fake2
	pushl %eax ; fld %st(1)
	fcomp %st(3); fstsw %ax ; sahf ;  setpo %ah
	seta %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1egR
Lc1egS:
#	gnegt %fake1,%fake1
	fld %st(1) ; fchs ; fstp %st(2)
#	gldsd Ln1els-(1b)+0(%eax),%fake2
	fldl Ln1els-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake0,%fake2,%fake0
	#GDIV-xxxcase1
	fld %st(2) ; fdivrp %st(0),%st(1)
#	gcmp_l %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Ls1b4Q
Lc1eh7:
	movl L_ghczmprim_GHCziTypes_False_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $48,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Ls1b4Q:
	addl $_c1efk_info-(1b)+0,%eax
	movl %eax,32(%ebp)
	movl %ecx,%esi
	addl $32,%ebp
	testw $7,%si
	jne Lu1ehw
Lc1efl:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1egR:
#	gldsd Ln1elo-(1b)+0(%eax),%fake2
	fldl Ln1elo-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake0,%fake2,%fake0
	#GDIV-xxxcase1
	fld %st(2) ; fdivrp %st(0),%st(1)
#	gcmp_l %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Ls1b4Q
	jmp Lc1eh7
Lc1eh9:
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gldsd Ln1elx-(1b)+0(%eax),%fake2
	fldl Ln1elx-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake0,%fake2,%fake0
	#GDIV-xxxcase1
	fld %st(2) ; fdivrp %st(0),%st(1)
#	gcmp_l %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Ls1b4Q
	jmp Lc1eh7
Lu1ehw:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1efk_info
	.long  _c1eeW_info - _c1eeW_info_dsp
.const
	.align 2
.align 3
Ln1elj:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.const
	.align 2
.align 3
Ln1elo:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.const
	.align 2
.align 3
Ln1els:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.const
	.align 2
.align 3
Ln1elx:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.text
	.align 2
_c1efk_info_dsp:
.text
	.align 2
	.long	131
	.long	32
_c1efk_info:
Lc1efk:
	call 1f
1:	popl	%eax
	addl $_c1efp_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,4(%ebp)
	fstl 4(%ebp)
	testw $7,%si
	jne Lu1ehx
Lc1efq:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1ehx:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1efp_info
	.long  _c1efk_info - _c1efk_info_dsp
.text
	.align 2
_c1efp_info_dsp:
.text
	.align 2
	.long	195
	.long	32
_c1efp_info:
Lc1efp:
	call 1f
1:	popl	%eax
	addl $_c1efu_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 12(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1ehy
Lc1efy:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1ehy:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1efu_info
	.long  _c1efp_info - _c1efp_info_dsp
.text
	.align 2
_c1efu_info_dsp:
.text
	.align 2
	.long	4038
	.long	32
_c1efu_info:
Lc1efu:
	call 1f
1:	popl	%eax
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd 16(%ebp),%fake1
	fldl 16(%ebp) ; fstp %st(2)
#	gldsd 4(%ebp),%fake2
	fldl 4(%ebp) ; fstp %st(3)
#	gsubt %fake1,%fake2,%fake1
	#GSUB-xxxcase1
	fld %st(2) ; fsubrp %st(0),%st(2)
#	gldsd Ln1elS-(1b)+0(%eax),%fake2
	fldl Ln1elS-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake0,%fake2,%fake2
	#GDIV-xxxcase2
	fld %st(0) ; fdivp %st(0),%st(3)
#	gsubt %fake1,%fake2,%fake1
	#GSUB-xxxcase1
	fld %st(2) ; fsubrp %st(0),%st(2)
#	gldzsd %fake2
	fldz ; fstp %st(3)
#	gcmp_e %fake1,%fake2
	pushl %eax ; fld %st(1)
	fcomp %st(3); fstsw %ax ; sahf ;  setpo %ah
	sete %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1eg5
Lc1eg6:
#	gldzsd %fake2
	fldz ; fstp %st(3)
#	gcmp_g %fake1,%fake2
	pushl %eax ; fld %st(1)
	fcomp %st(3); fstsw %ax ; sahf ;  setpo %ah
	seta %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1eg1
Lc1eg2:
#	gnegt %fake1,%fake1
	fld %st(1) ; fchs ; fstp %st(2)
#	gldsd Ln1em4-(1b)+0(%eax),%fake2
	fldl Ln1em4-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake0,%fake2,%fake0
	#GDIV-xxxcase1
	fld %st(2) ; fdivrp %st(0),%st(1)
#	gcmp_l %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	sete %cl
	movzbl %cl,%ecx
	shll $2,%ecx
	movl L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr-(1b)+0(%eax),%eax
	movl (%ecx,%eax,1),%esi
	addl $28,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1eg1:
#	gldsd Ln1elX-(1b)+0(%eax),%fake2
	fldl Ln1elX-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake0,%fake2,%fake0
	#GDIV-xxxcase1
	fld %st(2) ; fdivrp %st(0),%st(1)
#	gcmp_l %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	sete %cl
	movzbl %cl,%ecx
	shll $2,%ecx
	movl L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr-(1b)+0(%eax),%eax
	movl (%ecx,%eax,1),%esi
	addl $28,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1eg5:
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gldsd Ln1emb-(1b)+0(%eax),%fake2
	fldl Ln1emb-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake0,%fake2,%fake0
	#GDIV-xxxcase1
	fld %st(2) ; fdivrp %st(0),%st(1)
#	gcmp_l %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	sete %cl
	movzbl %cl,%ecx
	shll $2,%ecx
	movl L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr-(1b)+0(%eax),%eax
	movl (%ecx,%eax,1),%esi
	addl $28,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1efu_info - _c1efu_info_dsp
.const
	.align 2
.align 3
Ln1elS:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.const
	.align 2
.align 3
Ln1elX:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.const
	.align 2
.align 3
Ln1em4:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.const
	.align 2
.align 3
Ln1emb:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.text
	.align 2
_s1b5r_info_dsp:
.text
	.align 2
	.long	131077
	.long	5
	.long	9
_s1b5r_info:
Lc1ehz:
	call 1f
1:	popl	%eax
	addl $36,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1ehD
Lc1ehC:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1b5q_info-(1b)+0,%eax
	movl %eax,-32(%edi)
	movl 76(%esp),%eax
	movl %eax,-20(%edi)
	movl 88(%esp),%eax
	movl %eax,-16(%edi)
	movl 100(%esp),%eax
	movl %eax,-12(%edi)
	movl 112(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -32(%edi),%esi
	jmp *(%ebp)
Lc1ehD:
	movl $36,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b5r_info - _s1b5r_info_dsp
.text
	.align 2
_s1b5s_info_dsp:
.text
	.align 2
	.long	131077
	.long	5
	.long	9
_s1b5s_info:
Lc1ehE:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1ehI
Lc1ehH:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1b5r_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 88(%esp),%eax
	movl %eax,-16(%edi)
	movl 100(%esp),%eax
	movl %eax,-12(%edi)
	movl 112(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -18(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1ehI:
	movl $24,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b5s_info - _s1b5s_info_dsp
.text
	.align 2
_s1b5t_info_dsp:
.text
	.align 2
	.long	131077
	.long	5
	.long	9
_s1b5t_info:
Lc1ehJ:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1ehN
Lc1ehM:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1b5s_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 88(%esp),%eax
	movl %eax,-16(%edi)
	movl 100(%esp),%eax
	movl %eax,-12(%edi)
	movl 112(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -18(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1ehN:
	movl $24,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b5t_info - _s1b5t_info_dsp
.text
	.align 2
_s1b5u_info_dsp:
.text
	.align 2
	.long	131077
	.long	5
	.long	9
_s1b5u_info:
Lc1ehO:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1ehS
Lc1ehR:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1b5t_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 88(%esp),%eax
	movl %eax,-16(%edi)
	movl 100(%esp),%eax
	movl %eax,-12(%edi)
	movl 112(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -18(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1ehS:
	movl $24,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b5u_info - _s1b5u_info_dsp
.text
	.align 2
_s1b5v_info_dsp:
.text
	.align 2
	.long	131077
	.long	4
	.long	9
_s1b5v_info:
Lc1ehT:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -20(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1ehU
Lc1ehV:
	addl $_c1eei_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 2(%esi),%eax
	movl 6(%esi),%edx
	movl %eax,64(%esp)
	movl 10(%esi),%eax
	movl %edx,76(%esp)
	movl 14(%esi),%edx
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _c1eei_info
Lc1eej:
	jmp *(%esi)
Lc1ehU:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b5v_info - _s1b5v_info_dsp
.text
	.align 2
_c1eei_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1eei_info:
Lc1eei:
	call 1f
1:	popl	%eax
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1ehY
Lc1ehX:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_s1b5u_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 8(%ebp),%eax
	movl %eax,-16(%edi)
	movl 12(%ebp),%eax
	movl %eax,-12(%edi)
	movl 16(%ebp),%eax
	movl %eax,-8(%edi)
	movl %ecx,-4(%edi)
	movl %edx,(%edi)
	leal -18(%edi),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $20,%ebp
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1ehY:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1eei_info - _c1eei_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdwrect_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdwrect_info)+80
	.long	262168
	.long	0
	.long	75563023
.globl _CoreziShapeziInternal_zdwrect_info
_CoreziShapeziInternal_zdwrect_info:
Lc1ei0:
	call 1f
1:	popl	%eax
	addl $48,%edi
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1ei4
Lc1ei3:
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_s1b6z_info-(1b)+0,%eax
	movl %eax,-44(%edi)
	movl 76(%esp),%eax
	movl %eax,-40(%edi)
	movl %edx,-36(%edi)
	movl %ecx,-32(%edi)
	movl 64(%esp),%eax
	addl $_s1b6A_info-(1b)+0,%eax
	movl %eax,-28(%edi)
	movl 88(%esp),%eax
	movl %eax,-24(%edi)
	leal -40(%edi),%eax
	movl %eax,-20(%edi)
	movl 64(%esp),%eax
	addl $_s1b5v_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 88(%esp),%eax
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,16(%ebx)
	leal -25(%edi),%eax
	movl %eax,8(%ebx)
	leal -14(%edi),%esi
	jmp *(%ebp)
Lc1ei4:
	movl $48,904(%ebx)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdwrect_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdwrect_info - _CoreziShapeziInternal_zdwrect_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_rect_closure
_CoreziShapeziInternal_rect_closure:
	.long	_CoreziShapeziInternal_rect_info
	.long	0
.text
	.align 2
_CoreziShapeziInternal_rect_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_rect_info)+120
	.long	131087
	.long	0
	.long	196623
.globl _CoreziShapeziInternal_rect_info
_CoreziShapeziInternal_rect_info:
Lc1enn:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1eny
Lc1enz:
	movl 64(%esp),%eax
	addl $_c1enk_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1enk_info
Lc1enl:
	jmp *(%esi)
Lc1eny:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_rect_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_rect_info - _CoreziShapeziInternal_rect_info_dsp
.text
	.align 2
_c1enk_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1enk_info)+120
	.long	1
	.long	65568
_c1enk_info:
Lc1enk:
	call 1f
1:	popl	%eax
	addl $_c1enq_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl 4(%ebp),%esi
	movl %ecx,(%ebp)
	movl %eax,4(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1enq_info
Lc1enr:
	jmp *(%esi)
	.long  _c1enk_info - _c1enk_info_dsp
.text
	.align 2
_c1enq_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1enq_info)+120
	.long	2
	.long	65568
_c1enq_info:
Lc1enq:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
	addl $_c1env_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl 7(%esi),%eax
	movl %eax,32(%ebx)
	movl 3(%esi),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $8,%ebp
	jmp _CoreziShapeziInternal_zdwrect_info
	.long  _c1enq_info - _c1enq_info_dsp
.text
	.align 2
_c1env_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1env_info:
Lc1env:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1enE
Lc1enD:
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %esi,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1enE:
	movl $16,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1env_info - _c1env_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwcenterRect_closure
_CoreziShapeziInternal_zdwcenterRect_closure:
	.long	_CoreziShapeziInternal_zdwcenterRect_info
	.long	0
.text
	.align 2
_s1b7W_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1b7W_info:
Lc1epO:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1epV
Lc1epW:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1epL_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne _c1epL_info
Lc1epM:
	jmp *(%esi)
Lc1epV:
	jmp *-16(%ebx)
	.long  _s1b7W_info - _s1b7W_info_dsp
.text
	.align 2
_c1epL_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1epL_info:
Lc1epL:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1epZ
Lc1epY:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd Ln1ezs-(1b)+0(%eax),%fake1
	fldl Ln1ezs-(1b)+0(%eax) ; fstp %st(2)
#	gdivt %fake0,%fake1,%fake0
	#GDIV-xxxcase1
	fld %st(1) ; fdivrp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1epZ:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1epL_info - _c1epL_info_dsp
.const
	.align 2
.align 3
Ln1ezs:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.text
	.align 2
_s1b8X_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1b8X_info)+80
	.long	262167
	.long	3
	.long	8454153
_s1b8X_info:
Lc1eq9:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -52(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1erK
Lc1erL:
	movl 64(%esp),%eax
	addl $_c1eq6_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 4(%esi),%eax
	movl %eax,88(%esp)
	movl 8(%esi),%eax
	movl (%esi),%esi
	movl %eax,100(%esp)
	movl 88(%esp),%eax
	movl %eax,-20(%ebp)
	movl 100(%esp),%eax
	movl %eax,-16(%ebp)
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1eq6_info
Lc1eq7:
	jmp *(%esi)
Lc1erK:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b8X_info - _s1b8X_info_dsp
.text
	.align 2
_c1eq6_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eq6_info)+80
	.long	5
	.long	8454176
_c1eq6_info:
Lc1eq6:
	call 1f
1:	popl	%eax
	addl $_c1eqc_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 8(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1etD
Lc1eqd:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1etD:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eqc_info
	.long  _c1eq6_info - _c1eq6_info_dsp
.text
	.align 2
_c1eqc_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eqc_info)+80
	.long	1480
	.long	8454176
_c1eqc_info:
Lc1eqc:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1erP
Lc1erO:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gaddt %fake1,%fake0,%fake1
	#GADD-xxxcase1
	fld %st(0) ; faddp %st(0),%st(2)
#	gstsd %fake1,-4(%edi)
	fld %st(1) ; fstpl -4(%edi)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	leal -7(%edi),%eax
	movl %eax,20(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eqo_entry
Lc1erP:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1eqc_info - _c1eqc_info_dsp
.text
	.align 2
_c1eqo_entry:
Lc1eqo:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 28(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1erS
Lc1erR:
	movl 3(%ecx),%ecx
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gldsd 12(%ebp),%fake0
	fldl 12(%ebp) ; fstp %st(1)
#	gldsd (%ebp),%fake1
	fldl (%ebp) ; fstp %st(2)
#	gsubt %fake0,%fake1,%fake0
	#GSUB-xxxcase1
	fld %st(1) ; fsubrp %st(0),%st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%eax
	movl %eax,20(%ebp)
	movl %ecx,28(%ebp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eqx_entry
Lc1erS:
	movl $12,904(%ebx)
	movl %eax,%edx
	addl $_c1eqn_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
.text
	.align 2
_c1eqn_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eqn_info)+80
	.long	12235
	.long	8454176
_c1eqn_info:
Lc1eqn:
	movl %esi,32(%ebp)
	addl $4,%ebp
	jmp _c1eqo_entry
	.long  _c1eqn_info - _c1eqn_info_dsp
.text
	.align 2
_c1eqx_entry:
Lc1eqx:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 20(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1erV
Lc1erU:
	movl 3(%ecx),%ecx
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%edi)
#	gldsd 12(%ebp),%fake0
	fldl 12(%ebp) ; fstp %st(1)
#	gldsd (%ebp),%fake1
	fldl (%ebp) ; fstp %st(2)
#	gsubt %fake0,%fake1,%fake0
	#GSUB-xxxcase1
	fld %st(1) ; fsubrp %st(0),%st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1eqI_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl 24(%ebp),%esi
	movl -4(%edi),%eax
	movl %eax,20(%ebp)
	movl %ecx,24(%ebp)
	addl $16,%ebp
	testw $7,%si
	jne Lu1etJ
Lc1eqJ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1erV:
	movl $12,904(%ebx)
	movl %eax,%edx
	addl $_c1eqw_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1etJ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eqI_info
.text
	.align 2
_c1eqw_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eqw_info)+80
	.long	12235
	.long	8454176
_c1eqw_info:
Lc1eqw:
	movl %esi,24(%ebp)
	addl $4,%ebp
	jmp _c1eqx_entry
	.long  _c1eqw_info - _c1eqw_info_dsp
.text
	.align 2
_c1eqI_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eqI_info)+80
	.long	454
	.long	8454176
_c1eqI_info:
Lc1eqI:
	call 1f
1:	popl	%eax
	addl $_c1eqN_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 16(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1etK
Lc1eqO:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1etK:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eqN_info
	.long  _c1eqI_info - _c1eqI_info_dsp
.text
	.align 2
_c1eqN_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eqN_info)+80
	.long	8137
	.long	8454176
_c1eqN_info:
Lc1eqN:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1es0
Lc1erZ:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd Ln1eAm-(1b)+0(%eax),%fake1
	fldl Ln1eAm-(1b)+0(%eax) ; fstp %st(2)
#	gdivt %fake0,%fake1,%fake0
	#GDIV-xxxcase1
	fld %st(1) ; fdivrp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gsubt %fake1,%fake0,%fake1
	#GSUB-xxxcase1
	fld %st(0) ; fsubrp %st(0),%st(2)
#	gstsd %fake1,-4(%edi)
	fld %st(1) ; fstpl -4(%edi)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	leal -7(%edi),%eax
	movl %eax,28(%ebp)
	addl $-8,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1er2_entry
Lc1es0:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1eqN_info - _c1eqN_info_dsp
.const
	.align 2
.align 3
Ln1eAm:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.text
	.align 2
_c1er2_entry:
Lc1er2:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 36(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1es3
Lc1es2:
	movl 3(%ecx),%ecx
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gldsd 12(%ebp),%fake0
	fldl 12(%ebp) ; fstp %st(1)
#	gldsd (%ebp),%fake1
	fldl (%ebp) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%eax
	movl %eax,20(%ebp)
	movl %ecx,36(%ebp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1erb_entry
Lc1es3:
	movl $12,904(%ebx)
	movl %eax,%edx
	addl $_c1er1_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
.text
	.align 2
_c1er1_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1er1_info)+80
	.long	65484
	.long	8454176
_c1er1_info:
Lc1er1:
	movl %esi,40(%ebp)
	addl $4,%ebp
	jmp _c1er2_entry
	.long  _c1er1_info - _c1er1_info_dsp
.text
	.align 2
_c1erb_entry:
Lc1erb:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 20(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1es6
Lc1es5:
	movl 3(%ecx),%ecx
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%edi)
#	gldsd 12(%ebp),%fake0
	fldl 12(%ebp) ; fstp %st(1)
#	gldsd (%ebp),%fake1
	fldl (%ebp) ; fstp %st(2)
#	gsubt %fake0,%fake1,%fake0
	#GSUB-xxxcase1
	fld %st(1) ; fsubrp %st(0),%st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1erm_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl 40(%ebp),%esi
	movl -4(%edi),%eax
	movl %eax,20(%ebp)
	movl %ecx,40(%ebp)
	addl $16,%ebp
	testw $7,%si
	jne Lu1etP
Lc1ern:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1es6:
	movl $12,904(%ebx)
	movl %eax,%edx
	addl $_c1era_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1etP:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1erm_info
.text
	.align 2
_c1era_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1era_info)+80
	.long	65484
	.long	8454176
_c1era_info:
Lc1era:
	movl %esi,24(%ebp)
	addl $4,%ebp
	jmp _c1erb_entry
	.long  _c1era_info - _c1era_info_dsp
.text
	.align 2
_c1erm_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1erm_info)+80
	.long	4039
	.long	8454176
_c1erm_info:
Lc1erm:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1err_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl 3(%esi),%ecx
	movl L_CoreziShapeziInternal_bezzierzuf2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %ecx,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1err_info
Lc1ers:
	jmp *(%esi)
	.long  _c1erm_info - _c1erm_info_dsp
.text
	.align 2
_c1err_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1err_info)+108
	.long	8136
	.long	65568
_c1err_info:
Lc1err:
	call 1f
1:	popl	%eax
	addl $_c1erw_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 32(%ebp),%esi
	movl %eax,32(%ebp)
	testw $7,%si
	jne _c1erw_info
Lc1erx:
	jmp *(%esi)
	.long  _c1err_info - _c1err_info_dsp
.text
	.align 2
_c1erw_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1erw_info)+108
	.long	16328
	.long	65568
_c1erw_info:
Lc1erw:
	call 1f
1:	popl	%eax
	addl $_c1erH_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 32(%ebp),%ecx
	movl %eax,32(%ebp)
	movl 12(%ebp),%edx
	movl %ecx,64(%esp)
	movl 8(%ebp),%ecx
	movl %edx,76(%esp)
	movl 4(%ebp),%edx
	movl %ecx,88(%esp)
	movl 872(%ebx),%ecx
	movl %edx,100(%esp)
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,112(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,124(%esp)
	movl 104(%ecx),%eax
	movl %eax,136(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,148(%esp)
	movl 124(%esp),%edx
	subl %eax,%edx
	movl 136(%esp),%eax
	movl %edx,160(%esp)
	movl 148(%esp),%edx
	sbbl %edx,%eax
	movl 160(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1erw_info - _c1erw_info_dsp
.text
	.align 2
_c1erH_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1erH_info)+108
	.long	16328
	.long	65568
_c1erH_info:
Lc1erH:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1erJ_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_CoreziShapeziInternal_linezuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	testw $7,%si
	jne _c1erJ_info
Lc1esc:
	jmp *(%esi)
	.long  _c1erH_info - _c1erH_info_dsp
.text
	.align 2
_c1erJ_info_dsp:
.text
	.align 2
	.long	16328
	.long	32
_c1erJ_info:
Lc1erJ:
	call 1f
1:	popl	%eax
	addl $_c1esn_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 24(%ebp),%ecx
	movl %eax,24(%ebp)
	movl 20(%ebp),%edx
	movl %edx,64(%esp)
	movl 4(%ebp),%edx
	movl %ecx,76(%esp)
	movl 32(%ebp),%ecx
	movl %edx,88(%esp)
	movl 872(%ebx),%edx
	movl %ecx,100(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,112(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,124(%esp)
	movl 104(%edx),%eax
	movl %eax,136(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,148(%esp)
	movl 124(%esp),%ecx
	subl %eax,%ecx
	movl 136(%esp),%eax
	movl %ecx,160(%esp)
	movl 148(%esp),%ecx
	sbbl %ecx,%eax
	movl 160(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 108(%esp),%ecx
	pushl %ecx
	movl 100(%esp),%ecx
	pushl %ecx
	movl 92(%esp),%ecx
	pushl %ecx
	movl 84(%esp),%ecx
	pushl %ecx
	movl 136(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1erJ_info - _c1erJ_info_dsp
.text
	.align 2
_c1esn_info_dsp:
.text
	.align 2
	.long	16328
	.long	32
_c1esn_info:
Lc1esn:
	call 1f
1:	popl	%eax
	addl $_c1esw_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 24(%ebp),%eax
	movl 20(%ebp),%ecx
	movl 28(%ebp),%edx
	movl %eax,64(%esp)
	movl 4(%ebp),%eax
	movl %ecx,76(%esp)
	movl 32(%ebp),%ecx
	movl %edx,88(%esp)
	movl 872(%ebx),%edx
	movl %eax,100(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,124(%esp)
	movl 104(%edx),%ecx
	movl %ecx,136(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,148(%esp)
	movl 124(%esp),%eax
	subl %ecx,%eax
	movl 136(%esp),%ecx
	movl %eax,160(%esp)
	movl 148(%esp),%eax
	sbbl %eax,%ecx
	movl 160(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1esn_info - _c1esn_info_dsp
.text
	.align 2
_c1esw_info_dsp:
.text
	.align 2
	.long	16328
	.long	32
_c1esw_info:
Lc1esw:
	call 1f
1:	popl	%eax
	addl $_c1esF_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 24(%ebp),%eax
	movl 16(%ebp),%ecx
	movl 28(%ebp),%edx
	movl %eax,64(%esp)
	movl 4(%ebp),%eax
	movl %ecx,76(%esp)
	movl 32(%ebp),%ecx
	movl %edx,88(%esp)
	movl 872(%ebx),%edx
	movl %eax,100(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,124(%esp)
	movl 104(%edx),%ecx
	movl %ecx,136(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,148(%esp)
	movl 124(%esp),%eax
	subl %ecx,%eax
	movl 136(%esp),%ecx
	movl %eax,160(%esp)
	movl 148(%esp),%eax
	sbbl %eax,%ecx
	movl 160(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1esw_info - _c1esw_info_dsp
.text
	.align 2
_c1esF_info_dsp:
.text
	.align 2
	.long	16328
	.long	32
_c1esF_info:
Lc1esF:
	call 1f
1:	popl	%eax
	movl 32(%ebp),%ecx
	addl $_c1esO_info-(1b)+0,%eax
	movl %eax,32(%ebp)
	movl 24(%ebp),%eax
	movl 12(%ebp),%edx
	movl %eax,64(%esp)
	movl 8(%ebp),%eax
	movl %edx,76(%esp)
	movl 4(%ebp),%edx
	addl $32,%ebp
	movl %eax,88(%esp)
	movl 872(%ebx),%eax
	movl %edx,100(%esp)
	movl 20(%eax),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%edx)
	movl 100(%eax),%ecx
	movl %ecx,124(%esp)
	movl 104(%eax),%ecx
	movl %ecx,136(%esp)
	leal 4(%edi),%ecx
	subl (%edx),%ecx
	xorl %edx,%edx
	movl %edx,148(%esp)
	movl 124(%esp),%edx
	subl %ecx,%edx
	movl 136(%esp),%ecx
	movl %edx,160(%esp)
	movl 148(%esp),%edx
	sbbl %edx,%ecx
	movl 160(%esp),%edx
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1esF_info - _c1esF_info_dsp
.text
	.align 2
_c1esO_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1esO_info:
Lc1esO:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1esO_info - _c1esO_info_dsp
.text
	.align 2
_s1b8Y_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1b8Y_info)+80
	.long	65541
	.long	3
	.long	8454153
_s1b8Y_info:
Lc1etT:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1etX
Lc1etW:
	movl 3(%esi),%edx
	movl %eax,64(%esp)
	movl 7(%esi),%eax
	movl %edx,76(%esp)
	movl 11(%esi),%edx
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_s1b7W_info-(1b)+0,%eax
	movl %eax,-28(%edi)
	movl %ecx,-16(%edi)
	movl 64(%esp),%eax
	movl %eax,%ecx
	addl $_s1b8X_info-(1b)+0,%ecx
	movl %ecx,-12(%edi)
	movl 88(%esp),%ecx
	movl %ecx,-8(%edi)
	movl %edx,-4(%edi)
	leal -28(%edi),%ecx
	movl %ecx,(%edi)
	leal -8(%edi),%ecx
	movl %ecx,16(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_zdfAffineShape2_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 5(%eax),%esi
	jmp _stg_ap_pp_fast
Lc1etX:
	movl $32,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b8Y_info - _s1b8Y_info_dsp
.text
	.align 2
_s1b8Z_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1b8Z_info)+80
	.long	262167
	.long	3
	.long	8454153
_s1b8Z_info:
Lc1etY:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1eu2
Lc1eu1:
	movl %eax,76(%esp)
	movl (%esi),%eax
	movl %eax,88(%esp)
	movl 4(%esi),%eax
	movl %eax,100(%esp)
	movl 8(%esi),%eax
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1b8Y_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 100(%esp),%eax
	movl %eax,-8(%edi)
	movl 112(%esp),%eax
	movl %eax,-4(%edi)
	movl 76(%esp),%eax
	movl %eax,(%edi)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	leal -11(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
Lc1eu2:
	movl $16,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b8Z_info - _s1b8Z_info_dsp
.text
	.align 2
_s1b90_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1b90_info)+80
	.long	262167
	.long	3
	.long	8454153
_s1b90_info:
Lc1eu3:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1eu7
Lc1eu6:
	movl %eax,76(%esp)
	movl (%esi),%eax
	movl %eax,88(%esp)
	movl 4(%esi),%eax
	movl %eax,100(%esp)
	movl 8(%esi),%eax
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1b8Z_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl 100(%esp),%eax
	movl %eax,-8(%edi)
	movl 112(%esp),%eax
	movl %eax,-4(%edi)
	movl 76(%esp),%eax
	movl %eax,(%edi)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	leal -8(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
Lc1eu7:
	movl $16,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b90_info - _s1b90_info_dsp
.text
	.align 2
_s1b91_info_dsp:
.text
	.align 2
	.long	196623
	.long	2
	.long	12
_s1b91_info:
Lc1eud:
	movl 16(%ebx),%eax
	movl %eax,32(%ebx)
	movl 8(%ebx),%eax
	movl %eax,24(%ebx)
	movl 5(%esi),%eax
	movl %eax,16(%ebx)
	movl 1(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
	.long  _s1b91_info - _s1b91_info_dsp
.text
	.align 2
_s1b7H_info_dsp:
.text
	.align 2
	.long	6
	.long	16
_s1b7H_info:
Lc1ewr:
	call 1f
1:	popl	%eax
	leal -48(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1ewv
Lc1eww:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1ewo_info-(1b)+0,%eax
	movl %eax,-36(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 24(%esi),%edx
	movl %eax,64(%esp)
	movl 28(%esi),%eax
	movl %ecx,76(%esp)
	movl 32(%esi),%ecx
	movl 12(%esi),%esi
	movl %edx,88(%esp)
	movl 64(%esp),%edx
	movl %edx,-32(%ebp)
	movl 76(%esp),%edx
	movl %edx,-28(%ebp)
	movl 88(%esp),%edx
	movl %edx,-24(%ebp)
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-36,%ebp
	testw $7,%si
	jne _c1ewo_info
Lc1ewp:
	jmp *(%esi)
Lc1ewv:
	jmp *-16(%ebx)
	.long  _s1b7H_info - _s1b7H_info_dsp
.text
	.align 2
_c1ewo_info_dsp:
.text
	.align 2
	.long	5
	.long	32
_c1ewo_info:
Lc1ewo:
	call 1f
1:	popl	%eax
	addl $_c1ewu_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 8(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1eyE
Lc1ewy:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1eyE:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1ewu_info
	.long  _c1ewo_info - _c1ewo_info_dsp
.text
	.align 2
_c1ewu_info_dsp:
.text
	.align 2
	.long	1480
	.long	32
_c1ewu_info:
Lc1ewu:
	call 1f
1:	popl	%eax
	movl 28(%ebp),%ecx
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gsubt %fake0,%fake1,%fake0
	#GSUB-xxxcase1
	fld %st(1) ; fsubrp %st(0),%st(1)
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gcmp_e %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	sete %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1eyl
Lc1eym:
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gcmp_g %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	seta %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1eyh
Lc1eyi:
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
Ls1b79:
	addl $_c1ewL_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %ecx,%esi
#	gstsd %fake0,8(%ebp)
	fstl 8(%ebp)
	addl $4,%ebp
	testw $7,%si
	jne Lu1eyG
Lc1ewN:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1eyl:
#	gldzsd %fake0
	fldz ; fstp %st(1)
	jmp Ls1b79
Lc1eyh:
	jmp Ls1b79
Lu1eyG:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1ewL_info
	.long  _c1ewu_info - _c1ewu_info_dsp
.text
	.align 2
_c1ewL_info_dsp:
.text
	.align 2
	.long	2759
	.long	32
_c1ewL_info:
Lc1ewL:
	call 1f
1:	popl	%eax
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gldsd Ln1eDD-(1b)+0(%eax),%fake2
	fldl Ln1eDD-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake1,%fake2,%fake1
	#GDIV-xxxcase1
	fld %st(2) ; fdivrp %st(0),%st(2)
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1ey0
Lc1ey1:
	movl L_ghczmprim_GHCziTypes_False_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $32,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1ey0:
	addl $_c1ex3_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl 12(%ebp),%esi
	addl $16,%ebp
	testw $7,%si
	jne Lu1eyH
Lc1ex4:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1eyH:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1ex3_info
	.long  _c1ewL_info - _c1ewL_info_dsp
.const
	.align 2
.align 3
Ln1eDD:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.text
	.align 2
_c1ex3_info_dsp:
.text
	.align 2
	.long	131
	.long	32
_c1ex3_info:
Lc1ex3:
	call 1f
1:	popl	%eax
	addl $_c1ex8_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,4(%ebp)
	fstl 4(%ebp)
	testw $7,%si
	jne Lu1eyI
Lc1exb:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1eyI:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1ex8_info
	.long  _c1ex3_info - _c1ex3_info_dsp
.text
	.align 2
_c1ex8_info_dsp:
.text
	.align 2
	.long	195
	.long	32
_c1ex8_info:
Lc1ex8:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gsubt %fake0,%fake1,%fake0
	#GSUB-xxxcase1
	fld %st(1) ; fsubrp %st(0),%st(1)
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gcmp_e %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	sete %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1exX
Lc1exY:
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gcmp_g %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	seta %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1exM
Lc1exN:
	addl $_c1ext_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %ecx,%esi
#	gstsd %fake0,8(%ebp)
	fstl 8(%ebp)
	addl $4,%ebp
	testw $7,%si
	jne Lu1eyK
Lc1exw:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1exM:
	addl $_c1exC_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %ecx,%esi
#	gstsd %fake0,8(%ebp)
	fstl 8(%ebp)
	addl $4,%ebp
	testw $7,%si
	jne Lu1eyJ
Lc1exE:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1exX:
	addl $_c1exP_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl %ecx,%esi
	addl $12,%ebp
	testw $7,%si
	jne Lu1eyL
Lc1exR:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1eyJ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1exC_info
Lu1eyK:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1ext_info
Lu1eyL:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1exP_info
	.long  _c1ex8_info - _c1ex8_info_dsp
.text
	.align 2
_c1exP_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1exP_info:
Lc1exP:
	call 1f
1:	popl	%eax
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gldsd Ln1eE6-(1b)+0(%eax),%fake2
	fldl Ln1eE6-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake1,%fake2,%fake1
	#GDIV-xxxcase1
	fld %st(2) ; fdivrp %st(0),%st(2)
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	sete %cl
	movzbl %cl,%ecx
	shll $2,%ecx
	movl L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr-(1b)+0(%eax),%eax
	movl (%ecx,%eax,1),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1exP_info - _c1exP_info_dsp
.const
	.align 2
.align 3
Ln1eE6:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.text
	.align 2
_c1exC_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1exC_info:
Lc1exC:
	call 1f
1:	popl	%eax
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gldsd Ln1eEh-(1b)+0(%eax),%fake2
	fldl Ln1eEh-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake1,%fake2,%fake1
	#GDIV-xxxcase1
	fld %st(2) ; fdivrp %st(0),%st(2)
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	sete %cl
	movzbl %cl,%ecx
	shll $2,%ecx
	movl L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr-(1b)+0(%eax),%eax
	movl (%ecx,%eax,1),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1exC_info - _c1exC_info_dsp
.const
	.align 2
.align 3
Ln1eEh:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.text
	.align 2
_c1ext_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1ext_info:
Lc1ext:
	call 1f
1:	popl	%eax
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gldsd Ln1eEt-(1b)+0(%eax),%fake2
	fldl Ln1eEt-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake1,%fake2,%fake1
	#GDIV-xxxcase1
	fld %st(2) ; fdivrp %st(0),%st(2)
#	gcmp_l %fake0,%fake1
	pushl %eax ; fld %st(0)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	sete %cl
	movzbl %cl,%ecx
	shll $2,%ecx
	movl L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr-(1b)+0(%eax),%eax
	movl (%ecx,%eax,1),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1ext_info - _c1ext_info_dsp
.const
	.align 2
.align 3
Ln1eEt:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.text
	.align 2
_s1b7I_info_dsp:
.text
	.align 2
	.long	131077
	.long	5
	.long	9
_s1b7I_info:
Lc1eyM:
	call 1f
1:	popl	%eax
	addl $36,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1eyQ
Lc1eyP:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1b7H_info-(1b)+0,%eax
	movl %eax,-32(%edi)
	movl 76(%esp),%eax
	movl %eax,-20(%edi)
	movl 88(%esp),%eax
	movl %eax,-16(%edi)
	movl 100(%esp),%eax
	movl %eax,-12(%edi)
	movl 112(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -32(%edi),%esi
	jmp *(%ebp)
Lc1eyQ:
	movl $36,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b7I_info - _s1b7I_info_dsp
.text
	.align 2
_s1b7J_info_dsp:
.text
	.align 2
	.long	131077
	.long	5
	.long	9
_s1b7J_info:
Lc1eyR:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1eyV
Lc1eyU:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1b7I_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 88(%esp),%eax
	movl %eax,-16(%edi)
	movl 100(%esp),%eax
	movl %eax,-12(%edi)
	movl 112(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -18(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1eyV:
	movl $24,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b7J_info - _s1b7J_info_dsp
.text
	.align 2
_s1b7K_info_dsp:
.text
	.align 2
	.long	131077
	.long	5
	.long	9
_s1b7K_info:
Lc1eyW:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1ez0
Lc1eyZ:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1b7J_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 88(%esp),%eax
	movl %eax,-16(%edi)
	movl 100(%esp),%eax
	movl %eax,-12(%edi)
	movl 112(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -18(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1ez0:
	movl $24,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b7K_info - _s1b7K_info_dsp
.text
	.align 2
_s1b7L_info_dsp:
.text
	.align 2
	.long	131077
	.long	5
	.long	9
_s1b7L_info:
Lc1ez1:
	call 1f
1:	popl	%eax
	addl $24,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1ez5
Lc1ez4:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 64(%esp),%eax
	addl $_s1b7K_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 88(%esp),%eax
	movl %eax,-16(%edi)
	movl 100(%esp),%eax
	movl %eax,-12(%edi)
	movl 112(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -18(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1ez5:
	movl $24,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b7L_info - _s1b7L_info_dsp
.text
	.align 2
_s1b7M_info_dsp:
.text
	.align 2
	.long	131077
	.long	4
	.long	9
_s1b7M_info:
Lc1ez6:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -20(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1ez7
Lc1ez8:
	addl $_c1evV_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl 2(%esi),%eax
	movl 6(%esi),%edx
	movl %eax,64(%esp)
	movl 10(%esi),%eax
	movl %edx,76(%esp)
	movl 14(%esi),%edx
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _c1evV_info
Lc1evW:
	jmp *(%esi)
Lc1ez7:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1b7M_info - _s1b7M_info_dsp
.text
	.align 2
_c1evV_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1evV_info:
Lc1evV:
	call 1f
1:	popl	%eax
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1ezb
Lc1eza:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_s1b7L_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 8(%ebp),%eax
	movl %eax,-16(%edi)
	movl 12(%ebp),%eax
	movl %eax,-12(%edi)
	movl 16(%ebp),%eax
	movl %eax,-8(%edi)
	movl %ecx,-4(%edi)
	movl %edx,(%edi)
	leal -18(%edi),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $20,%ebp
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1ezb:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1evV_info - _c1evV_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdwcenterRect_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdwcenterRect_info)+80
	.long	262168
	.long	0
	.long	276889615
.globl _CoreziShapeziInternal_zdwcenterRect_info
_CoreziShapeziInternal_zdwcenterRect_info:
Lc1ezd:
	call 1f
1:	popl	%eax
	addl $48,%edi
	movl 32(%ebx),%ecx
	movl 24(%ebx),%edx
	movl %eax,64(%esp)
	movl 16(%ebx),%eax
	movl %eax,76(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1ezh
Lc1ezg:
	movl %eax,88(%esp)
	movl 64(%esp),%eax
	addl $_s1b90_info-(1b)+0,%eax
	movl %eax,-44(%edi)
	movl 76(%esp),%eax
	movl %eax,-40(%edi)
	movl %edx,-36(%edi)
	movl %ecx,-32(%edi)
	movl 64(%esp),%eax
	addl $_s1b91_info-(1b)+0,%eax
	movl %eax,-28(%edi)
	movl 88(%esp),%eax
	movl %eax,-24(%edi)
	leal -40(%edi),%eax
	movl %eax,-20(%edi)
	movl 64(%esp),%eax
	addl $_s1b7M_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 88(%esp),%eax
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,16(%ebx)
	leal -25(%edi),%eax
	movl %eax,8(%ebx)
	leal -14(%edi),%esi
	jmp *(%ebp)
Lc1ezh:
	movl $48,904(%ebx)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdwcenterRect_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdwcenterRect_info - _CoreziShapeziInternal_zdwcenterRect_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_centerRect_closure
_CoreziShapeziInternal_centerRect_closure:
	.long	_CoreziShapeziInternal_centerRect_info
	.long	0
.text
	.align 2
_CoreziShapeziInternal_centerRect_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_centerRect_info)+128
	.long	131087
	.long	0
	.long	196623
.globl _CoreziShapeziInternal_centerRect_info
_CoreziShapeziInternal_centerRect_info:
Lc1eFF:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1eFQ
Lc1eFR:
	movl 64(%esp),%eax
	addl $_c1eFC_info-(1b)+0,%eax
	movl %eax,-8(%ebp)
	movl %edx,%esi
	movl %ecx,-4(%ebp)
	addl $-8,%ebp
	testw $7,%si
	jne _c1eFC_info
Lc1eFD:
	jmp *(%esi)
Lc1eFQ:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_centerRect_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_centerRect_info - _CoreziShapeziInternal_centerRect_info_dsp
.text
	.align 2
_c1eFC_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eFC_info)+128
	.long	1
	.long	65568
_c1eFC_info:
Lc1eFC:
	call 1f
1:	popl	%eax
	addl $_c1eFI_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl 4(%ebp),%esi
	movl %ecx,(%ebp)
	movl %eax,4(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1eFI_info
Lc1eFJ:
	jmp *(%esi)
	.long  _c1eFC_info - _c1eFC_info_dsp
.text
	.align 2
_c1eFI_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eFI_info)+128
	.long	2
	.long	65568
_c1eFI_info:
Lc1eFI:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
	addl $_c1eFN_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl 7(%esi),%eax
	movl %eax,32(%ebx)
	movl 3(%esi),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	addl $8,%ebp
	jmp _CoreziShapeziInternal_zdwcenterRect_info
	.long  _c1eFI_info - _c1eFI_info_dsp
.text
	.align 2
_c1eFN_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1eFN_info:
Lc1eFN:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1eFW
Lc1eFV:
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %esi,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1eFW:
	movl $16,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1eFN_info - _c1eFN_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwroundRect_closure
_CoreziShapeziInternal_zdwroundRect_closure:
	.long	_CoreziShapeziInternal_zdwroundRect_info
	.long	0
.text
	.align 2
_s1bdn_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1bdn_info)+72
	.long	262167
	.long	4
	.long	36110345
_s1bdn_info:
Lc1eK3:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -124(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1eMv
Lc1eMw:
	movl 64(%esp),%eax
	addl $_c1eK0_info-(1b)+0,%eax
	movl %eax,-28(%ebp)
	movl 4(%esi),%eax
	movl %eax,88(%esp)
	movl 8(%esi),%eax
	movl %eax,100(%esp)
	movl 12(%esi),%eax
	movl (%esi),%esi
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	movl %eax,-24(%ebp)
	movl 100(%esp),%eax
	movl %eax,-20(%ebp)
	movl 112(%esp),%eax
	movl %eax,-16(%ebp)
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-28,%ebp
	testw $7,%si
	jne _c1eK0_info
Lc1eK1:
	jmp *(%esi)
Lc1eMv:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1bdn_info - _s1bdn_info_dsp
.text
	.align 2
_c1eK0_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eK0_info)+72
	.long	6
	.long	36110368
_c1eK0_info:
Lc1eK0:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1eMz
Lc1eMy:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1eKc_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 16(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	movl -4(%edi),%eax
	movl %eax,16(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1eQC
Lc1eKd:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1eMz:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1eQC:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eKc_info
	.long  _c1eK0_info - _c1eK0_info_dsp
.text
	.align 2
_c1eKc_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eKc_info)+72
	.long	4553
	.long	36110368
_c1eKc_info:
Lc1eKc:
	call 1f
1:	popl	%eax
	addl $_c1eKh_info-(1b)+0,%eax
	movl %eax,(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 16(%ebp),%esi
#	gstsd %fake0,12(%ebp)
	fstl 12(%ebp)
	testw $7,%si
	jne Lu1eQE
Lc1eKi:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1eQE:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eKh_info
	.long  _c1eKc_info - _c1eKc_info_dsp
.text
	.align 2
_c1eKh_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eKh_info)+72
	.long	5065
	.long	36110368
_c1eKh_info:
Lc1eKh:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1eME
Lc1eMD:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1eKs_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 32(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	movl -4(%edi),%eax
	movl %eax,32(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1eQF
Lc1eKt:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1eME:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1eQF:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eKs_info
	.long  _c1eKh_info - _c1eKh_info_dsp
.text
	.align 2
_c1eKs_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eKs_info)+72
	.long	106444
	.long	36110368
_c1eKs_info:
Lc1eKs:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1eKx_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl %esi,%ecx
	movl 3(%esi),%edx
	movl L_CoreziShapeziInternal_bezzierzuf2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %edx,(%ebp)
	movl %ecx,12(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1eKx_info
Lc1eKy:
	jmp *(%esi)
	.long  _c1eKs_info - _c1eKs_info_dsp
.text
	.align 2
_c1eKx_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eKx_info)+72
	.long	212429
	.long	35848224
_c1eKx_info:
Lc1eKx:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1eMJ
Lc1eMI:
	movl 3(%esi),%ecx
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%edi)
#	gldsd 20(%ebp),%fake0
	fldl 20(%ebp) ; fstp %st(1)
#	gldsd 28(%ebp),%fake1
	fldl 28(%ebp) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1eKL_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 52(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	movl -4(%edi),%eax
	movl %eax,(%ebp)
	movl %ecx,52(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1eQH
Lc1eKM:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1eMJ:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1eQH:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eKL_info
	.long  _c1eKx_info - _c1eKx_info_dsp
.text
	.align 2
_c1eKL_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eKL_info)+72
	.long	3796944
	.long	35848224
_c1eKL_info:
Lc1eKL:
	call 1f
1:	popl	%eax
	addl $_c1eKW_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%eax
	movl %eax,(%ebp)
	movl 64(%ebp),%ecx
	movl %esi,64(%ebp)
	movl 12(%ebp),%edx
	movl %ecx,64(%esp)
	movl 60(%ebp),%ecx
	movl %edx,76(%esp)
	movl 16(%ebp),%edx
	addl $-4,%ebp
	movl %ecx,88(%esp)
	movl 872(%ebx),%ecx
	movl %edx,100(%esp)
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,112(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,124(%esp)
	movl 104(%ecx),%eax
	movl %eax,136(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,148(%esp)
	movl 124(%esp),%edx
	subl %eax,%edx
	movl 136(%esp),%eax
	movl %edx,160(%esp)
	movl 148(%esp),%edx
	sbbl %edx,%eax
	movl 160(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1eKL_info - _c1eKL_info_dsp
.text
	.align 2
_c1eKW_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eKW_info)+72
	.long	3399633
	.long	35848224
_c1eKW_info:
Lc1eKW:
	call 1f
1:	popl	%eax
	addl $_c1eKY_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 52(%ebp),%esi
	testw $7,%si
	jne _c1eKY_info
Lc1eKZ:
	jmp *(%esi)
	.long  _c1eKW_info - _c1eKW_info_dsp
.text
	.align 2
_c1eKY_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eKY_info)+72
	.long	3661777
	.long	35848224
_c1eKY_info:
Lc1eKY:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1eL3_info-(1b)+0,%ecx
	movl %ecx,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_CoreziShapeziInternal_linezuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1eQJ
Lc1eL4:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1eQJ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eL3_info
	.long  _c1eKY_info - _c1eKY_info_dsp
.text
	.align 2
_c1eL3_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eL3_info)+72
	.long	29294548
	.long	2293792
_c1eL3_info:
Lc1eL3:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1eMQ
Lc1eMP:
	movl 3(%esi),%ecx
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%edi)
#	gldsd 48(%ebp),%fake0
	fldl 48(%ebp) ; fstp %st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
#	gldsd 56(%ebp),%fake1
	fldl 56(%ebp) ; fstp %st(2)
#	gsubt %fake0,%fake1,%fake0
	#GSUB-xxxcase1
	fld %st(1) ; fsubrp %st(0),%st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1eLq_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	movl 76(%ebp),%eax
	movl %ecx,76(%ebp)
	movl 32(%ebp),%edx
	movl %eax,64(%esp)
	movl 16(%ebp),%eax
	addl $-12,%ebp
	movl %edx,76(%esp)
	movl -4(%edi),%edx
	movl %edx,88(%esp)
	movl 872(%ebx),%edx
	movl %eax,100(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,124(%esp)
	movl 104(%edx),%ecx
	movl %ecx,136(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,148(%esp)
	movl 124(%esp),%eax
	subl %ecx,%eax
	movl 136(%esp),%ecx
	movl %eax,160(%esp)
	movl 148(%esp),%eax
	sbbl %eax,%ecx
	movl 160(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 108(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl 80(%esp),%ecx
	pushl %ecx
	movl 108(%esp),%ecx
	pushl %ecx
	movl 136(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1eMQ:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1eL3_info - _c1eL3_info_dsp
.text
	.align 2
_c1eLq_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eLq_info)+72
	.long	234356695
	.long	2293792
_c1eLq_info:
Lc1eLq:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1eLs_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r13Gl_closure-(1b)+0,%esi
	testw $7,%si
	jne _c1eLs_info
Lc1eLt:
	jmp *(%esi)
	.long  _c1eLq_info - _c1eLq_info_dsp
.text
	.align 2
_c1eLs_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eLs_info)+72
	.long	234356695
	.long	196640
_c1eLs_info:
Lc1eLs:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1eMV
Lc1eMU:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gldsd 60(%ebp),%fake1
	fldl 60(%ebp) ; fstp %st(2)
#	gldsd 16(%ebp),%fake2
	fldl 16(%ebp) ; fstp %st(3)
#	gaddt %fake1,%fake2,%fake1
	#GADD-xxxcase1
	fld %st(2) ; faddp %st(0),%st(2)
#	gstsd %fake1,-4(%edi)
	fld %st(1) ; fstpl -4(%edi)
	movl %eax,%ecx
	addl $_c1eLG_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_CoreziShapeziInternal_bezzierzuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
#	gstsd %fake0,12(%ebp)
	fstl 12(%ebp)
#	gstsd %fake1,20(%ebp)
	fld %st(1) ; fstpl 20(%ebp)
	movl -4(%edi),%eax
	movl %eax,76(%ebp)
	testw $7,%si
	jne Lu1eQL
Lc1eLH:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1eMV:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1eQL:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eLG_info
	.long  _c1eLs_info - _c1eLs_info_dsp
.text
	.align 2
_c1eLG_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eLG_info)+72
	.long	234356695
	.long	65568
_c1eLG_info:
Lc1eLG:
	call 1f
1:	popl	%eax
	addl $168,%edi
	cmpl 856(%ebx),%edi
	ja Lc1eMZ
Lc1eMY:
	movl 3(%esi),%ecx
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-164(%edi)
#	gldsd 68(%ebp),%fake0
	fldl 68(%ebp) ; fstp %st(1)
#	gldsd 12(%ebp),%fake1
	fldl 12(%ebp) ; fstp %st(2)
#	gldsd 4(%ebp),%fake2
	fldl 4(%ebp) ; fstp %st(3)
#	gmult %fake0,%fake1,%fake3
	fld %st(0) ; fmul %st(2),%st(0) ; fstp %st(4)
#	gaddt %fake2,%fake3,%fake2
	#GADD-xxxcase1
	fld %st(3) ; faddp %st(0),%st(3)
#	gstsd %fake2,-160(%edi)
	fld %st(2) ; fstpl -160(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-152(%edi)
	leal -163(%edi),%edx
	movl %edx,-148(%edi)
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,-144(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-140(%edi)
#	gldsd 48(%ebp),%fake2
	fldl 48(%ebp) ; fstp %st(3)
#	gstsd %fake2,-136(%edi)
	fld %st(2) ; fstpl -136(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-128(%edi)
	leal -139(%edi),%edx
	movl %edx,-124(%edi)
	leal -150(%edi),%edx
	movl %edx,-120(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-116(%edi)
#	gldsd 20(%ebp),%fake3
	fldl 20(%ebp) ; fstp %st(4)
#	gstsd %fake3,-112(%edi)
	fld %st(3) ; fstpl -112(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-104(%edi)
	leal -115(%edi),%edx
	movl %edx,-100(%edi)
	leal -126(%edi),%edx
	movl %edx,-96(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-92(%edi)
#	gaddt %fake2,%fake0,%fake2
	#GADD-xxxcase1
	fld %st(0) ; faddp %st(0),%st(3)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gsubt %fake2,%fake0,%fake0
	#GSUB-xxxcase2
	fld %st(2) ; fsubp %st(0),%st(1)
#	gstsd %fake0,-88(%edi)
	fstl -88(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-80(%edi)
	leal -91(%edi),%edx
	movl %edx,-76(%edi)
	leal -102(%edi),%edx
	movl %edx,-72(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-68(%edi)
#	gstsd %fake3,-64(%edi)
	fld %st(3) ; fstpl -64(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-56(%edi)
	leal -67(%edi),%edx
	movl %edx,-52(%edi)
	leal -78(%edi),%edx
	movl %edx,-48(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-44(%edi)
#	gstsd %fake2,-40(%edi)
	fld %st(2) ; fstpl -40(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-32(%edi)
	leal -43(%edi),%edx
	movl %edx,-28(%edi)
	leal -54(%edi),%edx
	movl %edx,-24(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-20(%edi)
	movl 56(%ebp),%edx
	movl %edx,-16(%edi)
	leal -30(%edi),%edx
	movl %edx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 92(%ebp),%eax
	movl %eax,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
#	gstsd %fake2,-12(%ebp)
	fld %st(2) ; fstpl -12(%ebp)
	leal -6(%edi),%eax
	movl %eax,-4(%ebp)
	movl %ecx,(%ebp)
	addl $-12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eMh_entry
Lc1eMZ:
	movl $168,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1eLG_info - _c1eLG_info_dsp
.text
	.align 2
_c1eMh_entry:
Lc1eMh:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 8(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1eN2
Lc1eN1:
	movl 3(%ecx),%ecx
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%edi)
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1eMs_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl -4(%edi),%eax
	movl %eax,8(%ebp)
	movl 12(%ebp),%eax
	addl $-4,%ebp
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L___apply$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1eN2:
	movl $12,904(%ebx)
	movl %eax,%edx
	addl $_c1eMg_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
.text
	.align 2
_c1eMg_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eMg_info)+72
	.long	-545259557
	.long	65568
_c1eMg_info:
Lc1eMg:
	movl %esi,12(%ebp)
	addl $4,%ebp
	jmp _c1eMh_entry
	.long  _c1eMg_info - _c1eMg_info_dsp
.text
	.align 2
_c1eMs_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eMs_info)+72
	.long	-545259557
	.long	65568
_c1eMs_info:
Lc1eMs:
	call 1f
1:	popl	%eax
	addl $_c1eMu_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 96(%ebp),%esi
	testw $7,%si
	jne _c1eMu_info
Lc1eN5:
	jmp *(%esi)
	.long  _c1eMs_info - _c1eMs_info_dsp
.text
	.align 2
_c1eMu_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eMu_info)+72
	.long	-8388645
	.long	65568
_c1eMu_info:
Lc1eMu:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1eNb
Lc1eNa:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gldsd 64(%ebp),%fake1
	fldl 64(%ebp) ; fstp %st(2)
#	gaddt %fake1,%fake0,%fake1
	#GADD-xxxcase1
	fld %st(0) ; faddp %st(0),%st(2)
#	gldsd 84(%ebp),%fake2
	fldl 84(%ebp) ; fstp %st(3)
#	gsubt %fake1,%fake2,%fake1
	#GSUB-xxxcase1
	fld %st(2) ; fsubrp %st(0),%st(2)
#	gstsd %fake1,-4(%edi)
	fld %st(1) ; fstpl -4(%edi)
	addl $_c1eNv_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gstsd %fake1,-8(%ebp)
	fld %st(1) ; fstpl -8(%ebp)
	movl 92(%ebp),%eax
#	gstsd %fake0,92(%ebp)
	fstl 92(%ebp)
	movl 104(%ebp),%ecx
	movl 60(%ebp),%edx
	movl %ecx,64(%esp)
	movl 44(%ebp),%ecx
	addl $-12,%ebp
	movl %eax,76(%esp)
	movl -4(%edi),%eax
	movl %eax,88(%esp)
	movl 872(%ebx),%eax
	movl %edx,100(%esp)
	movl 20(%eax),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%edx)
	movl 100(%eax),%ecx
	movl %ecx,124(%esp)
	movl 104(%eax),%ecx
	movl %ecx,136(%esp)
	leal 4(%edi),%ecx
	subl (%edx),%ecx
	xorl %edx,%edx
	movl %edx,148(%esp)
	movl 124(%esp),%edx
	subl %ecx,%edx
	movl 136(%esp),%ecx
	movl %edx,160(%esp)
	movl 148(%esp),%edx
	sbbl %edx,%ecx
	movl 160(%esp),%edx
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1eNb:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1eMu_info - _c1eMu_info_dsp
.const
	.align 2
.align 0
_bi1eZU_btm:
	.long	30
	.long	535822335
.text
	.align 2
_c1eNv_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eNv_info)+72
	.long	_bi1eZU_btm-(_c1eNv_info)+0
	.long	65569
_c1eNv_info:
Lc1eNv:
	call 1f
1:	popl	%eax
	addl $168,%edi
	cmpl 856(%ebx),%edi
	ja Lc1eNz
Lc1eNy:
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-164(%edi)
#	gldsd 48(%ebp),%fake0
	fldl 48(%ebp) ; fstp %st(1)
#	gstsd %fake0,-160(%edi)
	fstl -160(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-152(%edi)
	leal -163(%edi),%ecx
	movl %ecx,-148(%edi)
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,-144(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-140(%edi)
#	gldsd 96(%ebp),%fake0
	fldl 96(%ebp) ; fstp %st(1)
#	gldsd 40(%ebp),%fake1
	fldl 40(%ebp) ; fstp %st(2)
#	gldsd 4(%ebp),%fake2
	fldl 4(%ebp) ; fstp %st(3)
#	gmult %fake0,%fake1,%fake3
	fld %st(0) ; fmul %st(2),%st(0) ; fstp %st(4)
#	gaddt %fake2,%fake3,%fake2
	#GADD-xxxcase1
	fld %st(3) ; faddp %st(0),%st(3)
#	gstsd %fake2,-136(%edi)
	fld %st(2) ; fstpl -136(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-128(%edi)
	leal -139(%edi),%ecx
	movl %ecx,-124(%edi)
	leal -150(%edi),%ecx
	movl %ecx,-120(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-116(%edi)
#	gldsd 32(%ebp),%fake2
	fldl 32(%ebp) ; fstp %st(3)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gaddt %fake2,%fake0,%fake0
	#GADD-xxxcase2
	fld %st(2) ; faddp %st(0),%st(1)
#	gstsd %fake0,-112(%edi)
	fstl -112(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-104(%edi)
	leal -115(%edi),%ecx
	movl %ecx,-100(%edi)
	leal -126(%edi),%ecx
	movl %ecx,-96(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-92(%edi)
#	gldsd 76(%ebp),%fake0
	fldl 76(%ebp) ; fstp %st(1)
#	gldsd 104(%ebp),%fake1
	fldl 104(%ebp) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
#	gstsd %fake0,-88(%edi)
	fstl -88(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-80(%edi)
	leal -91(%edi),%ecx
	movl %ecx,-76(%edi)
	leal -102(%edi),%ecx
	movl %ecx,-72(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-68(%edi)
#	gstsd %fake2,-64(%edi)
	fld %st(2) ; fstpl -64(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-56(%edi)
	leal -67(%edi),%ecx
	movl %ecx,-52(%edi)
	leal -78(%edi),%ecx
	movl %ecx,-48(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-44(%edi)
#	gstsd %fake0,-40(%edi)
	fstl -40(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-32(%edi)
	leal -43(%edi),%ecx
	movl %ecx,-28(%edi)
	leal -54(%edi),%ecx
	movl %ecx,-24(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-20(%edi)
	movl 84(%ebp),%ecx
	movl %ecx,-16(%edi)
	leal -30(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	movl 120(%ebp),%eax
	movl %eax,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
#	gstsd %fake0,48(%ebp)
	fstl 48(%ebp)
	leal -6(%edi),%eax
	movl %eax,108(%ebp)
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eO6_entry
Lc1eNz:
	movl $168,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1eNv_info - _c1eNv_info_dsp
.text
	.align 2
_c1eO6_entry:
Lc1eO6:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 104(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1eOa
Lc1eO9:
	movl 3(%ecx),%ecx
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gldsd 44(%ebp),%fake0
	fldl 44(%ebp) ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%eax
	movl %eax,100(%ebp)
	movl %ecx,104(%ebp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eOf_entry
Lc1eOa:
	movl $12,904(%ebx)
	movl %eax,%edx
	addl $_c1eO5_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
.const
	.align 2
.align 0
_bi1eZV_btm:
	.long	30
	.long	535822335
.text
	.align 2
_c1eO5_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eO5_info)+72
	.long	_bi1eZV_btm-(_c1eO5_info)+0
	.long	65569
_c1eO5_info:
Lc1eO5:
	movl %esi,108(%ebp)
	addl $4,%ebp
	jmp _c1eO6_entry
	.long  _c1eO5_info - _c1eO5_info_dsp
.text
	.align 2
_c1eOf_entry:
Lc1eOf:
	call 1f
1:	popl	%eax
	addl $168,%edi
	movl 100(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1eOj
Lc1eOi:
	movl 3(%ecx),%ecx
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-164(%edi)
#	gldsd 92(%ebp),%fake0
	fldl 92(%ebp) ; fstp %st(1)
#	gldsd 36(%ebp),%fake1
	fldl 36(%ebp) ; fstp %st(2)
#	gldsd 56(%ebp),%fake2
	fldl 56(%ebp) ; fstp %st(3)
#	gmult %fake0,%fake1,%fake3
	fld %st(0) ; fmul %st(2),%st(0) ; fstp %st(4)
#	gsubt %fake2,%fake3,%fake2
	#GSUB-xxxcase1
	fld %st(3) ; fsubrp %st(0),%st(3)
#	gstsd %fake2,-160(%edi)
	fld %st(2) ; fstpl -160(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-152(%edi)
	leal -163(%edi),%edx
	movl %edx,-148(%edi)
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	incl %edx
	movl %edx,-144(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-140(%edi)
#	gldsd 44(%ebp),%fake2
	fldl 44(%ebp) ; fstp %st(3)
#	gstsd %fake2,-136(%edi)
	fld %st(2) ; fstpl -136(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-128(%edi)
	leal -139(%edi),%edx
	movl %edx,-124(%edi)
	leal -150(%edi),%edx
	movl %edx,-120(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-116(%edi)
#	gldsd 84(%ebp),%fake2
	fldl 84(%ebp) ; fstp %st(3)
#	gstsd %fake2,-112(%edi)
	fld %st(2) ; fstpl -112(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-104(%edi)
	leal -115(%edi),%edx
	movl %edx,-100(%edi)
	leal -126(%edi),%edx
	movl %edx,-96(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-92(%edi)
#	gldsd (%ebp),%fake3
	fldl (%ebp) ; fstp %st(4)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gaddt %fake3,%fake0,%fake0
	#GADD-xxxcase2
	fld %st(3) ; faddp %st(0),%st(1)
#	gstsd %fake0,-88(%edi)
	fstl -88(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-80(%edi)
	leal -91(%edi),%edx
	movl %edx,-76(%edi)
	leal -102(%edi),%edx
	movl %edx,-72(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-68(%edi)
#	gstsd %fake2,-64(%edi)
	fld %st(2) ; fstpl -64(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-56(%edi)
	leal -67(%edi),%edx
	movl %edx,-52(%edi)
	leal -78(%edi),%edx
	movl %edx,-48(%edi)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-44(%edi)
#	gstsd %fake3,-40(%edi)
	fld %st(3) ; fstpl -40(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-32(%edi)
	leal -43(%edi),%edx
	movl %edx,-28(%edi)
	leal -54(%edi),%edx
	movl %edx,-24(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-20(%edi)
	movl 80(%ebp),%edx
	movl %edx,-16(%edi)
	leal -30(%edi),%edx
	movl %edx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%edi)
	movl 116(%ebp),%edx
	movl %edx,-4(%edi)
	leal -18(%edi),%edx
	movl %edx,(%edi)
	addl $_c1eOT_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl -3(%edi),%eax
	movl %eax,100(%ebp)
	movl 104(%ebp),%eax
	movl %ecx,104(%ebp)
	movl 24(%ebp),%ecx
	addl $8,%ebp
	movl 872(%ebx),%edx
	movl %ecx,64(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,76(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,88(%esp)
	movl 104(%edx),%eax
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,112(%esp)
	movl 88(%esp),%ecx
	subl %eax,%ecx
	movl 100(%esp),%eax
	movl %ecx,124(%esp)
	movl 112(%esp),%ecx
	sbbl %ecx,%eax
	movl 124(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L___apply$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1eOj:
	movl $168,904(%ebx)
	movl %eax,%edx
	addl $_c1eOe_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
.const
	.align 2
.align 0
_bi1eZW_btm:
	.long	30
	.long	535822335
.text
	.align 2
_c1eOe_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eOe_info)+72
	.long	_bi1eZW_btm-(_c1eOe_info)+0
	.long	65569
_c1eOe_info:
Lc1eOe:
	movl %esi,104(%ebp)
	addl $4,%ebp
	jmp _c1eOf_entry
	.long  _c1eOe_info - _c1eOe_info_dsp
.text
	.align 2
_c1eOT_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eOT_info)+72
	.long	-37
	.long	65568
_c1eOT_info:
Lc1eOT:
	call 1f
1:	popl	%eax
	addl $_c1eP2_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 104(%ebp),%eax
	movl 56(%ebp),%ecx
	movl 96(%ebp),%edx
	movl %eax,64(%esp)
	movl 60(%ebp),%eax
	movl %ecx,76(%esp)
	movl 44(%ebp),%ecx
	movl %edx,88(%esp)
	movl 872(%ebx),%edx
	movl %eax,100(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,124(%esp)
	movl 104(%edx),%ecx
	movl %ecx,136(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,148(%esp)
	movl 124(%esp),%eax
	subl %ecx,%eax
	movl 136(%esp),%ecx
	movl %eax,160(%esp)
	movl 148(%esp),%eax
	sbbl %eax,%ecx
	movl 160(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1eOT_info - _c1eOT_info_dsp
.text
	.align 2
_c1eP2_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eP2_info)+72
	.long	-37
	.long	65568
_c1eP2_info:
Lc1eP2:
	call 1f
1:	popl	%eax
	addl $_c1eP8_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 16(%ebp),%eax
	movl 92(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L___apply$stub
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1eP2_info - _c1eP2_info_dsp
.text
	.align 2
_c1eP8_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1eP8_info)+72
	.long	-37
	.long	65568
_c1eP8_info:
Lc1eP8:
	call 1f
1:	popl	%eax
	addl $_c1ePh_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 104(%ebp),%eax
	movl 100(%ebp),%ecx
	movl 12(%ebp),%edx
	movl %eax,64(%esp)
	movl 60(%ebp),%eax
	movl %ecx,76(%esp)
	movl 44(%ebp),%ecx
	movl %edx,88(%esp)
	movl 872(%ebx),%edx
	movl %eax,100(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,124(%esp)
	movl 104(%edx),%ecx
	movl %ecx,136(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,148(%esp)
	movl 124(%esp),%eax
	subl %ecx,%eax
	movl 136(%esp),%ecx
	movl %eax,160(%esp)
	movl 148(%esp),%eax
	sbbl %eax,%ecx
	movl 160(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1eP8_info - _c1eP8_info_dsp
.text
	.align 2
_c1ePh_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1ePh_info)+72
	.long	-37
	.long	65568
_c1ePh_info:
Lc1ePh:
	movl 108(%ebp),%eax
	movl %eax,16(%ebx)
	movl 60(%ebp),%eax
	movl %eax,8(%ebx)
#	gldsd 64(%ebp),%fake0
	fldl 64(%ebp) ; fstp %st(1)
#	gstsd %fake0,144(%ebx)
	fstl 144(%ebx)
#	gldsd 48(%ebp),%fake1
	fldl 48(%ebp) ; fstp %st(2)
#	gstsd %fake1,136(%ebx)
	fld %st(1) ; fstpl 136(%ebx)
#	gstsd %fake0,128(%ebx)
	fstl 128(%ebx)
#	gldsd 84(%ebp),%fake0
	fldl 84(%ebp) ; fstp %st(1)
#	gldsd 28(%ebp),%fake2
	fldl 28(%ebp) ; fstp %st(3)
#	gmult %fake0,%fake2,%fake3
	fld %st(0) ; fmul %st(3),%st(0) ; fstp %st(4)
#	gsubt %fake1,%fake3,%fake1
	#GSUB-xxxcase1
	fld %st(3) ; fsubrp %st(0),%st(2)
#	gstsd %fake1,120(%ebx)
	fld %st(1) ; fstpl 120(%ebx)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake2,%fake0
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(1)
#	gsubt %fake1,%fake0,%fake0
	#GSUB-xxxcase2
	fld %st(1) ; fsubp %st(0),%st(1)
#	gstsd %fake0,112(%ebx)
	fstl 112(%ebx)
#	gldsd 76(%ebp),%fake0
	fldl 76(%ebp) ; fstp %st(1)
#	gstsd %fake0,104(%ebx)
	fstl 104(%ebx)
	addl $112,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _CoreziShapeziInternal_zdwa_info
	.long  _c1ePh_info - _c1ePh_info_dsp
.text
	.align 2
_s1bdo_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1bdo_info)+72
	.long	262167
	.long	4
	.long	36110345
_s1bdo_info:
Lc1eQT:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1eQX
Lc1eQW:
	movl %eax,76(%esp)
	movl (%esi),%eax
	movl %eax,88(%esp)
	movl 4(%esi),%eax
	movl %eax,100(%esp)
	movl 8(%esi),%eax
	movl %eax,112(%esp)
	movl 12(%esi),%eax
	movl %eax,124(%esp)
	movl 64(%esp),%eax
	addl $_s1bdn_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 100(%esp),%eax
	movl %eax,-12(%edi)
	movl 112(%esp),%eax
	movl %eax,-8(%edi)
	movl 124(%esp),%eax
	movl %eax,-4(%edi)
	movl 76(%esp),%eax
	movl %eax,(%edi)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	leal -12(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
Lc1eQX:
	movl $20,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1bdo_info - _s1bdo_info_dsp
.text
	.align 2
_s1bdp_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1bdp_info)+72
	.long	262167
	.long	4
	.long	36110345
_s1bdp_info:
Lc1eQY:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1eR2
Lc1eR1:
	movl %eax,76(%esp)
	movl (%esi),%eax
	movl %eax,88(%esp)
	movl 4(%esi),%eax
	movl %eax,100(%esp)
	movl 8(%esi),%eax
	movl %eax,112(%esp)
	movl 12(%esi),%eax
	movl %eax,124(%esp)
	movl 64(%esp),%eax
	addl $_s1bdo_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 100(%esp),%eax
	movl %eax,-12(%edi)
	movl 112(%esp),%eax
	movl %eax,-8(%edi)
	movl 124(%esp),%eax
	movl %eax,-4(%edi)
	movl 76(%esp),%eax
	movl %eax,(%edi)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	leal -12(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
Lc1eR2:
	movl $20,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1bdp_info - _s1bdp_info_dsp
.text
	.align 2
_s1bdq_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1bdq_info)+72
	.long	262167
	.long	4
	.long	36110345
_s1bdq_info:
Lc1eR3:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1eR7
Lc1eR6:
	movl %eax,76(%esp)
	movl (%esi),%eax
	movl %eax,88(%esp)
	movl 4(%esi),%eax
	movl %eax,100(%esp)
	movl 8(%esi),%eax
	movl %eax,112(%esp)
	movl 12(%esi),%eax
	movl %eax,124(%esp)
	movl 64(%esp),%eax
	addl $_s1bdp_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 100(%esp),%eax
	movl %eax,-12(%edi)
	movl 112(%esp),%eax
	movl %eax,-8(%edi)
	movl 124(%esp),%eax
	movl %eax,-4(%edi)
	movl 76(%esp),%eax
	movl %eax,(%edi)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	leal -12(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
Lc1eR7:
	movl $20,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1bdq_info - _s1bdq_info_dsp
.text
	.align 2
_s1bdr_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1bdr_info)+72
	.long	262167
	.long	4
	.long	36110345
_s1bdr_info:
Lc1eR8:
	call 1f
1:	popl	%eax
	addl $20,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1eRc
Lc1eRb:
	movl %eax,76(%esp)
	movl (%esi),%eax
	movl %eax,88(%esp)
	movl 4(%esi),%eax
	movl %eax,100(%esp)
	movl 8(%esi),%eax
	movl %eax,112(%esp)
	movl 12(%esi),%eax
	movl %eax,124(%esp)
	movl 64(%esp),%eax
	addl $_s1bdq_info-(1b)+0,%eax
	movl %eax,-16(%edi)
	movl 100(%esp),%eax
	movl %eax,-12(%edi)
	movl 112(%esp),%eax
	movl %eax,-8(%edi)
	movl 124(%esp),%eax
	movl %eax,-4(%edi)
	movl 76(%esp),%eax
	movl %eax,(%edi)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	leal -12(%edi),%eax
	movl %eax,16(%ebx)
	movl 88(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
Lc1eRc:
	movl $20,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1bdr_info - _s1bdr_info_dsp
.text
	.align 2
_s1bds_info_dsp:
.text
	.align 2
	.long	196623
	.long	2
	.long	12
_s1bds_info:
Lc1eRi:
	movl 16(%ebx),%eax
	movl %eax,32(%ebx)
	movl 8(%ebx),%eax
	movl %eax,24(%ebx)
	movl 5(%esi),%eax
	movl %eax,16(%ebx)
	movl 1(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
	.long  _s1bds_info - _s1bds_info_dsp
.text
	.align 2
_s1b9w_info_dsp:
.text
	.align 2
	.long	3
	.long	16
_s1b9w_info:
Lc1eSS:
	call 1f
1:	popl	%eax
	leal -40(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1eT1
Lc1eT2:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1eSP_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 12(%esi),%esi
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1eSP_info
Lc1eSQ:
	jmp *(%esi)
Lc1eT1:
	jmp *-16(%ebx)
	.long  _s1b9w_info - _s1b9w_info_dsp
.text
	.align 2
_c1eSP_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1eSP_info:
Lc1eSP:
	call 1f
1:	popl	%eax
	addl $_c1eSV_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1eU7
Lc1eSW:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1eU7:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eSV_info
	.long  _c1eSP_info - _c1eSP_info_dsp
.text
	.align 2
_c1eSV_info_dsp:
.text
	.align 2
	.long	195
	.long	32
_c1eSV_info:
Lc1eSV:
	call 1f
1:	popl	%eax
	addl $_c1eT0_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 12(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1eU9
Lc1eT5:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1eU9:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eT0_info
	.long  _c1eSV_info - _c1eSV_info_dsp
.text
	.align 2
_c1eT0_info_dsp:
.text
	.align 2
	.long	4038
	.long	32
_c1eT0_info:
Lc1eT0:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1eTb
Lc1eTa:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd 16(%ebp),%fake1
	fldl 16(%ebp) ; fstp %st(2)
#	gldsd 4(%ebp),%fake2
	fldl 4(%ebp) ; fstp %st(3)
#	gsubt %fake1,%fake2,%fake1
	#GSUB-xxxcase1
	fld %st(2) ; fsubrp %st(0),%st(2)
#	gldsd Ln1f78-(1b)+0(%eax),%fake2
	fldl Ln1f78-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake0,%fake2,%fake2
	#GDIV-xxxcase2
	fld %st(0) ; fdivp %st(0),%st(3)
#	gsubt %fake1,%fake2,%fake1
	#GSUB-xxxcase1
	fld %st(2) ; fsubrp %st(0),%st(2)
#	gldzsd %fake2
	fldz ; fstp %st(3)
#	gcmp_e %fake1,%fake2
	pushl %eax ; fld %st(1)
	fcomp %st(3); fstsw %ax ; sahf ;  setpo %ah
	sete %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1eU5
Lc1eU6:
#	gldzsd %fake2
	fldz ; fstp %st(3)
#	gcmp_g %fake1,%fake2
	pushl %eax ; fld %st(1)
	fcomp %st(3); fstsw %ax ; sahf ;  setpo %ah
	seta %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1eTT
Lc1eTU:
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gnegt %fake1,%fake1
	fld %st(1) ; fchs ; fstp %st(2)
#	gldsd Ln1f7k-(1b)+0(%eax),%fake2
	fldl Ln1f7k-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake0,%fake2,%fake0
	#GDIV-xxxcase1
	fld %st(2) ; fdivrp %st(0),%st(1)
#	gsubt %fake1,%fake0,%fake0
	#GSUB-xxxcase2
	fld %st(1) ; fsubp %st(0),%st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $28,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1eTb:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1eTT:
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gldsd Ln1f7e-(1b)+0(%eax),%fake2
	fldl Ln1f7e-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake0,%fake2,%fake0
	#GDIV-xxxcase1
	fld %st(2) ; fdivrp %st(0),%st(1)
#	gsubt %fake1,%fake0,%fake0
	#GSUB-xxxcase2
	fld %st(1) ; fsubp %st(0),%st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $28,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1eU5:
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gldsd Ln1f7q-(1b)+0(%eax),%fake2
	fldl Ln1f7q-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake0,%fake2,%fake0
	#GDIV-xxxcase1
	fld %st(2) ; fdivrp %st(0),%st(1)
#	gsubt %fake1,%fake0,%fake0
	#GSUB-xxxcase2
	fld %st(1) ; fsubp %st(0),%st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $28,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1eT0_info - _c1eT0_info_dsp
.const
	.align 2
.align 3
Ln1f78:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.const
	.align 2
.align 3
Ln1f7e:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.const
	.align 2
.align 3
Ln1f7k:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.const
	.align 2
.align 3
Ln1f7q:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.text
	.align 2
_s1baH_info_dsp:
.text
	.align 2
	.long	5
	.long	16
_s1baH_info:
Lc1eWw:
	call 1f
1:	popl	%eax
	leal -48(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1eWF
Lc1eWG:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%ebp)
	movl %esi,-8(%ebp)
	addl $_c1eWt_info-(1b)+0,%eax
	movl %eax,-32(%ebp)
	movl 16(%esi),%eax
	movl 20(%esi),%ecx
	movl 24(%esi),%edx
	movl %eax,64(%esp)
	movl 28(%esi),%eax
	movl 12(%esi),%esi
	movl %ecx,76(%esp)
	movl 64(%esp),%ecx
	movl %ecx,-28(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-24(%ebp)
	movl %edx,-20(%ebp)
	movl %eax,-16(%ebp)
	addl $-32,%ebp
	testw $7,%si
	jne _c1eWt_info
Lc1eWu:
	jmp *(%esi)
Lc1eWF:
	jmp *-16(%ebx)
	.long  _s1baH_info - _s1baH_info_dsp
.text
	.align 2
_c1eWt_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1eWt_info:
Lc1eWt:
	call 1f
1:	popl	%eax
	addl $_c1eWz_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1eZc
Lc1eWA:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1eZc:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eWz_info
	.long  _c1eWt_info - _c1eWt_info_dsp
.text
	.align 2
_c1eWz_info_dsp:
.text
	.align 2
	.long	197
	.long	32
_c1eWz_info:
Lc1eWz:
	call 1f
1:	popl	%eax
	addl $_c1eWE_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 12(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1eZe
Lc1eWJ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1eZe:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eWE_info
	.long  _c1eWz_info - _c1eWz_info_dsp
.text
	.align 2
_c1eWE_info_dsp:
.text
	.align 2
	.long	4040
	.long	32
_c1eWE_info:
Lc1eWE:
	call 1f
1:	popl	%eax
	movl 32(%ebp),%ecx
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd 16(%ebp),%fake1
	fldl 16(%ebp) ; fstp %st(2)
#	gldsd 4(%ebp),%fake2
	fldl 4(%ebp) ; fstp %st(3)
#	gsubt %fake1,%fake2,%fake1
	#GSUB-xxxcase1
	fld %st(2) ; fsubrp %st(0),%st(2)
#	gldsd Ln1f7R-(1b)+0(%eax),%fake2
	fldl Ln1f7R-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake0,%fake2,%fake2
	#GDIV-xxxcase2
	fld %st(0) ; fdivp %st(0),%st(3)
#	gsubt %fake1,%fake2,%fake1
	#GSUB-xxxcase1
	fld %st(2) ; fsubrp %st(0),%st(2)
#	gldzsd %fake2
	fldz ; fstp %st(3)
#	gcmp_e %fake1,%fake2
	pushl %eax ; fld %st(1)
	fcomp %st(3); fstsw %ax ; sahf ;  setpo %ah
	sete %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1eYj
Lc1eYk:
#	gldzsd %fake2
	fldz ; fstp %st(3)
#	gcmp_g %fake1,%fake2
	pushl %eax ; fld %st(1)
	fcomp %st(3); fstsw %ax ; sahf ;  setpo %ah
	seta %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1eYf
Lc1eYg:
#	gnegt %fake1,%fake1
	fld %st(1) ; fchs ; fstp %st(2)
#	gldsd Ln1f80-(1b)+0(%eax),%fake2
	fldl Ln1f80-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake0,%fake2,%fake0
	#GDIV-xxxcase1
	fld %st(2) ; fdivrp %st(0),%st(1)
#	gsubt %fake1,%fake0,%fake0
	#GSUB-xxxcase2
	fld %st(1) ; fsubp %st(0),%st(1)
Ls1ba2:
	addl $_c1eX2_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl %ecx,%esi
#	gstsd %fake0,20(%ebp)
	fstl 20(%ebp)
	addl $16,%ebp
	testw $7,%si
	jne Lu1eZf
Lc1eX4:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1eYj:
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gldsd Ln1f84-(1b)+0(%eax),%fake2
	fldl Ln1f84-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake0,%fake2,%fake0
	#GDIV-xxxcase1
	fld %st(2) ; fdivrp %st(0),%st(1)
#	gsubt %fake1,%fake0,%fake0
	#GSUB-xxxcase2
	fld %st(1) ; fsubp %st(0),%st(1)
	jmp Ls1ba2
Lc1eYf:
#	gldsd Ln1f7W-(1b)+0(%eax),%fake2
	fldl Ln1f7W-(1b)+0(%eax) ; fstp %st(3)
#	gdivt %fake0,%fake2,%fake0
	#GDIV-xxxcase1
	fld %st(2) ; fdivrp %st(0),%st(1)
#	gsubt %fake1,%fake0,%fake0
	#GSUB-xxxcase2
	fld %st(1) ; fsubp %st(0),%st(1)
	jmp Ls1ba2
Lu1eZf:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eX2_info
	.long  _c1eWE_info - _c1eWE_info_dsp
.const
	.align 2
.align 3
Ln1f7R:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.const
	.align 2
.align 3
Ln1f7W:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.const
	.align 2
.align 3
Ln1f80:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.const
	.align 2
.align 3
Ln1f84:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.text
	.align 2
_c1eX2_info_dsp:
.text
	.align 2
	.long	708
	.long	32
_c1eX2_info:
Lc1eX2:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gaddt %fake1,%fake0,%fake1
	#GADD-xxxcase1
	fld %st(0) ; faddp %st(0),%st(2)
#	gldzsd %fake2
	fldz ; fstp %st(3)
#	gcmp_le %fake2,%fake1
	pushl %eax ; fld %st(2)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1eXY
Lc1eXZ:
	addl $_c1eXh_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
#	gstsd %fake0,12(%ebp)
	fstl 12(%ebp)
	addl $8,%ebp
	testw $7,%si
	jne Lu1eZh
Lc1eXk:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1eXY:
	addl $_c1eXD_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
#	gstsd %fake1,4(%ebp)
	fld %st(1) ; fstpl 4(%ebp)
#	gstsd %fake0,12(%ebp)
	fstl 12(%ebp)
	testw $7,%si
	jne Lu1eZg
Lc1eXF:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lu1eZg:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eXD_info
Lu1eZh:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1eXh_info
	.long  _c1eX2_info - _c1eX2_info_dsp
.text
	.align 2
_c1eXD_info_dsp:
.text
	.align 2
	.long	964
	.long	32
_c1eXD_info:
Lc1eXD:
	call 1f
1:	popl	%eax
#	gldsd 12(%ebp),%fake0
	fldl 12(%ebp) ; fstp %st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gldsd 3(%esi),%fake2
	fldl 3(%esi) ; fstp %st(3)
#	gaddt %fake2,%fake0,%fake2
	#GADD-xxxcase1
	fld %st(0) ; faddp %st(0),%st(3)
#	gldzsd %fake3
	fldz ; fstp %st(4)
#	gcmp_le %fake3,%fake2
	pushl %eax ; fld %st(3)
	fcomp %st(3); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1eXV
Lc1eXW:
#	gmult %fake1,%fake1,%fake1
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(2)
#	gmult %fake0,%fake0,%fake0
	#GMUL-xxxcase1
	fld %st(0) ; fmulp %st(0),%st(1)
#	gcmp_l %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	sete %cl
	movzbl %cl,%ecx
	shll $2,%ecx
	movl L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr-(1b)+0(%eax),%eax
	movl (%ecx,%eax,1),%esi
	addl $20,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1eXV:
#	gmult %fake1,%fake1,%fake1
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(2)
#	gmult %fake2,%fake2,%fake2
	#GMUL-xxxcase1
	fld %st(2) ; fmulp %st(0),%st(3)
#	gaddt %fake1,%fake2,%fake1
	#GADD-xxxcase1
	fld %st(2) ; faddp %st(0),%st(2)
#	gmult %fake0,%fake0,%fake0
	#GMUL-xxxcase1
	fld %st(0) ; fmulp %st(0),%st(1)
#	gcmp_l %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	sete %cl
	movzbl %cl,%ecx
	shll $2,%ecx
	movl L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr-(1b)+0(%eax),%eax
	movl (%ecx,%eax,1),%esi
	addl $20,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1eXD_info - _c1eXD_info_dsp
.text
	.align 2
_c1eXh_info_dsp:
.text
	.align 2
	.long	194
	.long	32
_c1eXh_info:
Lc1eXh:
	call 1f
1:	popl	%eax
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gaddt %fake1,%fake0,%fake1
	#GADD-xxxcase1
	fld %st(0) ; faddp %st(0),%st(2)
#	gldzsd %fake2
	fldz ; fstp %st(3)
#	gcmp_le %fake2,%fake1
	pushl %eax ; fld %st(2)
	fcomp %st(2); fstsw %ax ; sahf ;  setpo %ah
	setbe %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	je Lc1eXA
Lc1eXB:
#	gldzsd %fake1
	fldz ; fstp %st(2)
#	gmult %fake0,%fake0,%fake0
	#GMUL-xxxcase1
	fld %st(0) ; fmulp %st(0),%st(1)
#	gcmp_l %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	sete %cl
	movzbl %cl,%ecx
	shll $2,%ecx
	movl L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr-(1b)+0(%eax),%eax
	movl (%ecx,%eax,1),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1eXA:
#	gmult %fake1,%fake1,%fake1
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(2)
#	gmult %fake0,%fake0,%fake0
	#GMUL-xxxcase1
	fld %st(0) ; fmulp %st(0),%st(1)
#	gcmp_l %fake1,%fake0
	pushl %eax ; fld %st(1)
	fcomp %st(1); fstsw %ax ; sahf ;  setpo %ah
	setb %al ;  andb %ah,%al ;  decb %al ;  popl %eax
	sete %cl
	movzbl %cl,%ecx
	shll $2,%ecx
	movl L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr-(1b)+0(%eax),%eax
	movl (%ecx,%eax,1),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
	.long  _c1eXh_info - _c1eXh_info_dsp
.text
	.align 2
_s1baI_info_dsp:
.text
	.align 2
	.long	131077
	.long	4
	.long	9
_s1baI_info:
Lc1eZi:
	call 1f
1:	popl	%eax
	addl $32,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1eZm
Lc1eZl:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 64(%esp),%edx
	addl $_s1baH_info-(1b)+0,%edx
	movl %edx,-28(%edi)
	movl 76(%esp),%edx
	movl %edx,-16(%edi)
	movl 88(%esp),%edx
	movl %edx,-12(%edi)
	movl 100(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -28(%edi),%esi
	jmp *(%ebp)
Lc1eZm:
	movl $32,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1baI_info - _s1baI_info_dsp
.text
	.align 2
_s1baJ_info_dsp:
.text
	.align 2
	.long	131077
	.long	6
	.long	9
_s1baJ_info:
Lc1eZn:
	call 1f
1:	popl	%eax
	addl $44,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1eZr
Lc1eZq:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 22(%esi),%eax
	movl %edx,124(%esp)
	movl 64(%esp),%edx
	addl $_s1b9w_info-(1b)+0,%edx
	movl %edx,-40(%edi)
	movl 100(%esp),%edx
	movl %edx,-28(%edi)
	movl 124(%esp),%edx
	movl %edx,-24(%edi)
	movl %ecx,-20(%edi)
	movl 64(%esp),%ecx
	addl $_s1baI_info-(1b)+0,%ecx
	movl %ecx,-16(%edi)
	movl 88(%esp),%ecx
	movl %ecx,-12(%edi)
	movl 112(%esp),%ecx
	movl %ecx,-8(%edi)
	movl %eax,-4(%edi)
	leal -40(%edi),%eax
	movl %eax,(%edi)
	leal -14(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1eZr:
	movl $44,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1baJ_info - _s1baJ_info_dsp
.text
	.align 2
_s1baK_info_dsp:
.text
	.align 2
	.long	131077
	.long	6
	.long	9
_s1baK_info:
Lc1eZs:
	call 1f
1:	popl	%eax
	addl $28,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1eZw
Lc1eZv:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 22(%esi),%eax
	movl %edx,124(%esp)
	movl 64(%esp),%edx
	addl $_s1baJ_info-(1b)+0,%edx
	movl %edx,-24(%edi)
	movl 88(%esp),%edx
	movl %edx,-20(%edi)
	movl 100(%esp),%edx
	movl %edx,-16(%edi)
	movl 112(%esp),%edx
	movl %edx,-12(%edi)
	movl 124(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -22(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1eZw:
	movl $28,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1baK_info - _s1baK_info_dsp
.text
	.align 2
_s1baL_info_dsp:
.text
	.align 2
	.long	131077
	.long	6
	.long	9
_s1baL_info:
Lc1eZx:
	call 1f
1:	popl	%eax
	addl $28,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1eZB
Lc1eZA:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 22(%esi),%eax
	movl %edx,124(%esp)
	movl 64(%esp),%edx
	addl $_s1baK_info-(1b)+0,%edx
	movl %edx,-24(%edi)
	movl 88(%esp),%edx
	movl %edx,-20(%edi)
	movl 100(%esp),%edx
	movl %edx,-16(%edi)
	movl 112(%esp),%edx
	movl %edx,-12(%edi)
	movl 124(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -22(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1eZB:
	movl $28,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1baL_info - _s1baL_info_dsp
.text
	.align 2
_s1baM_info_dsp:
.text
	.align 2
	.long	131077
	.long	6
	.long	9
_s1baM_info:
Lc1eZC:
	call 1f
1:	popl	%eax
	addl $28,%edi
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1eZG
Lc1eZF:
	movl 2(%esi),%edx
	movl %eax,64(%esp)
	movl 6(%esi),%eax
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %eax,88(%esp)
	movl 14(%esi),%eax
	movl %edx,100(%esp)
	movl 18(%esi),%edx
	movl %eax,112(%esp)
	movl 22(%esi),%eax
	movl %edx,124(%esp)
	movl 64(%esp),%edx
	addl $_s1baL_info-(1b)+0,%edx
	movl %edx,-24(%edi)
	movl 88(%esp),%edx
	movl %edx,-20(%edi)
	movl 100(%esp),%edx
	movl %edx,-16(%edi)
	movl 112(%esp),%edx
	movl %edx,-12(%edi)
	movl 124(%esp),%edx
	movl %edx,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -22(%edi),%eax
	movl %eax,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1eZG:
	movl $28,904(%ebx)
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1baM_info - _s1baM_info_dsp
.text
	.align 2
_s1baN_info_dsp:
.text
	.align 2
	.long	131077
	.long	5
	.long	9
_s1baN_info:
Lc1eZH:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -24(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1eZI
Lc1eZJ:
	addl $_c1eSm_info-(1b)+0,%eax
	movl %eax,-24(%ebp)
	movl 2(%esi),%eax
	movl 6(%esi),%edx
	movl %eax,64(%esp)
	movl 10(%esi),%eax
	movl %edx,76(%esp)
	movl 14(%esi),%edx
	movl %eax,88(%esp)
	movl 18(%esi),%eax
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-20(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 88(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne _c1eSm_info
Lc1eSn:
	jmp *(%esi)
Lc1eZI:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1baN_info - _s1baN_info_dsp
.text
	.align 2
_c1eSm_info_dsp:
.text
	.align 2
	.long	5
	.long	32
_c1eSm_info:
Lc1eSm:
	call 1f
1:	popl	%eax
	addl $28,%edi
	cmpl 856(%ebx),%edi
	ja Lc1eZM
Lc1eZL:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	addl $_s1baM_info-(1b)+0,%eax
	movl %eax,-24(%edi)
	movl 8(%ebp),%eax
	movl %eax,-20(%edi)
	movl 12(%ebp),%eax
	movl %eax,-16(%edi)
	movl 16(%ebp),%eax
	movl %eax,-12(%edi)
	movl 20(%ebp),%eax
	movl %eax,-8(%edi)
	movl %ecx,-4(%edi)
	movl %edx,(%edi)
	leal -22(%edi),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $24,%ebp
	jmp _CoreziShapeziInternal_zdfAffineShape3_info
Lc1eZM:
	movl $28,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1eSm_info - _c1eSm_info_dsp
.const_data
	.align 2
.align 0
_u1eZT_srtd:
	.long	_S1bza_srt+72
	.long	17
	.long	66087
.text
	.align 2
_CoreziShapeziInternal_zdwroundRect_info_dsp:
.text
	.align 2
	.long	_u1eZT_srtd-(_CoreziShapeziInternal_zdwroundRect_info)+0
	.long	327705
	.long	0
	.long	-65521
.globl _CoreziShapeziInternal_zdwroundRect_info
_CoreziShapeziInternal_zdwroundRect_info:
Lc1eZO:
	call 1f
1:	popl	%eax
	addl $56,%edi
	movl 40(%ebx),%ecx
	movl 32(%ebx),%edx
	movl %eax,64(%esp)
	movl 24(%ebx),%eax
	movl %eax,76(%esp)
	movl 16(%ebx),%eax
	movl %eax,88(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1eZS
Lc1eZR:
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	addl $_s1bdr_info-(1b)+0,%eax
	movl %eax,-52(%edi)
	movl 88(%esp),%eax
	movl %eax,-48(%edi)
	movl 76(%esp),%eax
	movl %eax,-44(%edi)
	movl %edx,-40(%edi)
	movl %ecx,-36(%edi)
	movl 64(%esp),%eax
	addl $_s1bds_info-(1b)+0,%eax
	movl %eax,-32(%edi)
	movl 100(%esp),%eax
	movl %eax,-28(%edi)
	leal -48(%edi),%eax
	movl %eax,-24(%edi)
	movl 64(%esp),%eax
	addl $_s1baN_info-(1b)+0,%eax
	movl %eax,-20(%edi)
	movl 100(%esp),%eax
	movl %eax,-16(%edi)
	movl 88(%esp),%eax
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl %eax,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	movl 64(%esp),%eax
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,16(%ebx)
	leal -29(%edi),%eax
	movl %eax,8(%ebx)
	leal -18(%edi),%esi
	jmp *(%ebp)
Lc1eZS:
	movl $56,904(%ebx)
	movl %ecx,40(%ebx)
	movl %edx,32(%ebx)
	movl 76(%esp),%ecx
	movl %ecx,24(%ebx)
	movl 88(%esp),%ecx
	movl %ecx,16(%ebx)
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdwroundRect_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdwroundRect_info - _CoreziShapeziInternal_zdwroundRect_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_roundRect_closure
_CoreziShapeziInternal_roundRect_closure:
	.long	_CoreziShapeziInternal_roundRect_info
	.long	0
.text
	.align 2
_CoreziShapeziInternal_roundRect_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_roundRect_info)+136
	.long	196631
	.long	0
	.long	196623
.globl _CoreziShapeziInternal_roundRect_info
_CoreziShapeziInternal_roundRect_info:
Lc1fa5:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1fag
Lc1fah:
	movl 64(%esp),%eax
	addl $_c1fa2_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 76(%esp),%eax
	movl %eax,%esi
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne _c1fa2_info
Lc1fa3:
	jmp *(%esi)
Lc1fag:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_roundRect_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_roundRect_info - _CoreziShapeziInternal_roundRect_info_dsp
.text
	.align 2
_c1fa2_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1fa2_info)+136
	.long	2
	.long	65568
_c1fa2_info:
Lc1fa2:
	call 1f
1:	popl	%eax
	addl $_c1fa8_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl 4(%ebp),%esi
	movl %ecx,(%ebp)
	movl %eax,4(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1fa8_info
Lc1fa9:
	jmp *(%esi)
	.long  _c1fa2_info - _c1fa2_info_dsp
.text
	.align 2
_c1fa8_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1fa8_info)+136
	.long	3
	.long	65568
_c1fa8_info:
Lc1fa8:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	addl $_c1fad_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl %ecx,40(%ebx)
	movl 7(%esi),%eax
	movl %eax,32(%ebx)
	movl 3(%esi),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	addl $12,%ebp
	jmp _CoreziShapeziInternal_zdwroundRect_info
	.long  _c1fa8_info - _c1fa8_info_dsp
.text
	.align 2
_c1fad_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fad_info:
Lc1fad:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1fam
Lc1fal:
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %esi,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fam:
	movl $16,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fad_info - _c1fad_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_polygon2_closure
_CoreziShapeziInternal_polygon2_closure:
	.long	_CoreziShapeziInternal_polygon2_info
.text
	.align 2
_s1bep_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1bep_info:
Lc1ffl:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1ffm
Lc1ffn:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1ffm:
	jmp *-16(%ebx)
	.long  _s1bep_info - _s1bep_info_dsp
.text
	.align 2
_s1beq_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1beq_info:
Lc1ffo:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1ffp
Lc1ffq:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1ffs
Lc1ffr:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	addl $_s1bep_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1ffs:
	movl $16,904(%ebx)
Lc1ffp:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1beq_info - _s1beq_info_dsp
.text
	.align 2
_s1bfH_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1bfH_info:
Lc1fg3:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1fg4
Lc1fg5:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1fg4:
	jmp *-16(%ebx)
	.long  _s1bfH_info - _s1bfH_info_dsp
.text
	.align 2
_s1bfI_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1bfI_info:
Lc1fg6:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1fg7
Lc1fg8:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fga
Lc1fg9:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	addl $_s1bfH_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1fga:
	movl $16,904(%ebx)
Lc1fg7:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1bfI_info - _s1bfI_info_dsp
.text
	.align 2
_s1bgF_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1bgF_info:
Lc1fgH:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1fgI
Lc1fgJ:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1fgI:
	jmp *-16(%ebx)
	.long  _s1bgF_info - _s1bgF_info_dsp
.text
	.align 2
_s1bgG_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1bgG_info:
Lc1fgK:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1fgL
Lc1fgM:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fgO
Lc1fgN:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	addl $_s1bgF_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1fgO:
	movl $16,904(%ebx)
Lc1fgL:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1bgG_info - _s1bgG_info_dsp
.text
	.align 2
_s1bgR_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1bgR_info:
Lc1fh3:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1fh4
Lc1fh5:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1fh4:
	jmp *-16(%ebx)
	.long  _s1bgR_info - _s1bgR_info_dsp
.text
	.align 2
_s1bgS_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1bgS_info:
Lc1fh6:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1fh7
Lc1fh8:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fha
Lc1fh9:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	addl $_s1bgR_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1fha:
	movl $16,904(%ebx)
Lc1fh7:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1bgS_info - _s1bgS_info_dsp
.text
	.align 2
_s1bhf_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1bhf_info:
Lc1fhC:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1fhD
Lc1fhE:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1fhD:
	jmp *-16(%ebx)
	.long  _s1bhf_info - _s1bhf_info_dsp
.text
	.align 2
_s1bhg_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1bhg_info:
Lc1fhF:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1fhG
Lc1fhH:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fhJ
Lc1fhI:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	addl $_s1bhf_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1fhJ:
	movl $16,904(%ebx)
Lc1fhG:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1bhg_info - _s1bhg_info_dsp
.text
	.align 2
_s1bhd_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1bhd_info:
Lc1fhS:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1fhT
Lc1fhU:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1fhT:
	jmp *-16(%ebx)
	.long  _s1bhd_info - _s1bhd_info_dsp
.text
	.align 2
_s1bhe_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1bhe_info:
Lc1fhV:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1fhW
Lc1fhX:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fhZ
Lc1fhY:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	addl $_s1bhd_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1fhZ:
	movl $16,904(%ebx)
Lc1fhW:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1bhe_info - _s1bhe_info_dsp
.text
	.align 2
_s1bhM_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1bhM_info:
Lc1fiy:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1fiz
Lc1fiA:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1fiz:
	jmp *-16(%ebx)
	.long  _s1bhM_info - _s1bhM_info_dsp
.text
	.align 2
_s1bhN_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1bhN_info:
Lc1fiB:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1fiC
Lc1fiD:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fiF
Lc1fiE:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	addl $_s1bhM_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1fiF:
	movl $16,904(%ebx)
Lc1fiC:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1bhN_info - _s1bhN_info_dsp
.text
	.align 2
_s1bjU_info_dsp:
.text
	.align 2
	.long	1
	.long	17
_s1bjU_info:
Lc1fjA:
	call 1f
1:	popl	%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1fjB
Lc1fjC:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp _base_DataziTuple_fst_info
Lc1fjB:
	jmp *-16(%ebx)
	.long  _s1bjU_info - _s1bjU_info_dsp
.text
	.align 2
_s1bjV_info_dsp:
.text
	.align 2
	.long	2
	.long	19
_s1bjV_info:
Lc1fjD:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1fjE
Lc1fjF:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fjH
Lc1fjG:
	movl L_stg_upd_frame_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl 12(%ecx),%edx
	movl 16(%ecx),%ecx
	addl $_s1bjU_info-(1b)+0,%eax
	movl %eax,-12(%edi)
	movl %ecx,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl %edx,%esi
	addl $-12,%ebp
	jmp _stg_ap_p_fast
Lc1fjH:
	movl $16,904(%ebx)
Lc1fjE:
	movl %ecx,%esi
	jmp *-16(%ebx)
	.long  _s1bjV_info - _s1bjV_info_dsp
.text
	.align 2
_CoreziShapeziInternal_polygon2_info_dsp:
.text
	.align 2
	.long	131077
	.long	0
	.long	15
.globl _CoreziShapeziInternal_polygon2_info
_CoreziShapeziInternal_polygon2_info:
Lc1fjP:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -20(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1fjQ
Lc1fjR:
	addl $_c1fez_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1fez_info
Lc1feA:
	jmp *(%esi)
Lc1fjQ:
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_polygon2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_polygon2_info - _CoreziShapeziInternal_polygon2_info_dsp
.text
	.align 2
_c1fez_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fez_info:
Lc1fez:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1fjN
Lc1fjO:
	movl L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fjN:
	addl $_c1feF_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 6(%esi),%eax
	movl 2(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1feF_info
Lc1feG:
	jmp *(%esi)
	.long  _c1fez_info - _c1fez_info_dsp
.text
	.align 2
_c1feF_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1feF_info:
Lc1feF:
	call 1f
1:	popl	%eax
	addl $_c1feK_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 7(%esi),%eax
	movl 3(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1feK_info
Lc1feL:
	jmp *(%esi)
	.long  _c1feF_info - _c1feF_info_dsp
.text
	.align 2
_c1feK_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1feK_info:
Lc1feK:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1fw4
Lc1fw5:
	cmpl $2,%ecx
	jae Lc1fvY
Lc1fvZ:
	addl $_c1feP_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _c1feP_info
Lc1feQ:
	jmp *(%esi)
Lc1fw4:
	cmpl $4,%ecx
	jae Lc1fw1
Lc1fw2:
	addl $_c1fgd_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1fgd_info
Lc1fge:
	jmp *(%esi)
Lc1fw1:
	addl $_c1fiI_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1fiI_info
Lc1fiJ:
	jmp *(%esi)
Lc1fvY:
	addl $_c1ffv_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
	.long  _c1feK_info - _c1feK_info_dsp
.text
	.align 2
_c1fiI_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fiI_info:
Lc1fiI:
	call 1f
1:	popl	%eax
	addl $_c1fiN_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1fiN_info
Lc1fiO:
	jmp *(%esi)
	.long  _c1fiI_info - _c1fiI_info_dsp
.text
	.align 2
_c1fiN_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fiN_info:
Lc1fiN:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1fiS_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1fiS_info
Lc1fiT:
	jmp *(%esi)
	.long  _c1fiN_info - _c1fiN_info_dsp
.text
	.align 2
_c1fiS_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fiS_info:
Lc1fiS:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1fvU
Lc1fvV:
	addl $_c1fiX_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1fiX_info
Lc1fiY:
	jmp *(%esi)
Lc1fvU:
	movl 8(%ebp),%ecx
	addl $_c1ftG_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	addl $8,%ebp
	testw $7,%si
	jne _c1ftG_info
Lc1ftJ:
	jmp *(%esi)
	.long  _c1fiS_info - _c1fiS_info_dsp
.text
	.align 2
_c1ftG_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1ftG_info:
Lc1ftG:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1fvQ
Lc1fvR:
	cmpl $2,%ecx
	jae Lc1fvK
Lc1fvL:
	movl 4(%ebp),%ecx
	addl $_c1ftN_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %ecx,8(%ebx)
	addl $4,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
Lc1fvQ:
	cmpl $4,%ecx
	jae Lc1fvN
Lc1fvO:
	addl $_c1fub_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 1(%esi),%esi
	testw $7,%si
	jne _c1fub_info
Lc1fuc:
	jmp *(%esi)
Lc1fvN:
	addl $_c1fuT_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1fuT_info
Lc1fuU:
	jmp *(%esi)
Lc1fvK:
	addl $_c1ftY_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
	.long  _c1ftG_info - _c1ftG_info_dsp
.text
	.align 2
_c1fuT_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1fuT_info:
Lc1fuT:
	call 1f
1:	popl	%eax
	addl $_c1fuY_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1fuY_info
Lc1fv2:
	jmp *(%esi)
	.long  _c1fuT_info - _c1fuT_info_dsp
.text
	.align 2
_c1fuY_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1fuY_info:
Lc1fuY:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1fv6_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1fv6_info
Lc1fv8:
	jmp *(%esi)
	.long  _c1fuY_info - _c1fuY_info_dsp
.text
	.align 2
_c1fv6_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1fv6_info:
Lc1fv6:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1fvG
Lc1fvH:
	addl $_c1fvc_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1fvc_info
Lc1fvd:
	jmp *(%esi)
Lc1fvG:
	movl 8(%ebp),%ecx
	addl $_c1fvw_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,8(%ebx)
	addl $8,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1fv6_info - _c1fv6_info_dsp
.text
	.align 2
_c1fvw_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fvw_info:
Lc1fvw:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fvD
Lc1fvC:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fvD:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fvw_info - _c1fvw_info_dsp
.text
	.align 2
_c1fvc_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1fvc_info:
Lc1fvc:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1fvh_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1fvc_info - _c1fvc_info_dsp
.text
	.align 2
_c1fvh_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1fvh_info:
Lc1fvh:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1fvj_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %ecx,8(%ebx)
	addl $4,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1fvh_info - _c1fvh_info_dsp
.text
	.align 2
_c1fvj_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fvj_info:
Lc1fvj:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fvt
Lc1fvs:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fvt:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fvj_info - _c1fvj_info_dsp
.text
	.align 2
_c1fub_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1fub_info:
Lc1fub:
	call 1f
1:	popl	%eax
	addl $_c1fug_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1fug_info
Lc1fuk:
	jmp *(%esi)
	.long  _c1fub_info - _c1fub_info_dsp
.text
	.align 2
_c1fug_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1fug_info:
Lc1fug:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1fuo_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1fuo_info
Lc1fuq:
	jmp *(%esi)
	.long  _c1fug_info - _c1fug_info_dsp
.text
	.align 2
_c1fuo_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1fuo_info:
Lc1fuo:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	movl %esi,%edx
	andl $7,%edx
	cmpl $2,%edx
	jae Lc1fuP
Lc1fuQ:
	addl $_c1fuu_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %ecx,8(%ebx)
	addl $4,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
Lc1fuP:
	addl $_c1fuF_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %ecx,8(%ebx)
	addl $4,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1fuo_info - _c1fuo_info_dsp
.text
	.align 2
_c1fuF_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fuF_info:
Lc1fuF:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fuM
Lc1fuL:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fuM:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fuF_info - _c1fuF_info_dsp
.text
	.align 2
_c1fuu_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fuu_info:
Lc1fuu:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fuC
Lc1fuB:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fuC:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fuu_info - _c1fuu_info_dsp
.text
	.align 2
_c1ftY_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1ftY_info:
Lc1ftY:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1fu0_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %ecx,8(%ebx)
	addl $4,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1ftY_info - _c1ftY_info_dsp
.text
	.align 2
_c1fu0_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fu0_info:
Lc1fu0:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fu8
Lc1fu7:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fu8:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fu0_info - _c1fu0_info_dsp
.text
	.align 2
_c1ftN_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1ftN_info:
Lc1ftN:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1ftV
Lc1ftU:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1ftV:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1ftN_info - _c1ftN_info_dsp
.text
	.align 2
_c1fiX_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fiX_info:
Lc1fiX:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1fj2_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1fiX_info - _c1fiX_info_dsp
.text
	.align 2
_c1fj2_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1fj2_info:
Lc1fj2:
	call 1f
1:	popl	%eax
	addl $_c1fj4_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _c1fj4_info
Lc1fj5:
	jmp *(%esi)
	.long  _c1fj2_info - _c1fj2_info_dsp
.text
	.align 2
_c1fj4_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1fj4_info:
Lc1fj4:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1ftC
Lc1ftD:
	cmpl $2,%ecx
	jae Lc1ftw
Lc1ftx:
	addl $_c1frL_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebp)
	jmp _CoreziShapeziInternal_polygon2_info
Lc1ftC:
	cmpl $4,%ecx
	jae Lc1ftz
Lc1ftA:
	addl $_c1fjb_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1fjb_info
Lc1fjc:
	jmp *(%esi)
Lc1ftz:
	addl $_c1fsD_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1fsD_info
Lc1fsE:
	jmp *(%esi)
Lc1ftw:
	addl $_c1frX_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
	.long  _c1fj4_info - _c1fj4_info_dsp
.text
	.align 2
_c1fsD_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fsD_info:
Lc1fsD:
	call 1f
1:	popl	%eax
	addl $_c1fsI_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1fsI_info
Lc1fsM:
	jmp *(%esi)
	.long  _c1fsD_info - _c1fsD_info_dsp
.text
	.align 2
_c1fsI_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fsI_info:
Lc1fsI:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1fsQ_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1fsQ_info
Lc1fsS:
	jmp *(%esi)
	.long  _c1fsI_info - _c1fsI_info_dsp
.text
	.align 2
_c1fsQ_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fsQ_info:
Lc1fsQ:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1fts
Lc1ftt:
	addl $_c1fsW_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1fsW_info
Lc1fsX:
	jmp *(%esi)
Lc1fts:
	movl 12(%ebp),%ecx
	addl $_c1fti_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1fsQ_info - _c1fsQ_info_dsp
.text
	.align 2
_c1fti_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fti_info:
Lc1fti:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1ftp
Lc1fto:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1ftp:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fti_info - _c1fti_info_dsp
.text
	.align 2
_c1fsW_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fsW_info:
Lc1fsW:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1ft1_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1fsW_info - _c1fsW_info_dsp
.text
	.align 2
_c1ft1_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1ft1_info:
Lc1ft1:
	call 1f
1:	popl	%eax
	addl $_c1ft3_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl %esi,8(%ebp)
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1ft1_info - _c1ft1_info_dsp
.text
	.align 2
_c1ft3_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1ft3_info:
Lc1ft3:
	call 1f
1:	popl	%eax
	addl $32,%edi
	cmpl 856(%ebx),%edi
	ja Lc1ftf
Lc1fte:
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-24(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-20(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -14(%edi),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
Lc1ftf:
	movl $32,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1ft3_info - _c1ft3_info_dsp
.text
	.align 2
_c1fjb_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fjb_info:
Lc1fjb:
	call 1f
1:	popl	%eax
	addl $_c1fjg_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1fjg_info
Lc1fjh:
	jmp *(%esi)
	.long  _c1fjb_info - _c1fjb_info_dsp
.text
	.align 2
_c1fjg_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fjg_info:
Lc1fjg:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1fjl_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1fjl_info
Lc1fjm:
	jmp *(%esi)
	.long  _c1fjg_info - _c1fjg_info_dsp
.text
	.align 2
_c1fjl_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fjl_info:
Lc1fjl:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	movl %esi,%edx
	andl $7,%edx
	cmpl $2,%edx
	jae Lc1fsz
Lc1fsA:
	addl $_c1fjq_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%eax
	movl %eax,12(%ebp)
	jmp _CoreziShapeziInternal_polygon2_info
Lc1fsz:
	addl $_c1fsp_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1fjl_info - _c1fjl_info_dsp
.text
	.align 2
_c1fsp_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fsp_info:
Lc1fsp:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fsw
Lc1fsv:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fsw:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fsp_info - _c1fsp_info_dsp
.text
	.align 2
_c1fjq_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fjq_info:
Lc1fjq:
	call 1f
1:	popl	%eax
	addl $52,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fsm
Lc1fsl:
	movl %eax,%ecx
	addl $_s1bjV_info-(1b)+0,%ecx
	movl %ecx,-48(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-36(%edi)
	movl 12(%ebp),%ecx
	movl %ecx,-32(%edi)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-24(%edi)
	leal -48(%edi),%ecx
	movl %ecx,-20(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -14(%edi),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $16,%ebp
	jmp *(%ebp)
Lc1fsm:
	movl $52,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fjq_info - _c1fjq_info_dsp
.text
	.align 2
_c1frX_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1frX_info:
Lc1frX:
	call 1f
1:	popl	%eax
	addl $_c1frZ_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl %esi,8(%ebp)
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1frX_info - _c1frX_info_dsp
.text
	.align 2
_c1frZ_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1frZ_info:
Lc1frZ:
	call 1f
1:	popl	%eax
	addl $32,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fs9
Lc1fs8:
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-24(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-20(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -14(%edi),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
Lc1fs9:
	movl $32,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1frZ_info - _c1frZ_info_dsp
.text
	.align 2
_c1frL_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1frL_info:
Lc1frL:
	call 1f
1:	popl	%eax
	addl $32,%edi
	cmpl 856(%ebx),%edi
	ja Lc1frV
Lc1frU:
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-24(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-20(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -14(%edi),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
Lc1frV:
	movl $32,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1frL_info - _c1frL_info_dsp
.text
	.align 2
_c1fgd_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fgd_info:
Lc1fgd:
	call 1f
1:	popl	%eax
	addl $_c1fgi_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1fgi_info
Lc1fgj:
	jmp *(%esi)
	.long  _c1fgd_info - _c1fgd_info_dsp
.text
	.align 2
_c1fgi_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fgi_info:
Lc1fgi:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1fgn_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1fgn_info
Lc1fgo:
	jmp *(%esi)
	.long  _c1fgi_info - _c1fgi_info_dsp
.text
	.align 2
_c1fgn_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fgn_info:
Lc1fgn:
	call 1f
1:	popl	%eax
	movl 8(%ebp),%ecx
	movl %esi,%edx
	andl $7,%edx
	cmpl $2,%edx
	jae Lc1frz
Lc1frA:
	addl $_c1fgs_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl %ecx,%esi
	movl %eax,8(%ebp)
	testw $7,%si
	jne _c1fgs_info
Lc1fgt:
	jmp *(%esi)
Lc1frz:
	addl $_c1fpl_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,%esi
	addl $8,%ebp
	testw $7,%si
	jne _c1fpl_info
Lc1fpo:
	jmp *(%esi)
	.long  _c1fgn_info - _c1fgn_info_dsp
.text
	.align 2
_c1fpl_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1fpl_info:
Lc1fpl:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1frv
Lc1frw:
	cmpl $2,%ecx
	jae Lc1frp
Lc1frq:
	movl 4(%ebp),%ecx
	addl $_c1fps_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %ecx,8(%ebx)
	addl $4,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
Lc1frv:
	cmpl $4,%ecx
	jae Lc1frs
Lc1frt:
	addl $_c1fpQ_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 1(%esi),%esi
	testw $7,%si
	jne _c1fpQ_info
Lc1fpR:
	jmp *(%esi)
Lc1frs:
	addl $_c1fqy_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1fqy_info
Lc1fqz:
	jmp *(%esi)
Lc1frp:
	addl $_c1fpD_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
	.long  _c1fpl_info - _c1fpl_info_dsp
.text
	.align 2
_c1fqy_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1fqy_info:
Lc1fqy:
	call 1f
1:	popl	%eax
	addl $_c1fqD_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1fqD_info
Lc1fqH:
	jmp *(%esi)
	.long  _c1fqy_info - _c1fqy_info_dsp
.text
	.align 2
_c1fqD_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1fqD_info:
Lc1fqD:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1fqL_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1fqL_info
Lc1fqN:
	jmp *(%esi)
	.long  _c1fqD_info - _c1fqD_info_dsp
.text
	.align 2
_c1fqL_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1fqL_info:
Lc1fqL:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1frl
Lc1frm:
	addl $_c1fqR_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1fqR_info
Lc1fqS:
	jmp *(%esi)
Lc1frl:
	movl 8(%ebp),%ecx
	addl $_c1frb_info-(1b)+0,%eax
	movl %eax,8(%ebp)
	movl %ecx,8(%ebx)
	addl $8,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1fqL_info - _c1fqL_info_dsp
.text
	.align 2
_c1frb_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1frb_info:
Lc1frb:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fri
Lc1frh:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fri:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1frb_info - _c1frb_info_dsp
.text
	.align 2
_c1fqR_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1fqR_info:
Lc1fqR:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1fqW_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1fqR_info - _c1fqR_info_dsp
.text
	.align 2
_c1fqW_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1fqW_info:
Lc1fqW:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1fqY_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %ecx,8(%ebx)
	addl $4,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1fqW_info - _c1fqW_info_dsp
.text
	.align 2
_c1fqY_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fqY_info:
Lc1fqY:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fr8
Lc1fr7:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fr8:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fqY_info - _c1fqY_info_dsp
.text
	.align 2
_c1fpQ_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1fpQ_info:
Lc1fpQ:
	call 1f
1:	popl	%eax
	addl $_c1fpV_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1fpV_info
Lc1fpZ:
	jmp *(%esi)
	.long  _c1fpQ_info - _c1fpQ_info_dsp
.text
	.align 2
_c1fpV_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1fpV_info:
Lc1fpV:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1fq3_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1fq3_info
Lc1fq5:
	jmp *(%esi)
	.long  _c1fpV_info - _c1fpV_info_dsp
.text
	.align 2
_c1fq3_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1fq3_info:
Lc1fq3:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	movl %esi,%edx
	andl $7,%edx
	cmpl $2,%edx
	jae Lc1fqu
Lc1fqv:
	addl $_c1fq9_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %ecx,8(%ebx)
	addl $4,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
Lc1fqu:
	addl $_c1fqk_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %ecx,8(%ebx)
	addl $4,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1fq3_info - _c1fq3_info_dsp
.text
	.align 2
_c1fqk_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fqk_info:
Lc1fqk:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fqr
Lc1fqq:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fqr:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fqk_info - _c1fqk_info_dsp
.text
	.align 2
_c1fq9_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fq9_info:
Lc1fq9:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fqh
Lc1fqg:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fqh:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fq9_info - _c1fq9_info_dsp
.text
	.align 2
_c1fpD_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1fpD_info:
Lc1fpD:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1fpF_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl %ecx,8(%ebx)
	addl $4,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1fpD_info - _c1fpD_info_dsp
.text
	.align 2
_c1fpF_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fpF_info:
Lc1fpF:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fpN
Lc1fpM:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fpN:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fpF_info - _c1fpF_info_dsp
.text
	.align 2
_c1fps_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fps_info:
Lc1fps:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fpA
Lc1fpz:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fpA:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fps_info - _c1fps_info_dsp
.text
	.align 2
_c1fgs_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fgs_info:
Lc1fgs:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1fph
Lc1fpi:
	cmpl $2,%ecx
	jae Lc1fpb
Lc1fpc:
	addl $_c1fgx_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 12(%ebp),%eax
	movl %eax,8(%ebx)
	movl 3(%esi),%eax
	movl %eax,12(%ebp)
	jmp _CoreziShapeziInternal_polygon2_info
Lc1fph:
	cmpl $4,%ecx
	jae Lc1fpe
Lc1fpf:
	addl $_c1fhd_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1fhd_info
Lc1fhe:
	jmp *(%esi)
Lc1fpe:
	addl $_c1fi2_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1fi2_info
Lc1fi3:
	jmp *(%esi)
Lc1fpb:
	addl $_c1fgR_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
	.long  _c1fgs_info - _c1fgs_info_dsp
.text
	.align 2
_c1fi2_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1fi2_info:
Lc1fi2:
	call 1f
1:	popl	%eax
	addl $_c1fi7_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1fi7_info
Lc1fi8:
	jmp *(%esi)
	.long  _c1fi2_info - _c1fi2_info_dsp
.text
	.align 2
_c1fi7_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1fi7_info:
Lc1fi7:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1fic_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1fic_info
Lc1fid:
	jmp *(%esi)
	.long  _c1fi7_info - _c1fi7_info_dsp
.text
	.align 2
_c1fic_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1fic_info:
Lc1fic:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1fp7
Lc1fp8:
	addl $_c1fih_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1fih_info
Lc1fii:
	jmp *(%esi)
Lc1fp7:
	movl 16(%ebp),%ecx
	addl $_c1foX_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl %ecx,8(%ebx)
	addl $16,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1fic_info - _c1fic_info_dsp
.text
	.align 2
_c1foX_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1foX_info:
Lc1foX:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fp4
Lc1fp3:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fp4:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1foX_info - _c1foX_info_dsp
.text
	.align 2
_c1fih_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1fih_info:
Lc1fih:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1fim_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1fih_info - _c1fih_info_dsp
.text
	.align 2
_c1fim_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fim_info:
Lc1fim:
	call 1f
1:	popl	%eax
	addl $_c1fio_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 12(%ebp),%eax
	movl %eax,8(%ebx)
	movl %esi,12(%ebp)
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1fim_info - _c1fim_info_dsp
.text
	.align 2
_c1fio_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fio_info:
Lc1fio:
	call 1f
1:	popl	%eax
	addl $52,%edi
	cmpl 856(%ebx),%edi
	ja Lc1foU
Lc1foT:
	movl %eax,%ecx
	addl $_s1bhN_info-(1b)+0,%ecx
	movl %ecx,-48(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-36(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-32(%edi)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	leal -48(%edi),%ecx
	movl %ecx,-24(%edi)
	movl 12(%ebp),%ecx
	movl %ecx,-20(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -14(%edi),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $16,%ebp
	jmp *(%ebp)
Lc1foU:
	movl $52,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fio_info - _c1fio_info_dsp
.text
	.align 2
_c1fhd_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1fhd_info:
Lc1fhd:
	call 1f
1:	popl	%eax
	addl $_c1fhi_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1fhi_info
Lc1fhj:
	jmp *(%esi)
	.long  _c1fhd_info - _c1fhd_info_dsp
.text
	.align 2
_c1fhi_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1fhi_info:
Lc1fhi:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1fhn_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1fhn_info
Lc1fho:
	jmp *(%esi)
	.long  _c1fhi_info - _c1fhi_info_dsp
.text
	.align 2
_c1fhn_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1fhn_info:
Lc1fhn:
	call 1f
1:	popl	%eax
	movl 16(%ebp),%ecx
	movl %esi,%edx
	andl $7,%edx
	cmpl $2,%edx
	jae Lc1foE
Lc1foF:
	addl $_c1fhs_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%eax
	movl %eax,16(%ebp)
	jmp _CoreziShapeziInternal_polygon2_info
Lc1foE:
	addl $_c1fou_info-(1b)+0,%eax
	movl %eax,16(%ebp)
	movl %ecx,8(%ebx)
	addl $16,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1fhn_info - _c1fhn_info_dsp
.text
	.align 2
_c1fou_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fou_info:
Lc1fou:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1foB
Lc1foA:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1foB:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fou_info - _c1fou_info_dsp
.text
	.align 2
_c1fhs_info_dsp:
.text
	.align 2
	.long	4
	.long	32
_c1fhs_info:
Lc1fhs:
	call 1f
1:	popl	%eax
	addl $72,%edi
	cmpl 856(%ebx),%edi
	ja Lc1for
Lc1foq:
	movl %eax,%ecx
	addl $_s1bhg_info-(1b)+0,%ecx
	movl %ecx,-68(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-56(%edi)
	movl 16(%ebp),%ecx
	movl %ecx,-52(%edi)
	movl %eax,%ecx
	addl $_s1bhe_info-(1b)+0,%ecx
	movl %ecx,-48(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-36(%edi)
	movl 12(%ebp),%ecx
	movl %ecx,-32(%edi)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	leal -48(%edi),%ecx
	movl %ecx,-24(%edi)
	leal -68(%edi),%ecx
	movl %ecx,-20(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -14(%edi),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $20,%ebp
	jmp *(%ebp)
Lc1for:
	movl $72,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fhs_info - _c1fhs_info_dsp
.text
	.align 2
_c1fgR_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fgR_info:
Lc1fgR:
	call 1f
1:	popl	%eax
	addl $_c1fgT_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 12(%ebp),%eax
	movl %eax,8(%ebx)
	movl %esi,12(%ebp)
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1fgR_info - _c1fgR_info_dsp
.text
	.align 2
_c1fgT_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fgT_info:
Lc1fgT:
	call 1f
1:	popl	%eax
	addl $52,%edi
	cmpl 856(%ebx),%edi
	ja Lc1foe
Lc1fod:
	movl %eax,%ecx
	addl $_s1bgS_info-(1b)+0,%ecx
	movl %ecx,-48(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-36(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-32(%edi)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	leal -48(%edi),%ecx
	movl %ecx,-24(%edi)
	movl 12(%ebp),%ecx
	movl %ecx,-20(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -14(%edi),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $16,%ebp
	jmp *(%ebp)
Lc1foe:
	movl $52,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fgT_info - _c1fgT_info_dsp
.text
	.align 2
_c1fgx_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fgx_info:
Lc1fgx:
	call 1f
1:	popl	%eax
	addl $52,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fo5
Lc1fo4:
	movl %eax,%ecx
	addl $_s1bgG_info-(1b)+0,%ecx
	movl %ecx,-48(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-36(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-32(%edi)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	leal -48(%edi),%ecx
	movl %ecx,-24(%edi)
	movl 12(%ebp),%ecx
	movl %ecx,-20(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -14(%edi),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $16,%ebp
	jmp *(%ebp)
Lc1fo5:
	movl $52,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fgx_info - _c1fgx_info_dsp
.text
	.align 2
_c1ffv_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1ffv_info:
Lc1ffv:
	call 1f
1:	popl	%eax
	addl $_c1ffx_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,%eax
	movl 4(%ebp),%esi
	movl %eax,4(%ebp)
	testw $7,%si
	jne _c1ffx_info
Lc1ffy:
	jmp *(%esi)
	.long  _c1ffv_info - _c1ffv_info_dsp
.text
	.align 2
_c1ffx_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1ffx_info:
Lc1ffx:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1fnO
Lc1fnP:
	cmpl $2,%ecx
	jae Lc1fnI
Lc1fnJ:
	addl $_c1flX_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebp)
	jmp _CoreziShapeziInternal_polygon2_info
Lc1fnO:
	cmpl $4,%ecx
	jae Lc1fnL
Lc1fnM:
	addl $_c1ffE_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1ffE_info
Lc1ffF:
	jmp *(%esi)
Lc1fnL:
	addl $_c1fmP_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1fmP_info
Lc1fmQ:
	jmp *(%esi)
Lc1fnI:
	addl $_c1fm9_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
	.long  _c1ffx_info - _c1ffx_info_dsp
.text
	.align 2
_c1fmP_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fmP_info:
Lc1fmP:
	call 1f
1:	popl	%eax
	addl $_c1fmU_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1fmU_info
Lc1fmY:
	jmp *(%esi)
	.long  _c1fmP_info - _c1fmP_info_dsp
.text
	.align 2
_c1fmU_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fmU_info:
Lc1fmU:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1fn2_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1fn2_info
Lc1fn4:
	jmp *(%esi)
	.long  _c1fmU_info - _c1fmU_info_dsp
.text
	.align 2
_c1fn2_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fn2_info:
Lc1fn2:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1fnE
Lc1fnF:
	addl $_c1fn8_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1fn8_info
Lc1fn9:
	jmp *(%esi)
Lc1fnE:
	movl 12(%ebp),%ecx
	addl $_c1fnu_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1fn2_info - _c1fn2_info_dsp
.text
	.align 2
_c1fnu_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fnu_info:
Lc1fnu:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fnB
Lc1fnA:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fnB:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fnu_info - _c1fnu_info_dsp
.text
	.align 2
_c1fn8_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fn8_info:
Lc1fn8:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1fnd_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1fn8_info - _c1fn8_info_dsp
.text
	.align 2
_c1fnd_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1fnd_info:
Lc1fnd:
	call 1f
1:	popl	%eax
	addl $_c1fnf_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl %esi,8(%ebp)
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1fnd_info - _c1fnd_info_dsp
.text
	.align 2
_c1fnf_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1fnf_info:
Lc1fnf:
	call 1f
1:	popl	%eax
	addl $32,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fnr
Lc1fnq:
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-24(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-20(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -14(%edi),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
Lc1fnr:
	movl $32,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fnf_info - _c1fnf_info_dsp
.text
	.align 2
_c1ffE_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1ffE_info:
Lc1ffE:
	call 1f
1:	popl	%eax
	addl $_c1ffJ_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1ffJ_info
Lc1ffK:
	jmp *(%esi)
	.long  _c1ffE_info - _c1ffE_info_dsp
.text
	.align 2
_c1ffJ_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1ffJ_info:
Lc1ffJ:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1ffO_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1ffO_info
Lc1ffP:
	jmp *(%esi)
	.long  _c1ffJ_info - _c1ffJ_info_dsp
.text
	.align 2
_c1ffO_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1ffO_info:
Lc1ffO:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	movl %esi,%edx
	andl $7,%edx
	cmpl $2,%edx
	jae Lc1fmL
Lc1fmM:
	addl $_c1ffT_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%eax
	movl %eax,12(%ebp)
	jmp _CoreziShapeziInternal_polygon2_info
Lc1fmL:
	addl $_c1fmB_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1ffO_info - _c1ffO_info_dsp
.text
	.align 2
_c1fmB_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fmB_info:
Lc1fmB:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fmI
Lc1fmH:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fmI:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fmB_info - _c1fmB_info_dsp
.text
	.align 2
_c1ffT_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1ffT_info:
Lc1ffT:
	call 1f
1:	popl	%eax
	addl $52,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fmy
Lc1fmx:
	movl %eax,%ecx
	addl $_s1bfI_info-(1b)+0,%ecx
	movl %ecx,-48(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-36(%edi)
	movl 12(%ebp),%ecx
	movl %ecx,-32(%edi)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-24(%edi)
	leal -48(%edi),%ecx
	movl %ecx,-20(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -14(%edi),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $16,%ebp
	jmp *(%ebp)
Lc1fmy:
	movl $52,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1ffT_info - _c1ffT_info_dsp
.text
	.align 2
_c1fm9_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1fm9_info:
Lc1fm9:
	call 1f
1:	popl	%eax
	addl $_c1fmb_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl %esi,8(%ebp)
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1fm9_info - _c1fm9_info_dsp
.text
	.align 2
_c1fmb_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1fmb_info:
Lc1fmb:
	call 1f
1:	popl	%eax
	addl $32,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fml
Lc1fmk:
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-24(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-20(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -14(%edi),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
Lc1fml:
	movl $32,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fmb_info - _c1fmb_info_dsp
.text
	.align 2
_c1flX_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1flX_info:
Lc1flX:
	call 1f
1:	popl	%eax
	addl $32,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fm7
Lc1fm6:
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-24(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-20(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -14(%edi),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
Lc1fm7:
	movl $32,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1flX_info - _c1flX_info_dsp
.text
	.align 2
_c1feP_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1feP_info:
Lc1feP:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $3,%ecx
	jae Lc1flR
Lc1flS:
	cmpl $2,%ecx
	jae Lc1flL
Lc1flM:
	addl $_c1fk0_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl 3(%esi),%eax
	movl %eax,8(%ebp)
	jmp _CoreziShapeziInternal_polygon2_info
Lc1flR:
	cmpl $4,%ecx
	jae Lc1flO
Lc1flP:
	addl $_c1feW_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 5(%esi),%eax
	movl 1(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1feW_info
Lc1feX:
	jmp *(%esi)
Lc1flO:
	addl $_c1fkS_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 4(%esi),%eax
	movl (%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1fkS_info
Lc1fkT:
	jmp *(%esi)
Lc1flL:
	addl $_c1fkc_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	jmp _stg_ap_v_fast
	.long  _c1feP_info - _c1feP_info_dsp
.text
	.align 2
_c1fkS_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fkS_info:
Lc1fkS:
	call 1f
1:	popl	%eax
	addl $_c1fkX_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1fkX_info
Lc1fl1:
	jmp *(%esi)
	.long  _c1fkS_info - _c1fkS_info_dsp
.text
	.align 2
_c1fkX_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fkX_info:
Lc1fkX:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1fl5_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1fl5_info
Lc1fl7:
	jmp *(%esi)
	.long  _c1fkX_info - _c1fkX_info_dsp
.text
	.align 2
_c1fl5_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1fl5_info:
Lc1fl5:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1flH
Lc1flI:
	addl $_c1flb_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne _c1flb_info
Lc1flc:
	jmp *(%esi)
Lc1flH:
	movl 12(%ebp),%ecx
	addl $_c1flx_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1fl5_info - _c1fl5_info_dsp
.text
	.align 2
_c1flx_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1flx_info:
Lc1flx:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1flE
Lc1flD:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1flE:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1flx_info - _c1flx_info_dsp
.text
	.align 2
_c1flb_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1flb_info:
Lc1flb:
	call 1f
1:	popl	%eax
	movl 4(%ebp),%ecx
	addl $_c1flg_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 3(%esi),%eax
	movl %eax,8(%ebx)
	movl %ecx,%esi
	addl $4,%ebp
	jmp _stg_ap_pv_fast
	.long  _c1flb_info - _c1flb_info_dsp
.text
	.align 2
_c1flg_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1flg_info:
Lc1flg:
	call 1f
1:	popl	%eax
	addl $_c1fli_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl %esi,8(%ebp)
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1flg_info - _c1flg_info_dsp
.text
	.align 2
_c1fli_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1fli_info:
Lc1fli:
	call 1f
1:	popl	%eax
	addl $32,%edi
	cmpl 856(%ebx),%edi
	ja Lc1flu
Lc1flt:
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-24(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-20(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -14(%edi),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
Lc1flu:
	movl $32,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fli_info - _c1fli_info_dsp
.text
	.align 2
_c1feW_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1feW_info:
Lc1feW:
	call 1f
1:	popl	%eax
	addl $_c1ff1_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 11(%esi),%esi
	testw $7,%si
	jne _c1ff1_info
Lc1ff2:
	jmp *(%esi)
	.long  _c1feW_info - _c1feW_info_dsp
.text
	.align 2
_c1ff1_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1ff1_info:
Lc1ff1:
	call 1f
1:	popl	%eax
	movl 3(%esi),%ecx
	movl 4(%ecx),%ecx
	addl $_c1ff6_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,%esi
	testw $7,%si
	jne _c1ff6_info
Lc1ff7:
	jmp *(%esi)
	.long  _c1ff1_info - _c1ff1_info_dsp
.text
	.align 2
_c1ff6_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1ff6_info:
Lc1ff6:
	call 1f
1:	popl	%eax
	movl 12(%ebp),%ecx
	movl %esi,%edx
	andl $7,%edx
	cmpl $2,%edx
	jae Lc1fkO
Lc1fkP:
	addl $_c1ffb_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %ecx,8(%ebx)
	movl 3(%esi),%eax
	movl %eax,12(%ebp)
	jmp _CoreziShapeziInternal_polygon2_info
Lc1fkO:
	addl $_c1fkE_info-(1b)+0,%eax
	movl %eax,12(%ebp)
	movl %ecx,8(%ebx)
	addl $12,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1ff6_info - _c1ff6_info_dsp
.text
	.align 2
_c1fkE_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fkE_info:
Lc1fkE:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fkL
Lc1fkK:
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	incl %eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fkL:
	movl $12,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fkE_info - _c1fkE_info_dsp
.text
	.align 2
_c1ffb_info_dsp:
.text
	.align 2
	.long	3
	.long	32
_c1ffb_info:
Lc1ffb:
	call 1f
1:	popl	%eax
	addl $52,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fkB
Lc1fkA:
	movl %eax,%ecx
	addl $_s1beq_info-(1b)+0,%ecx
	movl %ecx,-48(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-36(%edi)
	movl 12(%ebp),%ecx
	movl %ecx,-32(%edi)
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-24(%edi)
	leal -48(%edi),%ecx
	movl %ecx,-20(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -14(%edi),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $16,%ebp
	jmp *(%ebp)
Lc1fkB:
	movl $52,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1ffb_info - _c1ffb_info_dsp
.text
	.align 2
_c1fkc_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1fkc_info:
Lc1fkc:
	call 1f
1:	popl	%eax
	addl $_c1fke_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	movl %esi,8(%ebp)
	jmp _CoreziShapeziInternal_polygon2_info
	.long  _c1fkc_info - _c1fkc_info_dsp
.text
	.align 2
_c1fke_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1fke_info:
Lc1fke:
	call 1f
1:	popl	%eax
	addl $32,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fko
Lc1fkn:
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-24(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-20(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -14(%edi),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
Lc1fko:
	movl $32,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fke_info - _c1fke_info_dsp
.text
	.align 2
_c1fk0_info_dsp:
.text
	.align 2
	.long	2
	.long	32
_c1fk0_info:
Lc1fk0:
	call 1f
1:	popl	%eax
	addl $32,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fka
Lc1fk9:
	movl L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-28(%edi)
	movl 4(%ebp),%ecx
	movl %ecx,-24(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,-20(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-16(%edi)
	leal -27(%edi),%ecx
	movl %ecx,-12(%edi)
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
	leal -14(%edi),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -6(%edi),%esi
	addl $12,%ebp
	jmp *(%ebp)
Lc1fka:
	movl $32,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fk0_info - _c1fk0_info_dsp
.data
	.align 2
.align 0
_r19eO_closure:
	.long	_base_GHCziBase_Just_static_info
	.long	_ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	1
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_polygonzugo_closure
_CoreziShapeziInternal_polygonzugo_closure:
	.long	_CoreziShapeziInternal_polygonzugo_info
.text
	.align 2
_CoreziShapeziInternal_polygonzugo_info_dsp:
.text
	.align 2
	.long	65541
	.long	0
	.long	15
.globl _CoreziShapeziInternal_polygonzugo_info
_CoreziShapeziInternal_polygonzugo_info:
Lc1fMH:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -8(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1fMI
Lc1fMJ:
	addl $_c1fMx_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1fMx_info
Lc1fMy:
	jmp *(%esi)
Lc1fMI:
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_polygonzugo_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_polygonzugo_info - _CoreziShapeziInternal_polygonzugo_info_dsp
.text
	.align 2
_c1fMx_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fMx_info:
Lc1fMx:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1fMF
Lc1fMG:
	movl %eax,%esi
	addl $_r19eO_closure-(1b)+2,%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fMF:
	addl $_c1fMP_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 6(%esi),%eax
	movl 2(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1fMP_info
Lc1fMR:
	jmp *(%esi)
	.long  _c1fMx_info - _c1fMx_info_dsp
.text
	.align 2
_c1fMP_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1fMP_info:
Lc1fMP:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1fNn
Lu1fNp:
	addl $8,%ebp
	jmp _c1fNk_entry
Lc1fNn:
	addl $_c1fN0_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	movl 2(%esi),%eax
	movl %eax,4(%ebp)
	jmp _CoreziShapeziInternal_polygonzugo_info
	.long  _c1fMP_info - _c1fMP_info_dsp
.text
	.align 2
_c1fN0_info_dsp:
.text
	.align 2
	.long	1
	.long	32
_c1fN0_info:
Lc1fN0:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1fNj
Lu1fNq:
	addl $8,%ebp
	jmp _c1fNk_entry
Lc1fNj:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fNg
Lc1fNf:
	movl 2(%esi),%ecx
	movl L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-16(%edi)
	movl 4(%ebp),%edx
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	movl L_base_GHCziBase_Just_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	leal -14(%edi),%eax
	movl %eax,(%edi)
	leal -2(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1fNg:
	movl $20,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fN0_info - _c1fN0_info_dsp
.text
	.align 2
_c1fNk_entry:
Lc1fNk:
	call 1f
1:	popl	%eax
	movl L_base_GHCziBase_Nothing_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	jmp *(%ebp)
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwpolygon_closure
_CoreziShapeziInternal_zdwpolygon_closure:
	.long	_CoreziShapeziInternal_zdwpolygon_info
	.long	0
.text
	.align 2
_s1bmy_info_dsp:
.text
	.align 2
	.long	131077
	.long	196608
	.long	9
_s1bmy_info:
Lc1fRa:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -28(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1fRb
Lc1fRc:
	addl $_c1fR0_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl %esi,%eax
	movl 2(%esi),%edx
	movl %edx,64(%esp)
	movl 6(%esi),%edx
	movl %edx,76(%esp)
	movl 10(%esi),%edx
	movl %ecx,%esi
	movl 64(%esp),%ecx
	movl %ecx,-16(%ebp)
	movl 76(%esp),%ecx
	movl %ecx,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _c1fR0_info
Lc1fR1:
	jmp *(%esi)
Lc1fRb:
	movl %ecx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1bmy_info - _s1bmy_info_dsp
.text
	.align 2
_c1fR0_info_dsp:
.text
	.align 2
	.long	452
	.long	32
_c1fR0_info:
Lc1fR0:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1fR8
Lc1fR9:
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $20,%ebp
	jmp *(%ebp)
Lc1fR8:
	addl $_c1fRi_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 6(%esi),%eax
	movl 2(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1fRi_info
Lc1fRj:
	jmp *(%esi)
	.long  _c1fR0_info - _c1fR0_info_dsp
.text
	.align 2
_c1fRi_info_dsp:
.text
	.align 2
	.long	901
	.long	32
_c1fRi_info:
Lc1fRi:
	call 1f
1:	popl	%eax
	addl $_c1fRn_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 7(%esi),%eax
	movl 3(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1fRn_info
Lc1fRo:
	jmp *(%esi)
	.long  _c1fRi_info - _c1fRi_info_dsp
.text
	.align 2
_c1fRn_info_dsp:
.text
	.align 2
	.long	1798
	.long	32
_c1fRn_info:
Lc1fRn:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fRD
Lc1fRC:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1fRy_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 4(%ebp),%esi
	movl -4(%edi),%eax
	movl %eax,4(%ebp)
	testw $7,%si
	jne Lu1fSd
Lc1fRF:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1fRD:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1fSd:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1fRy_info
	.long  _c1fRn_info - _c1fRn_info_dsp
.text
	.align 2
_c1fRy_info_dsp:
.text
	.align 2
	.long	1862
	.long	32
_c1fRy_info:
Lc1fRy:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fRL
Lc1fRK:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	movl 4(%ebp),%ecx
	addl $_c1fRZ_info-(1b)+0,%eax
	movl %eax,4(%ebp)
	movl 20(%ebp),%eax
	movl 12(%ebp),%edx
	movl %eax,64(%esp)
	movl 16(%ebp),%eax
	addl $4,%ebp
	movl %ecx,76(%esp)
	movl -4(%edi),%ecx
	movl %ecx,88(%esp)
	movl 872(%ebx),%ecx
	movl %edx,100(%esp)
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,112(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,124(%esp)
	movl 104(%ecx),%eax
	movl %eax,136(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,148(%esp)
	movl 124(%esp),%edx
	subl %eax,%edx
	movl 136(%esp),%eax
	movl %edx,160(%esp)
	movl 148(%esp),%edx
	sbbl %edx,%eax
	movl 160(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1fRL:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fRy_info - _c1fRy_info_dsp
.text
	.align 2
_c1fRZ_info_dsp:
.text
	.align 2
	.long	901
	.long	32
_c1fRZ_info:
Lc1fRZ:
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	movl 20(%ebp),%esi
	addl $24,%ebp
	jmp _s1bmy_info
	.long  _c1fRZ_info - _c1fRZ_info_dsp
.const_data
	.align 2
.align 0
_u1fTK_srtd:
	.long	_S1bza_srt+80
	.long	17
	.long	65729
.text
	.align 2
_s1bmW_info_dsp:
.text
	.align 2
	.long	_u1fTK_srtd-(_s1bmW_info)+0
	.long	196623
	.long	1
	.long	-65526
_s1bmW_info:
Lc1fSl:
	call 1f
1:	popl	%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %eax,64(%esp)
	leal -44(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1fSm
Lc1fSn:
	movl 64(%esp),%eax
	addl $_c1fPv_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 1(%esi),%eax
	movl %eax,8(%ebx)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	jmp _CoreziShapeziInternal_polygon2_info
Lc1fSm:
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1bmW_info - _s1bmW_info_dsp
.const_data
	.align 2
.align 0
_u1fTL_srtd:
	.long	_S1bza_srt+80
	.long	17
	.long	65729
.text
	.align 2
_c1fPv_info_dsp:
.text
	.align 2
	.long	_u1fTL_srtd-(_c1fPv_info)+0
	.long	2
	.long	-65504
_c1fPv_info:
Lc1fPv:
	call 1f
1:	popl	%eax
	addl $_c1fPx_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl %esi,8(%ebx)
	jmp _CoreziShapeziInternal_polygonzugo_info
	.long  _c1fPv_info - _c1fPv_info_dsp
.const_data
	.align 2
.align 0
_u1fTM_srtd:
	.long	_S1bza_srt+80
	.long	17
	.long	65729
.text
	.align 2
_c1fPx_info_dsp:
.text
	.align 2
	.long	_u1fTM_srtd-(_c1fPx_info)+0
	.long	2
	.long	-65504
_c1fPx_info:
Lc1fPx:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1fSj
Lc1fSk:
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 1(%eax),%esi
	addl $12,%ebp
	jmp *(%ebp)
Lc1fSj:
	addl $_c1fPC_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 2(%esi),%esi
	testw $7,%si
	jne _c1fPC_info
Lc1fPD:
	jmp *(%esi)
	.long  _c1fPx_info - _c1fPx_info_dsp
.const_data
	.align 2
.align 0
_u1fTN_srtd:
	.long	_S1bza_srt+80
	.long	17
	.long	65729
.text
	.align 2
_c1fPC_info_dsp:
.text
	.align 2
	.long	_u1fTN_srtd-(_c1fPC_info)+0
	.long	2
	.long	-65504
_c1fPC_info:
Lc1fPC:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1fT0
Lc1fT1:
	movl L_CoreziShapeziInternal_polygon1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	addl $12,%ebp
	jmp _stg_ap_0_fast
Lc1fT0:
	addl $_c1fPI_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 6(%esi),%eax
	movl 2(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1fPI_info
Lc1fPJ:
	jmp *(%esi)
	.long  _c1fPC_info - _c1fPC_info_dsp
.text
	.align 2
_c1fPI_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1fPI_info)+80
	.long	3
	.long	12648480
_c1fPI_info:
Lc1fPI:
	call 1f
1:	popl	%eax
	addl $_c1fPN_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 7(%esi),%eax
	movl 3(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1fPN_info
Lc1fPO:
	jmp *(%esi)
	.long  _c1fPI_info - _c1fPI_info_dsp
.text
	.align 2
_c1fPN_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1fPN_info)+80
	.long	4
	.long	12648480
_c1fPN_info:
Lc1fPN:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fSC
Lc1fSB:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1fPY_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 4(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	movl -4(%edi),%eax
	movl %eax,4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1fTn
Lc1fPZ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1fSC:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1fTn:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1fPY_info
	.long  _c1fPN_info - _c1fPN_info_dsp
.text
	.align 2
_c1fPY_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1fPY_info)+80
	.long	967
	.long	12648480
_c1fPY_info:
Lc1fPY:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fSG
Lc1fSF:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1fQ9_info-(1b)+0,%eax
	movl %eax,-12(%ebp)
	movl 24(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	movl -4(%edi),%eax
	movl %eax,24(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne Lu1fTo
Lc1fQa:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1fSG:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1fTo:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1fQ9_info
	.long  _c1fPY_info - _c1fPY_info_dsp
.text
	.align 2
_c1fQ9_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1fQ9_info)+80
	.long	24522
	.long	12648480
_c1fQ9_info:
Lc1fQ9:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1fQe_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl 3(%esi),%ecx
	movl L_CoreziShapeziInternal_bezzierzuf2_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl %ecx,24(%ebp)
	testw $7,%si
	jne _c1fQe_info
Lc1fQf:
	jmp *(%esi)
	.long  _c1fQ9_info - _c1fQ9_info_dsp
.text
	.align 2
_c1fQe_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1fQe_info)+104
	.long	24522
	.long	196640
_c1fQe_info:
Lc1fQe:
	call 1f
1:	popl	%eax
	addl $_c1fQj_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 40(%ebp),%esi
	movl %eax,40(%ebp)
	testw $7,%si
	jne _c1fQj_info
Lc1fQk:
	jmp *(%esi)
	.long  _c1fQe_info - _c1fQe_info_dsp
.text
	.align 2
_c1fQj_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1fQj_info)+104
	.long	57290
	.long	196640
_c1fQj_info:
Lc1fQj:
	call 1f
1:	popl	%eax
	addl $_c1fQu_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 36(%ebp),%ecx
	movl %eax,36(%ebp)
	movl 40(%ebp),%edx
	movl %esi,40(%ebp)
	movl %edx,64(%esp)
	movl 28(%ebp),%edx
	movl %edx,76(%esp)
	movl 24(%ebp),%edx
	movl %ecx,88(%esp)
	movl 872(%ebx),%ecx
	movl %edx,100(%esp)
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,112(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,124(%esp)
	movl 104(%ecx),%eax
	movl %eax,136(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,148(%esp)
	movl 124(%esp),%edx
	subl %eax,%edx
	movl 136(%esp),%eax
	movl %edx,160(%esp)
	movl 148(%esp),%edx
	sbbl %edx,%eax
	movl 160(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1fQj_info - _c1fQj_info_dsp
.text
	.align 2
_c1fQu_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1fQu_info)+104
	.long	24522
	.long	196640
_c1fQu_info:
Lc1fQu:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fSN
Lc1fSM:
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-8(%edi)
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%eax
	movl %eax,28(%ebp)
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1fQA_entry
Lc1fSN:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fQu_info - _c1fQu_info_dsp
.text
	.align 2
_c1fQA_entry:
Lc1fQA:
	call 1f
1:	popl	%eax
	addl $12,%edi
	movl 24(%ebp),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1fSQ
Lc1fSP:
	movl 3(%ecx),%ecx
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%edi)
#	gldsd (%ebp),%fake0
	fldl (%ebp) ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	movl %eax,%edx
	addl $_c1fQI_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl L_CoreziShapeziInternal_linezuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl -4(%edi),%eax
	movl %eax,8(%ebp)
	movl %ecx,24(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne Lu1fTt
Lc1fQJ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1fSQ:
	movl $12,904(%ebx)
	movl %eax,%edx
	addl $_c1fQz_info-(1b)+0,%edx
	movl %edx,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1fTt:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1fQI_info
.text
	.align 2
_c1fQz_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1fQz_info)+104
	.long	24522
	.long	196640
_c1fQz_info:
Lc1fQz:
	movl %esi,28(%ebp)
	addl $4,%ebp
	jmp _c1fQA_entry
	.long  _c1fQz_info - _c1fQz_info_dsp
.text
	.align 2
_c1fQI_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1fQI_info)+104
	.long	24522
	.long	65568
_c1fQI_info:
Lc1fQI:
	call 1f
1:	popl	%eax
	addl $_c1fQT_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 28(%ebp),%ecx
	movl %eax,28(%ebp)
	movl 12(%ebp),%edx
	movl %ecx,64(%esp)
	movl 24(%ebp),%ecx
	movl %edx,76(%esp)
	movl 36(%ebp),%edx
	movl %ecx,88(%esp)
	movl 872(%ebx),%ecx
	movl %edx,100(%esp)
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,112(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,124(%esp)
	movl 104(%ecx),%eax
	movl %eax,136(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,148(%esp)
	movl 124(%esp),%edx
	subl %eax,%edx
	movl 136(%esp),%eax
	movl %edx,160(%esp)
	movl 148(%esp),%edx
	sbbl %edx,%eax
	movl 160(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 108(%esp),%ecx
	pushl %ecx
	movl 100(%esp),%ecx
	pushl %ecx
	movl 92(%esp),%ecx
	pushl %ecx
	movl 84(%esp),%ecx
	pushl %ecx
	movl 136(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1fQI_info - _c1fQI_info_dsp
.text
	.align 2
_c1fQT_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1fQT_info)+104
	.long	24522
	.long	65568
_c1fQT_info:
Lc1fQT:
	call 1f
1:	popl	%eax
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fSV
Lc1fSU:
	movl %eax,%ecx
	addl $_s1bmy_info-(1b)+0,%ecx
	movl %ecx,-12(%edi)
	movl 24(%ebp),%ecx
	movl %ecx,-8(%edi)
	movl 36(%ebp),%ecx
	movl %ecx,-4(%edi)
	movl 28(%ebp),%ecx
	movl %ecx,(%edi)
	addl $_c1fSw_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 32(%ebp),%eax
	movl %eax,8(%ebx)
	leal -10(%edi),%esi
	jmp _s1bmy_info
Lc1fSV:
	movl $16,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fQT_info - _c1fQT_info_dsp
.text
	.align 2
_c1fSw_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1fSw_info)+104
	.long	32714
	.long	65568
_c1fSw_info:
Lc1fSw:
	movl 40(%ebp),%eax
	movl %eax,16(%ebx)
	movl 24(%ebp),%eax
	movl %eax,8(%ebx)
#	gldsd 4(%ebp),%fake0
	fldl 4(%ebp) ; fstp %st(1)
#	gstsd %fake0,112(%ebx)
	fstl 112(%ebx)
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gstsd %fake0,104(%ebx)
	fstl 104(%ebx)
	addl $44,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _CoreziShapeziInternal_zdwa2_info
	.long  _c1fSw_info - _c1fSw_info_dsp
.const_data
	.align 2
.align 0
_u1fTO_srtd:
	.long	_S1bza_srt+80
	.long	18
	.long	196801
.text
	.align 2
_CoreziShapeziInternal_zdwpolygon_info_dsp:
.text
	.align 2
	.long	_u1fTO_srtd-(_CoreziShapeziInternal_zdwpolygon_info)+0
	.long	65541
	.long	0
	.long	-65521
.globl _CoreziShapeziInternal_zdwpolygon_info
_CoreziShapeziInternal_zdwpolygon_info:
Lc1fTB:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1fTC
Lc1fTD:
	addl $_c1fPk_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1fPk_info
Lc1fPl:
	jmp *(%esi)
Lc1fTC:
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_zdwpolygon_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdwpolygon_info - _CoreziShapeziInternal_zdwpolygon_info_dsp
.const_data
	.align 2
.align 0
_u1fTP_srtd:
	.long	_S1bza_srt+80
	.long	17
	.long	65729
.text
	.align 2
_c1fPk_info_dsp:
.text
	.align 2
	.long	_u1fTP_srtd-(_c1fPk_info)+0
	.long	0
	.long	-65504
_c1fPk_info:
Lc1fPk:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1fTz
Lc1fTA:
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,16(%ebx)
	movl L_CoreziShapeziInternal_zdfApplicativeShape1_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	addl $3,%ecx
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_zdfApplicativeShape3_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 2(%eax),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fTz:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fTI
Lc1fTH:
	movl %eax,%ecx
	addl $_s1bmW_info-(1b)+0,%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,16(%ebx)
	leal -1(%edi),%ecx
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_zdfApplicativeShape3_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 2(%eax),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fTI:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fPk_info - _c1fPk_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_polygon_closure
_CoreziShapeziInternal_polygon_closure:
	.long	_CoreziShapeziInternal_polygon_info
	.long	0
.text
	.align 2
_CoreziShapeziInternal_polygon_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_polygon_info)+148
	.long	65541
	.long	0
	.long	196623
.globl _CoreziShapeziInternal_polygon_info
_CoreziShapeziInternal_polygon_info:
Lc1fXm:
	call 1f
1:	popl	%eax
	movl 8(%ebx),%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb Lc1fXn
Lc1fXo:
	addl $_c1fXj_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl %ecx,8(%ebx)
	addl $-4,%ebp
	jmp _CoreziShapeziInternal_zdwpolygon_info
Lc1fXn:
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_polygon_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_polygon_info - _CoreziShapeziInternal_polygon_info_dsp
.text
	.align 2
_c1fXj_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fXj_info:
Lc1fXj:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1fXr
Lc1fXq:
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %esi,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fXr:
	movl $16,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fXj_info - _c1fXj_info_dsp
.data
	.align 2
.align 0
_r19eP_closure:
	.long	_r19eP_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1fXT_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	115
	.byte	116
	.byte	114
	.byte	44
	.byte	120
	.byte	44
	.byte	121
	.byte	44
	.byte	99
	.byte	116
	.byte	120
	.byte	44
	.byte	95
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	115
	.byte	116
	.byte	114
	.byte	111
	.byte	107
	.byte	101
	.byte	84
	.byte	101
	.byte	120
	.byte	116
	.byte	40
	.byte	115
	.byte	116
	.byte	114
	.byte	44
	.byte	120
	.byte	44
	.byte	121
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_r19eP_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r19eP_info:
Lc1fXW:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1fYe
Lc1fYf:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1fXS
Lc1fXR:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1fXU_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1fXT_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1fXS:
	jmp *(%esi)
Lc1fYe:
	jmp *-16(%ebx)
	.long  _r19eP_info - _r19eP_info_dsp
.text
	.align 2
_c1fXU_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fXU_info:
Lc1fXU:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1fXZ_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fXU_info - _c1fXU_info_dsp
.text
	.align 2
_c1fXZ_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fXZ_info:
Lc1fXZ:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fYj
Lc1fYi:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1fYb_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1fYj:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fXZ_info - _c1fXZ_info_dsp
.text
	.align 2
_c1fYb_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fYb_info:
Lc1fYb:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fYn
Lc1fYm:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fYn:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fYb_info - _c1fYb_info_dsp
.data
	.align 2
.align 0
_r19eQ_closure:
	.long	_r19eQ_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1fZr_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	115
	.byte	116
	.byte	114
	.byte	44
	.byte	120
	.byte	44
	.byte	121
	.byte	44
	.byte	99
	.byte	116
	.byte	120
	.byte	44
	.byte	95
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	102
	.byte	105
	.byte	108
	.byte	108
	.byte	84
	.byte	101
	.byte	120
	.byte	116
	.byte	40
	.byte	115
	.byte	116
	.byte	114
	.byte	44
	.byte	120
	.byte	44
	.byte	121
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_r19eQ_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r19eQ_info:
Lc1fZu:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1fZM
Lc1fZN:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1fZq
Lc1fZp:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1fZs_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1fZr_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1fZq:
	jmp *(%esi)
Lc1fZM:
	jmp *-16(%ebx)
	.long  _r19eQ_info - _r19eQ_info_dsp
.text
	.align 2
_c1fZs_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fZs_info:
Lc1fZs:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1fZx_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fZs_info - _c1fZs_info_dsp
.text
	.align 2
_c1fZx_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fZx_info:
Lc1fZx:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fZR
Lc1fZQ:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1fZJ_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1fZR:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fZx_info - _c1fZx_info_dsp
.text
	.align 2
_c1fZJ_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1fZJ_info:
Lc1fZJ:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1fZV
Lc1fZU:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1fZV:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1fZJ_info - _c1fZJ_info_dsp
.data
	.align 2
.align 0
_r19eR_closure:
	.long	_r19eR_info
	.long	0
	.long	0
	.long	0
.const
	.align 2
.align 0
_c1g0Z_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	120
	.byte	44
	.byte	121
	.byte	44
	.byte	99
	.byte	116
	.byte	120
	.byte	44
	.byte	95
	.byte	41
	.byte	123
	.byte	99
	.byte	116
	.byte	120
	.byte	46
	.byte	116
	.byte	114
	.byte	97
	.byte	110
	.byte	115
	.byte	108
	.byte	97
	.byte	116
	.byte	101
	.byte	40
	.byte	120
	.byte	44
	.byte	121
	.byte	41
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 2
_r19eR_info_dsp:
.text
	.align 2
	.long	0
	.long	22
_r19eR_info:
Lc1g12:
	call 1f
1:	popl	%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb Lc1g1k
Lc1g1l:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	movl %eax,76(%esp)
	call L_newCAF$stub
	addl $12,%esp
	testl %eax,%eax
	je Lc1g0Y
Lc1g0X:
	movl 64(%esp),%ecx
	movl L_stg_bh_upd_frame_info$non_lazy_ptr-(1b)+0(%ecx),%edx
	movl %edx,-12(%ebp)
	movl %eax,-8(%ebp)
	movl %ecx,%eax
	addl $_c1g10_info-(1b)+0,%eax
	movl %eax,-16(%ebp)
	movl %ecx,%eax
	addl $_c1g0Z_str-(1b)+0,%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp _ghczmprim_GHCziCString_unpackCStringzh_info
Lc1g0Y:
	jmp *(%esi)
Lc1g1k:
	jmp *-16(%ebx)
	.long  _r19eR_info - _r19eR_info_dsp
.text
	.align 2
_c1g10_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1g10_info:
Lc1g10:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1g15_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1g10_info - _c1g10_info_dsp
.text
	.align 2
_c1g15_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1g15_info:
Lc1g15:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1g1p
Lc1g1o:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	addl $_c1g1h_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
Lc1g1p:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1g15_info - _c1g15_info_dsp
.text
	.align 2
_c1g1h_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1g1h_info:
Lc1g1h:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1g1t
Lc1g1s:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1g1t:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1g1h_info - _c1g1h_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_zdwtext_closure
_CoreziShapeziInternal_zdwtext_closure:
	.long	_CoreziShapeziInternal_zdwtext_info
	.long	0
.text
	.align 2
.globl _CoreziShapeziInternal_zdwtext_slow
_CoreziShapeziInternal_zdwtext_slow:
Lc1g2j:
	movl 16(%ebp),%eax
	movl %eax,40(%ebx)
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl 8(%ebp),%eax
	movl %eax,24(%ebx)
	movl 4(%ebp),%eax
	movl %eax,16(%ebx)
	movl (%ebp),%eax
	movl %eax,8(%ebx)
	addl $20,%ebp
	jmp _CoreziShapeziInternal_zdwtext_info
.text
	.align 2
_s1bpE_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1bpE_info)+156
	.long	262167
	.long	6
	.long	536805385
_s1bpE_info:
Lc1g4U:
	call 1f
1:	popl	%eax
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	movl %eax,76(%esp)
	leal -40(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1g5e
Lc1g5f:
	movl 64(%esp),%eax
	addl $_c1g4R_info-(1b)+0,%eax
	movl %eax,-36(%ebp)
	movl (%esi),%eax
	movl %eax,88(%esp)
	movl 4(%esi),%eax
	movl %eax,100(%esp)
	movl 8(%esi),%eax
	movl %eax,112(%esp)
	movl 12(%esi),%eax
	movl %eax,124(%esp)
	movl 16(%esi),%eax
	movl %eax,136(%esp)
	movl 20(%esi),%eax
	movl %edx,%esi
	movl 88(%esp),%edx
	movl %edx,-32(%ebp)
	movl 100(%esp),%edx
	movl %edx,-28(%ebp)
	movl 112(%esp),%edx
	movl %edx,-24(%ebp)
	movl 124(%esp),%edx
	movl %edx,-20(%ebp)
	movl 136(%esp),%edx
	movl %edx,-16(%ebp)
	movl %eax,-12(%ebp)
	movl 76(%esp),%eax
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-36,%ebp
	testw $7,%si
	jne _c1g4R_info
Lc1g4S:
	jmp *(%esi)
Lc1g5e:
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl 76(%esp),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1bpE_info - _s1bpE_info_dsp
.text
	.align 2
_c1g4R_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g4R_info)+156
	.long	8
	.long	536805408
_c1g4R_info:
Lc1g4R:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1g4X_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl 3(%esi),%ecx
	movl %eax,%esi
	addl $_r19eM_closure-(1b)+0,%esi
	movl %ecx,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne _c1g4X_info
Lc1g4Y:
	jmp *(%esi)
	.long  _c1g4R_info - _c1g4R_info_dsp
.text
	.align 2
_c1g4X_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g4X_info)+156
	.long	73
	.long	528416800
_c1g4X_info:
Lc1g4X:
	call 1f
1:	popl	%eax
	addl $_c1g52_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 36(%ebp),%esi
	movl %eax,36(%ebp)
	testw $7,%si
	jne _c1g52_info
Lc1g53:
	jmp *(%esi)
	.long  _c1g4X_info - _c1g4X_info_dsp
.text
	.align 2
_c1g52_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g52_info)+156
	.long	16457
	.long	528416800
_c1g52_info:
Lc1g52:
	call 1f
1:	popl	%eax
	addl $_c1g5b_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 36(%ebp),%ecx
	movl %eax,36(%ebp)
	movl 4(%ebp),%edx
	movl %ecx,64(%esp)
	movl 872(%ebx),%ecx
	movl %edx,76(%esp)
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,100(%esp)
	movl 104(%ecx),%eax
	movl %eax,112(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,124(%esp)
	movl 100(%esp),%edx
	subl %eax,%edx
	movl 112(%esp),%eax
	movl %edx,136(%esp)
	movl 124(%esp),%edx
	sbbl %edx,%eax
	movl 136(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	movl 88(%esp),%ecx
	pushl %ecx
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L___app2$stub
	addl $12,%esp
	subl $8,%esp
	movl 156(%esp),%ecx
	pushl %ecx
	movl %eax,172(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,172(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,184(%esp)
	movl %eax,%ecx
	movl %edx,196(%esp)
	movl 184(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 172(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,208(%esp)
	movl 196(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 208(%esp),%ecx
	adcl %eax,%ecx
	movl 172(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 160(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1g52_info - _c1g52_info_dsp
.text
	.align 2
_c1g5b_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g5b_info)+156
	.long	16457
	.long	528416800
_c1g5b_info:
Lc1g5b:
	call 1f
1:	popl	%eax
	addl $_c1g5d_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 8(%ebp),%esi
	testw $7,%si
	jne _c1g5d_info
Lc1g5k:
	jmp *(%esi)
	.long  _c1g5b_info - _c1g5b_info_dsp
.text
	.align 2
_c1g5d_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g5d_info)+156
	.long	16585
	.long	528416800
_c1g5d_info:
Lc1g5d:
	call 1f
1:	popl	%eax
	addl $_c1g5q_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 12(%ebp),%esi
	movl %eax,12(%ebp)
	testw $7,%si
	jne _c1g5q_info
Lc1gai:
	jmp *(%esi)
	.long  _c1g5d_info - _c1g5d_info_dsp
.text
	.align 2
_c1g5q_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g5q_info)+156
	.long	16841
	.long	528416800
_c1g5q_info:
Lc1g5q:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1gaU
Lc1gaV:
	movl %eax,%ecx
	addl $_c1gam_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r19eC_closure-(1b)+0,%esi
	testw $7,%si
	jne _c1gam_info
Lc1gaq:
	jmp *(%esi)
Lc1gaU:
	cmpl $3,%ecx
	jae Lc1gaR
Lc1gaS:
	movl %eax,%ecx
	addl $_c1gax_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r19eB_closure-(1b)+0,%esi
	testw $7,%si
	jne _c1gax_info
Lc1gaA:
	jmp *(%esi)
Lc1gaR:
	movl %eax,%ecx
	addl $_c1gaH_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r19eA_closure-(1b)+0,%esi
	testw $7,%si
	jne _c1gaH_info
Lc1gaK:
	jmp *(%esi)
	.long  _c1g5q_info - _c1g5q_info_dsp
.text
	.align 2
_c1gaH_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1gaH_info)+156
	.long	16841
	.long	524746784
_c1gaH_info:
Lc1gaH:
	movl 3(%esi),%eax
	movl %eax,8(%ebp)
	addl $4,%ebp
	jmp _s1bo2_entry
	.long  _c1gaH_info - _c1gaH_info_dsp
.text
	.align 2
_c1gax_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1gax_info)+156
	.long	16841
	.long	524746784
_c1gax_info:
Lc1gax:
	movl 3(%esi),%eax
	movl %eax,8(%ebp)
	addl $4,%ebp
	jmp _s1bo2_entry
	.long  _c1gax_info - _c1gax_info_dsp
.text
	.align 2
_c1gam_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1gam_info)+156
	.long	16841
	.long	524746784
_c1gam_info:
Lc1gam:
	movl 3(%esi),%eax
	movl %eax,8(%ebp)
	addl $4,%ebp
	jmp _s1bo2_entry
	.long  _c1gam_info - _c1gam_info_dsp
.text
	.align 2
_s1bo2_entry:
Ls1bo2:
	call 1f
1:	popl	%eax
	addl $_c1g5x_info-(1b)+0,%eax
	movl %eax,-4(%ebp)
	movl 12(%ebp),%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1g5x_info
Lc1g9E:
	jmp *(%esi)
.text
	.align 2
_c1g5x_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g5x_info)+156
	.long	17353
	.long	524746784
_c1g5x_info:
Lc1g5x:
	call 1f
1:	popl	%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jae Lc1gag
Lc1gah:
	movl %eax,%ecx
	addl $_c1g9I_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r19ez_closure-(1b)+0,%esi
	testw $7,%si
	jne _c1g9I_info
Lc1g9M:
	jmp *(%esi)
Lc1gag:
	cmpl $3,%ecx
	jae Lc1gad
Lc1gae:
	movl %eax,%ecx
	addl $_c1g9T_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r19ey_closure-(1b)+0,%esi
	testw $7,%si
	jne _c1g9T_info
Lc1g9W:
	jmp *(%esi)
Lc1gad:
	movl %eax,%ecx
	addl $_c1ga3_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r19ex_closure-(1b)+0,%esi
	testw $7,%si
	jne _c1ga3_info
Lc1ga6:
	jmp *(%esi)
	.long  _c1g5x_info - _c1g5x_info_dsp
.text
	.align 2
_c1ga3_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1ga3_info)+180
	.long	17353
	.long	8192032
_c1ga3_info:
Lc1ga3:
	movl 3(%esi),%eax
	movl %eax,16(%ebp)
	addl $4,%ebp
	jmp _s1bo4_entry
	.long  _c1ga3_info - _c1ga3_info_dsp
.text
	.align 2
_c1g9T_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g9T_info)+180
	.long	17353
	.long	8192032
_c1g9T_info:
Lc1g9T:
	movl 3(%esi),%eax
	movl %eax,16(%ebp)
	addl $4,%ebp
	jmp _s1bo4_entry
	.long  _c1g9T_info - _c1g9T_info_dsp
.text
	.align 2
_c1g9I_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g9I_info)+180
	.long	17353
	.long	8192032
_c1g9I_info:
Lc1g9I:
	movl 3(%esi),%eax
	movl %eax,16(%ebp)
	addl $4,%ebp
	jmp _s1bo4_entry
	.long  _c1g9I_info - _c1g9I_info_dsp
.text
	.align 2
_s1bo4_entry:
Ls1bo4:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1g5C_info-(1b)+0,%ecx
	movl %ecx,-4(%ebp)
	movl %eax,%esi
	addl $_r19eD_closure-(1b)+0,%esi
	addl $-4,%ebp
	testw $7,%si
	jne _c1g5C_info
Lc1g5D:
	jmp *(%esi)
.text
	.align 2
_c1g5C_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g5C_info)+188
	.long	17353
	.long	2031648
_c1g5C_info:
Lc1g5C:
	call 1f
1:	popl	%eax
	addl $_c1g5J_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call L_eval$stub
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1g5C_info - _c1g5C_info_dsp
.text
	.align 2
_c1g5J_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g5J_info)+188
	.long	17353
	.long	2031648
_c1g5J_info:
Lc1g5J:
	call 1f
1:	popl	%eax
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja Lc1g6S
Lc1g6R:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-20(%edi)
	movl %esi,-16(%edi)
	movl L_stg_ap_1_upd_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-12(%edi)
	leal -19(%edi),%ecx
	movl %ecx,(%edi)
	addl $_c1g5N_info-(1b)+0,%eax
	movl %eax,(%ebp)
	leal -12(%edi),%esi
	testw $7,%si
	jne _c1g5N_info
Lc1g5O:
	jmp *(%esi)
Lc1g6S:
	movl $24,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1g5J_info - _c1g5J_info_dsp
.text
	.align 2
_c1g5N_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g5N_info)+188
	.long	17353
	.long	2031648
_c1g5N_info:
Lc1g5N:
	call 1f
1:	popl	%eax
	addl $_c1g5Y_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 12(%ebp),%ecx
	movl 8(%ebp),%edx
	movl %eax,64(%esp)
	movl 16(%ebp),%eax
	movl %ecx,76(%esp)
	movl 4(%ebp),%ecx
	movl %edx,88(%esp)
	movl 872(%ebx),%edx
	movl %eax,100(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,124(%esp)
	movl 104(%edx),%ecx
	movl %ecx,136(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,148(%esp)
	movl 124(%esp),%eax
	subl %ecx,%eax
	movl 136(%esp),%ecx
	movl %eax,160(%esp)
	movl 148(%esp),%eax
	sbbl %eax,%ecx
	movl 160(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1g5N_info - _c1g5N_info_dsp
.text
	.align 2
_c1g5Y_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g5Y_info)+188
	.long	17353
	.long	2031648
_c1g5Y_info:
Lc1g5Y:
	call 1f
1:	popl	%eax
	addl $_c1g60_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 24(%ebp),%esi
	testw $7,%si
	jne _c1g60_info
Lc1g61:
	jmp *(%esi)
	.long  _c1g5Y_info - _c1g5Y_info_dsp
.text
	.align 2
_c1g60_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g60_info)+188
	.long	19401
	.long	2031648
_c1g60_info:
Lc1g60:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1g6X
Lc1g6W:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	addl $_c1g6b_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 28(%ebp),%esi
	movl -4(%edi),%eax
	movl %eax,28(%ebp)
	testw $7,%si
	jne Lu1gcp
Lc1g6c:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1g6X:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1gcp:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1g6b_info
	.long  _c1g60_info - _c1g60_info_dsp
.text
	.align 2
_c1g6b_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g6b_info)+188
	.long	23497
	.long	2031648
_c1g6b_info:
Lc1g6b:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1g71
Lc1g70:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	movl %eax,%ecx
	addl $_c1g6m_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r19eR_closure-(1b)+0,%esi
	movl -4(%edi),%eax
	movl %eax,24(%ebp)
	testw $7,%si
	jne Lu1gcq
Lc1g6n:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1g71:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1gcq:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1g6m_info
	.long  _c1g6b_info - _c1g6b_info_dsp
.text
	.align 2
_c1g6m_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g6m_info)+188
	.long	23497
	.long	1507360
_c1g6m_info:
Lc1g6m:
	call 1f
1:	popl	%eax
	addl $_c1g6x_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 3(%esi),%eax
	movl 28(%ebp),%ecx
	movl 24(%ebp),%edx
	movl %eax,64(%esp)
	movl 4(%ebp),%eax
	movl %ecx,76(%esp)
	movl 36(%ebp),%ecx
	movl %edx,88(%esp)
	movl 872(%ebx),%edx
	movl %eax,100(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,124(%esp)
	movl 104(%edx),%ecx
	movl %ecx,136(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,148(%esp)
	movl 124(%esp),%eax
	subl %ecx,%eax
	movl 136(%esp),%ecx
	movl %eax,160(%esp)
	movl 148(%esp),%eax
	sbbl %eax,%ecx
	movl 160(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 120(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1g6m_info - _c1g6m_info_dsp
.text
	.align 2
_c1g6x_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g6x_info)+188
	.long	23497
	.long	1507360
_c1g6x_info:
Lc1g6x:
	call 1f
1:	popl	%eax
	addl $_c1g6z_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 32(%ebp),%esi
	testw $7,%si
	jne _c1g6z_info
Lc1g6A:
	jmp *(%esi)
	.long  _c1g6x_info - _c1g6x_info_dsp
.text
	.align 2
_c1g6z_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g6z_info)+188
	.long	31689
	.long	1507360
_c1g6z_info:
Lc1g6z:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1g77
Lc1g76:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd Ln1ggq-(1b)+0(%eax),%fake1
	fldl Ln1ggq-(1b)+0(%eax) ; fstp %st(2)
#	gdivt %fake0,%fake1,%fake0
	#GDIV-xxxcase1
	fld %st(1) ; fdivrp %st(0),%st(1)
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	movl %eax,%ecx
	addl $_c1g6N_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r19eN_closure-(1b)+0,%esi
	movl -4(%edi),%eax
	movl %eax,32(%ebp)
	testw $7,%si
	jne Lu1gcs
Lc1g79:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
Lc1g77:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
Lu1gcs:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp _c1g6N_info
	.long  _c1g6z_info - _c1g6z_info_dsp
.const
	.align 2
.align 3
Ln1ggq:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	36
	.byte	64
.text
	.align 2
_c1g6N_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g6N_info)+192
	.long	31689
	.long	720928
_c1g6N_info:
Lc1g6N:
	call 1f
1:	popl	%eax
	addl $_c1g7k_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 32(%ebp),%eax
	movl 3(%esi),%ecx
	movl 4(%ebp),%edx
	movl %ecx,64(%esp)
	movl 36(%ebp),%ecx
	movl %edx,76(%esp)
	movl 872(%ebx),%edx
	movl %ecx,88(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,112(%esp)
	movl 104(%edx),%eax
	movl %eax,124(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,136(%esp)
	movl 112(%esp),%ecx
	subl %eax,%ecx
	movl 124(%esp),%eax
	movl %ecx,148(%esp)
	movl 136(%esp),%ecx
	sbbl %ecx,%eax
	movl 148(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	subl $8,%esp
	movl 96(%esp),%ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl 116(%esp),%ecx
	pushl %ecx
	pushl %ecx
	movl 88(%esp),%ecx
	pushl %ecx
	movl %eax,188(%esp)
	call L___app4$stub
	addl $28,%esp
	subl $8,%esp
	movl 168(%esp),%ecx
	pushl %ecx
	movl %eax,184(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,184(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,196(%esp)
	movl %eax,%ecx
	movl %edx,208(%esp)
	movl 196(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 184(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,220(%esp)
	movl 208(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 220(%esp),%ecx
	adcl %eax,%ecx
	movl 184(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 172(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1g6N_info - _c1g6N_info_dsp
.text
	.align 2
_c1g7k_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g7k_info)+192
	.long	31689
	.long	720928
_c1g7k_info:
Lc1g7k:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1g7o
Lc1g7n:
	movl L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl 36(%ebp),%ecx
	movl %ecx,(%edi)
	movl 20(%ebp),%ecx
	leal -3(%edi),%edx
	andl $7,%edx
	cmpl $2,%edx
	jae Lc1g9C
Lc1g9D:
	movl %eax,%edx
	addl $_c1g7x_info-(1b)+0,%edx
	movl %edx,(%ebp)
	movl %ecx,%esi
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
Lc1g7o:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
Lc1g9C:
	movl %eax,%edx
	addl $_c1g8C_info-(1b)+0,%edx
	movl %edx,(%ebp)
	movl %ecx,%esi
	jmp *L_toJSStr$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1g7k_info - _c1g7k_info_dsp
.text
	.align 2
_c1g8C_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g8C_info)+196
	.long	32713
	.long	327712
_c1g8C_info:
Lc1g8C:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1g9g
Lc1g9f:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	movl %eax,%ecx
	addl $_c1g8M_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r19eQ_closure-(1b)+0,%esi
	movl (%edi),%eax
	movl %eax,36(%ebp)
	testw $7,%si
	jne _c1g8M_info
Lc1g8N:
	jmp *(%esi)
Lc1g9g:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1g8C_info - _c1g8C_info_dsp
.text
	.align 2
_c1g8M_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g8M_info)+204
	.long	32713
	.long	65568
_c1g8M_info:
Lc1g8M:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1g9k
Lc1g9j:
	movl 3(%esi),%ecx
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%edi)
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	movl L_ghczmprim_GHCziTypes_True_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	movl 5(%edx),%edx
	addl $_c1g99_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 36(%ebp),%eax
	movl %edx,36(%ebp)
	movl %eax,64(%esp)
	movl -4(%edi),%eax
	movl %ecx,76(%esp)
	movl 4(%ebp),%ecx
	movl %ecx,88(%esp)
	movl 872(%ebx),%ecx
	movl %eax,100(%esp)
	movl 20(%ecx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %edx,112(%esp)
	leal 4(%edi),%edx
	movl %edx,8(%eax)
	movl 100(%ecx),%edx
	movl %edx,124(%esp)
	movl 104(%ecx),%edx
	movl %edx,136(%esp)
	leal 4(%edi),%edx
	subl (%eax),%edx
	xorl %eax,%eax
	movl %eax,148(%esp)
	movl 124(%esp),%eax
	subl %edx,%eax
	movl 136(%esp),%edx
	movl %eax,160(%esp)
	movl 148(%esp),%eax
	sbbl %eax,%edx
	movl 160(%esp),%eax
	movl %eax,100(%ecx)
	movl %edx,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 116(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	pushl %ecx
	movl 84(%esp),%ecx
	pushl %ecx
	movl 100(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L___app5$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1g9k:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1g8M_info - _c1g8M_info_dsp
.text
	.align 2
_c1g99_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g99_info)+204
	.long	32713
	.long	65568
_c1g99_info:
Lc1g99:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1g9b_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_CoreziShapeziInternal_zdfAffineShapezuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	testw $7,%si
	jne _c1g9b_info
Lc1g9o:
	jmp *(%esi)
	.long  _c1g99_info - _c1g99_info_dsp
.text
	.align 2
_c1g9b_info_dsp:
.text
	.align 2
	.long	32713
	.long	32
_c1g9b_info:
Lc1g9b:
	call 1f
1:	popl	%eax
	movl 36(%ebp),%ecx
	addl $_c1g9x_info-(1b)+0,%eax
	movl %eax,36(%ebp)
	movl 4(%ebp),%eax
	addl $36,%ebp
	movl 3(%esi),%edx
	movl %edx,64(%esp)
	movl 872(%ebx),%edx
	movl %eax,76(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,88(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,100(%esp)
	movl 104(%edx),%ecx
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,124(%esp)
	movl 100(%esp),%eax
	subl %ecx,%eax
	movl 112(%esp),%ecx
	movl %eax,136(%esp)
	movl 124(%esp),%eax
	sbbl %eax,%ecx
	movl 136(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	movl 88(%esp),%ecx
	pushl %ecx
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L___app2$stub
	addl $12,%esp
	subl $8,%esp
	movl 156(%esp),%ecx
	pushl %ecx
	movl %eax,172(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,172(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,184(%esp)
	movl %eax,%ecx
	movl %edx,196(%esp)
	movl 184(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 172(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,208(%esp)
	movl 196(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 208(%esp),%ecx
	adcl %eax,%ecx
	movl 172(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 160(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1g9b_info - _c1g9b_info_dsp
.text
	.align 2
_c1g9x_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1g9x_info:
Lc1g9x:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1g9x_info - _c1g9x_info_dsp
.text
	.align 2
_c1g7x_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g7x_info)+192
	.long	32713
	.long	589856
_c1g7x_info:
Lc1g7x:
	call 1f
1:	popl	%eax
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja Lc1g8c
Lc1g8b:
	movl L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr-(1b)+0(%eax),%ecx
	movl %ecx,-4(%edi)
	movl %esi,(%edi)
	movl %eax,%ecx
	addl $_c1g7H_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl %eax,%esi
	addl $_r19eP_closure-(1b)+0,%esi
	movl (%edi),%eax
	movl %eax,36(%ebp)
	testw $7,%si
	jne _c1g7H_info
Lc1g7I:
	jmp *(%esi)
Lc1g8c:
	movl $8,904(%ebx)
	jmp *L_stg_gc_unbx_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1g7x_info - _c1g7x_info_dsp
.text
	.align 2
_c1g7H_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g7H_info)+204
	.long	32713
	.long	65568
_c1g7H_info:
Lc1g7H:
	call 1f
1:	popl	%eax
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja Lc1g8g
Lc1g8f:
	movl 3(%esi),%ecx
	movl L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr-(1b)+0(%eax),%edx
	movl %edx,-8(%edi)
#	gldzsd %fake0
	fldz ; fstp %st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	movl L_ghczmprim_GHCziTypes_False_closure$non_lazy_ptr-(1b)+0(%eax),%edx
	movl 4(%edx),%edx
	addl $_c1g84_info-(1b)+0,%eax
	movl %eax,(%ebp)
	movl 36(%ebp),%eax
	movl %edx,36(%ebp)
	movl %eax,64(%esp)
	movl -4(%edi),%eax
	movl %ecx,76(%esp)
	movl 4(%ebp),%ecx
	movl %ecx,88(%esp)
	movl 872(%ebx),%ecx
	movl %eax,100(%esp)
	movl 20(%ecx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %edx,112(%esp)
	leal 4(%edi),%edx
	movl %edx,8(%eax)
	movl 100(%ecx),%edx
	movl %edx,124(%esp)
	movl 104(%ecx),%edx
	movl %edx,136(%esp)
	leal 4(%edi),%edx
	subl (%eax),%edx
	xorl %eax,%eax
	movl %eax,148(%esp)
	movl 124(%esp),%eax
	subl %edx,%eax
	movl 136(%esp),%edx
	movl %eax,160(%esp)
	movl 148(%esp),%eax
	sbbl %eax,%edx
	movl 160(%esp),%eax
	movl %eax,100(%ecx)
	movl %edx,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_suspendThread$stub
	addl $12,%esp
	subl $4,%esp
	movl 116(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 112(%esp),%ecx
	pushl %ecx
	pushl %ecx
	movl 84(%esp),%ecx
	pushl %ecx
	movl 100(%esp),%ecx
	pushl %ecx
	movl %eax,200(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L___app5$stub
	addl $28,%esp
	subl $8,%esp
	movl 180(%esp),%ecx
	pushl %ecx
	movl %eax,196(%esp)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,196(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,208(%esp)
	movl %eax,%ecx
	movl %edx,220(%esp)
	movl 208(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 196(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,232(%esp)
	movl 220(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 232(%esp),%ecx
	adcl %eax,%ecx
	movl 196(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 184(%esp),%eax
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
Lc1g8g:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *L_stg_gc_unpt_r1$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1g7H_info - _c1g7H_info_dsp
.text
	.align 2
_c1g84_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1g84_info)+204
	.long	32713
	.long	65568
_c1g84_info:
Lc1g84:
	call 1f
1:	popl	%eax
	movl %eax,%ecx
	addl $_c1g86_info-(1b)+0,%ecx
	movl %ecx,(%ebp)
	movl L_CoreziShapeziInternal_zdfAffineShapezuf1_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	testw $7,%si
	jne _c1g86_info
Lc1g8k:
	jmp *(%esi)
	.long  _c1g84_info - _c1g84_info_dsp
.text
	.align 2
_c1g86_info_dsp:
.text
	.align 2
	.long	32713
	.long	32
_c1g86_info:
Lc1g86:
	call 1f
1:	popl	%eax
	movl 36(%ebp),%ecx
	addl $_c1g8t_info-(1b)+0,%eax
	movl %eax,36(%ebp)
	movl 4(%ebp),%eax
	addl $36,%ebp
	movl 3(%esi),%edx
	movl %edx,64(%esp)
	movl 872(%ebx),%edx
	movl %eax,76(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,88(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,100(%esp)
	movl 104(%edx),%ecx
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,124(%esp)
	movl 100(%esp),%eax
	subl %ecx,%eax
	movl 112(%esp),%ecx
	movl %eax,136(%esp)
	movl 124(%esp),%eax
	sbbl %eax,%ecx
	movl 136(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call L_suspendThread$stub
	addl $12,%esp
	movl 88(%esp),%ecx
	pushl %ecx
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call L___app2$stub
	addl $12,%esp
	subl $8,%esp
	movl 156(%esp),%ecx
	pushl %ecx
	movl %eax,172(%esp)
	call L_resumeThread$stub
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,172(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,184(%esp)
	movl %eax,%ecx
	movl %edx,196(%esp)
	movl 184(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 172(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,208(%esp)
	movl 196(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 208(%esp),%ecx
	adcl %eax,%ecx
	movl 172(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 160(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
	.long  _c1g86_info - _c1g86_info_dsp
.text
	.align 2
_c1g8t_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1g8t_info:
Lc1g8t:
	addl $4,%ebp
	jmp _IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
	.long  _c1g8t_info - _c1g8t_info_dsp
.text
	.align 2
_s1bpF_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1bpF_info)+156
	.long	262167
	.long	6
	.long	536805385
_s1bpF_info:
Lc1gcF:
	call 1f
1:	popl	%eax
	addl $28,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1gcJ
Lc1gcI:
	movl %eax,76(%esp)
	movl (%esi),%eax
	movl %eax,88(%esp)
	movl 4(%esi),%eax
	movl %eax,100(%esp)
	movl 8(%esi),%eax
	movl %eax,112(%esp)
	movl 12(%esi),%eax
	movl %eax,124(%esp)
	movl 16(%esi),%eax
	movl %eax,136(%esp)
	movl 20(%esi),%eax
	movl %eax,148(%esp)
	movl 64(%esp),%eax
	addl $_s1bpE_info-(1b)+0,%eax
	movl %eax,-24(%edi)
	movl 88(%esp),%eax
	movl %eax,-20(%edi)
	movl 100(%esp),%eax
	movl %eax,-16(%edi)
	movl 112(%esp),%eax
	movl %eax,-12(%edi)
	movl 136(%esp),%eax
	movl %eax,-8(%edi)
	movl 148(%esp),%eax
	movl %eax,-4(%edi)
	movl 76(%esp),%eax
	movl %eax,(%edi)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	leal -20(%edi),%eax
	movl %eax,16(%ebx)
	movl 124(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
Lc1gcJ:
	movl $28,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1bpF_info - _s1bpF_info_dsp
.text
	.align 2
_s1bpG_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1bpG_info)+156
	.long	262167
	.long	6
	.long	536805385
_s1bpG_info:
Lc1gcK:
	call 1f
1:	popl	%eax
	addl $28,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1gcO
Lc1gcN:
	movl %eax,76(%esp)
	movl (%esi),%eax
	movl %eax,88(%esp)
	movl 4(%esi),%eax
	movl %eax,100(%esp)
	movl 8(%esi),%eax
	movl %eax,112(%esp)
	movl 12(%esi),%eax
	movl %eax,124(%esp)
	movl 16(%esi),%eax
	movl %eax,136(%esp)
	movl 20(%esi),%eax
	movl %eax,148(%esp)
	movl 64(%esp),%eax
	addl $_s1bpF_info-(1b)+0,%eax
	movl %eax,-24(%edi)
	movl 88(%esp),%eax
	movl %eax,-20(%edi)
	movl 100(%esp),%eax
	movl %eax,-16(%edi)
	movl 112(%esp),%eax
	movl %eax,-12(%edi)
	movl 136(%esp),%eax
	movl %eax,-8(%edi)
	movl 148(%esp),%eax
	movl %eax,-4(%edi)
	movl 76(%esp),%eax
	movl %eax,(%edi)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	leal -20(%edi),%eax
	movl %eax,16(%ebx)
	movl 124(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
Lc1gcO:
	movl $28,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1bpG_info - _s1bpG_info_dsp
.text
	.align 2
_s1bpH_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_s1bpH_info)+156
	.long	262167
	.long	6
	.long	536805385
_s1bpH_info:
Lc1gcP:
	call 1f
1:	popl	%eax
	addl $28,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %eax,64(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1gcT
Lc1gcS:
	movl %eax,76(%esp)
	movl (%esi),%eax
	movl %eax,88(%esp)
	movl 4(%esi),%eax
	movl %eax,100(%esp)
	movl 8(%esi),%eax
	movl %eax,112(%esp)
	movl 12(%esi),%eax
	movl %eax,124(%esp)
	movl 16(%esi),%eax
	movl %eax,136(%esp)
	movl 20(%esi),%eax
	movl %eax,148(%esp)
	movl 64(%esp),%eax
	addl $_s1bpG_info-(1b)+0,%eax
	movl %eax,-24(%edi)
	movl 88(%esp),%eax
	movl %eax,-20(%edi)
	movl 100(%esp),%eax
	movl %eax,-16(%edi)
	movl 112(%esp),%eax
	movl %eax,-12(%edi)
	movl 136(%esp),%eax
	movl %eax,-8(%edi)
	movl 148(%esp),%eax
	movl %eax,-4(%edi)
	movl 76(%esp),%eax
	movl %eax,(%edi)
	movl %ecx,32(%ebx)
	movl %edx,24(%ebx)
	leal -20(%edi),%eax
	movl %eax,16(%ebx)
	movl 124(%esp),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
Lc1gcT:
	movl $28,904(%ebx)
	movl %ecx,24(%ebx)
	movl %edx,16(%ebx)
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
	.long  _s1bpH_info - _s1bpH_info_dsp
.text
	.align 2
_s1bpI_info_dsp:
.text
	.align 2
	.long	196623
	.long	2
	.long	12
_s1bpI_info:
Lc1gcZ:
	movl 16(%ebx),%eax
	movl %eax,32(%ebx)
	movl 8(%ebx),%eax
	movl %eax,24(%ebx)
	movl 5(%esi),%eax
	movl %eax,16(%ebx)
	movl 1(%esi),%eax
	movl %eax,8(%ebx)
	jmp _CoreziShapeziInternal_zdfAffineShape2_info
	.long  _s1bpI_info - _s1bpI_info_dsp
.text
	.align 2
_CoreziShapeziInternal_zdwtext_info_dsp:
.text
	.align 2
	.long	_CoreziShapeziInternal_zdwtext_slow-(_CoreziShapeziInternal_zdwtext_info)+0
	.long	7
	.long	_S1bza_srt-(_CoreziShapeziInternal_zdwtext_info)+156
	.long	458752
	.long	0
	.long	1073676303
.globl _CoreziShapeziInternal_zdwtext_info
_CoreziShapeziInternal_zdwtext_info:
Lc1gd2:
	call 1f
1:	popl	%eax
	addl $40,%edi
	movl 40(%ebx),%ecx
	movl 32(%ebx),%edx
	movl %eax,64(%esp)
	movl 24(%ebx),%eax
	movl %eax,76(%esp)
	movl 16(%ebx),%eax
	movl %eax,88(%esp)
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja Lc1gd6
Lc1gd5:
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	addl $_s1bpH_info-(1b)+0,%eax
	movl %eax,-36(%edi)
	movl 100(%esp),%eax
	movl %eax,-32(%edi)
	movl 76(%esp),%eax
	movl %eax,-28(%edi)
	movl %edx,-24(%edi)
	movl %ecx,-20(%edi)
	movl (%ebp),%eax
	movl %eax,-16(%edi)
	movl 4(%ebp),%eax
	movl %eax,-12(%edi)
	movl 64(%esp),%eax
	movl %eax,%ecx
	addl $_s1bpI_info-(1b)+0,%ecx
	movl %ecx,-8(%edi)
	movl 88(%esp),%ecx
	movl %ecx,-4(%edi)
	leal -32(%edi),%ecx
	movl %ecx,(%edi)
	movl L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr-(1b)+0(%eax),%ecx
	incl %ecx
	movl %ecx,16(%ebx)
	leal -5(%edi),%ecx
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_zdfApplicativeShape3_closure$non_lazy_ptr-(1b)+0(%eax),%eax
	leal 2(%eax),%esi
	addl $8,%ebp
	jmp *(%ebp)
Lc1gd6:
	movl $40,904(%ebx)
	movl %eax,100(%esp)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_zdwtext_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	movl 100(%esp),%eax
	movl %eax,-20(%ebp)
	movl 88(%esp),%eax
	movl %eax,-16(%ebp)
	movl 76(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-20,%ebp
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_zdwtext_info - _CoreziShapeziInternal_zdwtext_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_text_closure
_CoreziShapeziInternal_text_closure:
	.long	_CoreziShapeziInternal_text_info
	.long	0
.text
	.align 2
_CoreziShapeziInternal_text_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_CoreziShapeziInternal_text_info)+208
	.long	393242
	.long	0
	.long	196623
.globl _CoreziShapeziInternal_text_info
_CoreziShapeziInternal_text_info:
Lc1gjJ:
	call 1f
1:	popl	%eax
	movl 40(%ebx),%ecx
	movl 32(%ebx),%edx
	movl %eax,64(%esp)
	movl 24(%ebx),%eax
	movl %eax,76(%esp)
	movl 16(%ebx),%eax
	movl %eax,88(%esp)
	movl 8(%ebx),%eax
	movl %eax,100(%esp)
	leal -20(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb Lc1gjP
Lc1gjQ:
	movl 64(%esp),%eax
	addl $_c1gjG_info-(1b)+0,%eax
	movl %eax,-20(%ebp)
	movl %ecx,%esi
	movl 100(%esp),%eax
	movl %eax,-16(%ebp)
	movl 88(%esp),%eax
	movl %eax,-12(%ebp)
	movl 76(%esp),%eax
	movl %eax,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-20,%ebp
	testw $7,%si
	jne _c1gjG_info
Lc1gjH:
	jmp *(%esi)
Lc1gjP:
	movl %ecx,40(%ebx)
	movl %edx,32(%ebx)
	movl 76(%esp),%eax
	movl %eax,24(%ebx)
	movl 88(%esp),%eax
	movl %eax,16(%ebx)
	movl 100(%esp),%eax
	movl %eax,8(%ebx)
	movl 64(%esp),%eax
	movl L_CoreziShapeziInternal_text_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_text_info - _CoreziShapeziInternal_text_info_dsp
.text
	.align 2
_c1gjG_info_dsp:
.text
	.align 2
	.long	_S1bza_srt-(_c1gjG_info)+208
	.long	5
	.long	65568
_c1gjG_info:
Lc1gjG:
	call 1f
1:	popl	%eax
	movl 20(%ebp),%ecx
	addl $_c1gjM_info-(1b)+0,%eax
	movl %eax,20(%ebp)
	movl 3(%esi),%eax
	movl %eax,40(%ebx)
	movl 16(%ebp),%eax
	movl %eax,32(%ebx)
	movl 12(%ebp),%eax
	movl %eax,24(%ebx)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	movl 7(%esi),%eax
	movl %eax,12(%ebp)
	movl %ecx,16(%ebp)
	addl $12,%ebp
	jmp _CoreziShapeziInternal_zdwtext_info
	.long  _c1gjG_info - _c1gjG_info_dsp
.text
	.align 2
_c1gjM_info_dsp:
.text
	.align 2
	.long	0
	.long	32
_c1gjM_info:
Lc1gjM:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja Lc1gjU
Lc1gjT:
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %esi,-8(%edi)
	movl %edx,-4(%edi)
	movl %ecx,(%edi)
	leal -11(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1gjU:
	movl $16,904(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	jmp *L_stg_gc_ppp$non_lazy_ptr-(1b)+0(%eax)
	.long  _c1gjM_info - _c1gjM_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_DZCAffine_closure
_CoreziShapeziInternal_DZCAffine_closure:
	.long	_CoreziShapeziInternal_DZCAffine_info
.text
	.align 2
_CoreziShapeziInternal_DZCAffine_info_dsp:
.text
	.align 2
	.long	393242
	.long	0
	.long	15
_CoreziShapeziInternal_DZCAffine_info:
Lc1gko:
	call 1f
1:	popl	%eax
	addl $28,%edi
	movl 40(%ebx),%ecx
	movl 32(%ebx),%edx
	movl %ecx,64(%esp)
	movl 24(%ebx),%ecx
	movl %edx,76(%esp)
	movl 16(%ebx),%edx
	movl %ecx,88(%esp)
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1gks
Lc1gkr:
	movl L_CoreziShapeziInternal_DZCAffine_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-24(%edi)
	movl %ecx,-20(%edi)
	movl %edx,-16(%edi)
	movl 88(%esp),%eax
	movl %eax,-12(%edi)
	movl 76(%esp),%eax
	movl %eax,-8(%edi)
	movl 64(%esp),%eax
	movl %eax,-4(%edi)
	movl (%ebp),%eax
	movl %eax,(%edi)
	leal -23(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
Lc1gks:
	movl $28,904(%ebx)
	movl %edx,100(%esp)
	movl 64(%esp),%edx
	movl %edx,40(%ebx)
	movl 76(%esp),%edx
	movl %edx,32(%ebx)
	movl 88(%esp),%edx
	movl %edx,24(%ebx)
	movl 100(%esp),%edx
	movl %edx,16(%ebx)
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_DZCAffine_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_DZCAffine_info - _CoreziShapeziInternal_DZCAffine_info_dsp
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_TopBase_closure
_CoreziShapeziInternal_TopBase_closure:
	.long	_CoreziShapeziInternal_TopBase_static_info
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_MiddleBase_closure
_CoreziShapeziInternal_MiddleBase_closure:
	.long	_CoreziShapeziInternal_MiddleBase_static_info
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_BottomBase_closure
_CoreziShapeziInternal_BottomBase_closure:
	.long	_CoreziShapeziInternal_BottomBase_static_info
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_LeftAlign_closure
_CoreziShapeziInternal_LeftAlign_closure:
	.long	_CoreziShapeziInternal_LeftAlign_static_info
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_CenterAlign_closure
_CoreziShapeziInternal_CenterAlign_closure:
	.long	_CoreziShapeziInternal_CenterAlign_static_info
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_RightAlign_closure
_CoreziShapeziInternal_RightAlign_closure:
	.long	_CoreziShapeziInternal_RightAlign_static_info
.data
	.align 2
.align 0
.globl _CoreziShapeziInternal_Shape_closure
_CoreziShapeziInternal_Shape_closure:
	.long	_CoreziShapeziInternal_Shape_info
.text
	.align 2
_CoreziShapeziInternal_Shape_info_dsp:
.text
	.align 2
	.long	196631
	.long	0
	.long	15
_CoreziShapeziInternal_Shape_info:
Lc1gkR:
	call 1f
1:	popl	%eax
	addl $16,%edi
	movl 24(%ebx),%ecx
	movl 16(%ebx),%edx
	movl %ecx,64(%esp)
	movl 8(%ebx),%ecx
	cmpl 856(%ebx),%edi
	ja Lc1gkV
Lc1gkU:
	movl L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr-(1b)+0(%eax),%eax
	movl %eax,-12(%edi)
	movl %ecx,-8(%edi)
	movl %edx,-4(%edi)
	movl 64(%esp),%eax
	movl %eax,(%edi)
	leal -11(%edi),%esi
	jmp *(%ebp)
Lc1gkV:
	movl $16,904(%ebx)
	movl %edx,76(%esp)
	movl 64(%esp),%edx
	movl %edx,24(%ebx)
	movl 76(%esp),%edx
	movl %edx,16(%ebx)
	movl %ecx,8(%ebx)
	movl L_CoreziShapeziInternal_Shape_closure$non_lazy_ptr-(1b)+0(%eax),%esi
	jmp *-8(%ebx)
	.long  _CoreziShapeziInternal_Shape_info - _CoreziShapeziInternal_Shape_info_dsp
.const
	.align 2
.align 0
_i1gl4_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	83
	.byte	104
	.byte	97
	.byte	112
	.byte	101
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	68
	.byte	58
	.byte	65
	.byte	102
	.byte	102
	.byte	105
	.byte	110
	.byte	101
	.byte	0
.text
	.align 2
_CoreziShapeziInternal_DZCAffine_con_info_dsp:
.text
	.align 2
	.long	_i1gl4_str-(_CoreziShapeziInternal_DZCAffine_con_info)+0
	.long	6
	.long	1
.globl _CoreziShapeziInternal_DZCAffine_con_info
_CoreziShapeziInternal_DZCAffine_con_info:
Lc1gl2:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziShapeziInternal_DZCAffine_con_info - _CoreziShapeziInternal_DZCAffine_con_info_dsp
.const
	.align 2
.align 0
_i1gl5_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	83
	.byte	104
	.byte	97
	.byte	112
	.byte	101
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	68
	.byte	58
	.byte	65
	.byte	102
	.byte	102
	.byte	105
	.byte	110
	.byte	101
	.byte	0
.text
	.align 2
_CoreziShapeziInternal_DZCAffine_static_info_dsp:
.text
	.align 2
	.long	_i1gl5_str-(_CoreziShapeziInternal_DZCAffine_static_info)+0
	.long	6
	.long	7
.globl _CoreziShapeziInternal_DZCAffine_static_info
_CoreziShapeziInternal_DZCAffine_static_info:
Lc1gl3:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziShapeziInternal_DZCAffine_static_info - _CoreziShapeziInternal_DZCAffine_static_info_dsp
.const_data
	.align 2
.align 0
.globl _CoreziShapeziInternal_TextBase_closure_tbl
_CoreziShapeziInternal_TextBase_closure_tbl:
	.long	_CoreziShapeziInternal_TopBase_closure+1
	.long	_CoreziShapeziInternal_MiddleBase_closure+2
	.long	_CoreziShapeziInternal_BottomBase_closure+3
.const
	.align 2
.align 0
_i1gle_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	83
	.byte	104
	.byte	97
	.byte	112
	.byte	101
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	84
	.byte	111
	.byte	112
	.byte	66
	.byte	97
	.byte	115
	.byte	101
	.byte	0
.text
	.align 2
_CoreziShapeziInternal_TopBase_static_info_dsp:
.text
	.align 2
	.long	_i1gle_str-(_CoreziShapeziInternal_TopBase_static_info)+0
	.long	0
	.long	8
.globl _CoreziShapeziInternal_TopBase_static_info
_CoreziShapeziInternal_TopBase_static_info:
Lc1gld:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziShapeziInternal_TopBase_static_info - _CoreziShapeziInternal_TopBase_static_info_dsp
.const
	.align 2
.align 0
_i1glj_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	83
	.byte	104
	.byte	97
	.byte	112
	.byte	101
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	77
	.byte	105
	.byte	100
	.byte	100
	.byte	108
	.byte	101
	.byte	66
	.byte	97
	.byte	115
	.byte	101
	.byte	0
.text
	.align 2
_CoreziShapeziInternal_MiddleBase_static_info_dsp:
.text
	.align 2
	.long	_i1glj_str-(_CoreziShapeziInternal_MiddleBase_static_info)+0
	.long	0
	.long	65544
.globl _CoreziShapeziInternal_MiddleBase_static_info
_CoreziShapeziInternal_MiddleBase_static_info:
Lc1gli:
	addl $2,%esi
	jmp *(%ebp)
	.long  _CoreziShapeziInternal_MiddleBase_static_info - _CoreziShapeziInternal_MiddleBase_static_info_dsp
.const
	.align 2
.align 0
_i1glo_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	83
	.byte	104
	.byte	97
	.byte	112
	.byte	101
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	66
	.byte	111
	.byte	116
	.byte	116
	.byte	111
	.byte	109
	.byte	66
	.byte	97
	.byte	115
	.byte	101
	.byte	0
.text
	.align 2
_CoreziShapeziInternal_BottomBase_static_info_dsp:
.text
	.align 2
	.long	_i1glo_str-(_CoreziShapeziInternal_BottomBase_static_info)+0
	.long	0
	.long	131080
.globl _CoreziShapeziInternal_BottomBase_static_info
_CoreziShapeziInternal_BottomBase_static_info:
Lc1gln:
	addl $3,%esi
	jmp *(%ebp)
	.long  _CoreziShapeziInternal_BottomBase_static_info - _CoreziShapeziInternal_BottomBase_static_info_dsp
.const_data
	.align 2
.align 0
.globl _CoreziShapeziInternal_TextAlign_closure_tbl
_CoreziShapeziInternal_TextAlign_closure_tbl:
	.long	_CoreziShapeziInternal_LeftAlign_closure+1
	.long	_CoreziShapeziInternal_CenterAlign_closure+2
	.long	_CoreziShapeziInternal_RightAlign_closure+3
.const
	.align 2
.align 0
_i1glu_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	83
	.byte	104
	.byte	97
	.byte	112
	.byte	101
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	76
	.byte	101
	.byte	102
	.byte	116
	.byte	65
	.byte	108
	.byte	105
	.byte	103
	.byte	110
	.byte	0
.text
	.align 2
_CoreziShapeziInternal_LeftAlign_static_info_dsp:
.text
	.align 2
	.long	_i1glu_str-(_CoreziShapeziInternal_LeftAlign_static_info)+0
	.long	0
	.long	8
.globl _CoreziShapeziInternal_LeftAlign_static_info
_CoreziShapeziInternal_LeftAlign_static_info:
Lc1glt:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziShapeziInternal_LeftAlign_static_info - _CoreziShapeziInternal_LeftAlign_static_info_dsp
.const
	.align 2
.align 0
_i1glz_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	83
	.byte	104
	.byte	97
	.byte	112
	.byte	101
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	67
	.byte	101
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	65
	.byte	108
	.byte	105
	.byte	103
	.byte	110
	.byte	0
.text
	.align 2
_CoreziShapeziInternal_CenterAlign_static_info_dsp:
.text
	.align 2
	.long	_i1glz_str-(_CoreziShapeziInternal_CenterAlign_static_info)+0
	.long	0
	.long	65544
.globl _CoreziShapeziInternal_CenterAlign_static_info
_CoreziShapeziInternal_CenterAlign_static_info:
Lc1gly:
	addl $2,%esi
	jmp *(%ebp)
	.long  _CoreziShapeziInternal_CenterAlign_static_info - _CoreziShapeziInternal_CenterAlign_static_info_dsp
.const
	.align 2
.align 0
_i1glE_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	83
	.byte	104
	.byte	97
	.byte	112
	.byte	101
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	82
	.byte	105
	.byte	103
	.byte	104
	.byte	116
	.byte	65
	.byte	108
	.byte	105
	.byte	103
	.byte	110
	.byte	0
.text
	.align 2
_CoreziShapeziInternal_RightAlign_static_info_dsp:
.text
	.align 2
	.long	_i1glE_str-(_CoreziShapeziInternal_RightAlign_static_info)+0
	.long	0
	.long	131080
.globl _CoreziShapeziInternal_RightAlign_static_info
_CoreziShapeziInternal_RightAlign_static_info:
Lc1glD:
	addl $3,%esi
	jmp *(%ebp)
	.long  _CoreziShapeziInternal_RightAlign_static_info - _CoreziShapeziInternal_RightAlign_static_info_dsp
.const
	.align 2
.align 0
_i1glK_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	83
	.byte	104
	.byte	97
	.byte	112
	.byte	101
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	83
	.byte	104
	.byte	97
	.byte	112
	.byte	101
	.byte	0
.text
	.align 2
_CoreziShapeziInternal_Shape_con_info_dsp:
.text
	.align 2
	.long	_i1glK_str-(_CoreziShapeziInternal_Shape_con_info)+0
	.long	3
	.long	1
.globl _CoreziShapeziInternal_Shape_con_info
_CoreziShapeziInternal_Shape_con_info:
Lc1glI:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziShapeziInternal_Shape_con_info - _CoreziShapeziInternal_Shape_con_info_dsp
.const
	.align 2
.align 0
_i1glL_str:
	.byte	109
	.byte	97
	.byte	105
	.byte	110
	.byte	58
	.byte	67
	.byte	111
	.byte	114
	.byte	101
	.byte	46
	.byte	83
	.byte	104
	.byte	97
	.byte	112
	.byte	101
	.byte	46
	.byte	73
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	97
	.byte	108
	.byte	46
	.byte	83
	.byte	104
	.byte	97
	.byte	112
	.byte	101
	.byte	0
.text
	.align 2
_CoreziShapeziInternal_Shape_static_info_dsp:
.text
	.align 2
	.long	_i1glL_str-(_CoreziShapeziInternal_Shape_static_info)+0
	.long	3
	.long	7
.globl _CoreziShapeziInternal_Shape_static_info
_CoreziShapeziInternal_Shape_static_info:
Lc1glJ:
	incl %esi
	jmp *(%ebp)
	.long  _CoreziShapeziInternal_Shape_static_info - _CoreziShapeziInternal_Shape_static_info_dsp
.const_data
	.align 2
.align 0
_S1bza_srt:
	.long	_base_ControlziExceptionziBase_patError_closure
	.long	_base_GHCziErr_error_closure
	.long	_CoreziShapeziInternal_zdfMonadShape_closure
	.long	_CoreziShapeziInternal_zdfMonadShapezuzdczgzg_closure
	.long	_CoreziShapeziInternal_zdfAffineShape1_closure
	.long	_CoreziShapeziInternal_zdfAffineShapezuf1_closure
	.long	_CoreziShapeziInternal_zdwzdcaffine_closure
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdcaffine_closure
	.long	_CoreziShapeziInternal_zdwzdctranslate_closure
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdctranslate_closure
	.long	_CoreziShapeziInternal_zdwzdcrotate_closure
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdcrotate_closure
	.long	_CoreziShapeziInternal_zdwzdcrotateAt_closure
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdcrotateAt_closure
	.long	_CoreziShapeziInternal_zdwzdcscale_closure
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdcscale_closure
	.long	_CoreziShapeziInternal_zdwzdcscaleAt_closure
	.long	_CoreziShapeziInternal_zdfAffineShapezuzdcscaleAt_closure
	.long	_CoreziShapeziInternal_zdwa_closure
	.long	_CoreziShapeziInternal_bezzierzuf1_closure
	.long	_CoreziShapeziInternal_bezzierzuf2_closure
	.long	_CoreziShapeziInternal_zdwbezzier_closure
	.long	_CoreziShapeziInternal_bezzier_closure
	.long	_r13Gl_closure
	.long	_CoreziShapeziInternal_zdwcircle_closure
	.long	_CoreziShapeziInternal_circle_closure
	.long	_CoreziShapeziInternal_zdwa2_closure
	.long	_CoreziShapeziInternal_linezuf1_closure
	.long	_CoreziShapeziInternal_zdwline_closure
	.long	_CoreziShapeziInternal_line_closure
	.long	_CoreziShapeziInternal_zdwrect_closure
	.long	_CoreziShapeziInternal_rect_closure
	.long	_CoreziShapeziInternal_zdwcenterRect_closure
	.long	_CoreziShapeziInternal_centerRect_closure
	.long	_CoreziShapeziInternal_zdwroundRect_closure
	.long	_CoreziShapeziInternal_roundRect_closure
	.long	_CoreziShapeziInternal_polygon1_closure
	.long	_CoreziShapeziInternal_zdwpolygon_closure
	.long	_CoreziShapeziInternal_polygon_closure
	.long	_r19ex_closure
	.long	_r19ey_closure
	.long	_r19ez_closure
	.long	_r19eA_closure
	.long	_r19eB_closure
	.long	_r19eC_closure
	.long	_r19eD_closure
	.long	_r19eM_closure
	.long	_r19eN_closure
	.long	_r19eP_closure
	.long	_r19eQ_closure
	.long	_r19eR_closure
	.long	_CoreziShapeziInternal_zdfAffineShapezuf1_closure
	.long	_CoreziShapeziInternal_zdwtext_closure
	.long	_CoreziShapeziInternal_text_closure
.section __TEXT,__textcoal_nt,coalesced,no_toc
.weak_definition ___i686.get_pc_thunk.ax
.private_extern ___i686.get_pc_thunk.ax
___i686.get_pc_thunk.ax:
	movl (%esp), %eax
	ret
.non_lazy_symbol_pointer
L_CoreziEase_Action_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziEase_Action_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziEase_Exact_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziEase_Exact_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziEase_MorphAct_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziEase_MorphAct_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziEase_Morph_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziEase_Morph_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_DZCAffine_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_DZCAffine_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_DZCAffine_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_DZCAffine_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_Shape_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_Shape_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_Shape_con_info$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_Shape_con_info
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_affine_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_affine_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_bezzier_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_bezzier_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_bezzierzuf1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_bezzierzuf1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_bezzierzuf2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_bezzierzuf2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_centerRect_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_centerRect_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_circle_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_circle_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_disable_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_disable_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_execPath_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_execPath_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_inside_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_inside_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_line_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_line_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_linezuf1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_linezuf1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_polygon1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_polygon1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_polygon2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_polygon2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_polygon_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_polygon_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_polygonzugo_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_polygonzugo_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_rect_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_rect_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_rotateAt_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_rotateAt_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_rotate_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_rotate_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_roundRect_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_roundRect_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_scaleAt_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_scaleAt_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_scale_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_scale_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_text_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_text_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_translate_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_translate_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zddmrotate1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zddmrotate1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zddmrotateAt_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zddmrotateAt_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zddmrotate_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zddmrotate_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zddmscaleAt_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zddmscaleAt_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zddmscale_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zddmscale_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zddmtranslate_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zddmtranslate_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfAffineShape1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfAffineShape1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfAffineShape2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfAffineShape2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfAffineShape3_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfAffineShape3_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfAffineShapezuf1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfAffineShapezuf1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfAffineShapezuzdcaffine_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfAffineShapezuzdcaffine_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfAffineShapezuzdcrotateAt_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfAffineShapezuzdcrotateAt_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfAffineShapezuzdcrotate_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfAffineShapezuzdcrotate_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfAffineShapezuzdcscaleAt_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfAffineShapezuzdcscaleAt_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfAffineShapezuzdcscale_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfAffineShapezuzdcscale_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfAffineShapezuzdctranslate_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfAffineShapezuzdctranslate_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfApplicativeShape1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfApplicativeShape1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfApplicativeShape3_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfApplicativeShape3_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfApplicativeShapezuzdcpure_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfApplicativeShapezuzdcpure_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfApplicativeShapezuzdczlzt_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfApplicativeShapezuzdczlzt_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfApplicativeShapezuzdczlztzg_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfApplicativeShapezuzdczlztzg_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfApplicativeShapezuzdcztzg_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfApplicativeShapezuzdcztzg_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfFunctorShapezuzdcfmap_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfFunctorShapezuzdcfmap_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfFunctorShapezuzdczlzd_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfFunctorShapezuzdczlzd_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfMonadShape_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfMonadShape_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfMonadShapezuzdczgzg_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfMonadShapezuzdczgzg_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdfMonadShapezuzdczgzgze_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdfMonadShapezuzdczgzgze_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwa1_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwa1_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwa2_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwa2_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwa_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwa_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwbezzier_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwbezzier_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwcenterRect_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwcenterRect_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwcircle_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwcircle_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwline_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwline_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwpolygon_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwpolygon_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwrect_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwrect_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwroundRect_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwroundRect_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwtext_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwtext_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwzdcaffine_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwzdcaffine_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwzdcrotateAt_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwzdcrotateAt_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwzdcrotate_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwzdcrotate_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwzdcscaleAt_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwzdcscaleAt_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwzdcscale_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwzdcscale_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwzdctranslate_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwzdctranslate_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwzdczgzgze_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwzdczgzgze_closure
	.long	0
.non_lazy_symbol_pointer
L_CoreziShapeziInternal_zdwzdczlztzg_closure$non_lazy_ptr:
	.indirect_symbol _CoreziShapeziInternal_zdwzdczlztzg_closure
	.long	0
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L___app2$stub:
	.indirect_symbol ___app2
	call ___i686.get_pc_thunk.ax
1:
	movl L___app2$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L___app2$stub_binder:
	lea L___app2$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L___app2$lazy_ptr:
	.indirect_symbol ___app2
	.long L___app2$stub_binder
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L___app4$stub:
	.indirect_symbol ___app4
	call ___i686.get_pc_thunk.ax
1:
	movl L___app4$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L___app4$stub_binder:
	lea L___app4$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L___app4$lazy_ptr:
	.indirect_symbol ___app4
	.long L___app4$stub_binder
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L___app5$stub:
	.indirect_symbol ___app5
	call ___i686.get_pc_thunk.ax
1:
	movl L___app5$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L___app5$stub_binder:
	lea L___app5$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L___app5$lazy_ptr:
	.indirect_symbol ___app5
	.long L___app5$stub_binder
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L___apply$stub:
	.indirect_symbol ___apply
	call ___i686.get_pc_thunk.ax
1:
	movl L___apply$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L___apply$stub_binder:
	lea L___apply$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L___apply$lazy_ptr:
	.indirect_symbol ___apply
	.long L___apply$stub_binder
.non_lazy_symbol_pointer
L_base_GHCziBase_Just_con_info$non_lazy_ptr:
	.indirect_symbol _base_GHCziBase_Just_con_info
	.long	0
.non_lazy_symbol_pointer
L_base_GHCziBase_Nothing_closure$non_lazy_ptr:
	.indirect_symbol _base_GHCziBase_Nothing_closure
	.long	0
.non_lazy_symbol_pointer
L_base_GHCziFloat_cosDouble_closure$non_lazy_ptr:
	.indirect_symbol _base_GHCziFloat_cosDouble_closure
	.long	0
.non_lazy_symbol_pointer
L_base_GHCziFloat_negateDouble_closure$non_lazy_ptr:
	.indirect_symbol _base_GHCziFloat_negateDouble_closure
	.long	0
.non_lazy_symbol_pointer
L_base_GHCziFloat_sinDouble_closure$non_lazy_ptr:
	.indirect_symbol _base_GHCziFloat_sinDouble_closure
	.long	0
.non_lazy_symbol_pointer
L_base_GHCziPtr_Ptr_con_info$non_lazy_ptr:
	.indirect_symbol _base_GHCziPtr_Ptr_con_info
	.long	0
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L_eval$stub:
	.indirect_symbol _eval
	call ___i686.get_pc_thunk.ax
1:
	movl L_eval$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L_eval$stub_binder:
	lea L_eval$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L_eval$lazy_ptr:
	.indirect_symbol _eval
	.long L_eval$stub_binder
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTuple_Z0T_closure$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTuple_Z0T_closure
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTuple_Z2T_con_info$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTuple_Z2T_con_info
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_Bool_closure_tbl$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_Bool_closure_tbl
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_Dzh_con_info$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_Dzh_con_info
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_False_closure$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_False_closure
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_Izh_con_info$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_Izh_con_info
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_True_closure$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_True_closure
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_ZC_con_info$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_ZC_con_info
	.long	0
.non_lazy_symbol_pointer
L_ghczmprim_GHCziTypes_ZMZN_closure$non_lazy_ptr:
	.indirect_symbol _ghczmprim_GHCziTypes_ZMZN_closure
	.long	0
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L_newCAF$stub:
	.indirect_symbol _newCAF
	call ___i686.get_pc_thunk.ax
1:
	movl L_newCAF$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L_newCAF$stub_binder:
	lea L_newCAF$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L_newCAF$lazy_ptr:
	.indirect_symbol _newCAF
	.long L_newCAF$stub_binder
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L_resumeThread$stub:
	.indirect_symbol _resumeThread
	call ___i686.get_pc_thunk.ax
1:
	movl L_resumeThread$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L_resumeThread$stub_binder:
	lea L_resumeThread$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L_resumeThread$lazy_ptr:
	.indirect_symbol _resumeThread
	.long L_resumeThread$stub_binder
.non_lazy_symbol_pointer
L_stg_ap_1_upd_info$non_lazy_ptr:
	.indirect_symbol _stg_ap_1_upd_info
	.long	0
.non_lazy_symbol_pointer
L_stg_ap_2_upd_info$non_lazy_ptr:
	.indirect_symbol _stg_ap_2_upd_info
	.long	0
.non_lazy_symbol_pointer
L_stg_ap_p_info$non_lazy_ptr:
	.indirect_symbol _stg_ap_p_info
	.long	0
.non_lazy_symbol_pointer
L_stg_ap_pp_info$non_lazy_ptr:
	.indirect_symbol _stg_ap_pp_info
	.long	0
.non_lazy_symbol_pointer
L_stg_ap_pppppp_info$non_lazy_ptr:
	.indirect_symbol _stg_ap_pppppp_info
	.long	0
.non_lazy_symbol_pointer
L_stg_bh_upd_frame_info$non_lazy_ptr:
	.indirect_symbol _stg_bh_upd_frame_info
	.long	0
.non_lazy_symbol_pointer
L_stg_gc_ppp$non_lazy_ptr:
	.indirect_symbol _stg_gc_ppp
	.long	0
.non_lazy_symbol_pointer
L_stg_gc_unbx_r1$non_lazy_ptr:
	.indirect_symbol _stg_gc_unbx_r1
	.long	0
.non_lazy_symbol_pointer
L_stg_gc_unpt_r1$non_lazy_ptr:
	.indirect_symbol _stg_gc_unpt_r1
	.long	0
.non_lazy_symbol_pointer
L_stg_sel_0_upd_info$non_lazy_ptr:
	.indirect_symbol _stg_sel_0_upd_info
	.long	0
.non_lazy_symbol_pointer
L_stg_sel_2_upd_info$non_lazy_ptr:
	.indirect_symbol _stg_sel_2_upd_info
	.long	0
.non_lazy_symbol_pointer
L_stg_upd_frame_info$non_lazy_ptr:
	.indirect_symbol _stg_upd_frame_info
	.long	0
.section __TEXT,__picsymbolstub2,symbol_stubs,pure_instructions,25
L_suspendThread$stub:
	.indirect_symbol _suspendThread
	call ___i686.get_pc_thunk.ax
1:
	movl L_suspendThread$lazy_ptr-1b(%eax),%edx
	jmp *%edx
L_suspendThread$stub_binder:
	lea L_suspendThread$lazy_ptr-1b(%eax),%eax
	pushl %eax
	jmp dyld_stub_binding_helper
.section __DATA, __la_sym_ptr2,lazy_symbol_pointers
L_suspendThread$lazy_ptr:
	.indirect_symbol _suspendThread
	.long L_suspendThread$stub_binder
.non_lazy_symbol_pointer
L_toJSStr$non_lazy_ptr:
	.indirect_symbol _toJSStr
	.long	0
.subsections_via_symbols
.ident "GHC 7.10.3"

